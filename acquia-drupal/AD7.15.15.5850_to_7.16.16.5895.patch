diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 09662cf..b4beae3 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,4 +1,9 @@
 
+Drupal 7.16, 2012-10-17
+-----------------------
+- Fixed security issues (Arbitrary PHP code execution and information
+  disclosure). See SA-CORE-2012-003.
+
 Drupal 7.15, 2012-08-01
 -----------------------
 - Introduced a 'user_password_reset_timeout' variable to allow the 24-hour
diff --git a/htaccess.standard.txt b/htaccess.standard.txt
deleted file mode 100644
index 246edc2..0000000
--- a/htaccess.standard.txt
+++ /dev/null
@@ -1,131 +0,0 @@
-#
-# Apache/PHP/Drupal settings:
-#
-
-# Protect files and directories from prying eyes.
-<FilesMatch "\.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$">
-  Order allow,deny
-</FilesMatch>
-
-# Don't show directory listings for URLs which map to a directory.
-Options -Indexes
-
-# Follow symbolic links in this directory.
-Options +FollowSymLinks
-
-# Make Drupal handle any 404 errors.
-ErrorDocument 404 /index.php
-
-# Set the default handler.
-DirectoryIndex index.php index.html index.htm
-
-# Override PHP settings that cannot be changed at runtime. See
-# sites/default/default.settings.php and drupal_environment_initialize() in
-# includes/bootstrap.inc for settings that can be changed at runtime.
-
-# PHP 5, Apache 1 and 2.
-<IfModule mod_php5.c>
-  php_flag magic_quotes_gpc                 off
-  php_flag magic_quotes_sybase              off
-  php_flag register_globals                 off
-  php_flag session.auto_start               off
-  php_value mbstring.http_input             pass
-  php_value mbstring.http_output            pass
-  php_flag mbstring.encoding_translation    off
-</IfModule>
-
-# Requires mod_expires to be enabled.
-<IfModule mod_expires.c>
-  # Enable expirations.
-  ExpiresActive On
-
-  # Cache all files for 2 weeks after access (A).
-  ExpiresDefault A1209600
-
-  <FilesMatch \.php$>
-    # Do not allow PHP scripts to be cached unless they explicitly send cache
-    # headers themselves. Otherwise all scripts would have to overwrite the
-    # headers set by mod_expires if they want another caching behavior. This may
-    # fail if an error occurs early in the bootstrap process, and it may cause
-    # problems if a non-Drupal PHP file is installed in a subdirectory.
-    ExpiresActive Off
-  </FilesMatch>
-</IfModule>
-
-# Various rewrite rules.
-<IfModule mod_rewrite.c>
-  RewriteEngine on
-
-  # Block access to "hidden" directories whose names begin with a period. This
-  # includes directories used by version control systems such as Subversion or
-  # Git to store control files. Files whose names begin with a period, as well
-  # as the control files used by CVS, are protected by the FilesMatch directive
-  # above.
-  #
-  # NOTE: This only works when mod_rewrite is loaded. Without mod_rewrite, it is
-  # not possible to block access to entire directories from .htaccess, because
-  # <DirectoryMatch> is not allowed here.
-  #
-  # If you do not have mod_rewrite installed, you should remove these
-  # directories from your webroot or otherwise protect them from being
-  # downloaded.
-  RewriteRule "(^|/)\." - [F]
-
-  # If your site can be accessed both with and without the 'www.' prefix, you
-  # can use one of the following settings to redirect users to your preferred
-  # URL, either WITH or WITHOUT the 'www.' prefix. Choose ONLY one option:
-  #
-  # To redirect all users to access the site WITH the 'www.' prefix,
-  # (http://example.com/... will be redirected to http://www.example.com/...)
-  # uncomment the following:
-  # RewriteCond %{HTTP_HOST} !^www\. [NC]
-  # RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
-  #
-  # To redirect all users to access the site WITHOUT the 'www.' prefix,
-  # (http://www.example.com/... will be redirected to http://example.com/...)
-  # uncomment the following:
-  # RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
-  # RewriteRule ^ http://%1%{REQUEST_URI} [L,R=301]
-
-  # Modify the RewriteBase if you are using Drupal in a subdirectory or in a
-  # VirtualDocumentRoot and the rewrite rules are not working properly.
-  # For example if your site is at http://example.com/drupal uncomment and
-  # modify the following line:
-  # RewriteBase /drupal
-  #
-  # If your site is running in a VirtualDocumentRoot at http://example.com/,
-  # uncomment the following line:
-  # RewriteBase /
-
-  # Pass all requests not referring directly to files in the filesystem to
-  # index.php. Clean URLs are handled in drupal_environment_initialize().
-  RewriteCond %{REQUEST_FILENAME} !-f
-  RewriteCond %{REQUEST_FILENAME} !-d
-  RewriteCond %{REQUEST_URI} !=/favicon.ico
-  RewriteRule ^ index.php [L]
-
-  # Rules to correctly serve gzip compressed CSS and JS files.
-  # Requires both mod_rewrite and mod_headers to be enabled.
-  <IfModule mod_headers.c>
-    # Serve gzip compressed CSS files if they exist and the client accepts gzip.
-    RewriteCond %{HTTP:Accept-encoding} gzip
-    RewriteCond %{REQUEST_FILENAME}\.gz -s
-    RewriteRule ^(.*)\.css $1\.css\.gz [QSA]
-
-    # Serve gzip compressed JS files if they exist and the client accepts gzip.
-    RewriteCond %{HTTP:Accept-encoding} gzip
-    RewriteCond %{REQUEST_FILENAME}\.gz -s
-    RewriteRule ^(.*)\.js $1\.js\.gz [QSA]
-
-    # Serve correct content types, and prevent mod_deflate double gzip.
-    RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
-    RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]
-
-    <FilesMatch "(\.js\.gz|\.css\.gz)$">
-      # Serve correct encoding type.
-      Header set Content-Encoding gzip
-      # Force proxies to cache gzipped & non-gzipped css/js files separately.
-      Header append Vary Accept-Encoding
-    </FilesMatch>
-  </IfModule>
-</IfModule>
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index b94718c..04944f1 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -8,7 +8,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '7.15');
+define('VERSION', '7.16');
 
 /**
  * Core API compatibility.
diff --git a/includes/install.core.inc b/includes/install.core.inc
index 883c592..edbf615 100644
--- a/includes/install.core.inc
+++ b/includes/install.core.inc
@@ -295,12 +295,11 @@ function install_begin_request(&$install_state) {
   else {
     $task = NULL;
 
-    // Since previous versions of Drupal stored database connection information
-    // in the 'db_url' variable, we should never let an installation proceed if
-    // this variable is defined and the settings file was not verified above
-    // (otherwise we risk installing over an existing site whose settings file
-    // has not yet been updated).
-    if (!empty($GLOBALS['db_url'])) {
+    // Do not install over a configured settings.php. Check the 'db_url'
+    // variable in addition to 'databases', since previous versions of Drupal
+    // used that (and we do not want to allow installations on an existing site
+    // whose settings file has not yet been updated).
+    if (!empty($GLOBALS['databases']) || !empty($GLOBALS['db_url'])) {
       throw new Exception(install_already_done_error());
     }
   }
diff --git a/modules/aggregator/aggregator.info b/modules/aggregator/aggregator.info
index 82d79aa..79de9d8 100644
--- a/modules/aggregator/aggregator.info
+++ b/modules/aggregator/aggregator.info
@@ -7,10 +7,10 @@ files[] = aggregator.test
 configure = admin/config/services/aggregator/settings
 stylesheets[all][] = aggregator.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/aggregator/tests/aggregator_test.info b/modules/aggregator/tests/aggregator_test.info
index 1c2d903..f18797a 100644
--- a/modules/aggregator/tests/aggregator_test.info
+++ b/modules/aggregator/tests/aggregator_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/block/block.info b/modules/block/block.info
index 871ceaa..e4adde1 100644
--- a/modules/block/block.info
+++ b/modules/block/block.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = block.test
 configure = admin/structure/block
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/block/tests/block_test.info b/modules/block/tests/block_test.info
index 95bc848..8a435a4 100644
--- a/modules/block/tests/block_test.info
+++ b/modules/block/tests/block_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/block/tests/themes/block_test_theme/block_test_theme.info b/modules/block/tests/themes/block_test_theme/block_test_theme.info
index ca84691..9c1e232 100644
--- a/modules/block/tests/themes/block_test_theme/block_test_theme.info
+++ b/modules/block/tests/themes/block_test_theme/block_test_theme.info
@@ -13,10 +13,10 @@ regions[footer] = Footer
 regions[highlighted] = Highlighted
 regions[help] = Help
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/blog/blog.info b/modules/blog/blog.info
index 34816a8..66bdafa 100644
--- a/modules/blog/blog.info
+++ b/modules/blog/blog.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = blog.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/book/book.info b/modules/book/book.info
index 3596ed0..d076d47 100644
--- a/modules/book/book.info
+++ b/modules/book/book.info
@@ -7,10 +7,10 @@ files[] = book.test
 configure = admin/content/book/settings
 stylesheets[all][] = book.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/color/color.info b/modules/color/color.info
index 798d7b3..ac70f95 100644
--- a/modules/color/color.info
+++ b/modules/color/color.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = color.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/comment/comment.info b/modules/comment/comment.info
index 09ecbc6..f4cbdfb 100644
--- a/modules/comment/comment.info
+++ b/modules/comment/comment.info
@@ -9,10 +9,10 @@ files[] = comment.test
 configure = admin/content/comment
 stylesheets[all][] = comment.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/contact/contact.info b/modules/contact/contact.info
index c32a01c..578b407 100644
--- a/modules/contact/contact.info
+++ b/modules/contact/contact.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = contact.test
 configure = admin/structure/contact
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/contextual/contextual.info b/modules/contextual/contextual.info
index 85e15d2..c76e11e 100644
--- a/modules/contextual/contextual.info
+++ b/modules/contextual/contextual.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = contextual.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/dashboard/dashboard.info b/modules/dashboard/dashboard.info
index b338be3..b9f0c72 100644
--- a/modules/dashboard/dashboard.info
+++ b/modules/dashboard/dashboard.info
@@ -7,10 +7,10 @@ files[] = dashboard.test
 dependencies[] = block
 configure = admin/dashboard/customize
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/dblog/dblog.info b/modules/dblog/dblog.info
index dea1ba9..4bcb67c 100644
--- a/modules/dblog/dblog.info
+++ b/modules/dblog/dblog.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = dblog.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/field.info b/modules/field/field.info
index 1f13b69..f1271f3 100644
--- a/modules/field/field.info
+++ b/modules/field/field.info
@@ -10,10 +10,10 @@ dependencies[] = field_sql_storage
 required = TRUE
 stylesheets[all][] = theme/field.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/modules/field_sql_storage/field_sql_storage.info b/modules/field/modules/field_sql_storage/field_sql_storage.info
index d26d273..a39cbf5 100644
--- a/modules/field/modules/field_sql_storage/field_sql_storage.info
+++ b/modules/field/modules/field_sql_storage/field_sql_storage.info
@@ -7,10 +7,10 @@ dependencies[] = field
 files[] = field_sql_storage.test
 required = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/modules/list/list.info b/modules/field/modules/list/list.info
index 43fa1c4..c87290e 100644
--- a/modules/field/modules/list/list.info
+++ b/modules/field/modules/list/list.info
@@ -7,10 +7,10 @@ dependencies[] = field
 dependencies[] = options
 files[] = tests/list.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/modules/list/tests/list_test.info b/modules/field/modules/list/tests/list_test.info
index 9f211ae..6e63351 100644
--- a/modules/field/modules/list/tests/list_test.info
+++ b/modules/field/modules/list/tests/list_test.info
@@ -5,10 +5,10 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/modules/number/number.info b/modules/field/modules/number/number.info
index ebf7b2d..2bae527 100644
--- a/modules/field/modules/number/number.info
+++ b/modules/field/modules/number/number.info
@@ -6,10 +6,10 @@ core = 7.x
 dependencies[] = field
 files[] = number.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/modules/options/options.info b/modules/field/modules/options/options.info
index 1d4462b..c17783d 100644
--- a/modules/field/modules/options/options.info
+++ b/modules/field/modules/options/options.info
@@ -6,10 +6,10 @@ core = 7.x
 dependencies[] = field
 files[] = options.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/modules/text/text.info b/modules/field/modules/text/text.info
index a644437..d0cfafe 100644
--- a/modules/field/modules/text/text.info
+++ b/modules/field/modules/text/text.info
@@ -7,10 +7,10 @@ dependencies[] = field
 files[] = text.test
 required = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field/tests/field_test.info b/modules/field/tests/field_test.info
index b65dcb1..f1675c6 100644
--- a/modules/field/tests/field_test.info
+++ b/modules/field/tests/field_test.info
@@ -6,10 +6,10 @@ files[] = field_test.entity.inc
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/field_ui/field_ui.info b/modules/field_ui/field_ui.info
index d2a3870..6f09982 100644
--- a/modules/field_ui/field_ui.info
+++ b/modules/field_ui/field_ui.info
@@ -6,10 +6,10 @@ core = 7.x
 dependencies[] = field
 files[] = field_ui.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/file/file.info b/modules/file/file.info
index 0e1e5e7..9e637ea 100644
--- a/modules/file/file.info
+++ b/modules/file/file.info
@@ -6,10 +6,10 @@ core = 7.x
 dependencies[] = field
 files[] = tests/file.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/file/tests/file_module_test.info b/modules/file/tests/file_module_test.info
index 63867a9..dad9e0d 100644
--- a/modules/file/tests/file_module_test.info
+++ b/modules/file/tests/file_module_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/filter/filter.info b/modules/filter/filter.info
index ee50c18..b535008 100644
--- a/modules/filter/filter.info
+++ b/modules/filter/filter.info
@@ -7,10 +7,10 @@ files[] = filter.test
 required = TRUE
 configure = admin/config/content/formats
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/forum/forum.info b/modules/forum/forum.info
index 3799e08..f57d686 100644
--- a/modules/forum/forum.info
+++ b/modules/forum/forum.info
@@ -9,10 +9,10 @@ files[] = forum.test
 configure = admin/structure/forum
 stylesheets[all][] = forum.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/help/help.info b/modules/help/help.info
index e0d42d8..709dc10 100644
--- a/modules/help/help.info
+++ b/modules/help/help.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = help.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/image/image.info b/modules/image/image.info
index 0809f5d..2bcbaaa 100644
--- a/modules/image/image.info
+++ b/modules/image/image.info
@@ -7,10 +7,10 @@ dependencies[] = file
 files[] = image.test
 configure = admin/config/media/image-styles
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/image/tests/image_module_test.info b/modules/image/tests/image_module_test.info
index 70ecb49..4d079d7 100644
--- a/modules/image/tests/image_module_test.info
+++ b/modules/image/tests/image_module_test.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = image_module_test.module
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/locale/locale.info b/modules/locale/locale.info
index 2ccc879..99f0220 100644
--- a/modules/locale/locale.info
+++ b/modules/locale/locale.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = locale.test
 configure = admin/config/regional/language
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/locale/tests/locale_test.info b/modules/locale/tests/locale_test.info
index 81381b4..7987838 100644
--- a/modules/locale/tests/locale_test.info
+++ b/modules/locale/tests/locale_test.info
@@ -5,10 +5,10 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/menu/menu.info b/modules/menu/menu.info
index f651f06..86afa94 100644
--- a/modules/menu/menu.info
+++ b/modules/menu/menu.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = menu.test
 configure = admin/structure/menu
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/node/node.info b/modules/node/node.info
index 8811b0f..bc06d49 100644
--- a/modules/node/node.info
+++ b/modules/node/node.info
@@ -9,10 +9,10 @@ required = TRUE
 configure = admin/structure/types
 stylesheets[all][] = node.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/node/tests/node_access_test.info b/modules/node/tests/node_access_test.info
index c67fc94..c42dc08 100644
--- a/modules/node/tests/node_access_test.info
+++ b/modules/node/tests/node_access_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/node/tests/node_test.info b/modules/node/tests/node_test.info
index 9524a0e..e9f1add 100644
--- a/modules/node/tests/node_test.info
+++ b/modules/node/tests/node_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/node/tests/node_test_exception.info b/modules/node/tests/node_test_exception.info
index 8b4e56a..ce652f1 100644
--- a/modules/node/tests/node_test_exception.info
+++ b/modules/node/tests/node_test_exception.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/openid/openid.inc b/modules/openid/openid.inc
index 9b793d3..3c82815 100644
--- a/modules/openid/openid.inc
+++ b/modules/openid/openid.inc
@@ -138,8 +138,28 @@ function openid_redirect_form($form, &$form_state, $url, $message) {
  */
 function _openid_xrds_parse($raw_xml) {
   $services = array();
-  try {
-    $xml = @new SimpleXMLElement($raw_xml);
+
+  // For PHP version >= 5.2.11, we can use this function to protect against
+  // malicious doctype declarations and other unexpected entity loading.
+  // However, we will not rely on it, and reject any XML with a DOCTYPE.
+  $disable_entity_loader = function_exists('libxml_disable_entity_loader');
+  if ($disable_entity_loader) {
+    $load_entities = libxml_disable_entity_loader(TRUE);
+  }
+
+  // Load the XML into a DOM document.
+  $dom = new DOMDocument();
+  @$dom->loadXML($raw_xml);
+
+  // Since DOCTYPE declarations from an untrusted source could be malicious, we
+  // stop parsing here and treat the XML as invalid since XRDS documents do not
+  // require, and are not expected to have, a DOCTYPE.
+  if (isset($dom->doctype)) {
+    return array();
+  }
+
+  // Parse the DOM document for the information we need.
+  if ($xml = simplexml_import_dom($dom)) {
     foreach ($xml->children(OPENID_NS_XRD)->XRD as $xrd) {
       foreach ($xrd->children(OPENID_NS_XRD)->Service as $service_element) {
         $service = array(
@@ -165,9 +185,12 @@ function _openid_xrds_parse($raw_xml) {
       }
     }
   }
-  catch (Exception $e) {
-    // Invalid XML.
+
+  // Return the LIBXML options to the previous state before returning.
+  if ($disable_entity_loader) {
+    libxml_disable_entity_loader($load_entities);
   }
+
   return $services;
 }
 
diff --git a/modules/openid/openid.info b/modules/openid/openid.info
index c06e642..0dd48c3 100644
--- a/modules/openid/openid.info
+++ b/modules/openid/openid.info
@@ -5,10 +5,10 @@ package = Core
 core = 7.x
 files[] = openid.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/openid/openid.test b/modules/openid/openid.test
index 7e766b9..1f03c13 100644
--- a/modules/openid/openid.test
+++ b/modules/openid/openid.test
@@ -180,6 +180,15 @@ class OpenIDFunctionalTestCase extends OpenIDWebTestCase {
 
     // Verify user was redirected away from user/login to an accessible page.
     $this->assertResponse(200);
+
+    $this->drupalLogout();
+    // Use a User-supplied Identity that is the URL of an XRDS document.
+    // Tell the test module to add a doctype. This should fail.
+    $identity = url('openid-test/yadis/xrds', array('absolute' => TRUE, 'query' => array('doctype' => 1)));
+    // Test logging in via the login block on the front page.
+    $edit = array('openid_identifier' => $identity);
+    $this->drupalPost('', $edit, t('Log in'));
+    $this->assertRaw(t('Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly.'), 'XML with DOCTYPE was rejected.');
   }
 
   /**
diff --git a/modules/openid/tests/openid_test.info b/modules/openid/tests/openid_test.info
index 2974546..ce6810b 100644
--- a/modules/openid/tests/openid_test.info
+++ b/modules/openid/tests/openid_test.info
@@ -6,10 +6,10 @@ core = 7.x
 dependencies[] = openid
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/openid/tests/openid_test.module b/modules/openid/tests/openid_test.module
index 1b0de4e..bcf9f42 100644
--- a/modules/openid/tests/openid_test.module
+++ b/modules/openid/tests/openid_test.module
@@ -109,7 +109,11 @@ function openid_test_yadis_xrds() {
       }
     }
     drupal_add_http_header('Content-Type', 'application/xrds+xml');
-    print '<?xml version="1.0" encoding="UTF-8"?>
+    print '<?xml version="1.0" encoding="UTF-8"?>';
+    if (!empty($_GET['doctype'])) {
+      print "\n<!DOCTYPE dct [ <!ELEMENT blue (#PCDATA)> ]>\n";
+    }
+    print '
       <xrds:XRDS xmlns:xrds="xri://$xrds" xmlns="xri://$xrd*($v*2.0)" xmlns:openid="http://openid.net/xmlns/1.0">
         <XRD>
           <Status cid="' . check_plain(variable_get('openid_test_canonical_id_status', 'verified')) . '"/>
diff --git a/modules/overlay/overlay.info b/modules/overlay/overlay.info
index 9aaf4e4..0027451 100644
--- a/modules/overlay/overlay.info
+++ b/modules/overlay/overlay.info
@@ -4,10 +4,10 @@ package = Core
 version = VERSION
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/path/path.info b/modules/path/path.info
index 2c7f41d..9190faf 100644
--- a/modules/path/path.info
+++ b/modules/path/path.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = path.test
 configure = admin/config/search/path
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/php/php.info b/modules/php/php.info
index 20e9c52..df1a363 100644
--- a/modules/php/php.info
+++ b/modules/php/php.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = php.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/poll/poll.info b/modules/poll/poll.info
index 08fb6d2..82eca01 100644
--- a/modules/poll/poll.info
+++ b/modules/poll/poll.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = poll.test
 stylesheets[all][] = poll.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/profile/profile.info b/modules/profile/profile.info
index 6244a10..a5436cd 100644
--- a/modules/profile/profile.info
+++ b/modules/profile/profile.info
@@ -11,10 +11,10 @@ configure = admin/config/people/profile
 ; See user_system_info_alter().
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/rdf/rdf.info b/modules/rdf/rdf.info
index 42572e6..2d7ff00 100644
--- a/modules/rdf/rdf.info
+++ b/modules/rdf/rdf.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = rdf.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/rdf/tests/rdf_test.info b/modules/rdf/tests/rdf_test.info
index 545cf4e..cc9fdb3 100644
--- a/modules/rdf/tests/rdf_test.info
+++ b/modules/rdf/tests/rdf_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/search/search.info b/modules/search/search.info
index c7b9067..19b4b32 100644
--- a/modules/search/search.info
+++ b/modules/search/search.info
@@ -8,10 +8,10 @@ files[] = search.test
 configure = admin/config/search/settings
 stylesheets[all][] = search.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/search/tests/search_embedded_form.info b/modules/search/tests/search_embedded_form.info
index 1ba2ab6..9437b28 100644
--- a/modules/search/tests/search_embedded_form.info
+++ b/modules/search/tests/search_embedded_form.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/search/tests/search_extra_type.info b/modules/search/tests/search_extra_type.info
index eac2658..d0341bf 100644
--- a/modules/search/tests/search_extra_type.info
+++ b/modules/search/tests/search_extra_type.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/shortcut/shortcut.info b/modules/shortcut/shortcut.info
index c9ff26c..806f6a8 100644
--- a/modules/shortcut/shortcut.info
+++ b/modules/shortcut/shortcut.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = shortcut.test
 configure = admin/config/user-interface/shortcut
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/simpletest.info b/modules/simpletest/simpletest.info
index 01816e9..6454117 100644
--- a/modules/simpletest/simpletest.info
+++ b/modules/simpletest/simpletest.info
@@ -54,10 +54,10 @@ files[] = tests/upgrade/upgrade.upload.test
 files[] = tests/upgrade/update.user.test
 files[] = tests/upgrade/upgrade.user.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/actions_loop_test.info b/modules/simpletest/tests/actions_loop_test.info
index 10b4ead..fe10eac 100644
--- a/modules/simpletest/tests/actions_loop_test.info
+++ b/modules/simpletest/tests/actions_loop_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/ajax_forms_test.info b/modules/simpletest/tests/ajax_forms_test.info
index 8cb3985..830f1e9 100644
--- a/modules/simpletest/tests/ajax_forms_test.info
+++ b/modules/simpletest/tests/ajax_forms_test.info
@@ -5,10 +5,10 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/ajax_test.info b/modules/simpletest/tests/ajax_test.info
index 0d20c4d..22360b7 100644
--- a/modules/simpletest/tests/ajax_test.info
+++ b/modules/simpletest/tests/ajax_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/batch_test.info b/modules/simpletest/tests/batch_test.info
index 6617884..0dc972f 100644
--- a/modules/simpletest/tests/batch_test.info
+++ b/modules/simpletest/tests/batch_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/common_test.info b/modules/simpletest/tests/common_test.info
index 8a332cc..625d0cc 100644
--- a/modules/simpletest/tests/common_test.info
+++ b/modules/simpletest/tests/common_test.info
@@ -7,10 +7,10 @@ stylesheets[all][] = common_test.css
 stylesheets[print][] = common_test.print.css
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/common_test_cron_helper.info b/modules/simpletest/tests/common_test_cron_helper.info
index 86712ce..0cdb653 100644
--- a/modules/simpletest/tests/common_test_cron_helper.info
+++ b/modules/simpletest/tests/common_test_cron_helper.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/database_test.info b/modules/simpletest/tests/database_test.info
index de9cd12..e700ec9 100644
--- a/modules/simpletest/tests/database_test.info
+++ b/modules/simpletest/tests/database_test.info
@@ -5,10 +5,10 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index 24b7bed..0e5344c 100644
--- a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
diff --git a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index 5ebfd25..f7b50a3 100644
--- a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
diff --git a/modules/simpletest/tests/entity_cache_test.info b/modules/simpletest/tests/entity_cache_test.info
index cfe602d..ef85b2d 100644
--- a/modules/simpletest/tests/entity_cache_test.info
+++ b/modules/simpletest/tests/entity_cache_test.info
@@ -6,10 +6,10 @@ core = 7.x
 dependencies[] = entity_cache_test_dependency
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/entity_cache_test_dependency.info b/modules/simpletest/tests/entity_cache_test_dependency.info
index d4e8e76..e9a8c96 100644
--- a/modules/simpletest/tests/entity_cache_test_dependency.info
+++ b/modules/simpletest/tests/entity_cache_test_dependency.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/entity_crud_hook_test.info b/modules/simpletest/tests/entity_crud_hook_test.info
index dd0f126..fc77e43 100644
--- a/modules/simpletest/tests/entity_crud_hook_test.info
+++ b/modules/simpletest/tests/entity_crud_hook_test.info
@@ -5,10 +5,10 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/entity_query_access_test.info b/modules/simpletest/tests/entity_query_access_test.info
index e1f7cb9..9898368 100644
--- a/modules/simpletest/tests/entity_query_access_test.info
+++ b/modules/simpletest/tests/entity_query_access_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/error_test.info b/modules/simpletest/tests/error_test.info
index aa6f7b0..009b0ec 100644
--- a/modules/simpletest/tests/error_test.info
+++ b/modules/simpletest/tests/error_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/file_test.info b/modules/simpletest/tests/file_test.info
index 1e1a9be..7837a75 100644
--- a/modules/simpletest/tests/file_test.info
+++ b/modules/simpletest/tests/file_test.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = file_test.module
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/filter_test.info b/modules/simpletest/tests/filter_test.info
index 92bc933..3def1db 100644
--- a/modules/simpletest/tests/filter_test.info
+++ b/modules/simpletest/tests/filter_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/form_test.info b/modules/simpletest/tests/form_test.info
index 36c77c9..32504e9 100644
--- a/modules/simpletest/tests/form_test.info
+++ b/modules/simpletest/tests/form_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/image_test.info b/modules/simpletest/tests/image_test.info
index b79fbf1..b8394b6 100644
--- a/modules/simpletest/tests/image_test.info
+++ b/modules/simpletest/tests/image_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/menu_test.info b/modules/simpletest/tests/menu_test.info
index bd5d4df..4700be2 100644
--- a/modules/simpletest/tests/menu_test.info
+++ b/modules/simpletest/tests/menu_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/module_test.info b/modules/simpletest/tests/module_test.info
index b145caa..e7f32f0 100644
--- a/modules/simpletest/tests/module_test.info
+++ b/modules/simpletest/tests/module_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/path_test.info b/modules/simpletest/tests/path_test.info
index 7321c12..a574802 100644
--- a/modules/simpletest/tests/path_test.info
+++ b/modules/simpletest/tests/path_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/requirements1_test.info b/modules/simpletest/tests/requirements1_test.info
index 9875341..fd6c81b 100644
--- a/modules/simpletest/tests/requirements1_test.info
+++ b/modules/simpletest/tests/requirements1_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/requirements2_test.info b/modules/simpletest/tests/requirements2_test.info
index 9f55ff8..f87174e 100644
--- a/modules/simpletest/tests/requirements2_test.info
+++ b/modules/simpletest/tests/requirements2_test.info
@@ -7,10 +7,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/session_test.info b/modules/simpletest/tests/session_test.info
index d8161a6..2214e90 100644
--- a/modules/simpletest/tests/session_test.info
+++ b/modules/simpletest/tests/session_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/system_dependencies_test.info b/modules/simpletest/tests/system_dependencies_test.info
index d91b011..e957daf 100644
--- a/modules/simpletest/tests/system_dependencies_test.info
+++ b/modules/simpletest/tests/system_dependencies_test.info
@@ -6,10 +6,10 @@ core = 7.x
 hidden = TRUE
 dependencies[] = _missing_dependency
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info b/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
index 8b21d8b..29bfe31 100644
--- a/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
+++ b/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
@@ -6,10 +6,10 @@ core = 7.x
 hidden = TRUE
 dependencies[] = system_incompatible_core_version_test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/system_incompatible_core_version_test.info b/modules/simpletest/tests/system_incompatible_core_version_test.info
index 7eda00d..d7fca38 100644
--- a/modules/simpletest/tests/system_incompatible_core_version_test.info
+++ b/modules/simpletest/tests/system_incompatible_core_version_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 5.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info b/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
index 0de8e71..afc5ac7 100644
--- a/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
+++ b/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
@@ -7,10 +7,10 @@ hidden = TRUE
 ; system_incompatible_module_version_test declares version 1.0
 dependencies[] = system_incompatible_module_version_test (>2.0)
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/system_incompatible_module_version_test.info b/modules/simpletest/tests/system_incompatible_module_version_test.info
index 028ad38..8129f0c 100644
--- a/modules/simpletest/tests/system_incompatible_module_version_test.info
+++ b/modules/simpletest/tests/system_incompatible_module_version_test.info
@@ -5,10 +5,10 @@ version = 1.0
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/system_test.info b/modules/simpletest/tests/system_test.info
index 5652e43..5a5f43a 100644
--- a/modules/simpletest/tests/system_test.info
+++ b/modules/simpletest/tests/system_test.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = system_test.module
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/taxonomy_test.info b/modules/simpletest/tests/taxonomy_test.info
index 089172d..250d145 100644
--- a/modules/simpletest/tests/taxonomy_test.info
+++ b/modules/simpletest/tests/taxonomy_test.info
@@ -6,10 +6,10 @@ core = 7.x
 hidden = TRUE
 dependencies[] = taxonomy
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/theme_test.info b/modules/simpletest/tests/theme_test.info
index 52518df..e3a8efa 100644
--- a/modules/simpletest/tests/theme_test.info
+++ b/modules/simpletest/tests/theme_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info b/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
index 3510fdd..5649f93 100644
--- a/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
+++ b/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
@@ -6,10 +6,10 @@ hidden = TRUE
 settings[basetheme_only] = base theme value
 settings[subtheme_override] = base theme value
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info b/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
index 3a88094..7a2d72c 100644
--- a/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
+++ b/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
@@ -6,10 +6,10 @@ hidden = TRUE
 
 settings[subtheme_override] = subtheme value
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/themes/test_theme/test_theme.info b/modules/simpletest/tests/themes/test_theme/test_theme.info
index 6736ed0..6c6c650 100644
--- a/modules/simpletest/tests/themes/test_theme/test_theme.info
+++ b/modules/simpletest/tests/themes/test_theme/test_theme.info
@@ -17,10 +17,10 @@ stylesheets[all][] = system.base.css
 
 settings[theme_test_setting] = default value
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/update_script_test.info b/modules/simpletest/tests/update_script_test.info
index 057fba6..ba0c5e8 100644
--- a/modules/simpletest/tests/update_script_test.info
+++ b/modules/simpletest/tests/update_script_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/update_test_1.info b/modules/simpletest/tests/update_test_1.info
index c51708d..63a844b 100644
--- a/modules/simpletest/tests/update_test_1.info
+++ b/modules/simpletest/tests/update_test_1.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/update_test_2.info b/modules/simpletest/tests/update_test_2.info
index c51708d..63a844b 100644
--- a/modules/simpletest/tests/update_test_2.info
+++ b/modules/simpletest/tests/update_test_2.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/update_test_3.info b/modules/simpletest/tests/update_test_3.info
index c51708d..63a844b 100644
--- a/modules/simpletest/tests/update_test_3.info
+++ b/modules/simpletest/tests/update_test_3.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/url_alter_test.info b/modules/simpletest/tests/url_alter_test.info
index ecc3a99..1e3806b 100644
--- a/modules/simpletest/tests/url_alter_test.info
+++ b/modules/simpletest/tests/url_alter_test.info
@@ -5,10 +5,10 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/simpletest/tests/xmlrpc_test.info b/modules/simpletest/tests/xmlrpc_test.info
index b8c6049..da8a7a6 100644
--- a/modules/simpletest/tests/xmlrpc_test.info
+++ b/modules/simpletest/tests/xmlrpc_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/statistics/statistics.info b/modules/statistics/statistics.info
index 2e9eaeb..a824f60 100644
--- a/modules/statistics/statistics.info
+++ b/modules/statistics/statistics.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = statistics.test
 configure = admin/config/system/statistics
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/syslog/syslog.info b/modules/syslog/syslog.info
index 7b26775..0b4117d 100644
--- a/modules/syslog/syslog.info
+++ b/modules/syslog/syslog.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 files[] = syslog.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/system/system.info b/modules/system/system.info
index 60e1c7a..cd0ccec 100644
--- a/modules/system/system.info
+++ b/modules/system/system.info
@@ -12,10 +12,10 @@ files[] = system.test
 required = TRUE
 configure = admin/config/system
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/taxonomy/taxonomy.info b/modules/taxonomy/taxonomy.info
index e261090..c0ca1fd 100644
--- a/modules/taxonomy/taxonomy.info
+++ b/modules/taxonomy/taxonomy.info
@@ -8,10 +8,10 @@ files[] = taxonomy.module
 files[] = taxonomy.test
 configure = admin/structure/taxonomy
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/toolbar/toolbar.info b/modules/toolbar/toolbar.info
index ab2ee25..1c4a271 100644
--- a/modules/toolbar/toolbar.info
+++ b/modules/toolbar/toolbar.info
@@ -4,10 +4,10 @@ core = 7.x
 package = Core
 version = VERSION
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/tracker/tracker.info b/modules/tracker/tracker.info
index 49d01d0..5376f32 100644
--- a/modules/tracker/tracker.info
+++ b/modules/tracker/tracker.info
@@ -6,10 +6,10 @@ version = VERSION
 core = 7.x
 files[] = tracker.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/translation/tests/translation_test.info b/modules/translation/tests/translation_test.info
index b8f5991..785f48e 100644
--- a/modules/translation/tests/translation_test.info
+++ b/modules/translation/tests/translation_test.info
@@ -5,10 +5,10 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/translation/translation.info b/modules/translation/translation.info
index e905a0f..649a1e7 100644
--- a/modules/translation/translation.info
+++ b/modules/translation/translation.info
@@ -6,10 +6,10 @@ version = VERSION
 core = 7.x
 files[] = translation.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/trigger/tests/trigger_test.info b/modules/trigger/tests/trigger_test.info
index 22ab1d3..ccf60b8 100644
--- a/modules/trigger/tests/trigger_test.info
+++ b/modules/trigger/tests/trigger_test.info
@@ -4,10 +4,10 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/trigger/trigger.info b/modules/trigger/trigger.info
index 761d63e..5f46dc9 100644
--- a/modules/trigger/trigger.info
+++ b/modules/trigger/trigger.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = trigger.test
 configure = admin/structure/trigger
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/update/tests/aaa_update_test.info b/modules/update/tests/aaa_update_test.info
index bac8ca7..e70aa39 100644
--- a/modules/update/tests/aaa_update_test.info
+++ b/modules/update/tests/aaa_update_test.info
@@ -4,10 +4,10 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/update/tests/bbb_update_test.info b/modules/update/tests/bbb_update_test.info
index f9094c0..6f02a6d 100644
--- a/modules/update/tests/bbb_update_test.info
+++ b/modules/update/tests/bbb_update_test.info
@@ -4,10 +4,10 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/update/tests/ccc_update_test.info b/modules/update/tests/ccc_update_test.info
index 94b45bc..b7306f3 100644
--- a/modules/update/tests/ccc_update_test.info
+++ b/modules/update/tests/ccc_update_test.info
@@ -4,10 +4,10 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info b/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
index 61d6575..dea6cb8 100644
--- a/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
+++ b/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
@@ -3,10 +3,10 @@ description = Test theme which acts as a base theme for other test subthemes.
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info b/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
index 7599bc1..109d5dc 100644
--- a/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
+++ b/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
@@ -4,10 +4,10 @@ core = 7.x
 base theme = update_test_basetheme
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/update/tests/update_test.info b/modules/update/tests/update_test.info
index 3b5c64e..18fbc28 100644
--- a/modules/update/tests/update_test.info
+++ b/modules/update/tests/update_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/update/update.info b/modules/update/update.info
index 42ccf35..76d0ba9 100644
--- a/modules/update/update.info
+++ b/modules/update/update.info
@@ -6,10 +6,10 @@ core = 7.x
 files[] = update.test
 configure = admin/reports/updates/settings
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/user/tests/user_form_test.info b/modules/user/tests/user_form_test.info
index 8664da9..e9bd933 100644
--- a/modules/user/tests/user_form_test.info
+++ b/modules/user/tests/user_form_test.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/modules/user/user.info b/modules/user/user.info
index f8155c7..5864926 100644
--- a/modules/user/user.info
+++ b/modules/user/user.info
@@ -9,10 +9,10 @@ required = TRUE
 configure = admin/config/people
 stylesheets[all][] = user.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/acquia.info b/profiles/acquia/acquia.info
index aedef06..8033a2c 100644
--- a/profiles/acquia/acquia.info
+++ b/profiles/acquia/acquia.info
@@ -44,4 +44,4 @@ files[] = acquia.profile
 ; Information added by Acquia.com packaging script
 acquia = "1"
 
-version = 7.x-1.15
+version = 7.x-1.16
diff --git a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.info b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.info
index d4ecc15..fb67849 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.info
+++ b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.info
@@ -8,13 +8,14 @@ files[] = acquia_agent.install
 files[] = acquia_agent.pages.inc
 files[] = acquia_agent_drupal_version.inc
 files[] = acquia_agent_streams.inc
+files[] = tests/acquia_agent.test
 php = 5.2
 
-; Information added by drupal.org packaging script on 2012-08-10
-version = "7.x-2.7"
+; Information added by drupal.org packaging script on 2012-09-21
+version = "7.x-2.8"
 core = "7.x"
 project = "acquia_connector"
-datestamp = "1344609377"
+datestamp = "1348252266"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.module b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.module
index 34c786d..84e8217 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.module
+++ b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.module
@@ -125,6 +125,9 @@ function acquia_agent_init() {
     (!acquia_agent_has_credentials()) &&
     (strpos($request, variable_get('file_public_path', conf_path() . DIRECTORY_SEPARATOR . 'files')) !== 0)) {
     $text = 'Get a <a href="!acquia-free">free 30-day trial</a> of the Acquia Network which includes a <a href="!library" target="_blank">library</a> of expert knowledge, <a href="!services" target="_blank">tools and services</a> to make your site awesome, and <a href="!support" target="_blank">Drupal support</a> when you need it.<br/>If you have an Acquia Network subscription, <a href="!settings">connect now</a>. Otherwise, you can turn this message off by disabling the Acquia Network <a href="!admin-modules">modules</a>.';
+    if (isset($_SERVER['AH_SITE_GROUP'])) {
+      $text = '<a href="!settings">Connect your site to the Acquia Network now</a>.';
+    }
     $message = t($text, array('!acquia-free' => url('admin/config/system/acquia-agent'), '!library' => url('http://library.acquia.com'), '!settings' => url('admin/config/system/acquia-agent/setup'), '!support' => url('http://www.acquia.com/drupal-support'), '!services' => url('http://www.acquia.com/products-services/acquia-network/cloud-services'), '!admin-modules' => url('admin/modules')));
     drupal_set_message($message, 'warning', FALSE);
   }
@@ -175,7 +178,7 @@ function acquia_agent_check_subscription($params = array()) {
       $active = acquia_agent_subscription_is_active();
     }
   }
-  module_invoke_all('acquia_subscription_status', $active);
+  module_invoke_all('acquia_subscription_status', $active, $subscription);
   return $subscription;
 }
 
diff --git a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.pages.inc b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.pages.inc
index 1814fda..4c0638c 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.pages.inc
+++ b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent.pages.inc
@@ -497,7 +497,7 @@ function acquia_agent_settings_form($form, &$form_state, $banner) {
   $subscription = acquia_agent_settings('acquia_subscription_name');
 
   if (empty($_POST)) {
-    // Check our connection to the Acquia Network and validity of the crenditials.
+    // Check our connection to the Acquia Network and validity of the credentials.
     $acquia_network_address = acquia_agent_settings('acquia_network_address');
     if (!acquia_agent_valid_credentials($identifier, $key, $acquia_network_address)) {
       $error_message = acquia_agent_connection_error_message();
diff --git a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent_drupal_version.inc b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent_drupal_version.inc
index 6ec6d8a..bf55d1b 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent_drupal_version.inc
+++ b/profiles/acquia/modules/acquia_connector/acquia_agent/acquia_agent_drupal_version.inc
@@ -17,7 +17,7 @@ define('IS_ACQUIA_DRUPAL', TRUE);
 /**
  * Acquia Drupal version information (only used if IS_ACQUIA_DRUPAL).
  */
-define('ACQUIA_DRUPAL_VERSION' , '7.15.15 (Drupal 7.15 core)');
+define('ACQUIA_DRUPAL_VERSION' , '7.16.16 (Drupal 7.16 core)');
 define('ACQUIA_DRUPAL_SERIES'  , '7.0');
 define('ACQUIA_DRUPAL_BRANCH'  , '7.x');
-define('ACQUIA_DRUPAL_REVISION', '5850');
+define('ACQUIA_DRUPAL_REVISION', '5895');
diff --git a/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_agent.test b/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_agent.test
new file mode 100644
index 0000000..529eefb
--- /dev/null
+++ b/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_agent.test
@@ -0,0 +1,200 @@
+<?php
+
+/**
+* Tests the functionality of the Acquia Agent module.
+*/
+class AcquiaAgentTestCase extends DrupalWebTestCase {
+  protected $privileged_user;
+  protected $setup_path;
+  protected $credentials_path;
+  protected $settings_path;
+  protected $help_path;
+  protected $cloud_services_url;
+  protected $trial_url;
+  protected $acquia_test_id;
+  protected $acquia_test_key;
+
+  public static function getInfo() {
+    // Note: getInfo() strings are not translated with t().
+    return array(
+      'name' => 'Acquia Agent UI & Connection',
+      'description' => 'Test Acquia Agent UI and connecting to the Acquia Network.',
+      'group' => 'Acquia',
+    );
+  }
+
+  public function setUp() {
+    global $base_url;
+    // Enable any modules required for the test
+    parent::setUp('acquia_agent', 'acquia_connector_test');
+    // Create and log in our privileged user.
+    $this->privileged_user = $this->drupalCreateUser(array(
+      'administer site configuration',
+      'access administration pages',
+    ));
+    $this->drupalLogin($this->privileged_user);
+    // Create a user that has a Network subscription.
+    $this->network_user = $this->drupalCreateUser();
+    user_save($this->network_user, array('mail' => ACQTEST_EMAIL, 'pass' => ACQTEST_PASS));
+    // Setup variables.
+    $this->setup_path = 'admin/config/system/acquia-agent/setup';
+    $this->credentials_path = 'admin/config/system/acquia-agent/credentials';
+    $this->settings_path = 'admin/config/system/acquia-agent';
+    $this->help_path = 'admin/help/acquia_agent';
+    $this->cloud_services_url = 'http://www.acquia.com/products-services/acquia-network/cloud-services';
+    $this->trial_url = 'https://www.acquia.com/trial';
+    $this->status_report_url = 'admin/reports/status';
+    variable_set('acquia_network_address', $base_url);
+    variable_set('acquia_spi_server', $base_url);
+    variable_set('acquia_spi_ssl_override', TRUE);
+    variable_set('acquia_agent_verify_peer', FALSE);
+  }
+
+  /**
+   * Helper function for storing UI strings.
+   */
+  private function acquiaAgentStrings($id) {
+    switch ($id) {
+      case '30-day':
+        return 'Get a free 30-day trial of the Acquia Network which includes a library of expert knowledge, tools and services to make your site awesome, and Drupal support when you need it.';
+      case 'get-connected':
+        return 'If you have an Acquia Network subscription, connect now. Otherwise, you can turn this message off by disabling the Acquia Network modules.';
+      case 'enter-email':
+        return 'Enter the email address you use to login to the Acquia Network';
+      case 'enter-password':
+        return 'Enter your Acquia Network password';
+      case 'account-not-found':
+        return 'Account not found';
+      case 'id-key':
+        return 'Enter your identifer and key from your subscriptions overview or log in to connect your site to the Acquia Network.';
+      case 'enter-key':
+        return 'Network key';
+      case 'subscription-not-found':
+        return 'Error: Subscription not found (1800)';
+      case 'saved':
+        return 'The Acquia configuration options have been saved.';
+      case 'subscription':
+        return 'Subscription: ' . ACQTEST_ID; // Assumes subscription name is same as id.
+      case 'migrate':
+        return 'Transfer a fully-functional copy of your site to Acquia Cloud.';
+    }
+  }
+
+  public function testAcquiaAgentGetConnected() {
+    // Check for call to get connected.
+    $this->drupalGet('admin');
+    $this->assertText($this->acquiaAgentStrings('30-day'), 'The explanation of services text exists');
+    $this->assertLinkByHref($this->cloud_services_url, 0, 'Link to Acquia.com Cloud Services exists');
+    $this->assertText($this->acquiaAgentStrings('get-connected'), 'The call-to-action to connect text exists');
+    $this->assertLink('connect now', 0, 'The "connect now" link exists');
+    // Check connection setup page.
+    $this->drupalGet($this->setup_path);
+    $this->assertText($this->acquiaAgentStrings('enter-email'), 'The email address field label exists');
+    $this->assertText($this->acquiaAgentStrings('enter-password'), 'The password field label exists');
+    $this->assertLinkByHref($this->trial_url, 0, 'Link to Acquia.com trial signup exists');
+    // Check errors on automatic setup page.
+    $edit_fields = array(
+      'email' => $this->randomName(),
+      'pass' => $this->randomName(),
+    );
+    $submit_button = 'Next';
+    $this->drupalPost($this->setup_path, $edit_fields, $submit_button);
+    $this->assertText($this->acquiaAgentStrings('account-not-found'), 'Account not found for random automatic setup attempt');
+    // Check manual connection.
+    $this->drupalGet($this->credentials_path);
+    $this->assertText($this->acquiaAgentStrings('id-key'), 'The network key and id description exists');
+    $this->assertText($this->acquiaAgentStrings('enter-key'), 'The network key field label exists');
+    $this->assertLinkByHref($this->trial_url, 0, 'Link to Acquia.com trial signup exists');
+    // Check errors on connection page.
+    $edit_fields = array(
+      'acquia_identifier' => $this->randomName(),
+      'acquia_key' => $this->randomName(),
+    );
+    $submit_button = 'Connect';
+    $this->drupalPost($this->credentials_path, $edit_fields, $submit_button);
+    $this->assertText($this->acquiaAgentStrings('subscription-not-found'), 'Subscription not found for random credentials');
+    // Connect site on key and id.
+    $edit_fields = array(
+      'acquia_identifier' => ACQTEST_ID,
+      'acquia_key' => ACQTEST_KEY,
+    );
+    $submit_button = 'Connect';
+    $this->drupalPost($this->credentials_path, $edit_fields, $submit_button);
+    $this->drupalGet($this->settings_path);
+    $this->assertText($this->acquiaAgentStrings('subscription'), 'Subscription connected with key and identifier');
+    $this->assertLinkByHref($this->setup_path, 0, 'Link to change subscription exists');
+    $this->assertLinkByHref($this->help_path, 0, 'Link to help page exists');
+    $this->assertText($this->acquiaAgentStrings('migrate'), 'Acquia Cloud Migrate description exists');
+    // Connect via automatic setup.
+    variable_del('acquia_identifier');
+    variable_del('acquia_key');
+    $edit_fields = array(
+      'email' => ACQTEST_EMAIL,
+      'pass' => ACQTEST_PASS,
+    );
+    $submit_button = 'Next';
+    $this->drupalPost($this->setup_path, $edit_fields, $submit_button);
+    $this->drupalGet($this->setup_path);
+    $this->drupalGet($this->settings_path);
+    $this->assertText($this->acquiaAgentStrings('subscription'), 'Subscription connected with credentials');
+    $edit_fields = array(
+      'acquia_dynamic_banner' => TRUE,
+    );
+    $submit_button = 'Save settings';
+    $this->drupalPost($this->settings_path, $edit_fields, $submit_button);
+    $this->assertFieldChecked('edit-acquia-dynamic-banner', '"Receive updates from Acquia Network" option stays saved');
+  }
+}
+
+class AquiaAgentUnitTestCase extends DrupalUnitTestCase {
+  public static function getInfo() {
+    // Note: getInfo() strings should not be translated.
+    return array(
+      'name' => 'Acquia Agent unit tests',
+      'description' => 'Test Acquia Agent methods.',
+      'group' => 'Acquia',
+    );
+  }
+
+  /**
+   * Overrides DrupalUnitTestCase::setUp().
+   *
+   * Includes the required files in the Acquia Agent module.
+   */
+  public function setUp() {
+    parent::setUp();
+    require_once dirname(dirname(__FILE__)) . '/acquia_agent.module';
+  }
+
+  public function testAuthenticators() {
+    $identifier = $this->randomName();
+    $key = $this->randomName();
+    $required_keys = array('time', 'nonce', 'hash');
+    // Test _acquia_agent_authenticator().
+    $result = _acquia_agent_authenticator(array(), $identifier, $key);
+    $valid = is_array($result);
+    $this->assertTrue($valid, '_acquia_agent_authenticator returns an array');
+    if ($valid) {
+      foreach ($required_keys as $key) {
+        if (!array_key_exists($key, $result)) {
+          $valid = FALSE;
+          break;
+        }
+      }
+      $this->assertTrue($valid, 'Array has expected keys');
+    }
+    // Test _acquia_agent_create_authenticator().
+    $result = _acquia_agent_create_authenticator(array(), $identifier);
+    $valid = is_array($result);
+    $this->assertTrue($valid, '_acquia_agent_create_authenticator returns an array');
+    if ($valid) {
+      foreach ($required_keys as $key) {
+        if (!array_key_exists($key, $result)) {
+          $valid = FALSE;
+          break;
+        }
+      }
+      $this->assertTrue($valid, 'Array has expected keys');
+    }
+  }
+}
\ No newline at end of file
diff --git a/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_connector_test.info b/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_connector_test.info
new file mode 100644
index 0000000..d26c993
--- /dev/null
+++ b/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_connector_test.info
@@ -0,0 +1,17 @@
+name = "Acquia Connector Test"
+description = "Support module for Acquia Network Connector tests."
+package = Testing
+core = 7.x
+
+hidden = TRUE
+
+; Information added by drupal.org packaging script on 2012-09-21
+version = "7.x-2.8"
+core = "7.x"
+project = "acquia_connector"
+datestamp = "1348252266"
+
+
+; Information added by Acquia.com packaging script
+acquia = "1"
+
diff --git a/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_connector_test.module b/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_connector_test.module
new file mode 100644
index 0000000..757e711
--- /dev/null
+++ b/profiles/acquia/modules/acquia_connector/acquia_agent/tests/acquia_connector_test.module
@@ -0,0 +1,352 @@
+<?php
+
+/**
+ * @file
+ * Test endpoint for Acquia Network Connector XML-RPC calls.
+ */
+
+define('ACQTEST_SUBSCRIPTION_NOT_FOUND'       , 1000);
+define('ACQTEST_SUBSCRIPTION_KEY_MISMATCH'    , 1100);
+define('ACQTEST_SUBSCRIPTION_EXPIRED'         , 1200);
+define('ACQTEST_SUBSCRIPTION_REPLAY_ATTACK'   , 1300);
+define('ACQTEST_SUBSCRIPTION_KEY_NOT_FOUND'   , 1400);
+define('ACQTEST_SUBSCRIPTION_MESSAGE_FUTURE'  , 1500);
+define('ACQTEST_SUBSCRIPTION_MESSAGE_EXPIRED' , 1600);
+define('ACQTEST_SUBSCRIPTION_MESSAGE_INVALID' , 1700);
+define('ACQTEST_SUBSCRIPTION_VALIDATION_ERROR', 1800);
+define('ACQTEST_SUBSCRIPTION_SITE_NOT_FOUND'  , 1900);
+define('ACQTEST_SUBSCRIPTION_PROVISION_ERROR' , 9000);
+define('ACQTEST_SUBSCRIPTION_MESSAGE_LIFETIME', 15*60);
+define('ACQTEST_EMAIL', 'TEST_networkuser@example.com');
+define('ACQTEST_PASS', 'TEST_password');
+define('ACQTEST_ID', 'TEST_AcquiaConnectorTestID');
+define('ACQTEST_KEY', 'TEST_AcquiaConnectorTestKey');
+define('ACQTEST_ERROR_ID', 'TEST_AcquiaConnectorTestIDErr');
+define('ACQTEST_ERROR_KEY', 'TEST_AcquiaConnectorTestKeyErr');
+if (!defined('ACQUIA_DEVELOPMENT_NOSSL')) {
+  define('ACQUIA_DEVELOPMENT_NOSSL', TRUE);
+}
+
+function acquia_connector_test_xmlrpc() {
+  return array(
+    array(
+      'acquia.agent.validate',
+      'acquia_connector_test_validate',
+      array('boolean', 'array'),
+      t('Test validates an Acquia Network authenticator.')),
+    array(
+      'acquia.agent.subscription',
+      'acquia_connector_test_subscription',
+      array('struct', 'array'),
+      t('Test validates an Acquia Network subscription.')),
+    array(
+      'acquia.agent.mail.exists',
+      'acquia_connector_test_mail_exists',
+      array('boolean', 'array'),
+      t('Test returns TRUE if the e-mail address matches a registered user')),
+    array(
+      'acquia.agent.provision.get_user_details',
+      'acquia_connector_test_provision_get_user_details',
+      array('struct', 'array'),
+      t('Test returns details of an existing user.')),
+    array(
+      'acquia.agent.communication.settings',
+      'acquia_connector_test_get_communication_settings',
+      array('struct', 'array'),
+      t('Test return communication settings for an account.')),
+    array(
+      'acquia.agent.subscription.credentials',
+      'acquia_connector_test_credentials',
+      array('struct', 'array'),
+      t('Test returns subscriptions for an email.')),
+    array(
+      'acquia.agent.subscription.name',
+      'acquia_connector_test_subscription_name',
+      array('struct', 'array'),
+      t('Test returns subscription name for an indentifer.')),
+    array(
+      'acquia.agent.cloud.migration.environments',
+      'acquia_connector_test_cloud_migration_environments',
+      array('struct', 'array'),
+      t('Test returns environments available for site import.')),
+    array(
+      'acquia.agent.cloud.migration.complete',
+      'acquia_connector_test_migration_complete',
+      array('struct', 'array'),
+      t('Test complete final migration')),
+    array(
+      'acquia.nspi.update',
+      'acquia_connector_test_nspi_update',
+      array('array', 'array'),
+      t('Test incoming site profile information.')
+    ),
+  );
+}
+
+function acquia_connector_test_menu() {
+  $items['spi_def/get/%'] = array(
+    'page callback' => 'acquia_connector_test_spi_definition',
+    'page arguments' => array(2),
+    'access callback' => TRUE,
+  );
+  return $items;
+}
+
+function acquia_connector_test_spi_definition($arg_version) {
+  $vars = array('file_temporary_path' => array('optional' => FALSE, 'description' => 'file_temporary_path'), 'page_compression' => array('optional' => TRUE, 'description' => 'page_compression'), 'user_admin_role' => array('optional' => TRUE, 'description' => 'user_admin_role'));
+  $data = array(
+    'drupal_version' => $arg_version,
+    'timestamp' => (string) (REQUEST_TIME + 9),
+    'acquia_spi_variables' => $vars,
+  );
+  drupal_json_output($data);
+}
+
+function acquia_connector_test_validate($data) {
+  $result = acquia_connector_test_validate_authenticator($data);
+  if (empty($result->is_error)) {
+    return TRUE;
+  }
+  unset($result->secret);
+  xmlrpc_server_error($result);
+}
+
+function acquia_connector_test_subscription($data) {
+  $result = acquia_connector_test_validate_authenticator($data);
+  if (empty($result->is_error)) {
+    $result->authenticator['hash'] = _acquia_agent_hmac($result->secret['key'], $result->authenticator['time'], $result->authenticator['nonce'], $result->body);
+    unset($result->secret);
+    return $result;
+  }
+  unset($result->secret);
+  xmlrpc_server_error($result);
+}
+
+function acquia_connector_test_mail_exists($data) {
+  // return object
+}
+
+function acquia_connector_test_provision_get_user_details($data) {
+  // return object
+}
+
+function acquia_connector_test_get_communication_settings($data) {
+  // Authenticate.
+  $fields = array(
+    'time' => 'is_numeric',
+    'nonce' => 'is_string',
+    'hash' => 'is_string',
+  );
+  $result = acquia_connector_test_basic_authenticator($fields, $data);
+  if (!empty($result->is_error)) {
+    return $result;
+  }
+
+  if (!isset($data['body']) || !isset($data['body']['email'])) {
+    return xmlrpc_error(ACQSUBSCRIPTION_VALIDATION_ERROR, t('Invalid arguments'));
+  }
+
+  $account = user_load_by_mail($data['body']['email']);
+
+  if (empty($account) || $account->uid == 0) {
+    return xmlrpc_error(ACQSUBSCRIPTION_VALIDATION_ERROR, t('Account not found'));
+  }
+  else {
+    $result = array(
+      'algorithm' => 'sha512',
+      'hash_setting' => substr($account->pass, 0, 12),
+      'extra_md5' => FALSE,
+    );
+    return $result;
+  }
+  return TRUE;
+}
+
+function acquia_connector_test_credentials($data) {
+  $fields = array(
+    'time' => 'is_numeric',
+    'nonce' => 'is_string',
+    'hash' => 'is_string',
+  );
+  $result = acquia_connector_test_basic_authenticator($fields, $data);
+  if (!empty($result->is_error)) {
+    return $result;
+  }
+
+  if (!empty($data['body']['email'])) {
+    $account = user_load_by_mail($data['body']['email']);
+    if (empty($account) || $account->uid == 0) {
+      return xmlrpc_error(ACQSUBSCRIPTION_VALIDATION_ERROR, t('Account not found'));
+    }
+  }
+  else {
+    return xmlrpc_error(ACQSUBSCRIPTION_VALIDATION_ERROR, t('Invalid arguments'));
+  }
+
+  $hash = _acquia_agent_hmac($account->pass, $data['authenticator']['time'], $data['authenticator']['nonce'], $data['body']);
+  if ($hash === $data['authenticator']['hash']) {
+    $result = array();
+    $result['is_error'] = FALSE;
+    $result['body']['subscription'][] = array(
+      'identifier' => ACQTEST_ID,
+      'key' => ACQTEST_KEY,
+      'name' => ACQTEST_ID,
+    );
+    return $result;
+  }
+  else {
+    return xmlrpc_error(ACQSUBSCRIPTION_VALIDATION_ERROR, t('Incorrect password.'));
+  }
+}
+
+function acquia_connector_test_subscription_name($data) {
+  $fields = array(
+    'time' => 'is_numeric',
+    'nonce' => 'is_string',
+    'hash' => 'is_string',
+  );
+  $result = acquia_connector_test_basic_authenticator($fields, $data);
+  if (!empty($result->is_error)) {
+    return $result;
+  }
+  if (!empty($data['body']['identifier'])) {
+    if ($data['body']['identifier'] != ACQTEST_ID && $data['body']['identifier'] != ACQTEST_ERROR_ID) {
+      return xmlrpc_error(ACQTEST_SUBSCRIPTION_VALIDATION_ERROR, t('Subscription not found'));
+    }
+    $result = array();
+    $result['is_error'] = FALSE;
+    $result['body']['subscription'] = array(
+      'site_name' => $data['body']['identifier'],
+    );
+    return $result;
+  }
+  else {
+    return xmlrpc_error(ACQTEST_SUBSCRIPTION_VALIDATION_ERROR, t('Invalid arguments'));
+  }
+}
+
+function acquia_connector_test_cloud_migration_environments($data) {
+  // return array
+}
+
+function acquia_connector_test_migration_complete($data) {
+  // return array
+}
+
+function acquia_connector_test_nspi_update($data) {
+  $fields = array(
+    'time' => 'is_numeric',
+    'nonce' => 'is_string',
+    'hash' => 'is_string',
+  );
+  $result = acquia_connector_test_basic_authenticator($fields, $data);
+  if (!empty($result->is_error)) {
+    return $result;
+  }
+  if (!empty($data['authenticator']['identifier'])) {
+    if ($data['authenticator']['identifier'] != ACQTEST_ID && $data['authenticator']['identifier'] != ACQTEST_ERROR_ID) {
+      return xmlrpc_error(ACQTEST_SUBSCRIPTION_VALIDATION_ERROR, t('Subscription not found'));
+    }
+    if ($data['authenticator']['identifier'] == ACQTEST_ERROR_ID) {
+      return FALSE;
+    }
+    else {
+      $spi_data = $data['body'];
+      if (!isset($spi_data['spi_data_version'])) {
+        $return_result = TRUE;
+      }
+      else {
+        $return_result = array('result' => TRUE);
+        if (isset($spi_data['spi_def_update'])) {
+          $return_result['update_spi_definition'] = TRUE;
+        }
+      }
+      return $return_result;
+    }
+  }
+  else {
+    return xmlrpc_error(ACQTEST_SUBSCRIPTION_VALIDATION_ERROR, t('Invalid arguments'));
+  }
+}
+
+function acquia_connector_test_basic_authenticator($fields, $data) {
+  $result = new stdClass();
+
+  foreach ($fields as $field => $type) {
+    if (empty($data['authenticator'][$field]) || !$type($data['authenticator'][$field])) {
+      $result->code = ACQTEST_SUBSCRIPTION_MESSAGE_INVALID;
+      $result->message = t('Authenticator field @field is missing or invalid.', array('@field' => $field));
+      $result->is_error = TRUE;
+      return $result;
+    }
+  }
+
+  $now = REQUEST_TIME;
+  if ($data['authenticator']['time'] > ($now + ACQTEST_SUBSCRIPTION_MESSAGE_LIFETIME)) {
+    $result->code = ACQTEST_SUBSCRIPTION_MESSAGE_FUTURE;
+    $result->message = t('Message time ahead of server time.');
+    $result->is_error = TRUE;
+    return $result;
+  }
+  else if ($data['authenticator']['time'] < ($now - ACQTEST_SUBSCRIPTION_MESSAGE_LIFETIME)) {
+    $result->code = ACQTEST_SUBSCRIPTION_MESSAGE_EXPIRED;
+    $result->message = t('Message is too old.');
+    $result->is_error = TRUE;
+    return $result;
+  }
+
+  $result->is_error = FALSE;
+  return $result;
+}
+
+function acquia_connector_test_validate_authenticator($data) {
+  $fields = array(
+    'time' => 'is_numeric',
+    'identifier' => 'is_string',
+    'nonce' => 'is_string',
+    'hash' => 'is_string',
+   );
+
+  $result = acquia_connector_test_basic_authenticator($fields, $data);
+  if (!empty($result->is_error)) {
+    return $result;
+  }
+  if (strpos($data['authenticator']['identifier'], 'TEST_') !== 0) {
+    $result->code = ACQSUBSCRIPTION_NOT_FOUND;
+    $result->message = t('Subscription not found.');
+    $result->is_error = TRUE;
+    return $result;
+  }
+
+  $key = $data['authenticator']['identifier'] == ACQTEST_ID ? ACQTEST_KEY : ACQTEST_ERROR_KEY;
+  $hash = _acquia_agent_hmac($key, $data['authenticator']['time'], $data['authenticator']['nonce'], $data['body']);
+  $hash_simple = _acquia_agent_hmac($key, $data['authenticator']['time'], $data['authenticator']['nonce'], array());
+
+  if (($hash != $data['authenticator']['hash']) && ($hash_simple != $data['authenticator']['hash'])) {
+    $result->code = ACQSUBSCRIPTION_VALIDATION_ERROR;
+    $result->message = t('HMAC validation error: ')."{$hash} != {$data['authenticator']['hash']}";
+    $result->is_error = TRUE;
+    return $result;
+  }
+  
+  $result->is_error = FALSE;
+  $result->body['active'] = 1;
+  $result->body['href'] = 'TEST';
+  $result->body['expiration_date']['value'] = '2023-10-08T06:30:00';
+  $result->body['product'] = '';
+  $result->body['derived_key_salt'] = $data['authenticator']['identifier'] . '_KEY_SALT';
+  $result->body['update_service'] = 1;
+  $result->body['search_service_enabled'] = 1;
+  if (isset($data['body']['rpc_version'])) {
+    $result->body['rpc_version'] = $data['body']['rpc_version'];
+  }
+  $result->secret['data'] = $data;
+  $result->secret['nid'] = '91990';
+  $result->secret['node'] = $data['authenticator']['identifier'] . '_NODE';
+  $result->secret['key'] = $key;
+  $result->authenticator = $data['authenticator'];
+  $result->authenticator['hash'] = '';
+  $result->authenticator['time'] += 1;
+
+  return $result;
+}
\ No newline at end of file
diff --git a/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.info b/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.info
index 29d006b..a3689ef 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.info
+++ b/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.info
@@ -9,14 +9,13 @@ dependencies[] = apachesolr_search
 dependencies[] = search
 
 files[] = Acquia_Search_Service.php
+files[] = tests/acquia_search.test
 
-
-
-; Information added by drupal.org packaging script on 2012-08-10
-version = "7.x-2.7"
+; Information added by drupal.org packaging script on 2012-09-21
+version = "7.x-2.8"
 core = "7.x"
 project = "acquia_connector"
-datestamp = "1344609377"
+datestamp = "1348252266"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.install b/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.install
index 1d899bc..5ff218b 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.install
+++ b/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.install
@@ -50,6 +50,10 @@ function acquia_search_requirements($phase) {
       $requirements['acquia_search_apachesolr']['value'] = $t('Incompatible API version');
     }
   }
+  // Update the cached version whenever we may be updating the module.
+  if ($phase == 'runtime' || $phase == 'update') {
+    _acquia_search_set_version();
+  }
 
   return $requirements;
 }
@@ -133,6 +137,7 @@ function _acquia_search_get_default_facets() {
 function acquia_search_uninstall() {
   variable_del('acquia_search_path');
   variable_del('acquia_search_base_url');
+  variable_del('acquia_search_derived_key_salt');
 }
 
 /**
diff --git a/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.module b/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.module
index a64d5b3..aa64cd9 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.module
+++ b/profiles/acquia/modules/acquia_connector/acquia_search/acquia_search.module
@@ -21,25 +21,25 @@ function acquia_search_get_environment($conf = array()) {
   }
   $search_host = variable_get('acquia_search_host', 'search.acquia.com');
   // @todo rework this logic once we have AH_SERVER_REGION
-  // legacy_internal will be true if 'internal.' is the start of the host
+  // legacy_internal will be true if 'internal-' is the start of the host
   // name that's set in via Acquia Cloud platform or vset.
-  $legacy_internal = (strpos($search_host, 'internal.') === 0);
+  $legacy_internal = preg_match('/internal[-.]/', $search_host);
   // Adding the subscription specific colony to the heartbeat data
   if (!empty($subscription['heartbeat_data']['search_service_colony'])) {
     $search_host = $subscription['heartbeat_data']['search_service_colony'];
     if ($legacy_internal) {
       // If we want to be using an internal host name, fix the one
       // from the hearbeat data here.
-      $search_host = 'internal.' . $search_host;
+      $search_host = 'internal-' . $search_host;
     }
   }
   // Check if we are on Acquia Cloud hosting. @see NN-2503
   if (!empty($_ENV['AH_SITE_ENVIRONMENT']) && !empty($_ENV['AH_SERVER_REGION'])) {
     if ($_ENV['AH_SERVER_REGION'] == 'us-east-1' && $search_host == 'search.acquia.com') {
-      $search_host = 'internal.search.acquia.com';
+      $search_host = 'internal-search.acquia.com';
     }
     elseif (strpos($search_host, 'search-' . $_ENV['AH_SERVER_REGION']) === 0) {
-      $search_host = 'internal.' . $search_host;
+      $search_host = 'internal-' . $search_host;
     }
   }
 
@@ -54,11 +54,11 @@ function acquia_search_get_environment($conf = array()) {
  * Implementation of hook_enable().
  */
 function acquia_search_enable() {
-  if (acquia_agent_subscription_is_active()) {
-    acquia_search_enable_acquia_solr_environment();
-    // Send a heartbeat so the Acquia Network knows the module is enabled.
-    acquia_agent_check_subscription();
-  }
+  // Send a heartbeat so the Acquia Network knows the module is enabled.
+  // This causes an invocation of hook_acquia_subscription_status() which is
+  // implemented in this module to set up the environment.
+  _acquia_search_set_version();
+  acquia_agent_check_subscription();
 }
 
 /**
@@ -84,11 +84,29 @@ function acquia_search_enable_acquia_solr_environment() {
   // Creates the new environment
   $environment = apachesolr_environment_load(ACQUIA_SEARCH_ENVIRONMENT_ID);
   if (!$environment) {
+    $environment['conf'] = array();
+
+    // Copy the bundles from the previous default environment
+    $orig_env_id = apachesolr_default_environment();
+    $orig_env = apachesolr_environment_load($orig_env_id);
+    $environment['index_bundles'] = $orig_env['index_bundles'];
+
+    // Also make sure that the default search page has Acquia Search as its
+    // default environment
+    $default_search_page_id = apachesolr_search_default_search_page();
+    $default_search_page = apachesolr_search_page_load($default_search_page_id);
+    if (!empty($default_search_page) && ($default_search_page['env_id'] != ACQUIA_SEARCH_ENVIRONMENT_ID)) {
+      $default_search_page['env_id'] = ACQUIA_SEARCH_ENVIRONMENT_ID;
+      apachesolr_search_page_save($default_search_page);
+    }
+
     // Only set the default if we just created the environment.
     // This will almost always happen, unless the module was disabled via SQL.
-    apachesolr_default_environment(ACQUIA_SEARCH_ENVIRONMENT_ID);
-    $environment['conf'] = array();
+    variable_set('apachesolr_default_environment', ACQUIA_SEARCH_ENVIRONMENT_ID);
+    // Make sure apachesolr search is the default search module.
+    variable_set('search_default_module', 'apachesolr_search');
   }
+
   $acquia_environment = acquia_search_get_environment();
   // Override default values
   foreach($acquia_environment as $key => $value) {
@@ -105,7 +123,11 @@ function acquia_search_enable_acquia_solr_environment() {
  * Helper function to clear variables we may have set.
  */
 function acquia_search_disable() {
-  // Remove the environment we added.
+  // Revert the default search environment
+  if (apachesolr_default_environment() == ACQUIA_SEARCH_ENVIRONMENT_ID) {
+    acquia_search_disable_revert_defaults();
+  }
+  // Remove the base Acquia Search environment we added.
   apachesolr_environment_delete(ACQUIA_SEARCH_ENVIRONMENT_ID);
   // Unset all other acquia search environments
   $environments = apachesolr_load_all_environments();
@@ -114,34 +136,58 @@ function acquia_search_disable() {
       // remove traces of acquia_search
       // unset our acquia url and set it back to default
       $environment['url'] = 'http://localhost:8983/solr';
-      if (apachesolr_default_environment() == $environment['env_id']) {
-        // Go back to the default.
-        variable_del('apachesolr_default_environment');
-      }
       // Emptying the service class, unsetting it would not work, since it would
       // not overwrite the old value
       $environment['service_class'] = '';
       apachesolr_environment_save($environment);
     }
   }
+  variable_del('acquia_search_derived_key_salt');
+}
+
+/**
+ * Helper function to revert the default environment after disable
+ */
+function acquia_search_disable_revert_defaults() {
+  // if the environment does not exists, it will return FALSE
+  // Clear all caches to be sure.
+  cache_clear_all('apachesolr:environments', 'cache_apachesolr');
+  drupal_static_reset('apachesolr_load_all_environments');
+  drupal_static_reset('apachesolr_get_solr');
+  if (module_exists('ctools')) {
+    ctools_include('export');
+    ctools_export_load_object_reset('apachesolr_environment');
+  }
+  if (!apachesolr_environment_load('solr')) {
+    module_load_include('inc', 'apachesolr', 'apachesolr.index');
+    // Same statements as during the apachesolr install process
+    // @todo make this less duplicate
+    db_insert('apachesolr_environment')->fields(array('env_id' => 'solr', 'name' => 'localhost server', 'url' => 'http://localhost:8983/solr'))->execute();
+    // Initialize the entities to index. We enable all node types by default
+    $info = entity_get_info('node');
+    $bundles = array_keys($info['bundles']);
+    apachesolr_index_set_bundles('solr', 'node', $bundles);
+  }
+  // Go back to the default variable which is 'solr'.
+  variable_del('apachesolr_default_environment');
 }
 
 /**
  * Implementation of hook_menu_alter().
  */
 function acquia_search_menu_alter(&$menu) {
-  $delete_page = 'admin/config/search/apachesolr-env/%apachesolr_environment/delete';
+  $delete_page = 'admin/config/search/apachesolr/settings/%apachesolr_environment/delete';
   if (isset($menu[$delete_page])) {
     $menu[$delete_page]['access callback'] = 'acquia_search_environment_delete_access';
-    $menu[$delete_page]['access arguments'] = array(4);
+    $menu[$delete_page]['access arguments'] = array(5);
   }
 }
 
 /**
- * Implementation of hook_cron().
+ * Helper function to cache the Acquia Search version.
  */
-function acquia_search_cron() {
-  // Cache the cersion in a variable so we can send it at not extra cost.
+function _acquia_search_set_version() {
+  // Cache the version in a variable so we can send it at not extra cost.
   $version = variable_get('acquia_search_version', '7.x');
   $info = system_get_info('module', 'acquia_search');
   // Send the version, or at least the core compatibility as a fallback.
@@ -149,9 +195,6 @@ function acquia_search_cron() {
   if ($version != $new_version) {
     variable_set('acquia_search_version', $new_version);
   }
-  // Add the environment if it wasn't added before
-  acquia_search_enable();
-
 }
 
 /**
@@ -234,12 +277,25 @@ function acquia_search_environment_edit_form_validate($form, &$form_state) {
 /**
  * Implementation of hook_acquia_subscription_status().
  */
-function acquia_search_acquia_subscription_status($active) {
+function acquia_search_acquia_subscription_status($active, $subscription = FALSE) {
   if ($active) {
     acquia_search_enable_acquia_solr_environment();
+    // Refresh the salt with the subscription data returned by the heartbeat
+    // since it can change periodically.
+    $salt = variable_get('acquia_search_derived_key_salt', '');
+    if (isset($subscription['derived_key_salt']) && $salt != $subscription['derived_key_salt']) {
+      variable_set('acquia_search_derived_key_salt', $subscription['derived_key_salt']);
+    }
   }
   else {
-    acquia_search_disable();
+    if (is_int($subscription)) {
+      switch ($subscription) {
+        case SUBSCRIPTION_NOT_FOUND:
+        case SUBSCRIPTION_EXPIRED:
+          acquia_search_disable();
+          break;
+      }
+    }
   }
 }
 
@@ -287,6 +343,37 @@ function acquia_search_auth_cookie(&$url, $string = '', $derived_key = NULL, $en
 }
 
 /**
+ * Returns the subscription's salt used to generate the derived key.
+ *
+ * The salt is stored in a system variable so that this module can continue
+ * connecting to Acquia Search even when the subscription data is not available.
+ * The most common reason for subscription data being unavailable is a failed
+ * heartbeat connection to rpc.acquia.com.
+ *
+ * Acquia Connector versions <= 7.x-2.7 pulled the derived key salt directly
+ * from the subscription data. In order to allow for seamless upgrades, this
+ * function checks whether the system variable exists and sets it with the data
+ * in the subscription if it doesn't.
+ *
+ * @return string
+ *   The derived key salt.
+ *
+ * @see http://drupal.org/node/1784114
+ */
+function acquia_search_derived_key_salt() {
+  $salt = variable_get('acquia_search_derived_key_salt', '');
+  if (!$salt) {
+    // If the variable doesn't exist, set it using the subscription data.
+    $subscription = acquia_agent_settings('acquia_subscription_data');
+    if (isset($subscription['derived_key_salt'])) {
+      variable_set('acquia_search_derived_key_salt', $subscription['derived_key_salt']);
+      $salt = $subscription['derived_key_salt'];
+    }
+  }
+  return $salt;
+}
+
+/**
  * Get the derived key for the solr hmac using the information shared with acquia.com.
  */
 function _acquia_search_derived_key($env_id = NULL) {
@@ -309,19 +396,18 @@ function _acquia_search_derived_key($env_id = NULL) {
     // In any case, this is equal for all subscriptions. Also
     // even if the search sub is different, the main subscription should be
     // active
-    $subscription = acquia_agent_settings('acquia_subscription_data');
+    $derived_key_salt = acquia_search_derived_key_salt();
     // We use a salt from acquia.com in key derivation since this is a shared
     // value that we could change on the AN side if needed to force any
     // or all clients to use a new derived key.  We also use a string
     // ('solr') specific to the service, since we want each service using a
     // derived key to have a separate one.
-    if (empty($subscription['active']) || empty($key) || empty($identifier)) {
+    if (empty($derived_key_salt) || empty($key) || empty($identifier)) {
       // Expired or invalid subscription - don't continue.
       $derived_key[$env_id] = '';
     }
     elseif (!isset($derived_key[$env_id])) {
-      $salt = isset($subscription['derived_key_salt']) ? $subscription['derived_key_salt'] : '';
-      $derived_key[$env_id] = _acquia_search_create_derived_key($salt, $identifier, $key);
+      $derived_key[$env_id] = _acquia_search_create_derived_key($derived_key_salt, $identifier, $key);
     }
   }
   return $derived_key[$env_id];
diff --git a/profiles/acquia/modules/acquia_connector/acquia_search/tests/acquia_search.test b/profiles/acquia/modules/acquia_connector/acquia_search/tests/acquia_search.test
index d7223f5..e523521 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_search/tests/acquia_search.test
+++ b/profiles/acquia/modules/acquia_connector/acquia_search/tests/acquia_search.test
@@ -1,65 +1,257 @@
-<?php
-
-// For local testing, don't try to use SSL.
-if (!defined('ACQUIA_DEVELOPMENT_NOSSL')) {
-  define('ACQUIA_DEVELOPMENT_NOSSL', 1);
-}
-
-class AcquiaSearchTest extends DrupalTestCase {
-  function get_info() {
-    return array(
-      'name' => t('Acquia Search'),
-      'desc' => t('Acquia Search unit and functional tests.'),
-      'group' => t('Acquia'),
-    );
-  }
-  function setUp() {
-  	parent::setUp('acquia_agent', 'search', 'apachesolr', 'apachesolr_search', 'acquia_search');
-  }
-
-  function testHMAC() {
-    $this->DrupalVariableSet('acquia_identifier', 'valid_identifier');
-    $this->DrupalVariableSet('acquia_key', 'valid_key');
-    $this->DrupalVariableSet('acquia_subscription_data', array('active' => TRUE));
-
-    $key = $this->randomName();
-    $time = REQUEST_TIME;
-    $nonce = md5($this->randomName());
-    $string = $time . $nonce . $this->randomName();
-    $hash1 = hash_hmac('sha1', $string, $key); 
-    $hash2 = _acquia_search_hmac($key, $string);
-    // The results of these two hmac function must be equal if
-    // ours is correct.  We don't use the PHP built-in since for
-    // the module since it may be missing depending on compile
-    // options.
-    $this->assertEqual($hash1, $hash2, 'Same result using hash_hmac() and _acquia_search_hmac().');
-    $derived_key = _acquia_search_derived_key();
-    // The response is cehcked using the derived key, so construct another hmac.
-    $hash3 = hash_hmac('sha1', $nonce . $string, $derived_key);
-    $this->assertTrue(acquia_search_valid_response($hash3, $nonce, $string), 'Response HMAC would be accepted as valid.');
-  }
-  
-  function testDefaultBlocksEnable() {
-    
-    require_once drupal_get_path('module','acquia_search') . '/acquia_search.install';
-    $themes_regions = array (
-      'garland' => 'left',
-      'acquia_marina' => 'sidebar_first',
-      'madeuptheme' => null
-    );
-    foreach ($themes_regions as $theme => $expected_region) {
-      
-      if ($theme == 'madeuptheme') {
-        $block_regions = array('something', 'or', 'theother');
-      } else {
-        $block_regions = array_keys(system_region_list($theme));
-      }
-      $region = _acquia_search_find_block_region($block_regions);
-      $this->assertEqual($region, $expected_region);
-    }
-    
-    $facets = _acquia_search_get_default_facets();
-    $this->assertNotEqual($facets,array());
-  }
-}
-
+<?php
+/**
+ * @file
+ * Tests for the Acquia Search module.
+ */
+
+/**
+ * Unit tests of the functionality of the Acquia Search module.
+ */
+class AcquiaSearchUnitTestCase extends DrupalUnitTestCase {
+  protected $id;
+  protected $key;
+  protected $salt;
+  protected $derivedKey;
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Acquia Search unit tests',
+      'description' => 'Tests the low level Acquia Search functions.',
+      'group' => 'Acquia',
+    );
+  }
+
+  /**
+   * Overrides DrupalTestCase::setUp().
+   */
+  public function setUp() {
+    parent::setUp();
+    require_once dirname(dirname(__FILE__)) . '/acquia_search.module';
+
+    // Generate and store a random set of credentials.
+    // Make them as close to the production values as possible
+    // Something like AAAA-1234
+    $this->id = $this->randomName(10);
+    // Most of the keys and salts have a 32char lenght
+    $this->key = $this->randomName(32);
+    $this->salt = $this->randomName(32);
+    // Create a derived key from these values
+    $this->derivedKey = _acquia_search_create_derived_key($this->salt, $this->id, $this->key);
+  }
+
+  /**
+   * Tests derived key generation.
+   */
+  public function testDerivedKey() {
+    // Mimic the hashing code in the API function.
+    $derivation_string =  $this->id . 'solr' . $this->salt;
+    // str_pad extends the string with the same string in this case
+    // until it has filled 80 chars.
+    $derived_key = hash_hmac('sha1', str_pad($derivation_string, 80, $derivation_string), $this->key);
+
+    // $this->derivedKey is generated from the API function.
+    // @see setUp()
+    $this->assertEqual($this->derivedKey, $derived_key, t('Derived key API function generates the expected hash.'), 'Acquia Search');
+  }
+
+  /**
+   * Tests HMAC generation.
+   */
+  public function testHMACCookie() {
+    // Generate the expected hash.
+    $time = REQUEST_TIME;
+    $nonce = $this->randomName(32);
+    $string = $time . $nonce . $this->randomName();
+    $hmac = hash_hmac('sha1', $time . $nonce . $string, $this->derivedKey);
+
+    // @todo Make the API function more testable.
+    $authenticator = acquia_search_authenticator($string, $nonce, $this->derivedKey);
+    preg_match('/acquia_solr_hmac=([a-zA-Z0-9]{40});/', $authenticator, $matches);
+    $this->assertEqual($hmac, $matches[1], t('HMAC API function generates the expected hmac hash.'), 'Acquia Search');
+    preg_match('/acquia_solr_time=([0-9]{10});/', $authenticator, $matches);
+    $this->assertNotNull($matches, t('HMAC API function generates a timestamp.'), 'Acquia Search');
+    preg_match('/acquia_solr_nonce=([a-zA-Z0-9]{32});/', $authenticator, $matches);
+    $this->assertEqual($nonce, $matches[1], t('HMAC API function generates the expected nonce.'), 'Acquia Search');
+  }
+}
+
+/**
+ * Tests the functionality of the Acquia Search module.
+ */
+class AcquiaSearchWebTestCase extends DrupalWebTestCase {
+  protected $id;
+  protected $key;
+  protected $salt;
+  protected $derivedKey;
+  protected $url;
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Acquia Search UI tests',
+      'description' => 'Tests the Acquia Search user interface and functionality.',
+      'group' => 'Acquia',
+    );
+  }
+
+  /**
+   * Overrides DrupalTestCase::setUp().
+   */
+  public function setUp() {
+    parent::setUp('acquia_agent', 'acquia_connector_test', 'search', 'apachesolr', 'apachesolr_search', 'acquia_search');
+
+    // Generate and store a random set of credentials.
+    $this->id = $this->randomName(10);
+    $this->key = $this->randomName(32);
+    $this->salt = $this->randomName(32);
+    $this->derivedKey = _acquia_search_create_derived_key($this->salt, $this->id, $this->key);
+    $subscription = array(
+      'timestamp' => REQUEST_TIME - 60,
+      'active' => '1',
+    );
+
+    variable_set('acquia_identifier', $this->id);
+    variable_set('acquia_key', $this->key);
+    variable_set('acquia_subscription_data', $subscription);
+
+    $environment = acquia_search_get_environment();
+    $this->url = $environment['url'];
+  }
+
+  /**
+   * Creates an admin user.
+   */
+  public function createAdminUser() {
+    $permissions = array(
+      'access content',
+      'search content',
+      'administer nodes',
+      'administer search',
+    );
+    return $this->drupalCreateUser($permissions);
+  }
+
+  /**
+   * Creates an authenticated user that has access to search content.
+   *
+   * @return stdClass
+   *   The user object of the authenticated user.
+   *
+   * @see DrupalWebTestCase::drupalCreateUser()
+   */
+  public function createAuthenticatedUser() {
+    $permissions = array(
+      'search content',
+    );
+    return $this->drupalCreateUser($permissions);
+  }
+
+  /**
+   * Method to clear static caches that could interrupt with the
+   * simpletest procedures for Acquia Search.
+   */
+  public function clearStaticCache() {
+    // Reset the static to test for bug where default environment was only set
+    // on the current page load. We want to ensure the setting persists.
+    // @see http://drupal.org/node/1784804
+    drupal_static_reset('apachesolr_load_all_environments');
+    drupal_static_reset('apachesolr_default_environment');
+  }
+
+  /**
+   * Enables the environment of Acquia Search.
+   */
+  public function enableEnvironment() {
+    // API function that creates the environemnt if it doesn't exist yet.
+    acquia_search_enable_acquia_solr_environment();
+  }
+
+  /**
+   * Tests Acquia Search environment creation.
+   *
+   * Tests executed:
+   * - Acquia Search environment is saved and loaded.
+   * - Acquia Search environment is set as the default environment when created.
+   * - The service class is set to AcquiaSearchService.
+   * - The environment's URL is built as expected.
+   */
+  public function testEnvironment() {
+    // Enable the Acquia Search environment
+    $this->enableEnvironment();
+    // Clear the static caches
+    $this->clearStaticCache();
+    // Load the newly enabled environment
+    $environment = apachesolr_environment_load(ACQUIA_SEARCH_ENVIRONMENT_ID);
+    // Load the default environment variable
+    $default_environment = apachesolr_default_environment();
+
+    // Test all the things!
+    // Check if the environment is a valid variable
+    $this->assertTrue($environment, t('Acquia Search environment saved.'), 'Acquia Search');
+    // Check if the default environment is Acquia Search
+    $this->assertEqual(ACQUIA_SEARCH_ENVIRONMENT_ID, $default_environment, t('Acquia Search is set to the default environment.'), 'Acquia Search');
+    // Check if the service class is actually the Acquia Search Service Class
+    $class = isset($environment['service_class']) ? $environment['service_class'] : '';
+    $this->assertEqual('AcquiaSearchService', $class, t('Acquia Search is using the AcquiaSearchService service class.'), 'Acquia Search');
+    // Check if the url is the same as the one we wanted to save.
+    $this->assertEqual($this->url, $environment['url'], t('Acquia Search is connected to the expected URL.'), 'Acquia Search');
+  }
+
+  /**
+   * Tests that the Acquia Search environment shows up in the interface and that
+   * administrators cannot delete it.
+   *
+   * Tests executed:
+   * - Acquia Search environment is present in the UI.
+   * - Acquia Search is reflected as the default environment in the UI.
+   * - Admin user receives 403 when attempting to delete the environment.
+   */
+  public function testEnvironmentUI() {
+    // Enable the Acquia Search environment
+    $this->enableEnvironment();
+    // Clear the static caches
+    $this->clearStaticCache();
+
+    $admin_user = $this->createAdminUser();
+    $this->drupalLogin($admin_user);
+
+    $settings_path = 'admin/config/search/apachesolr/settings';
+    $this->drupalGet($settings_path);
+    $this->assertText('Acquia Search', t('The Acquia Search environment is displayed in the UI.'), 'Acquia Search');
+
+    $path = 'admin/config/search/apachesolr/settings/' . ACQUIA_SEARCH_ENVIRONMENT_ID . '/edit';
+    $options = array('query' => array('destination' => $settings_path));
+    $link = l('Acquia Search', $path, $options);
+    $raw = t('!environment <em>(Default)</em>', array('!environment' => $link));
+    $this->assertRaw($raw, t('The Acquia Search environment is reflected as the default in the UI.'), 'Acquia Search');
+
+    $this->drupalGet('admin/config/search/apachesolr/settings/' . ACQUIA_SEARCH_ENVIRONMENT_ID . '/delete');
+    $this->assertResponse(403, t('The Acquia Search environment cannot be deleted via the UI.'));
+  }
+
+  /**
+   * Tests that Apache Solr search is set as the default search when the Acquia
+   * Search environment is enabled.
+   *
+   * Tests executed:
+   * - The "search_default_module" variable is set to "apachesolr_search".
+   * - Executing a search via the core search block redirects to search/site.
+   */
+  public function testDefaultSearch() {
+    // Enable the Acquia Search environment
+    $this->enableEnvironment();
+    // Clear the static caches
+    $this->clearStaticCache();
+
+    // Test that the default search variable is set to the expected value.
+    $default_search = variable_get('search_default_module', 'node');
+    $this->assertEqual('apachesolr_search', $default_search, t('The default search is set to Apache Solr search when the Acquia Search environment is created.'), 'Acquia Search');
+
+    // Visit the homepage and execute a search through the core search block. It
+    // should redirect to "search/site/test" if working properly.
+    $authenticated_user = $this->createAuthenticatedUser();
+    $this->drupalLogin($authenticated_user);
+    $edit = array('search_block_form' => 'test');
+    $this->drupalPost('', $edit, t('Search'));
+    $this->assertUrl('search/site/test', array(), t('The core search block redirects to the Apache Solr search page.'), 'Acquia Search');
+  }
+}
diff --git a/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.info b/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.info
index a3e03c2..e6a6562 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.info
+++ b/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.info
@@ -4,12 +4,13 @@ package = Acquia Network Connector
 php = 5.0
 core = 7.x
 dependencies[] = acquia_agent
+files[] = tests/acquia_spi.test
 
-; Information added by drupal.org packaging script on 2012-08-10
-version = "7.x-2.7"
+; Information added by drupal.org packaging script on 2012-09-21
+version = "7.x-2.8"
 core = "7.x"
 project = "acquia_connector"
-datestamp = "1344609377"
+datestamp = "1348252266"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.install b/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.install
index 1432ea7..af22339 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.install
+++ b/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.install
@@ -40,7 +40,7 @@ function acquia_spi_requirements($phase) {
       $has_credentials = acquia_agent_has_credentials();
 
       if ($has_credentials) {
-        $key = md5(acquia_agent_settings('acquia_key') . '-spi-send-' . drupal_get_private_key());
+        $key = sha1(drupal_get_private_key());
         $config_url = $description = $interval = '';
         $ago = REQUEST_TIME - $last_sent;
         if ($ago >= 60 * 60 * 36) { // 1.5 days ago.
diff --git a/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.module b/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.module
index a3195a7..26ce895 100644
--- a/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.module
+++ b/profiles/acquia/modules/acquia_connector/acquia_spi/acquia_spi.module
@@ -5,6 +5,8 @@
  *   Send site profile information (NSPI) and system data to Acquia Network.
  */
 
+define('ACQUIA_SPI_DATA_VERSION', '2.0');
+
 /**
  * Implementation of hook_help()
  */
@@ -85,7 +87,7 @@ function acquia_spi_boot() {
 function _acquia_spi_send_access() {
   $acquia_key = acquia_agent_settings('acquia_key');
   if (!empty($acquia_key) && isset($_GET['key'])) {
-    $key = md5($acquia_key . '-spi-send-' . drupal_get_private_key());
+    $key = sha1(drupal_get_private_key());
     if ($key == $_GET['key']) {
       return TRUE;
     }
@@ -211,13 +213,14 @@ function acquia_spi_form_acquia_agent_settings_form_alter(&$form) {
     '#description' => t('Source code analysis requires a SSL connection and for your site to be publicly accessible. <a href="!url">Learn more.</a>', array('!url' => url('admin/help/acquia_agent'))),
     '#disabled' => !$ssl_available,
   );
+
   $use_cron = variable_get('acquia_spi_use_cron', 1);
   $form['connection']['spi_use_cron'] = array(
     '#type' => 'checkbox',
     '#title' => t('Send via Drupal cron'),
     '#default_value' => $use_cron,
   );
-  $key = md5(acquia_agent_settings('acquia_key') . '-spi-send-' . drupal_get_private_key());
+  $key = sha1(drupal_get_private_key());
   $url = url('system/acquia-spi-send', array('query' => array('key' => $key), 'absolute' => TRUE));
   $form['connection']['spi_use_cron_url'] = array(
     '#type' => 'container',
@@ -260,6 +263,84 @@ function acquia_agent_spi_set_submit($form, &$form_state) {
 }
 
 /**
+ * Checks if NSPI server has an updated SPI data definition.
+ * If it does, then this function updates local copy of SPI definition data.
+ *
+ * @return boolean
+ *   True if SPI definition data has been updated
+ */
+function acquia_spi_update_definition() {
+  $core_version = substr(VERSION, 0, 1);
+  $spi_def_end_point = variable_get('acquia_spi_server', 'https://nspi.acquia.com');
+  $spi_def_end_point .= '/spi_def/get/' . $core_version;
+  $options = array(
+    'method' => 'GET',
+    'headers' => array('Content-type' => 'application/json'),
+    'data' => drupal_http_build_query(array('spi_data_version' => ACQUIA_SPI_DATA_VERSION))
+  );
+  $response = drupal_http_request($spi_def_end_point, $options);
+  if ($response->code != 200 || !isset($response->data)) {
+    watchdog('acquia spi', 'Failed to obtain latest SPI data definition. HTTP response: @response', array('@response' => var_export($response, TRUE)), WATCHDOG_ERROR);
+    return FALSE;
+  }
+  else {
+    $response_data = drupal_json_decode($response->data);
+    $expected_data_types = array(
+      'drupal_version' => 'string',
+      'timestamp' => 'string',
+      'acquia_spi_variables' => 'array',
+    );
+    // Make sure that $response_data contains everything expected.
+    foreach($expected_data_types as $key => $values) {
+      if (!array_key_exists($key, $response_data) || gettype($response_data[$key]) != $expected_data_types[$key]) {
+        watchdog('acquia spi', 'Received SPI data definition does not match expected pattern while checking "@key". Received and expected data: @data', array('@key' => $key, '@data' => var_export(array_merge(array('expected_data' => $expected_data_types), array('response_data' => $response_data)), 1), TRUE), WATCHDOG_ERROR);
+        return FALSE;
+      }
+    }
+    if ($response_data['drupal_version'] != $core_version) {
+      watchdog('acquia spi', 'Received SPI data definition does not match with current version of your Drupal installation. Data received for Drupal @version', array('@version' => $response_data['drupal_version']), WATCHDOG_ERROR);
+      return FALSE;
+    }
+  }
+
+  // NSPI response is in expected format.
+  if ((int) $response_data['timestamp'] > (int) variable_get('acquia_spi_def_timestamp', 0)) {
+    // Compare stored variable names to incoming and report on update.
+    $old_vars = variable_get('acquia_spi_def_vars', array());
+    $new_vars = $response_data['acquia_spi_variables'];
+    $new_optional_vars = 0;
+    foreach($new_vars as $new_var_name => $new_var) {
+      // Count if received from NSPI optional variable is not present in old local SPI definition
+      // or if it already was in old SPI definition, but was not optional
+      if ($new_var['optional'] && !array_key_exists($new_var_name, $old_vars) || 
+          $new_var['optional'] && isset($old_vars[$new_var_name]) && !$old_vars[$new_var_name]['optional']) {
+        $new_optional_vars++;
+      }
+    }
+    // Clean up waived vars that are not exposed by NSPI anymore.
+    $waived_spi_def_vars = variable_get('acquia_spi_def_waived_vars', array());
+    $changed_bool = FALSE;
+    foreach($waived_spi_def_vars as $key => $waived_var) {
+      if (!in_array($waived_var, $new_vars)) {
+        unset($waived_spi_def_vars[$key]);
+        $changed_bool = TRUE;
+      }
+    }
+    if ($changed_bool) {
+      variable_set('acquia_spi_def_waived_vars', $waived_spi_def_vars);
+    }
+    // Finally, save SPI definition data.
+    if ($new_optional_vars > 0) {
+      variable_set('acquia_spi_new_optional_data', 1);
+    }
+    variable_set('acquia_spi_def_timestamp', $response_data['timestamp']);
+    variable_set('acquia_spi_def_vars', $response_data['acquia_spi_variables']);
+    return TRUE;
+  }
+  return FALSE;
+}
+
+/**
  * Send site profile information to Acquia Network via XML-RPC.
  */
 function acquia_spi_send_profile_info() {
@@ -272,6 +353,12 @@ function acquia_spi_send_profile_info() {
     // @todo move to version 4, JSON over XML-RPC.
     $spi['rpc_version'] = 3;
     $result = acquia_agent_call('acquia.nspi.update', $spi, NULL, NULL, $nspi_server);
+    // Check result for command to update SPI definition.
+    $update_command = isset($result['result']['update_spi_definition']) ? $result['result']['update_spi_definition'] : FALSE;
+    if ($update_command == TRUE) {
+      acquia_spi_update_definition();
+    }
+
     variable_set('acquia_spi_cron_last', REQUEST_TIME);
     return $result['result'];
   }
@@ -294,7 +381,8 @@ function acquia_spi_get() {
 
   // Default values return
   $spi = array(
-    'drupal_key'     => drupal_get_private_key(),
+    'spi_data_version' => ACQUIA_SPI_DATA_VERSION,
+    'site_key'        => sha1(drupal_get_private_key()),
     'modules'        => acquia_spi_get_modules(),
     'platform'       => acquia_spi_get_platform(),
     'quantum'        => acquia_spi_get_quantum(),
@@ -681,17 +769,22 @@ function acquai_spi_get_404s() {
 }
 
 /**
- * get all system variables
- *
- * @param n/a
- *
- * @return string
+ * Get all system variables
  *
+ * @return JSON string
  */
 function acquia_spi_get_variables_data() {
   global $conf;
   $data = array();
-  $variables = array('acquia_spi_send_node_user', 'acquia_spi_admin_priv', 'acquia_spi_module_diff_data', 'acquia_spi_send_watchdog', 'acquia_spi_use_cron', 'cache_backends', 'cache_default_class', 'cache_inc', 'googleanalytics_cache', 'error_level', 'preprocess_js', 'page_cache_maximum_age', 'block_cache', 'preprocess_css', 'page_compression', 'cache', 'cache_lifetime', 'cron_last', 'clean_url', 'redirect_global_clean', 'theme_zen_settings', 'site_offline', 'site_name', 'user_register', 'user_signatures', 'user_admin_role', 'user_email_verification', 'user_cancel_method', 'filter_fallback_format', 'dblog_row_limit', 'date_default_timezone', 'file_default_scheme', 'install_profile', 'maintenance_mode', 'update_last_check', 'site_default_country');
+  $variables = array('acquia_spi_send_node_user', 'acquia_spi_admin_priv', 'acquia_spi_module_diff_data', 'acquia_spi_send_watchdog', 'acquia_spi_use_cron', 'cache_backends', 'cache_default_class', 'cache_inc', 'cron_safe_threshold', 'googleanalytics_cache', 'error_level', 'preprocess_js', 'page_cache_maximum_age', 'block_cache', 'preprocess_css', 'page_compression', 'cache', 'cache_lifetime', 'cron_last', 'clean_url', 'redirect_global_clean', 'theme_zen_settings', 'site_offline', 'site_name', 'user_register', 'user_signatures', 'user_admin_role', 'user_email_verification', 'user_cancel_method', 'filter_fallback_format', 'dblog_row_limit', 'date_default_timezone', 'file_default_scheme', 'install_profile', 'maintenance_mode', 'update_last_check', 'site_default_country');
+  $spi_def_vars = variable_get('acquia_spi_def_vars', array());
+  $waived_spi_def_vars = variable_get('acquia_spi_def_waived_vars', array());
+  // Merge hard coded $variables with vars from SPI definition.
+  foreach($spi_def_vars as $var_name => $var) {
+    if (!in_array($var_name, $waived_spi_def_vars) && !in_array($var_name, $variables)) {
+      $variables[] = $var_name;
+    }
+  }
   // Add comment settings for node types.
   $types = node_type_get_types();
   if (!empty($types)) {
@@ -699,23 +792,44 @@ function acquia_spi_get_variables_data() {
       $variables[] = 'comment_' . $name;
     }
   }
-
   foreach ($variables as $name) {
     if (isset($conf[$name])) {
       $data[$name] = $conf[$name];
     }
   }
+  // Exception handling.
   if (module_exists('globalredirect') && function_exists('_globalredirect_get_settings')) {
     // Explicitly get Global Redirect settings since it deletes its variable
     // if the settings match the defaults.
     $data['globalredirect_settings'] = _globalredirect_get_settings();
   }
-  // Collapse to JSON string to simplify transport. NSPI server will not
-  // re-encode for storage.
+  // Drush overrides cron_safe_threshold so extract DB value if sending via drush.
+  if (drupal_is_cli()) {
+    $cron_safe_threshold = acquia_spi_get_db_variable('cron_safe_threshold');
+    $data['cron_safe_threshold'] = !is_null($cron_safe_threshold) ? $cron_safe_threshold : DRUPAL_CRON_DEFAULT_THRESHOLD;
+  }
+  // Unset waived vars so they won't be sent to NSPI.
+  foreach($data as $var_name => $var) {
+    if (in_array($var_name, $waived_spi_def_vars)) {
+      unset($data[$var_name]);
+    }
+  }
+  // Collapse to JSON string to simplify transport.
   return drupal_json_encode($data);
 }
 
 /**
+ * Get a variable from the DB explicitely skipping global $conf array.
+ */
+function acquia_spi_get_db_variable($name) {
+  $result = db_query("SELECT value FROM {variable} WHERE name = :name", array(':name' => $name));
+  if ($result->rowCount() == 1) {
+    return unserialize($result->fetchField());
+  }
+  return NULL;
+}
+
+/**
  * Get the information on failed logins in the last cron interval
  *
  * @param n/a
@@ -1014,7 +1128,7 @@ function acquia_spi_get_modules() {
   
   // Only do a full rebuild of the module cache every 1 at the most
   $last_build = variable_get('acquia_spi_module_rebuild', 0);
-  if ($last_build < time() - 86400) {
+  if ($last_build < REQUEST_TIME - 86400) {
     $modules = system_rebuild_module_data();
     variable_set('acquia_spi_module_rebuild', REQUEST_TIME);
   }
diff --git a/profiles/acquia/modules/acquia_connector/acquia_spi/tests/acquia_spi.test b/profiles/acquia/modules/acquia_connector/acquia_spi/tests/acquia_spi.test
new file mode 100644
index 0000000..ad939f8
--- /dev/null
+++ b/profiles/acquia/modules/acquia_connector/acquia_spi/tests/acquia_spi.test
@@ -0,0 +1,189 @@
+<?php
+
+/**
+* Tests the functionality of the Acquia SPI module.
+*/
+class AcquiaSPITestCase extends DrupalWebTestCase {
+  protected $privileged_user;
+  protected $setup_path;
+  protected $credentials_path;
+  protected $settings_path;
+  protected $status_report_url;
+
+  public static function getInfo() {
+    // Note: getInfo() strings are not translated with t().
+    return array(
+      'name' => 'Acquia SPI',
+      'description' => 'Test sending Acquia SPI data.',
+      'group' => 'Acquia',
+    );
+  }
+
+  public function setUp() {
+    global $base_url;
+    // Enable any modules required for the test
+    parent::setUp('acquia_agent', 'acquia_spi', 'acquia_connector_test');
+    // Create and log in our privileged user.
+    $this->privileged_user = $this->drupalCreateUser(array(
+      'administer site configuration',
+      'access administration pages',
+    ));
+    $this->drupalLogin($this->privileged_user);
+    // Setup variables.
+    $this->credentials_path = 'admin/config/system/acquia-agent/credentials';
+    $this->settings_path = 'admin/config/system/acquia-agent';
+    $this->status_report_url = 'admin/reports/status';
+    variable_set('acquia_network_address', $base_url);
+    variable_set('acquia_spi_server', $base_url);
+    variable_set('acquia_spi_ssl_override', TRUE);
+    variable_set('acquia_agent_verify_peer', FALSE);
+  }
+
+  /**
+   * Helper function for storing UI strings.
+   */
+  private function acquiaSPIStrings($id) {
+    switch ($id) {
+      case 'spi-status-text':
+        return 'SPI data will be sent once every 30 minutes once cron is called';
+      case 'spi-not-sent';
+        return 'SPI data has not been sent';
+      case 'spi-send-text';
+        return 'manually send SPI data';
+      case 'spi-data-sent':
+        return 'SPI data sent';
+      case 'spi-data-sent-error':
+        return 'There was an error sending SPI data';
+      case 'spi-new-def':
+        return 'There are new checks that will be performed on your site by the Acquia Network Connector';
+    }
+  }
+
+  public function testAcquiaSPISendData() {
+    $this->drupalGet($this->status_report_url);
+    $this->assertNoText($this->acquiaSPIStrings('spi-status-text'), 'SPI send option does not exist when site is not connected');
+    // Connect site on key and id that will error.
+    $edit_fields = array(
+      'acquia_identifier' => ACQTEST_ERROR_ID,
+      'acquia_key' => ACQTEST_ERROR_KEY,
+    );
+    $submit_button = 'Connect';
+    $this->drupalPost($this->credentials_path, $edit_fields, $submit_button);
+    // Send SPI data.
+    $this->drupalGet($this->status_report_url);
+    $this->assertText($this->acquiaSPIStrings('spi-status-text'), 'SPI explanation text exists');
+    $this->assertText($this->acquiaSPIStrings('spi-not-sent'), 'SPI data has not been sent');
+    $this->clickLink($this->acquiaSPIStrings('spi-send-text'));
+    $this->assertNoText($this->acquiaSPIStrings('spi-data-sent'), 'SPI data was not sent');
+    $this->assertText($this->acquiaSPIStrings('spi-data-sent-error'), 'Page says there was an error sending data');
+
+    // Connect site on non-error key and id.
+    $this->drupalGet($this->credentials_path);
+    $edit_fields = array(
+      'acquia_identifier' => ACQTEST_ID,
+      'acquia_key' => ACQTEST_KEY,
+    );
+    $this->drupalPost($this->credentials_path, $edit_fields, $submit_button);
+    // Send SPI data.
+    $this->drupalGet($this->status_report_url);
+    $this->clickLink($this->acquiaSPIStrings('spi-send-text'));
+    $this->assertText($this->acquiaSPIStrings('spi-data-sent'), 'SPI data was sent');
+    $this->assertNoText($this->acquiaSPIStrings('spi-not-sent'), 'SPI does not say "data has not been sent"');
+  }
+
+  public function testAcquiaSPIGet() {
+    $spi_default_keys = array(
+      'spi_data_version',
+      'site_key',
+      'modules',
+      'platform',
+      'quantum',
+      'system_status',
+      'failed_logins',
+      '404s',
+      'watchdog_size',
+      'watchdog_data',
+      'last_nodes',
+      'last_users',
+      'extra_files',
+      'ssl_login',
+      'file_hashes',
+      'hashes_md5',
+      'hashes_sha1',
+      'fileinfo',
+      'distribution',
+      'base_version',
+      'build_data',
+      'roles',
+      'uid_0_present',
+    );
+    // Test acquia_spi_get().
+    $spi_data = acquia_spi_get();
+    $valid = is_array($spi_data);
+    $this->assertTrue($valid, 'acquia_spi_get() returns an array');
+    if ($valid) {
+      foreach ($spi_default_keys as $key) {
+        if (!array_key_exists($key, $spi_data)) {
+          $valid = FALSE;
+          break;
+        }
+      }
+      $this->assertTrue($valid, 'Array has expected keys');
+      $this->assertEqual(sha1(drupal_get_private_key()), $spi_data['site_key'], 'Site key is sha1 of Drupal private key');
+      $this->assertTrue(!empty($spi_data['spi_data_version']), 'SPI data version is set');
+      $vars = drupal_json_decode($spi_data['system_vars']);
+      $this->assertTrue(is_array($vars), 'SPI data system_vars is a JSON-encoded array');
+      $this->pass(var_export($vars, TRUE));
+      $this->assertTrue(isset($vars['user_admin_role']), 'user_admin_role included in SPI data');
+    }
+  }
+
+  public function testAcquiaSPIUpdateResponse() {
+    $this->drupalGet($this->credentials_path);
+    $edit_fields = array(
+      'acquia_identifier' => ACQTEST_ID,
+      'acquia_key' => ACQTEST_KEY,
+    );
+    $submit_button = 'Connect';
+    $this->drupalPost($this->credentials_path, $edit_fields, $submit_button);
+    $nspi_server = variable_get('acquia_spi_server', 'https://nspi.acquia.com');
+    $spi_data = acquia_spi_get();
+    // Check that result is an array.
+    $result = acquia_agent_call('acquia.nspi.update', $spi_data, NULL, NULL, $nspi_server);
+    $this->assertTrue(is_array($result['result']), 'SPI update result is an array');
+
+    // Check that result is a bool when spi_data_version is not sent.
+    $spi_data_version = $spi_data['spi_data_version'];
+    unset($spi_data['spi_data_version']);
+    $result = acquia_agent_call('acquia.nspi.update', $spi_data, NULL, NULL, $nspi_server);
+    $this->assertTrue(is_bool($result['result']), 'SPI update result is a boolean when not sending "spi_data_version"');
+
+    $spi_data['spi_data_version'] = $spi_data_version;
+    // Trigger a SPI definition update response.
+    $spi_data['spi_def_update'] = TRUE;
+    $result = acquia_agent_call('acquia.nspi.update', $spi_data, NULL, NULL, $nspi_server);
+    $result = $result['result'];
+    $this->assertTrue(!empty($result['result']), 'SPI result array has expected "result" key.');
+    $this->assertTrue(!empty($result['update_spi_definition']), 'SPI result array has expected "update_spi_definition" key.');
+    $def_timestamp = variable_get('acquia_spi_def_timestamp', 0);
+    $this->assertEqual($def_timestamp, 0, 'SPI definition has not been called before');
+    $def_vars = variable_get('acquia_spi_def_vars', array());
+    $this->assertTrue(empty($def_vars), 'SPI definition variables is empty');
+    $waived_vars = variable_get('acquia_spi_def_waived_vars', array());
+    $this->assertTrue(empty($waived_vars), 'SPI definition waived variables is empty');
+    if (!empty($result['update_spi_definition']) && function_exists('acquia_spi_update_definition')) {
+      $update_res = acquia_spi_update_definition();
+      $this->assertTrue($update_res, 'Update definition call returned true');
+      $def_timestamp = variable_get('acquia_spi_def_timestamp', 0);
+      $this->assertNotEqual($def_timestamp, 0, 'SPI definition timestamp set');
+      $def_vars = variable_get('acquia_spi_def_vars', array());
+      $this->assertTrue(!empty($def_vars), 'SPI definition variable set');
+      variable_set('acquia_spi_def_waived_vars', array('user_admin_role'));
+      // Test that new variables are in SPI data.
+      $spi_data = acquia_spi_get();
+      $vars = drupal_json_decode($spi_data['system_vars']);
+      $this->assertTrue(!empty($vars['file_temporary_path']), 'New variables included in SPI data');
+      $this->assertTrue(!isset($vars['user_admin_role']), 'user_admin_role not included in SPI data');
+    }
+  }
+}
diff --git a/profiles/acquia/modules/apachesolr/CHANGELOG.txt b/profiles/acquia/modules/apachesolr/CHANGELOG.txt
index 9406a36..8c5a563 100644
--- a/profiles/acquia/modules/apachesolr/CHANGELOG.txt
+++ b/profiles/acquia/modules/apachesolr/CHANGELOG.txt
@@ -1,7 +1,64 @@
-Apache Solr integration 7.x-1.x-xxxx, xxxx-xx-xx
-------------------------------
-
-Apache Solr integration 7.x-1.0-rc3, 08-10-2012
+Apache Solr integration 7.x-1.x, xxxx-xx-xx
+-----------------------------
+
+Apache Solr integration 7.x-1.1, 2012-10-15
+-----------------------------
+#1780200 by pwolanin: document basic auth in README.
+#1226274 by pwolanin: Fixes for schema.xml version numbering and organization.
+
+Apache Solr integration 7.x-1.0, 2012-10-13
+-----------------------------
+#761990 by pwolanin, jhedstrom, Nick_vh, jpmckinney | morningtime: Fixed 400 Bad Status if URL length limit exceeded.
+#1811364 by Nick_vh: Fixed Add newly created content type to the indexed bundles for all environments.
+#1811456 by rupl: Fixed Improve documentation of addFilter in apachesolr.api.php.
+#1773506 by drzraf: Fixed drush solr-search notice when file entity are part of the result.
+#1688150 by HalfChem, cam8001, jhedstrom, Nick_vh: Fixed Search query string gets double encoded when core Search block form is submitted.
+#1794602 by pwolanin, Nick_vh | ppmr: Fixed Undefined index: path in ApacheSolrDocument->__get() (line 304 of ...\apachesolr\Apache_Solr_Document.
+#1773506 by drzraf: Fixed drush solr-search notice when file entity are part of the result.
+#1764334 by cpliakas: Fixed Negative percentage of documents sent to the server for indexing.
+#1806300 by Nick_vh: Separate out the creation of the document from the index process.
+#1807552 by Nick_vh, wimvds: Fixed Site and url wrong when indexing multilingual content (using i18n module).
+#1759190 by mkalkbrenner: Fixed obsolete form code?.
+#1802288 by Nick_vh: Fixed Improve testing of node deletion.
+
+Apache Solr integration 7.x-1.0-rc5, 2012-10-01
+-----------------------------
+#1698050 by duellj: fix for apachesolr_clean_text() should strip extra spaces.
+#1764450 by cpliakas: Improve the docblocks in apachesolr.index.inc.
+#1800324 by pwolanin: Clean up and align node access tests.
+#1799330 by pwolanin: fix for Stats table missing t() calls.
+#1787370 by pwolanin: Don't complain about schema version if it doesn't match expected naming pattern.
+#1790590 by pwolanin: Fix DrupalSolrOnlineWebTestCase  so it works with any multicore setup.
+#1799032 by pwolanin: Remove uneeded object reference in indexing function.
+#1793610 by zengenuity: Fix for regession - spelling suggestions missing.
+
+Apache Solr integration 7.x-1.0-rc4, 2012-09-21
+-----------------------------
+#1790894 by pwolanin: fix for Cloning an environment doesn't clone the bundles to be indexed.
+#1778050 by Nick_vh, pwolanin: fix for stale cache when CTools is already enabled.
+#1778266 by Nick_vh, mkalkbrenner: Refactoring of DrupalSolrOnlineWebTestCase to be used by Others.
+#1778266 by mkalkbrenner: Refactoring of DrupalSolrOnlineWebTestCase to be used by Others.
+#1789526 by pwolanin: Clarify lack of upgrade path from 6.x-1.x.
+#1765938 by cpliakas: Added Move the variable_get() for 'apachesolr_environments()" after the cache_set() so that URLs can be modified dynamically.
+#1782436 by cspitzlay: Fixed Error and obsolete hint in code comment.
+#1732900 by cpliakas: Added Change the wording of the generic 'Apache Solr server unavailable" error message.
+#1781040 by mkalkbrenner: Fixed Switch 'Enable spell check" does not work - spell check is allways on.
+#1786450 by Nick_vh: Fixed apachesolr.interface.inc is not always loaded.
+#1760592 by cpliakas, pwolanin: fix for core_search page does not use the current default search environment.
+#1759004 by mkalkbrenner, pwolanin: fix for apachesolr_search_custom_page_search_form_submit() kills all $_GET parameters.
+#1778150 by cpliakas, pwolanin: fix for SQL error in apachesolr_environment_load_subrecords().
+#1743138 by mundanity: Fixed Invalid argument when running Drush.
+#1751640 by cpliakas: Added drush commands to see the ID of the last item indexes as well as the next item queued for indexing.
+#1708150 by ianmthomasuk, Nick_vh, pwolanin: Added additional typing to function definitions.
+#1759110 by Nick_vh: Fixed process response fails if variable was set but never removed.
+#1741066 by Nick_vh: Added geo query type to make contrib's modules life easier.
+#1730840 by pwolanin: Normalize boolean and other values for parameters like hl.
+#1729836 by pwolanin: fix for "Results per page" option for a search page is broken.
+#1719302 by Nick_vh, msti: Fixed Running an empty facet query so the facet blocks can be displayed.
+#1722966 by greggles: Fixed make apachesolr_index_batch_index_finished() message more translateable.
+#1717628 by Nick_vh, pwolanin: Added 'Save and Edit" functionality for configuration pages - Follow ups.
+
+Apache Solr integration 7.x-1.0-rc3, 2012-08-10
 ------------------------------
 #1682004 by Nick_vh: Add template hints for search results based on search page.
 #1722012 by mkalkbrenner, Nick_vh: fix for Missing argument 4 for apachesolr_multilingual_apachesolr_index_documents_alter().
@@ -29,11 +86,11 @@ Apache Solr integration 7.x-1.0-rc3, 08-10-2012
 #1652746 by chrisssi: Fixed Notice: Undefined offset: 3 in _menu_translate() (Zeile 775 von /var/www/includes/menu.inc).
 #1402748 by Nick_vh, killua99: Fixed Check in apachesolr_do_query() if the static of the query with that name already exists, and if so return it.
 
-Apache Solr integration 7.x-1.0-rc2, 06-21-2012
+Apache Solr integration 7.x-1.0-rc2, 2012-06-21
 ------------------------------
 Renamed schema.xml and solrconfig.xml to rc2
 
-Apache Solr integration 7.x-1.0-rc1, 06-21-2012
+Apache Solr integration 7.x-1.0-rc1, 2012-06-21
 ------------------------------
 #1642140 by Nick_vh: Fixed Make the search query also escape the slash and move away from menu_tail() to just 1 argument.
 #1518108 by grendzy: Added Devel interface for inspecting solr documents.
diff --git a/profiles/acquia/modules/apachesolr/Drupal_Apache_Solr_Service.php b/profiles/acquia/modules/apachesolr/Drupal_Apache_Solr_Service.php
index 092846e..f3632f5 100644
--- a/profiles/acquia/modules/apachesolr/Drupal_Apache_Solr_Service.php
+++ b/profiles/acquia/modules/apachesolr/Drupal_Apache_Solr_Service.php
@@ -62,7 +62,7 @@
  * methods for pinging, adding, deleting, committing, optimizing and searching.
  */
 
-class DrupalApacheSolrService {
+class DrupalApacheSolrService implements DrupalApacheSolrServiceInterface {
   /**
    * How NamedLists should be formatted in the output.  This specifically effects facet counts. Valid values
    * are 'map' (default) or 'flat'.
@@ -143,7 +143,7 @@ class DrupalApacheSolrService {
    * @return
    *   (array) With all the system info
    */
-  public function setSystemInfo() {
+  protected function setSystemInfo() {
     $url = $this->_constructUrl(self::SYSTEM_SERVLET, array('wt' => 'json'));
     if ($this->env_id) {
       $this->system_info_cid = $this->env_id . ":system:" . drupal_hash_base64($url);
@@ -425,7 +425,7 @@ class DrupalApacheSolrService {
    *
    * This is just a wrapper around drupal_http_request().
    */
-  protected function _makeHttpRequest($url, $options = array()) {
+  protected function _makeHttpRequest($url, array $options = array()) {
     if (!isset($options['method']) || $options['method'] == 'GET' || $options['method'] == 'HEAD') {
       // Make sure we are not sending a request body.
       $options['data'] = NULL;
@@ -734,7 +734,7 @@ class DrupalApacheSolrService {
   /**
    * Like PHP's built in http_build_query(), but uses rawurlencode() and no [] for repeated params.
    */
-  public function httpBuildQuery(array $query, $parent = '') {
+  protected function httpBuildQuery(array $query, $parent = '') {
     $params = array();
 
     foreach ($query as $key => $value) {
@@ -766,10 +766,7 @@ class DrupalApacheSolrService {
    *
    * @throws Exception If an error occurs during the service call
    */
-  public function search($query = '', $params = array(), $method = 'GET') {
-    if (!is_array($params)) {
-      $params = array();
-    }
+  public function search($query = '', array $params = array(), $method = 'GET') {
     // Always use JSON. See http://code.google.com/p/solr-php-client/issues/detail?id=6#c1 for reasoning
     $params['wt'] = 'json';
     // Additional default params.
@@ -782,9 +779,15 @@ class DrupalApacheSolrService {
     // PHP's built in http_build_query() doesn't give us the format Solr wants.
     $queryString = $this->httpBuildQuery($params);
     // Check string length of the query string, change method to POST
-    // if longer than 4000 characters (typical server handles 4096 max).
-    // @todo - make this a per-server setting.
-    if (strlen($queryString) > variable_get('apachesolr_search_post_threshold', 4000)) {
+    $len = strlen($queryString);
+    // Fetch our threshold to find out when to flip to POST
+    $max_len = apachesolr_environment_variable_get($this->env_id, 'apachesolr_search_post_threshold', 3600);
+
+    // if longer than $max_len (default 3600) characters
+    // we should switch to POST (a typical server handles 4096 max).
+    // If this class is used independently (without environments), we switch automatically to POST at an
+    // limit of 1800 chars.
+    if (($len > 1800) && (empty($this->env_id) || ($len > $max_len))) {
       $method = 'POST';
     }
 
diff --git a/profiles/acquia/modules/apachesolr/README.txt b/profiles/acquia/modules/apachesolr/README.txt
index 1a03fc4..f4f6978 100644
--- a/profiles/acquia/modules/apachesolr/README.txt
+++ b/profiles/acquia/modules/apachesolr/README.txt
@@ -10,15 +10,18 @@ must be used in your Solr installation.
 
 This module depends on the search framework in core.  When used in combination
 with core search module, Apache Solr is not the default search. Access it via a
-new tab on the default search page, called "Search".  You may configure it
+new tab on the default search page, called "Site".  You may configure it
 to be default at ?q=admin/config/search/settings
 
 Updating from 6.x
 -----------------
-Make sure that you have first updated to the latest 6.x version on the relevant
-branch and that you have run all schema updates.  You will have to install the
-new schema.xml and solrconfig.xml files, and restart the Solr server (or core)
-and delete your index and reindex all content.
+
+IMPORTANT: there is no upgrade path from 6.x-1.x or 6.x-2.x. If you previously
+installed those modules you must disable and uninstall them prior to
+installing 7.x-1.x.
+
+You will have to install the new schema.xml and solrconfig.xml files, and restart
+the Solr server (or core) and delete your index and reindex all content.
 
 Installation
 ------------
@@ -35,31 +38,45 @@ subscribed to a service like Acquia Search.
 The Debian/Ubuntu packages for Solr should NOT be used to install Solr.
 For example, do NOT install the solr or solr-jetty packages.
 
-Download the latest Solr 1.4.x or 3.x release (e.g. 1.4.1 or 3.5.0) from:
+Download the latest Solr 1.4.x or 3.x release (e.g. 1.4.1 or 3.6.1) from:
 http://www.apache.org/dyn/closer.cgi/lucene/solr/
 
 Apache Lucene 3.1, 3.2 or 3.3, have a possible index corruption bug on
-server crash or power loss (LUCENE-3418). Solr 3.4 has a problem
-with SortMissingLast so Solr  3.5.0 is preferred.
+server crash or power loss (LUCENE-3418) and have bugs that interfere
+with the Drupal admin reports. Solr 3.4 has a problem with
+SortMissingLast so Solr 3.5.0 or later is strongly preferred.
 
-Unpack the tarball somewhere not visible to the web (not in your webserver
-docroot and not inside of your Drupal directory).
+Unpack the Solr tarball somewhere not visible to the web (not in your
+webserver docroot and not inside of your Drupal directory).
 
 The Solr download comes with an example application that you can use for
 testing, development, and even for smaller production sites. This
 application is found at apache-solr-1.4.1/example.
 
+You must use 3 Solr configuration files that come with the Drupal
+module or the integration will not work correctly.
+
+For Solr 1.4 use the ones found in:
+solr-conf/solr-1.4/
+
+for Solr 3.5.0 or 3.6.1 use:
+solr-conf/solr-3.x/
+
+While the Solr 1.4 files will work for Solr 3.5+, they are not optimal
+and you will be missing important new features.
+
+For example, when deploying solr 1.4:
+
 Move apache-solr-1.4.1/example/solr/conf/schema.xml and rename it to
-something like schema.bak. Then move the solr-conf/schema.xml that
-comes with this Drupal module to take its place. If you are using
-Solr 3.5 or later, you can use solr-conf/schema-solr3x.xml instead.
+something like schema.bak. Then move the solr-conf/solr-1.4/schema.xml
+that comes with this Drupal module to take its place.
 
 Similarly, move apache-solr-1.4.1/example/solr/conf/solrconfig.xml and rename
-it like solrconfig.bak. Then move the solr-conf/solrconfig.xml that comes
-with this module to take its place.
+it like solrconfig.bak. Then move the solr-conf/solr-1.4/solrconfig.xml
+that comes with this module to take its place.
 
-Finally, move apache-solr-1.4.1/example/solr/conf/protwords.txt and rename
-it like protwords.bak. Then move the solr-conf/protwords.txt that comes
+Finally, move apache-solr-1.4.1/example/solr/conf/protwords.txt and rename it
+protwords.bak. Then move the solr-conf/solr-1.4/protwords.txt that comes
 with this module to take its place.
 
 Make sure that the conf directory includes the following files - the Solr core
@@ -143,6 +160,13 @@ behavior:
 Troubleshooting
 ---------------
 Problem:
+You use http basic auth to limit access to your Solr server.
+
+Solution:
+Set the Server URL to include the username and password like
+http://username:password@example.com:8080/solr
+
+Problem:
 Links to nodes appear in the search results with a different host name or
 subdomain than is preferred.  e.g. sometimes at http://example.com
 and sometimes at http://www.example.com
diff --git a/profiles/acquia/modules/apachesolr/Solr_Base_Query.php b/profiles/acquia/modules/apachesolr/Solr_Base_Query.php
index 95373d6..8451527 100644
--- a/profiles/acquia/modules/apachesolr/Solr_Base_Query.php
+++ b/profiles/acquia/modules/apachesolr/Solr_Base_Query.php
@@ -283,8 +283,9 @@ class SolrBaseQuery extends SolrFilterSubQuery implements DrupalSolrQueryInterfa
   public $page = 0;
 
   /**
-   * @param $env_id
-   *   The environment where you are calling the query from.  Typically the default environment.
+   * @param $name
+   *   The search name, used for finding the correct blocks and other config.
+   *   Typically "apachesolr".
    *
    * @param $solr
    *   An instantiated DrupalApacheSolrService Object.
@@ -444,7 +445,7 @@ class SolrBaseQuery extends SolrFilterSubQuery implements DrupalSolrQueryInterfa
       if (is_array($value)) {
         $value = end($value);
       }
-      $this->params[$name] = trim($value);
+      $this->params[$name] = $this->normalizeParamValue($value);
       return $this;
     }
     // We never actually populate $this->params['fq'].  Instead
@@ -463,15 +464,28 @@ class SolrBaseQuery extends SolrFilterSubQuery implements DrupalSolrQueryInterfa
       $this->params[$name] = array();
     }
 
-    if (is_array($value)) {
-      $this->params[$name] = array_merge($this->params[$name], array_values($value));
+    if (!is_array($value)) {
+      // Convert to array for array_map.
+      $param_values = array($value);
     }
     else {
-      $this->params[$name][] = $value;
+      // Convert to a numerically keyed array.
+      $param_values = array_values($value);
     }
+    $this->params[$name] = array_merge($this->params[$name], array_map(array($this, 'normalizeParamValue'), $param_values));
+
     return $this;
   }
 
+  protected function normalizeParamValue($value) {
+    // Convert boolean to string.
+    if (is_bool($value)) {
+      return $value ? 'true' : 'false';
+    }
+    // Convert to trimmed string.
+    return trim($value);
+  }
+
   public function addParams(Array $params) {
     foreach ($params as $name => $value) {
       $this->addParam($name, $value);
diff --git a/profiles/acquia/modules/apachesolr/apachesolr.admin.inc b/profiles/acquia/modules/apachesolr/apachesolr.admin.inc
index 3cd692a..407febe 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr.admin.inc
+++ b/profiles/acquia/modules/apachesolr/apachesolr.admin.inc
@@ -227,7 +227,7 @@ function apachesolr_environment_edit_validate($form, &$form_state) {
 function apachesolr_environment_edit_submit($form, &$form_state) {
   apachesolr_environment_save($form_state['values']);
   if (!empty($form_state['values']['make_default'])) {
-    variable_set('apachesolr_default_environment', $form_state['values']['env_id']);
+    apachesolr_set_default_environment($form_state['values']['env_id']);
   }
   cache_clear_all('apachesolr:environments', 'cache_apachesolr');
   drupal_set_message(t('The %name search environment has been saved.', array('%name' => $form_state['values']['name'])));
@@ -492,8 +492,11 @@ function apachesolr_status_page($environment = NULL) {
       $status = apachesolr_index_status($environment["env_id"]);
       // We need a schema version greater than beta3. This is mostly to catch
       // people using the Drupal 6 schema.
-      if (version_compare($stats_summary['@schema_version'], 'drupal-3.0-beta3', '<=')) {
-        drupal_set_message(t('Your schema.xml version is too old. You must update it and re-index your content.'), 'error');
+      if (preg_match('/^drupal-[13]/', $stats_summary['@schema_version'])) {
+        $minimum = 'drupal-3.0-beta4';
+        if (version_compare($stats_summary['@schema_version'], $minimum, '<')) {
+          drupal_set_message(t('Your schema.xml version is too old. You must update it to at least %minimum and re-index your content.', array('%minimum' => $minimum)), 'error');
+        }
       }
       $pending_msg = $stats_summary['@pending_docs'] ? t('(@pending_docs sent but not yet processed)', $stats_summary) : '';
       $index_msg = $stats_summary['@index_size'] ? t('(@index_size on disk)', $stats_summary) : '';
@@ -502,26 +505,29 @@ function apachesolr_status_page($environment = NULL) {
         '!pending' => $pending_msg,
         '!index_msg' => $index_msg,
       ));
-      $messages[] = array('Indexed', $indexed_message);
+      $messages[] = array(t('Indexed'), $indexed_message);
 
       $remaining_message = t('@items (@percentage% has been sent to the server)', array(
           '@items' => format_plural($status['remaining'], t('1 item'), t('@count items')),
           '@percentage' => ((int)min(100, 100 * ($status['total'] - $status['remaining']) / max(1, $status['total']))),
         )
       );
-      $messages[] = array('Remaining', $remaining_message);
+      $messages[] = array(t('Remaining'), $remaining_message);
 
-      $messages[] = array('Schema', t('@schema_version', $stats_summary));
+      $messages[] = array(t('Schema'), t('@schema_version', $stats_summary));
       if (!empty($stats_summary['@core_name'])) {
-        $messages[] = array('Solr Core Name', t('@core_name', $stats_summary));
+        $messages[] = array(t('Solr Core Name'), t('@core_name', $stats_summary));
       }
-      $messages[] = array('Delay', t('@autocommit_time before updates are processed.', $stats_summary));
-      $messages[] = array('Pending Deletions', t('@deletes_total', $stats_summary));
+      $messages[] = array(t('Delay'), t('@autocommit_time before updates are processed.', $stats_summary));
+      $messages[] = array(t('Pending Deletions'), t('@deletes_total', $stats_summary));
     }
     catch (Exception $e) {
       watchdog('Apache Solr', nl2br(check_plain($e->getMessage())), NULL, WATCHDOG_ERROR);
     }
   }
+  if (empty($messages)) {
+    $messages[] = array(t('Error'), t('No data was returned from the server. Check your log messages.'));
+  }
   // Initializes output with information about which server's setting we are
   // editing, as it is otherwise not transparent to the end user.
   $output['apachesolr_index_action_status'] = array(
@@ -1046,7 +1052,7 @@ function apachesolr_index_batch_index_finished($success, $results, $operations)
   else {
     // An error occurred. $operations contains the unprocessed operations.
     $error_operation = reset($operations);
-    $message .= ' ' . t('An error occurred while processing @num with arguments :', array('@num' => $error_operation[0])) . print_r($error_operation[0], TRUE);
+    $message .= ' ' . t('An error occurred while processing @num with arguments: @args', array('@num' => $error_operation[0], '@args' => print_r($error_operation[0], TRUE)));
     $type = 'error';
   }
   drupal_set_message($message, $type);
@@ -1123,7 +1129,7 @@ function apachesolr_index_config_form_submit($form, &$form_state) {
       }
     }
     else {
-      drupal_set_message(t('The Apache Solr search engine is not available. Please contact your site administrator.'), 'error');
+      drupal_set_message(t('Search is temporarily unavailable. If the problem persists, please contact the site administrator.'), 'error');
     }
   }
 
diff --git a/profiles/acquia/modules/apachesolr/apachesolr.api.php b/profiles/acquia/modules/apachesolr/apachesolr.api.php
index f0e9c96..4851434 100755
--- a/profiles/acquia/modules/apachesolr/apachesolr.api.php
+++ b/profiles/acquia/modules/apachesolr/apachesolr.api.php
@@ -4,6 +4,16 @@
  *   Exposed Hooks in 7.x:
  */
 
+/**
+ * Lets modules know when the default environment is changed.
+ */
+function hook_apachesolr_default_environment($env_id, $old_env_id) {
+  $page = apachesolr_search_page_load('core_search');
+  if ($page && $page['env_id'] != $env_id) {
+    $page['env_id'] = $env_id;
+    apachesolr_search_page_save($page);
+  }
+}
 
 /**
  * Add index mappings for Field API types. The default mappings array
@@ -172,7 +182,13 @@ function hook_apachesolr_field_name_map_alter(&$map) {
  *   An object implementing DrupalSolrQueryInterface. No need for &.
  */
 function hook_apachesolr_query_alter($query) {
-  // I only want to see articles by the admin!
+  // I only want to see articles by the admin.
+  //
+  // NOTE: this "is_uid" filter does NOT refer to the English word "is"
+  // It is a combination of flags representing Integer-Single, which is
+  // abbreviated with the letters i and s.
+  //
+  // @see the <dynamicField> definitions in schema.xml or schema-solr3.xml
   $query->addFilter("is_uid", 1);
 
   // Only search titles.
@@ -243,7 +259,7 @@ function hook_apachesolr_ENTITY_TYPE_exclude($entity_id, $row, $env_id) {
 /**
  * Add information to index other entities.
  * There are some modules in http://drupal.org that can give a good example of
- * custom entity indexing such as apachesolr_user_indexer, apachesolr_term
+ * custom entity indexing such as apachesolr_user, apachesolr_term
  *
  * @param array $entity_info
  */
@@ -391,4 +407,4 @@ function hook_apachesolr_index_document_build_ENTITY_TYPE(ApacheSolrDocument $do
  */
 function hook_apachesolr_index_documents_alter(array &$documents, $entity, $entity_type, $env_id) {
   // Do whatever altering you need here
-}
\ No newline at end of file
+}
diff --git a/profiles/acquia/modules/apachesolr/apachesolr.index.inc b/profiles/acquia/modules/apachesolr/apachesolr.index.inc
index 655ee89..6cae64a 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr.index.inc
+++ b/profiles/acquia/modules/apachesolr/apachesolr.index.inc
@@ -2,12 +2,36 @@
 
 /**
  * @file
- *   Functions used when indexing content to Apache Solr.
+ * Functions related to Apache Solr indexing operations.
  */
 
-
 /**
- * Send up to $limit entities of each type into the index.
+ * Processes all index queues associated with the passed environment.
+ *
+ * An environment usually indexes one or more entity types. Each entity type
+ * stores its queue in a database table that is defined in the entity type's
+ * info array. This function processes N number of items in each queue table,
+ * where N is the limit passed as the second argument.
+ *
+ * The indexing routine allows developers to selectively bypass indexing on a
+ * per-entity basis by implementing the following hooks:
+ * - hook_apachesolr_exclude()
+ * - hook_apachesolr_ENTITY_TYPE_exclude()
+ *
+ * @param string $env_id
+ *   The machine name of the environment.
+ * @param int $limit
+ *   The number of items to process per queue table. For example, if there are
+ *   two entities that are being indexed in this environment and they each have
+ *   their own queue table, setting a limit of 50 will send a maximum number of
+ *   100 documents to the Apache Solr server.
+ *
+ * @return int
+ *   The total numer of documents sent to the Apache Solr server for indexing.
+ *
+ * @see apachesolr_index_get_entities_to_index()
+ * @see apachesolr_index_entity_to_documents()
+ * @see apachesolr_index_send_to_solr()
  */
 function apachesolr_index_entities($env_id, $limit) {
   $documents_submitted = 0;
@@ -16,31 +40,8 @@ function apachesolr_index_entities($env_id, $limit) {
     $rows = apachesolr_index_get_entities_to_index($env_id, $entity_type, $limit);
     $documents = array();
     foreach ($rows as $row) {
-      if (!empty($row->status)) {
-        // Let any module exclude this entity from the index.
-        $build_document = TRUE;
-        foreach (module_implements('apachesolr_exclude') as $module) {
-          $exclude = module_invoke($module, 'apachesolr_exclude', $row->entity_id, $entity_type, $row, $env_id);
-          // If the hook returns TRUE we should exclude the entity
-          if (!empty($exclude)) {
-            $build_document = FALSE;
-          }
-        }
-        foreach (module_implements('apachesolr_' . $entity_type . '_exclude') as $module) {
-          $exclude = module_invoke($module, 'apachesolr_' . $entity_type . '_exclude', $row->entity_id, $row, $env_id);
-          // If the hook returns TRUE we should exclude the entity
-          if (!empty($exclude)) {
-            $build_document = FALSE;
-          }
-        }
-        if ($build_document) {
-          $documents = array_merge($documents, apachesolr_index_entity_to_documents($row, $env_id));
-        }
-      }
-      else {
-        // Delete the entity from our index if the status callback returned 0
-        apachesolr_remove_entity($env_id, $row->entity_type, $row->entity_id);
-      }
+      $row_documents = apachesolr_index_entities_document($row, $entity_type, $env_id);
+      $documents = array_merge($documents, $row_documents);
     }
 
     $indexed = apachesolr_index_send_to_solr($env_id, $documents);
@@ -66,8 +67,50 @@ function apachesolr_index_entities($env_id, $limit) {
   return $documents_submitted;
 }
 
+function apachesolr_index_entities_document($row, $entity_type, $env_id) {
+  $documents = array();
+  if (!empty($row->status)) {
+    // Let any module exclude this entity from the index.
+    $build_document = TRUE;
+    foreach (module_implements('apachesolr_exclude') as $module) {
+      $exclude = module_invoke($module, 'apachesolr_exclude', $row->entity_id, $entity_type, $row, $env_id);
+      // If the hook returns TRUE we should exclude the entity
+      if (!empty($exclude)) {
+        $build_document = FALSE;
+      }
+    }
+    foreach (module_implements('apachesolr_' . $entity_type . '_exclude') as $module) {
+      $exclude = module_invoke($module, 'apachesolr_' . $entity_type . '_exclude', $row->entity_id, $row, $env_id);
+      // If the hook returns TRUE we should exclude the entity
+      if (!empty($exclude)) {
+        $build_document = FALSE;
+      }
+    }
+    if ($build_document) {
+      $documents = array_merge($documents, apachesolr_index_entity_to_documents($row, $env_id));
+    }
+  }
+  else {
+    // Delete the entity from our index if the status callback returned 0
+    apachesolr_remove_entity($env_id, $row->entity_type, $row->entity_id);
+  }
+  return $documents;
+}
 /**
- * Helper function for modules implementing hook_search's 'status' op.
+ * Returns the total number of documents that are able to be indexed and the
+ * number of documents left to be indexed.
+ *
+ * This is a helper function for modules that implement hook_search_status().
+ *
+ * @param string $env_id
+ *   The machine name of the environment.
+ *
+ * @return array
+ *   An associative array with the key-value pairs:
+ *   - remaining: The number of items left to index.
+ *   - total: The total number of items to index.
+ *
+ * @see hook_search_status()
  */
 function apachesolr_index_status($env_id) {
   $remaining = 0;
@@ -90,6 +133,7 @@ function apachesolr_index_status($env_id) {
     // that we get a definitive order.
     $query = db_select($table, 'aie')
       ->condition('aie.bundle', $bundles)
+      ->condition('aie.status', 1)
       ->condition(db_or()
         ->condition('aie.changed', $last_changed, '>')
         ->condition(db_and()
@@ -108,10 +152,43 @@ function apachesolr_index_status($env_id) {
 }
 
 /**
- * Worker callback for apachesolr_index_entities.
+ * Worker callback for apachesolr_index_entities().
+ *
+ * Loads and proccesses the entity queued for indexing and converts into one or
+ * more documents that are sent to the Apache Solr server for indexing.
+ *
+ * The entity is loaded as the user specified in the "apachesolr_index_user"
+ * system variable in order to prevent sentive data from being indexed and
+ * displayed to underprivileged users in search results. The index user defaults
+ * to a user ID of "0", which is the anonymous user.
+ *
+ * After the entity is loaded, it is converted to an array via the callback
+ * specified in the entity type's info array. The array that the entity is
+ * converted to is the model of the document sent to the Apache Solr server for
+ * indexing. This function allows develoeprs to modify the document by
+ * implementing the following hooks:
+ * - apachesolr_index_document_build()
+ * - apachesolr_index_document_build_ENTITY_TYPE()
+ * - apachesolr_index_documents_alter()
+ *
+ * @param stdClass $item
+ *   The data returned by the queue table containing:
+ *   - entity_id: An integer containing the unique identifier of the entity, for
+ *     example a node ID or comment ID.
+ *   - entity_type: The unique identifier for the entity, i.e. "node", "file".
+ *   - bundle: The machine-readable name of the bundle the passed entity is
+ *     associated with.
+ *   - status: The "published" status of the entity. The status will also be set
+ *     to "0" when entity is deleted but the Apache Solr server is unavailable.
+ *   - changed: A timestamp flagging when the entity was last modified.
+ * @param string $env_id
+ *   The machine name of the environment.
+ *
+ * @return array
+ *   An associative array of documents that are sent to the Apache Solr server
+ *   for indexing.
  *
  * @see apachesolr_index_nodes() for the old-skool version.
- * @return array of documents that need to be sent to the index of solr
  */
 function apachesolr_index_entity_to_documents($item, $env_id) {
 
@@ -255,7 +332,7 @@ function apachesolr_index_send_to_solr($env_id, $documents) {
  *
  * $text must be stripped of control characters before hand.
  */
-function apachesolr_index_add_tags_to_document(&$document, $text) {
+function apachesolr_index_add_tags_to_document($document, $text) {
   $tags_to_index = variable_get('apachesolr_tags_to_index', array(
     'h1' => 'tags_h1',
     'h2' => 'tags_h2_h3',
@@ -305,8 +382,16 @@ function _apachesolr_index_process_entity_get_document($entity, $entity_type) {
 
   $document = new ApacheSolrDocument();
 
+  // Define our url options in advance. This differs depending on the
+  // language
+  $languages = language_list();
+  $url_options = array('absolute' => TRUE);
+  if (isset($entity->language) && isset($languages[$entity->language])) {
+    $url_options = $url_options + array('language' => $languages[$entity->language]);
+  }
+
   $document->id = apachesolr_document_id($entity_id, $entity_type);
-  $document->site = url(NULL, array('absolute' => TRUE));
+  $document->site = url(NULL, $url_options);
   $document->hash = apachesolr_site_hash();
 
   $document->entity_id = $entity_id;
@@ -314,12 +399,6 @@ function _apachesolr_index_process_entity_get_document($entity, $entity_type) {
   $document->bundle = $bundle;
   $document->bundle_name = entity_bundle_label($entity_type, $bundle);
 
-  $path = entity_uri($entity_type, $entity);
-  // A path is not a requirement of an entity
-  if (!empty($path)) {
-    $document->path = $path['path'];
-    $document->url = url($path['path'], $path['options'] + array('absolute' => TRUE));
-  }
   if (empty($entity->language)) {
     // 'und' is the language-neutral code in Drupal 7.
     $document->language = LANGUAGE_NONE;
@@ -328,14 +407,20 @@ function _apachesolr_index_process_entity_get_document($entity, $entity_type) {
     $document->language = $entity->language;
   }
 
-  // Path aliases can have important information about the content.
-  // Add them to the index as well.
-  if (function_exists('drupal_get_path_alias')) {
-    // Add any path alias to the index, looking first for language specific
-    // aliases but using language neutral aliases otherwise.
-    $output = drupal_get_path_alias($document->path, $document->language);
-    if ($output && $output != $document->path) {
-      $document->path_alias = $output;
+  $path = entity_uri($entity_type, $entity);
+  // A path is not a requirement of an entity
+  if (!empty($path)) {
+    $document->path = $path['path'];
+    $document->url = url($path['path'], $path['options'] + $url_options);
+    // Path aliases can have important information about the content.
+    // Add them to the index as well.
+    if (function_exists('drupal_get_path_alias')) {
+      // Add any path alias to the index, looking first for language specific
+      // aliases but using language neutral aliases otherwise.
+      $output = drupal_get_path_alias($document->path, $document->language);
+      if ($output && $output != $document->path) {
+        $document->path_alias = $output;
+      }
     }
   }
   return $document;
@@ -531,7 +616,6 @@ function apachesolr_index_mark_for_reindex($env_id, $entity_type = NULL) {
   cache_clear_all('*', 'cache_apachesolr', TRUE);
 }
 
-
 /**
  * Sets what bundles on the specified entity type should be indexed.
  *
diff --git a/profiles/acquia/modules/apachesolr/apachesolr.info b/profiles/acquia/modules/apachesolr/apachesolr.info
index 4b5e052..8dd5da5 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr.info
+++ b/profiles/acquia/modules/apachesolr/apachesolr.info
@@ -16,6 +16,7 @@ files[] = plugins/facetapi/adapter.inc
 files[] = plugins/facetapi/query_type_date.inc
 files[] = plugins/facetapi/query_type_term.inc
 files[] = plugins/facetapi/query_type_numeric_range.inc
+files[] = plugins/facetapi/query_type_geo.inc
 files[] = tests/Dummy_Solr.php
 files[] = tests/apachesolr_base.test
 files[] = tests/solr_index_and_search.test
@@ -23,11 +24,11 @@ files[] = tests/solr_base_query.test
 files[] = tests/solr_base_subquery.test
 files[] = tests/solr_document.test
 
-; Information added by drupal.org packaging script on 2012-08-10
-version = "7.x-1.0-rc3"
+; Information added by drupal.org packaging script on 2012-10-16
+version = "7.x-1.1"
 core = "7.x"
 project = "apachesolr"
-datestamp = "1344627704"
+datestamp = "1350356169"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/apachesolr/apachesolr.interface.inc b/profiles/acquia/modules/apachesolr/apachesolr.interface.inc
index fb45c31..a13fa8d 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr.interface.inc
+++ b/profiles/acquia/modules/apachesolr/apachesolr.interface.inc
@@ -311,3 +311,203 @@ interface DrupalSolrQueryInterface {
   function solr($method);
 }
 
+/**
+ * The interface for all 'Service' objects.
+ */
+interface DrupalApacheSolrServiceInterface {
+  /**
+   * Call the /admin/ping servlet, to test the connection to the server.
+   *
+   * @param $timeout
+   *   maximum time to wait for ping in seconds, -1 for unlimited (default 2).
+   * @return
+   *   (float) seconds taken to ping the server, FALSE if timeout occurs.
+   */
+  function ping($timeout = 2);
+
+  /**
+   * Get information about the Solr Core.
+   *
+   * @return
+   *   (string) system info encoded in json
+   */
+  function getSystemInfo();
+
+  /**
+   * Get just the field meta-data about the index.
+   */
+  function getFields($num_terms = 0);
+
+  /**
+   * Get meta-data about the index.
+   */
+  function getLuke($num_terms = 0);
+
+  /**
+   * Get information about the Solr Core.
+   *
+   * Returns a Simple XMl document
+   */
+  function getStats();
+
+  /**
+   * Get summary information about the Solr Core.
+   */
+  function getStatsSummary();
+
+  /**
+   * Clear cached Solr data.
+   */
+  function clearCache();
+
+  /**
+   * Constructor
+   *
+   * @param $url
+   *   The URL to the Solr server, possibly including a core name.  E.g. http://localhost:8983/solr/
+   *   or https://search.example.com/solr/core99/
+   * @param $env_id
+   *   The machine name of a corresponding saved configuration used for loading
+   *   data like which facets are enabled.
+   */
+  function __construct($url, $env_id = NULL);
+
+  function getId();
+
+  /**
+   * Make a request to a servlet (a path) that's not a standard path.
+   *
+   * @param string $servlet
+   *   A path to be added to the base Solr path. e.g. 'extract/tika'
+   *
+   * @param array $params
+   *   Any request parameters when constructing the URL.
+   *
+   * @param array $options
+   *  @see drupal_http_request() $options.
+   *
+   * @return
+   *  response object
+   *
+   * @thows Exception
+   */
+  function makeServletRequest($servlet, $params = array(), $options = array());
+
+  /**
+   * Get the Solr url
+   *
+   * @return string
+   */
+  function getUrl();
+
+  /**
+   * Set the Solr url.
+   *
+   * @param $url
+   *
+   * @return $this
+   */
+  function setUrl($url);
+
+  /**
+   * Raw update Method. Takes a raw post body and sends it to the update service. Post body
+   * should be a complete and well formed xml document.
+   *
+   * @param string $rawPost
+   * @param float $timeout Maximum expected duration (in seconds)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function update($rawPost, $timeout = FALSE);
+
+  /**
+   * Add an array of Solr Documents to the index all at once
+   *
+   * @param array $documents Should be an array of ApacheSolrDocument instances
+   * @param boolean $allowDups
+   * @param boolean $overwritePending
+   * @param boolean $overwriteCommitted
+   *
+   * @return response objecte
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function addDocuments($documents, $overwrite = NULL, $commitWithin = NULL);
+
+  /**
+   * Send a commit command.  Will be synchronous unless both wait parameters are set to false.
+   *
+   * @param boolean $optimize Defaults to true
+   * @param boolean $waitFlush Defaults to true
+   * @param boolean $waitSearcher Defaults to true
+   * @param float $timeout Maximum expected duration (in seconds) of the commit operation on the server (otherwise, will throw a communication exception). Defaults to 1 hour
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function commit($optimize = true, $waitFlush = true, $waitSearcher = true, $timeout = 3600);
+
+  /**
+   * Create a delete document based on document ID
+   *
+   * @param string $id Expected to be utf-8 encoded
+   * @param float $timeout Maximum expected duration of the delete operation on the server (otherwise, will throw a communication exception)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function deleteById($id, $timeout = 3600);
+
+  /**
+   * Create and post a delete document based on multiple document IDs.
+   *
+   * @param array $ids Expected to be utf-8 encoded strings
+   * @param float $timeout Maximum expected duration of the delete operation on the server (otherwise, will throw a communication exception)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function deleteByMultipleIds($ids, $timeout = 3600);
+
+  /**
+   * Create a delete document based on a query and submit it
+   *
+   * @param string $rawQuery Expected to be utf-8 encoded
+   * @param float $timeout Maximum expected duration of the delete operation on the server (otherwise, will throw a communication exception)
+   * @return stdClass response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function deleteByQuery($rawQuery, $timeout = 3600);
+
+  /**
+   * Send an optimize command.  Will be synchronous unless both wait parameters are set
+   * to false.
+   *
+   * @param boolean $waitFlush
+   * @param boolean $waitSearcher
+   * @param float $timeout Maximum expected duration of the commit operation on the server (otherwise, will throw a communication exception)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function optimize($waitFlush = true, $waitSearcher = true, $timeout = 3600);
+
+  /**
+   * Simple Search interface
+   *
+   * @param string $query The raw query string
+   * @param array $params key / value pairs for other query parameters (see Solr documentation), use arrays for parameter keys used more than once (e.g. facet.field)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function search($query = '', array $params = array(), $method = 'GET');
+}
diff --git a/profiles/acquia/modules/apachesolr/apachesolr.module b/profiles/acquia/modules/apachesolr/apachesolr.module
index dbcf67a..0e6266f 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr.module
+++ b/profiles/acquia/modules/apachesolr/apachesolr.module
@@ -318,6 +318,12 @@ function apachesolr_facetapi_query_types() {
         'adapter' => 'apachesolr',
       ),
     ),
+    'apachesolr_geo' => array(
+      'handler' => array(
+        'class' => 'ApacheSolrFacetapiGeo',
+        'adapter' => 'apachesolr',
+      ),
+    ),
   );
 }
 
@@ -479,7 +485,7 @@ function apachesolr_failure($search_name, $querystring) {
 
   switch ($fail_rule) {
     case 'apachesolr:show_error':
-      drupal_set_message(t('The Apache Solr search engine is not available. Please contact your site administrator.'), 'error');
+      drupal_set_message(t('Search is temporarily unavailable. If the problem persists, please contact the site administrator.'), 'error');
       break;
     case 'apachesolr:show_no_results':
       // Do nothing.
@@ -671,10 +677,11 @@ function apachesolr_node_type_delete($info) {
   if (!empty($callback)) {
     call_user_func($callback, $env_id, $existing_bundles, $new_bundles);
   }
+  apachesolr_environments_clear_cache();
 }
 
 /**
- * Implements of hook_node_type_update().
+ * Implements hook_node_type_update().
  *
  * @see http://drupal.org/node/592522
  *   Performance issue with Mysql
@@ -706,6 +713,36 @@ function apachesolr_node_type_update($info) {
           ->fields(array('changed' => REQUEST_TIME))
           ->execute();
     }
+    db_update('apachesolr_index_bundles')
+      ->condition('bundle', $info->old_type)
+      ->condition('entity_type', 'node')
+      ->fields(array('bundle' => $info->type))
+      ->execute();
+    apachesolr_environments_clear_cache();
+  }
+}
+
+/**
+ * Implements hook_node_type_insert().
+ *
+ * Insert our new type into all the environments as indexable bundle type
+ * @param array $info
+ */
+function apachesolr_node_type_insert($info) {
+  module_load_include('inc', 'apachesolr', 'apachesolr.index');
+  // Get all our environments
+  $envs = apachesolr_load_all_environments();
+  $bundles = array();
+  foreach($envs as $env) {
+    if (isset($env['index_bundles']['node'])) {
+      $bundles = $env['index_bundles']['node'];
+    }
+    // Is the bundle already marked?
+    if (!in_array($info->type, $bundles)) {
+      $bundles[] = $info->type;
+      // Set the new bundle as indexable for all environments
+      apachesolr_index_set_bundles($env['env_id'], 'node', $bundles);
+    }
   }
 }
 
@@ -1025,6 +1062,15 @@ function apachesolr_default_environment($env_id = NULL) {
 }
 
 /**
+ * Set the default environment and let other modules know about the change.
+ */
+function apachesolr_set_default_environment($env_id) {
+  $old_env_id = variable_get('apachesolr_default_environment', 'solr');
+  variable_set('apachesolr_default_environment', $env_id);
+  module_invoke_all('apachesolr_default_environment', $env_id, $old_env_id);
+}
+
+/**
  * Factory method for solr singleton objects. Structure allows for an arbitrary
  * number of solr objects to be used based on a name whie maps to
  * the host, port, path combination.
@@ -1042,6 +1088,10 @@ function apachesolr_get_solr($env_id = NULL) {
   $solr_cache = &drupal_static(__FUNCTION__);
   $environments = apachesolr_load_all_environments();
 
+  if (!interface_exists('DrupalApacheSolrServiceInterface')) {
+    require_once(dirname(__FILE__) . '/apachesolr.interface.inc');
+  }
+
   if (empty($env_id)) {
     $env_id = apachesolr_default_environment();
   }
@@ -1077,14 +1127,6 @@ function apachesolr_get_solr($env_id = NULL) {
 function apachesolr_load_all_environments() {
   $environments = &drupal_static(__FUNCTION__);
 
-  // Sometimes this function is called when the 'apachesolr_index_bundles' is
-  // not created yet.
-  if (!db_table_exists('apachesolr_index_bundles')) {
-    return array();
-  }
-  if (!db_table_exists('apachesolr_environment')) {
-    return array();
-  }
   if (isset($environments)) {
     return $environments;
   }
@@ -1093,8 +1135,13 @@ function apachesolr_load_all_environments() {
   if (isset($cache->data)) {
     $environments = $cache->data;
   }
+  elseif (!db_table_exists('apachesolr_index_bundles') || !db_table_exists('apachesolr_environment')) {
+    // Sometimes this function is called when the 'apachesolr_index_bundles' is
+    // not created yet.
+    $environments = array();
+  }
   else {
-    // If ctools is available use it's crud functions to load the environments.
+    // If ctools is available use its crud functions to load the environments.
     if (module_exists('ctools')) {
       ctools_include('export');
       $environments = ctools_export_load_object('apachesolr_environment', 'all');
@@ -1111,14 +1158,15 @@ function apachesolr_load_all_environments() {
     // of ctools export API.
     apachesolr_environment_load_subrecords($environments);
 
-    // Allow overrides of environments from settings.php
-    $conf_environments = variable_get('apachesolr_environments', array());
-    if (!empty($conf_environments)) {
-      $environments = drupal_array_merge_deep($environments, $conf_environments);
-    }
-
     cache_set('apachesolr:environments', $environments, 'cache_apachesolr');
   }
+
+  // Allow overrides of environments from settings.php
+  $conf_environments = variable_get('apachesolr_environments', array());
+  if (!empty($conf_environments)) {
+    $environments = drupal_array_merge_deep($environments, $conf_environments);
+  }
+
   return $environments;
 }
 
@@ -1173,10 +1221,7 @@ function apachesolr_environment_delete($env_id) {
       ->execute();
 
     module_invoke_all('apachesolr_environment_delete', $environment);
-
-    cache_clear_all('apachesolr:environments', 'cache_apachesolr');
-    drupal_static_reset('apachesolr_load_all_environments');
-    drupal_static_reset('apachesolr_get_solr');
+    apachesolr_environments_clear_cache();
   }
 }
 
@@ -1188,33 +1233,11 @@ function apachesolr_environment_delete($env_id) {
  *
  */
 function apachesolr_environment_clone($env_id) {
-
-  $default = array('env_id' => NULL, 'name' => '', 'url' => '', 'service_class' => '');
   $environment = apachesolr_environment_load($env_id);
-  $conf = isset($environment['conf']) ? $environment['conf'] : array();
-
-  //get all environments
   $environments = apachesolr_load_all_environments();
-  $new_env_id = apachesolr_create_unique_id($environments, $env_id);
-  $environment['env_id'] = $new_env_id;
+  $environment['env_id'] = apachesolr_create_unique_id($environments, $env_id);
   $environment['name'] = $environment['name'] . ' [cloned]';
-
-  // Remove any unexpected fields.
-  // @todo - get this from the schema?.
-  $environment = array_intersect_key($environment, $default);
-  db_insert('apachesolr_environment')
-      ->fields($environment)
-      ->execute();
-  // Update the environment variables (if any).
-  foreach ($conf as $name => $value) {
-    db_merge('apachesolr_environment_variable')
-      ->key(array('env_id' => $environment['env_id'], 'name' => $name))
-      ->fields(array('value' => serialize($value)))
-      ->execute();
-  }
-  cache_clear_all('apachesolr:environments', 'cache_apachesolr');
-  drupal_static_reset('apachesolr_load_all_environments');
-  drupal_static_reset('apachesolr_get_solr');
+  apachesolr_environment_save($environment);
 }
 
 /**
@@ -1246,34 +1269,18 @@ function apachesolr_create_unique_id($existing, $id) {
  *
  */
 function apachesolr_environment_save($environment) {
-  $default = array('env_id' => NULL, 'name' => '', 'url' => '', 'service_class' => '');
-
-  $old_environment = apachesolr_environment_load($environment['env_id']);
-  $is_new = FALSE;
-  if (!$old_environment || isset($old_environment['in_code_only'])) {
-    $is_new = TRUE;
-  }
-  // No need to save if there are no changes
-  if ($old_environment == $environment) {
-    // No need to do anything
-    return;
-  }
+  module_load_include('inc', 'apachesolr', 'apachesolr.index');
+  $default = array('env_id' => '', 'name' => '', 'url' => '', 'service_class' => '');
 
   $conf = isset($environment['conf']) ? $environment['conf'] : array();
+  $index_bundles = isset($environment['index_bundles']) ? $environment['index_bundles'] : array();
   // Remove any unexpected fields.
   // @todo - get this from the schema?.
   $environment = array_intersect_key($environment, $default);
-  if ($is_new) {
-    db_insert('apachesolr_environment')
-      ->fields($environment)
-      ->execute();
-  }
-  else {
-    db_update('apachesolr_environment')
-      ->fields($environment)
-      ->condition('env_id', $environment['env_id'])
-      ->execute();
-  }
+  db_merge('apachesolr_environment')
+    ->key(array('env_id' => $environment['env_id']))
+    ->fields($environment)
+    ->execute();
   // Update the environment variables (if any).
   foreach ($conf as $name => $value) {
     db_merge('apachesolr_environment_variable')
@@ -1281,9 +1288,24 @@ function apachesolr_environment_save($environment) {
       ->fields(array('value' => serialize($value)))
       ->execute();
   }
+  // Update the index bundles (if any).
+  foreach ($index_bundles as $entity_type => $bundles) {
+    apachesolr_index_set_bundles($environment['env_id'], $entity_type, $bundles);
+  }
+  apachesolr_environments_clear_cache();
+}
+
+/**
+ * Clear all caches for environments.
+ */
+function apachesolr_environments_clear_cache() {
   cache_clear_all('apachesolr:environments', 'cache_apachesolr');
   drupal_static_reset('apachesolr_load_all_environments');
   drupal_static_reset('apachesolr_get_solr');
+  if (module_exists('ctools')) {
+    ctools_include('export');
+    ctools_export_load_object_reset('apachesolr_environment');
+  }
 }
 
 /**
@@ -1309,9 +1331,7 @@ function apachesolr_environment_variable_set($env_id, $name, $value) {
     ->key(array('env_id' => $env_id, 'name' => $name))
     ->fields(array('value' => serialize($value)))
     ->execute();
-  cache_clear_all('apachesolr:environments', 'cache_apachesolr');
-  drupal_static_reset('apachesolr_load_all_environments');
-  drupal_static_reset('apachesolr_get_solr');
+  apachesolr_environments_clear_cache();
 }
 
 /**
@@ -1324,9 +1344,7 @@ function apachesolr_environment_variable_del($env_id, $name) {
     ->condition('env_id', $env_id)
     ->condition('name', $name)
     ->execute();
-  cache_clear_all('apachesolr:environments', 'cache_apachesolr');
-  drupal_static_reset('apachesolr_load_all_environments');
-  drupal_static_reset('apachesolr_get_solr');
+  apachesolr_environments_clear_cache();
 }
 
 /**
@@ -1337,6 +1355,10 @@ function apachesolr_environment_variable_del($env_id, $name) {
 function apachesolr_server_status($url, $class = NULL) {
   $status = &drupal_static(__FUNCTION__, array());
 
+  if (!interface_exists('DrupalApacheSolrServiceInterface')) {
+    require_once(dirname(__FILE__) . '/apachesolr.interface.inc');
+  }
+
   if (empty($class)) {
     $class = variable_get('apachesolr_service_class', 'DrupalApacheSolrService');
   }
@@ -1425,7 +1447,7 @@ function apachesolr_do_query(DrupalSolrQueryInterface $current_query) {
     // A module implementing HOOK_apachesolr_query_alter() aborted the search.
     return array(NULL, array());
   }
-  
+
 
   $keys = $query->getParam('q');
 
@@ -1497,7 +1519,7 @@ function apachesolr_static_response_cache($searcher, $response = NULL) {
  *
  * @throws Exception
  */
-function apachesolr_drupal_query($name, $params = array(), $solrsort = '', $base_path = '', $solr = NULL) {
+function apachesolr_drupal_query($name, array $params = array(), $solrsort = '', $base_path = '', $solr = NULL) {
   if (!interface_exists('DrupalSolrQueryInterface')) {
     require_once(dirname(__FILE__) . '/apachesolr.interface.inc');
   }
@@ -2040,7 +2062,10 @@ function apachesolr_clean_text($text) {
   // Add spaces before stripping tags to avoid running words together.
   $text = filter_xss(str_replace(array('<', '>'), array(' <', '> '), $text), array());
   // Decode entities and then make safe any < or > characters.
-  return htmlspecialchars(html_entity_decode($text, ENT_QUOTES, 'UTF-8'), ENT_QUOTES, 'UTF-8');
+  $text = htmlspecialchars(html_entity_decode($text, ENT_QUOTES, 'UTF-8'), ENT_QUOTES, 'UTF-8');
+  // Remove extra spaces.
+  $text = preg_replace('/\s+/s', ' ', $text);
+  return $text;
 }
 
 /**
@@ -2567,25 +2592,26 @@ function theme_apachesolr_settings_title($vars) {
  * Export callback to load the view subrecords, which are the index bundles.
  */
 function apachesolr_environment_load_subrecords(&$environments) {
-  // This could be called before the schema is installed so it is wise to
-  // Verify this
-  if (db_table_exists('apachesolr_index_bundles')) {
-    $all_index_bundles = db_select('apachesolr_index_bundles', 'ib')
-      ->fields('ib', array('env_id', 'entity_type', 'bundle'))
-      ->condition('env_id', array_keys($environments), 'IN')
-      ->orderBy('env_id')
-      ->orderBy('entity_type')
-      ->orderBy('bundle')
-      ->execute()
-      ->fetchAll(PDO::FETCH_ASSOC);
-
-    $all_index_bundles_keyed = array();
-    foreach ($all_index_bundles as $env_info) {
-      extract($env_info);
-      $all_index_bundles_keyed[$env_id][$entity_type][] = $bundle;
-    }
+  if (empty($environments)) {
+    // Nothing to do.
+    return;
+  }
+
+  $all_index_bundles = db_select('apachesolr_index_bundles', 'ib')
+    ->fields('ib', array('env_id', 'entity_type', 'bundle'))
+    ->condition('env_id', array_keys($environments), 'IN')
+    ->orderBy('env_id')
+    ->orderBy('entity_type')
+    ->orderBy('bundle')
+    ->execute()
+    ->fetchAll(PDO::FETCH_ASSOC);
+
+  $all_index_bundles_keyed = array();
+  foreach ($all_index_bundles as $env_info) {
+    extract($env_info);
+    $all_index_bundles_keyed[$env_id][$entity_type][] = $bundle;
   }
-  
+
   $all_variables = db_select('apachesolr_environment_variable', 'v')
     ->fields('v', array('env_id', 'name', 'value'))
     ->condition('env_id', array_keys($environments), 'IN')
diff --git a/profiles/acquia/modules/apachesolr/apachesolr_access/apachesolr_access.info b/profiles/acquia/modules/apachesolr/apachesolr_access/apachesolr_access.info
index 90af204..1f4b6a5 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr_access/apachesolr_access.info
+++ b/profiles/acquia/modules/apachesolr/apachesolr_access/apachesolr_access.info
@@ -7,11 +7,11 @@ core = 7.x
 files[] = apachesolr_access.module
 files[] = tests/apachesolr_access.test
 
-; Information added by drupal.org packaging script on 2012-08-10
-version = "7.x-1.0-rc3"
+; Information added by drupal.org packaging script on 2012-10-16
+version = "7.x-1.1"
 core = "7.x"
 project = "apachesolr"
-datestamp = "1344627704"
+datestamp = "1350356169"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/apachesolr/apachesolr_access/tests/apachesolr_access.test b/profiles/acquia/modules/apachesolr/apachesolr_access/tests/apachesolr_access.test
index 222a778..99c6765 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr_access/tests/apachesolr_access.test
+++ b/profiles/acquia/modules/apachesolr/apachesolr_access/tests/apachesolr_access.test
@@ -88,19 +88,15 @@ class DrupalApacheSolrNodeAccess extends DrupalWebTestCase {
     $field = 'access_node_' . apachesolr_site_hash() . '_nodeaccess_author';
     $this->assertEqual($document->{$field}[0], $basic_user->uid, 'Solr Document being indexed is restricted by the proper author');
 
-    // Test addition of filters to query.
-    $subquery = apachesolr_access_build_subquery($basic_user);
-
     $expected_criterion = array(
       'access__all' => 0,
       'access_node_' . apachesolr_site_hash() . '_all' => 0,
-      // The node access_test module writes this as of core 7.3.
+      // The node_access_test module writes this as of core 7.3.
       'access_node_' . apachesolr_site_hash() . '_node_access_test_author' => $basic_user->uid,
-      // @todo - we need to check grants provided by node_access_test module.
- //     'access_node_' . apachesolr_site_hash() . '_nodeaccess_rid' => array(2, $assigned_role),
- //     'access_node_' . apachesolr_site_hash() . '_nodeaccess_uid' => $basic_user->uid,
     );
 
+    // Test addition of filters to query.
+    $subquery = apachesolr_access_build_subquery($basic_user);
     $fields = $subquery->getFilters();
 
     foreach ($fields as $field) {
@@ -117,7 +113,7 @@ class DrupalApacheSolrNodeAccess extends DrupalWebTestCase {
 
     $this->assertEqual($expected_criterion, $found_criterion, 'All Criteria was accounted for in fields. If not accounted for, Unaccounted Criteria [' . var_export(array_diff($expected_criterion, $found_criterion), 1) . ']');
     // Run a query through the MLT code to be sure access filters are added.
-    $solr = new DummySolr();
+    $solr = new DummySolr($url = NULL, $env_id);
     $settings = apachesolr_search_mlt_block_defaults();
     // Dummy value
     $id = apachesolr_document_id($author_restricted_node->nid);
diff --git a/profiles/acquia/modules/apachesolr/apachesolr_search.admin.inc b/profiles/acquia/modules/apachesolr/apachesolr_search.admin.inc
index 8919627..ff10ef6 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr_search.admin.inc
+++ b/profiles/acquia/modules/apachesolr/apachesolr_search.admin.inc
@@ -400,7 +400,8 @@ function apachesolr_search_page_settings_form($form, &$form_state, $search_page
 
   $form['actions']['submit'] = array(
     '#type' => 'submit',
-    '#value' => t('Save configuration'),
+    '#redirect' => 'admin/config/search/apachesolr/search-pages',
+    '#value' => t('Save'),
   );
   $form['actions']['submit_edit'] = array(
     '#type' => 'submit',
@@ -511,8 +512,8 @@ function apachesolr_search_page_settings_form_submit($form, &$form_state) {
 
   // Saves our values in the database, sets redirect path on success.
   drupal_set_message(t('The configuration options have been saved for %page.', array('%page' => $form_state['values']['label'])));
-  if ($form_state['values']['op'] == t('Save')) {
-    $form_state['redirect'] = 'admin/config/search/apachesolr/search-pages';
+  if (isset($form_state['clicked_button']['#redirect'])) {
+    $form_state['redirect'] = $form_state['clicked_button']['#redirect'];
   }
   else {
     $form_state['redirect'] = current_path();
diff --git a/profiles/acquia/modules/apachesolr/apachesolr_search.info b/profiles/acquia/modules/apachesolr/apachesolr_search.info
index 240e1f7..b209d5b 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr_search.info
+++ b/profiles/acquia/modules/apachesolr/apachesolr_search.info
@@ -11,11 +11,11 @@ files[] = apachesolr_search.module
 files[] = apachesolr_search.admin.inc
 files[] = apachesolr_search.pages.inc
 
-; Information added by drupal.org packaging script on 2012-08-10
-version = "7.x-1.0-rc3"
+; Information added by drupal.org packaging script on 2012-10-16
+version = "7.x-1.1"
 core = "7.x"
 project = "apachesolr"
-datestamp = "1344627704"
+datestamp = "1350356169"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/apachesolr/apachesolr_search.install b/profiles/acquia/modules/apachesolr/apachesolr_search.install
index c3f4551..ae2c362 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr_search.install
+++ b/profiles/acquia/modules/apachesolr/apachesolr_search.install
@@ -371,3 +371,16 @@ function apachesolr_search_update_7005(&$sandbox) {
       )
     );
 }
+
+/**
+ * Remove all apachesolr_search env variables for show_facets if it is zero
+ */
+function apachesolr_search_update_7006() {
+  $environments = apachesolr_load_all_environments();
+  foreach ($environments as $environment) {
+    $show_facets = apachesolr_environment_variable_get($environment['env_id'], 'apachesolr_search_show_facets', 0);
+    if ($show_facets === 0) {
+      apachesolr_environment_variable_del($environment['env_id'], 'apachesolr_search_show_facets');
+    }
+  }
+}
diff --git a/profiles/acquia/modules/apachesolr/apachesolr_search.module b/profiles/acquia/modules/apachesolr/apachesolr_search.module
index a8eeffb..9cd7399 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr_search.module
+++ b/profiles/acquia/modules/apachesolr/apachesolr_search.module
@@ -13,6 +13,23 @@
  * displayed.
  */
 function apachesolr_search_init() {
+  // Useless without facetapi
+  if (!module_exists('facetapi')) {
+    return;
+  }
+
+  // Using a simple query we will figure out if we have to execute this snippet
+  // on every page or exit as fast as possible.
+  $query = "SELECT count(env_id)
+    FROM {apachesolr_environment_variable}
+    WHERE name = 'apachesolr_search_show_facets'";
+  $count = db_query($query)->fetchField();
+  if ($count == 0) {
+    return;
+  }
+
+  // Load the default search page, we only support facets to link to this
+  // search page due to complexity and slow downs
   $search_page_id = apachesolr_search_default_search_page();
   $search_page = apachesolr_search_page_load($search_page_id);
   // Do not continue if our search page is not valid
@@ -21,31 +38,36 @@ function apachesolr_search_init() {
   }
 
   $show_facets = apachesolr_environment_variable_get($search_page['env_id'], 'apachesolr_search_show_facets', 0);
-  if ($show_facets && module_exists('facetapi')) {
+  if ($show_facets) {
 
     // Converts current path to lowercase for case insensitive matching.
-    $path = drupal_strtolower(drupal_get_path_alias(current_path()));
+    $paths = array();
+    $paths[] = drupal_strtolower(drupal_get_path_alias(current_path()));
+    $paths[] = drupal_strtolower(current_path());
+
     $facet_pages = apachesolr_environment_variable_get($search_page['env_id'], 'apachesolr_search_facet_pages', '');
 
     // Iterates over each environment to check if an empty query should be run.
     if (!empty($facet_pages)) {
       // Compares path with settings, runs query if there is a match.
       $patterns = drupal_strtolower($facet_pages);
-      if (drupal_match_path($path, $patterns)) {
-        try {
-          if (!empty($search_page['search_path'])) {
-            $solr = apachesolr_get_solr($search_page['env_id']);
-            // Initializes params for empty query.
-            $params = array(
-              'spellcheck' => 'false',
-              'fq' => array(),
-              'rows' => 1,
-            );
-            apachesolr_search_run_empty('apachesolr', $params, $search_page['search_path'], $solr);
+      foreach ($paths as $path) {
+        if (drupal_match_path($path, $patterns)) {
+          try {
+            if (!empty($search_page['search_path'])) {
+              $solr = apachesolr_get_solr($search_page['env_id']);
+              // Initializes params for empty query.
+              $params = array(
+                'spellcheck' => 'false',
+                'fq' => array(),
+                'rows' => 1,
+              );
+              apachesolr_search_run_empty('apachesolr', $params, $search_page['search_path'], $solr);
+            }
+          }
+          catch (Exception $e) {
+            watchdog('Apache Solr', nl2br(check_plain($e->getMessage())), NULL, WATCHDOG_ERROR);
           }
-        }
-        catch (Exception $e) {
-          watchdog('Apache Solr', nl2br(check_plain($e->getMessage())), NULL, WATCHDOG_ERROR);
         }
       }
     }
@@ -144,7 +166,7 @@ function apachesolr_search_menu_alter(&$items) {
     $parts = explode('/', $search_page['search_path']);
     $keys_pos = count($parts);
     // Tests whether we are simulating a core search tab.
-    $core_search = ($parts[0] == 'search');    
+    $core_search = ($parts[0] == 'search');
     $position = array_search('%', $parts);
     $page_title = isset($search_page['page_title']) ? $search_page['page_title'] : 'Search Results';
 
@@ -317,6 +339,19 @@ function apachesolr_search_default_search_page($page_id = NULL) {
 }
 
 /**
+ * Implements hook_apachesolr_default_environment()
+ *
+ * Make sure the core search page is using the default environment.
+ */
+function apachesolr_search_apachesolr_default_environment($env_id, $old_env_id) {
+  $page = apachesolr_search_page_load('core_search');
+  if ($page && $page['env_id'] != $env_id) {
+    $page['env_id'] = $env_id;
+    apachesolr_search_page_save($page);
+  }
+}
+
+/**
  * Load a search page
  * @param string $page_id
  * @return array
@@ -516,7 +551,12 @@ function apachesolr_search_block_save($delta = '', $edit = array()) {
  *   Array of all search pages
  */
 function apachesolr_search_load_all_search_pages() {
-  $search_pages = array();
+  $search_pages = &drupal_static(__FUNCTION__, array());
+
+  if (!empty($search_pages)) {
+    return $search_pages;
+  }
+
   // If ctools module is enabled, add search pages from code, e.g. from a
   // feature module.
   if (module_exists('ctools')) {
@@ -532,6 +572,12 @@ function apachesolr_search_load_all_search_pages() {
 
   $search_pages = $search_pages + $search_pages_db;
 
+  // Ensure that the core search page uses the default environment. In some
+  // instances, for example when unit testing, this search page isn't defined.
+  if (isset($search_pages['core_search'])) {
+    $search_pages['core_search']['env_id'] = apachesolr_default_environment();
+  }
+
   // convert settings to an array
   foreach ($search_pages as $id => $search_page) {
     if (is_string($search_pages[$id]['settings'])) {
@@ -724,13 +770,15 @@ function apachesolr_search_search_page($results) {
  *   the search page that is requesting an output
  */
 function apachesolr_search_search_page_custom($results, $search_page, $build = array()) {
-  // Retrieve suggestion
-  $suggestions = apachesolr_search_get_search_suggestions($search_page['env_id']);
-  if ($search_page && !empty($suggestions)) {
-    $build['suggestions'] = array(
-      '#theme' => 'apachesolr_search_suggestions',
-      '#links' => array(l($suggestions[0], $search_page['search_path'] . '/' . $suggestions[0])),
-    );
+  if (!empty($search_page['settings']['apachesolr_search_spellcheck'])) {
+    // Retrieve suggestion
+    $suggestions = apachesolr_search_get_search_suggestions($search_page['env_id']);
+    if ($search_page && !empty($suggestions)) {
+      $build['suggestions'] = array(
+        '#theme' => 'apachesolr_search_suggestions',
+        '#links' => array(l($suggestions[0], $search_page['search_path'] . '/' . $suggestions[0])),
+      );
+    }
   }
   // Retrieve expected results from searching
   if (!empty($results['apachesolr_search_browse'])) {
@@ -879,7 +927,7 @@ function apachesolr_search_conditions_default($search_page) {
   }
 
   // We may also have filters added by facet API module. The 'f'
-  // is determined by constant FacetapiAdapter::FILTER_KEY. Hard
+  // is determined by variable FacetapiUrlProcessor::$filterKey. Hard
   // coded here to avoid extra class loading.
   if (!empty($_GET['f']) && is_array($_GET['f'])) {
     if (module_exists('facetapi')) {
@@ -967,16 +1015,18 @@ function apachesolr_search_run_empty($name, array $params = array(), $base_path
  *   other than the base path of the current request.
  * @param integer $page
  *   For pagination.
- * @param $caller
+ * @param DrupalApacheSolrServiceInterface $solr
+ *   The solr server resource to execute the search on.
  *
  * @return stdClass $response
  *
  * @throws Exception
  */
-function apachesolr_search_run($name, array $params = array(), $solrsort = '', $base_path = '', $page = 0, $solr = NULL) {
+function apachesolr_search_run($name, array $params = array(), $solrsort = '', $base_path = '', $page = 0, DrupalApacheSolrServiceInterface $solr = NULL) {
+  // Merge the default params into the params sent in.
+  $params += apachesolr_search_basic_params();
   // This is the object that knows about the query coming from the user.
   $query = apachesolr_drupal_query($name, $params, $solrsort, $base_path, $solr);
-  apachesolr_search_basic_params($query);
 
   if ($query->getParam('q')) {
     apachesolr_search_add_spellcheck_params($query);
@@ -1011,7 +1061,12 @@ function apachesolr_search_run($name, array $params = array(), $solrsort = '', $
   $env_id = $query->solr('getId');
   apachesolr_has_searched($env_id, TRUE);
   $process_response_callback = apachesolr_environment_variable_get($env_id, 'process_response_callback', 'apachesolr_search_process_response');
-  return call_user_func($process_response_callback, $response, $final_query);
+  if (function_exists($process_response_callback)) {
+    return call_user_func($process_response_callback, $response, $final_query);
+  }
+  else {
+    return apachesolr_search_process_response($response, $final_query);
+  }
 }
 
 function apachesolr_search_basic_params(DrupalSolrQueryInterface $query = NULL) {
@@ -1234,9 +1289,19 @@ function apachesolr_search_process_response($response, DrupalSolrQueryInterface
 
       $fields = (array) $doc;
 
+      // a path is not a requirement of entity (see entity_uri() ), so we check if we
+      // can show it and fallback to the main page of the site if we don't
+      // have it.
+      if (!isset($doc->url)) {
+        $path = '';
+      }
+      else {
+        $path = $doc->url;
+      }
+
       $result = array(
         // link is a required field, so handle it centrally.
-        'link' => url($doc->path, array('absolute' => TRUE)),
+        'link' => $path,
         // template_preprocess_search_result() runs check_plain() on the title
         // again.  Decode to correct the display.
         'title' => htmlspecialchars_decode($doc->label, ENT_QUOTES),
@@ -1302,7 +1367,7 @@ function apachesolr_search_get_search_suggestions($env_id) {
 }
 
 /**
- * Implements hook_entity_info_alter().
+ * Implements hook_apachesolr_entity_info_alter().
  */
 function apachesolr_search_apachesolr_entity_info_alter(&$entity_info) {
   // First set defaults so that we don't need to worry about NULL keys.
@@ -1428,45 +1493,6 @@ function apachesolr_search_form_search_block_form_alter(&$form, $form_state) {
     $form['#submit'][] = 'apachesolr_search_form_search_submit';
   }
 }
-/**
- * Implements hook_form_[form_id]_alter().
- *
- * This adds the retain filters to the search form.
- */
-function apachesolr_search_form_search_form_alter(&$form, $form_state) {
-  if (!empty($form['module']['#value']) && $form['module']['#value'] == 'apachesolr_search') {
-    $form['#submit'][] = 'apachesolr_search_form_search_submit';
-    // No other modification make sense unless a query is active.
-    // Note - this means that the query must always be run before
-    // calling drupal_get_form('search_form').
-    // Load core search page
-    $search_page = apachesolr_search_page_load('core_search');
-    $apachesolr_has_searched = apachesolr_has_searched($search_page['env_id']);
-
-    $searcher = NULL;
-    $fq = NULL;
-    if ($apachesolr_has_searched) {
-      $query = apachesolr_current_query($search_page['env_id']);
-      $searcher = $query->getSearcher();
-      // We use the presence of filter query params as a flag for the retain filters checkbox.
-      $fq = $query->getParam('fq');
-    }
-
-    $form['basic']['apachesolr_search']['#tree'] = TRUE;
-    $form['basic']['apachesolr_search']['get'] = array(
-      '#type' => 'hidden',
-      '#default_value' => json_encode(array_diff_key($_GET, array('q' => 1, 'page' => 1, 'solrsort' => 1, 'retain-filters' => 1))),
-    );
-
-    if ($fq || isset($form_state['input']['apachesolr_search']['retain-filters'])) {
-      $form['basic']['apachesolr_search']['retain-filters'] = array(
-        '#type' => 'checkbox',
-        '#title' => t('Retain current filters'),
-        '#default_value' => (int) isset($_GET['retain-filters']),
-      );
-    }
-  }
-}
 
 /**
  * Default theme function for spelling suggestions.
@@ -1488,18 +1514,9 @@ function theme_apachesolr_search_suggestions($variables) {
  */
 function apachesolr_search_form_search_submit($form, &$form_state) {
   $fv = $form_state['values'];
-
-  if (isset($fv['apachesolr_search'])) {
-    $get = json_decode($fv['apachesolr_search']['get'], TRUE);
-    if (!empty($fv['apachesolr_search']['retain-filters'])) {
-      $get['retain-filters'] = '1';
-      // Add the query values into the redirect.
-      $form_state['redirect'] = array($form_state['redirect'], array('query' => $get));
-    }
-  }
   // Replace keys with their rawurlencoded value
   if (isset($fv['search_block_form'])) {
-    $raw_keys = rawurlencode($fv['search_block_form']);
+    $raw_keys = str_replace("/","%2f",$fv['search_block_form']);
     $form_state['redirect'] = str_replace($fv['search_block_form'], $raw_keys, $form_state['redirect']);
   }
 }
@@ -1574,7 +1591,15 @@ function apachesolr_search_facetapi_realm_settings_form_submit(&$form, &$form_st
   // Adds the settings to the array keyed by environment ID, saves variables.
   $show_facets = $form_state['values']['apachesolr_search_show_facets'];
   $facet_pages = $form_state['values']['apachesolr_search_facet_pages'];
-  apachesolr_environment_variable_set($env_id, 'apachesolr_search_show_facets', $show_facets);
+  if ($show_facets) {
+    apachesolr_environment_variable_set($env_id, 'apachesolr_search_show_facets', $show_facets);
+  }
+  else {
+    // Due to performance reasons, we delete it from the vars so that our init
+    // process can react on environments that hae it set and not unset.
+    // See apachesolr_search_init().
+    apachesolr_environment_variable_del($env_id, 'apachesolr_search_show_facets');
+  }
   apachesolr_environment_variable_set($env_id, 'apachesolr_search_facet_pages', $facet_pages);
 }
 
diff --git a/profiles/acquia/modules/apachesolr/apachesolr_search.pages.inc b/profiles/acquia/modules/apachesolr/apachesolr_search.pages.inc
index f462e08..3d6d22c 100644
--- a/profiles/acquia/modules/apachesolr/apachesolr_search.pages.inc
+++ b/profiles/acquia/modules/apachesolr/apachesolr_search.pages.inc
@@ -104,6 +104,8 @@ function apachesolr_search_custom_page_search_form_submit(&$form, &$form_state)
   if (strlen($form_state['values']['keys'])) {
     $redirect .= '/' . $redirect_value;
   }
+
+  $get = array();
   if (isset($form_state['values']['get'])) {
     $get = json_decode($form_state['values']['get'], TRUE);
   }
@@ -112,8 +114,15 @@ function apachesolr_search_custom_page_search_form_submit(&$form, &$form_state)
     $get['retain-filters'] = '1';
   }
   else {
-    $get = array();
+    // Remove all filters
+    if (!empty($search_page['settings']['apachesolr_search_allow_user_input'])) {
+      unset($get['fq']);
+    }
+    if (module_exists('facetapi')) {
+      unset($get['f']);
+    }
   }
+
   // Add the query values into the redirect.
   $form_state['redirect'] = array($redirect, array('query' => $get));
 }
diff --git a/profiles/acquia/modules/apachesolr/drush/apachesolr.drush.inc b/profiles/acquia/modules/apachesolr/drush/apachesolr.drush.inc
index e84c621..0c580bd 100644
--- a/profiles/acquia/modules/apachesolr/drush/apachesolr.drush.inc
+++ b/profiles/acquia/modules/apachesolr/drush/apachesolr.drush.inc
@@ -37,6 +37,22 @@ function apachesolr_drush_command() {
     'callback' => 'apachesolr_drush_solr_index',
     'description' => dt('Reindexes content marked for (re)indexing.'),
   );
+  $items['solr-get-last-indexed'] = array(
+    'callback' => 'apachesolr_drush_solr_get_last_indexed',
+    'description' => dt('Get the ID of the last document indexed.'),
+    'arguments' => array(
+      'environment-id' => dt('Optional. The environment ID, uses the default if not passed.'),
+      'entity-type' => dt('Optional. The machine name of the entity, defaults to "node".'),
+    ),
+  );
+  $items['solr-get-next-indexed'] = array(
+    'callback' => 'apachesolr_drush_solr_get_next_indexed',
+    'description' => dt('Get the ID of the next document to be indexed.'),
+    'arguments' => array(
+      'environment-id' => dt('Optional. The environment ID, uses the default if not passed.'),
+      'entity-type' => dt('Optional. The machine name of the entity, defaults to "node".'),
+    ),
+  );
   $items['solr-search'] = array(
     'callback' => 'apachesolr_drush_solr_search',
     'description' => dt('Search the site for keywords using Apache Solr'),
@@ -95,13 +111,8 @@ function apachesolr_drush_command() {
       'drush solr-vget user' => 'List all variables containing the string "user".',
     ),
     'options' => array(
-      'id' => array(
-         'description' => 'Apache Solr environment ID to use (uses the default environment if not specified)',
-      ),
-      'format' => array(
-        'description' => 'Format to output the object. Use "print_r" for print_r (default), "export" for var_export, and "json" for JSON.',
-        'example-value' => 'export',
-      ),
+      'id' => 'Apache Solr environment ID to use (uses the default environment if not specified)',
+      'format' => 'Format to output the object. Use "print_r" for print_r (default), "export" for var_export, and "json" for JSON.',
       'pipe' => 'A synonym for --format=export. Useful for pasting into code.',
     ),
     'aliases' => array('solr-vget'),
@@ -114,15 +125,10 @@ function apachesolr_drush_command() {
     ),
     'required-arguments' => TRUE,
     'options' => array(
-      'id' => array(
-         'description' => 'Apache Solr environment ID to use (uses the default environment if not specified)',
-      ),
+      'id' => 'Apache Solr environment ID to use (uses the default environment if not specified)',
       'yes' => 'Skip confirmation if only one variable name matches.',
       'always-set' => 'Always skip confirmation.',
-      'format' => array(
-        'description' => 'Format to parse the object. Use "auto" to detect format from value (default), "string", "integer" or "boolean" for corresponding primitive type, and "json" for JSON.',
-        'example-value' => 'boolean',
-      ),
+      'format' => 'Format to parse the object. Use "auto" to detect format from value (default), "string", "integer" or "boolean" for corresponding primitive type, and "json" for JSON.',
     ),
     'examples' => array(
       'drush solr-vset --yes apachesolr_read_only 1' => 'Set the apachesolr_read_only variable to 1. Skip confirmation if variable already exists.',
@@ -238,13 +244,35 @@ function apachesolr_drush_solr_index() {
   drush_backend_batch_process();
 }
 
+function apachesolr_drush_solr_get_last_indexed($env_id = NULL, $entity_type = 'node') {
+  if (NULL === $env_id) {
+    $env_id = apachesolr_default_environment();
+  }
+  $return = apachesolr_get_last_index_position($env_id, $entity_type);
+  drush_print($return['last_entity_id']);
+}
+
+function apachesolr_drush_solr_get_next_indexed($env_id = NULL, $entity_type = 'node') {
+  module_load_include('inc', 'apachesolr', 'apachesolr.index');
+  if (NULL === $env_id) {
+    $env_id = apachesolr_default_environment();
+  }
+  $return = apachesolr_index_get_entities_to_index($env_id, $entity_type, 1);
+  $output = (isset($return[0]->entity_id)) ? $return[0]->entity_id : '0';
+  drush_print($output);
+}
+
 function apachesolr_drush_solr_search() {
   $args = func_get_args();
   $keys = implode(' ', $args);
   foreach (apachesolr_search_search_execute($keys) as $result) {
-    $output = 'node/' . $result['node']->entity_id . ' ' . dt('by @name (user/@uid)', array('@name' => strip_tags($result['user']), '@uid' => $result['node']->is_uid)) . "\n";
+    $output = $result['fields']['path'];
+    if(isset($result['user']) && isset($result['node']->is_uid)) {
+      $output .= ' ' . dt('by @name (user/@uid)', array('@name' => strip_tags($result['user']), '@uid' => $result['node']->is_uid));
+    }
+    $output .= "\n";
     $output .= dt('title: ') . $result['title'] . "\n";
-    $output .= preg_replace('/[\s]+/', ' ', strip_tags($result['snippet'])) . "\n\n";
+    $output .= trim(preg_replace('/\s+/', ' ', strip_tags($result['snippet']))) . "\n\n";
     drush_print($output);
   }
 }
diff --git a/profiles/acquia/modules/apachesolr/plugins/facetapi/query_type_geo.inc b/profiles/acquia/modules/apachesolr/plugins/facetapi/query_type_geo.inc
new file mode 100644
index 0000000..3220d86
--- /dev/null
+++ b/profiles/acquia/modules/apachesolr/plugins/facetapi/query_type_geo.inc
@@ -0,0 +1,84 @@
+<?php
+
+/**
+ * Plugin for "apachesolr_geo" query types.
+ */
+class ApacheSolrFacetapiGeo extends FacetapiQueryType implements FacetapiQueryTypeInterface {
+  // Center point is Denver.
+  public $center_point = '39.7391667,-104.9841667';
+  public $facet_options = '0.5,0.1,0.01';
+  public $default_radius = 100;
+
+  /**
+   * Returns the query type associated with the plugin.
+   *
+   * @return string
+   *   The query type.
+   */
+  static public function getType() {
+    return 'geo';
+  }
+
+  /**
+   * Adds the filter to the query object.
+   *
+   * @param DrupalSolrQueryInterface $query
+   *   An object containing the query in the backend's native API.
+   */
+  public function execute($query) {
+    // Retrieve settings of the facet.
+    // We should be able to get all constants as facet options.
+    $settings = $this->adapter->getFacet($this->facet)->getSettings();
+
+    $facet_distances = explode(',', $this->facet_options);
+
+    $active_items = $this->adapter->getActiveItems($this->facet);
+
+    if (empty($active_items)) {
+      $distance = $this->default_radius;
+    }
+    else {
+      $active_item = array_pop($active_items);
+      $distance = substr($active_item['value'], 1);
+      // Add current selected distance to have possibility to unselect it.
+      $facet_distances[] = 1;
+    }
+
+    // Search center point.
+    $query->addParam('pt', $this->center_point);
+
+    // Set location field name.
+    $query->addParam('sfield', $this->facet['field']);
+    $query->addParam('fq', '{!geofilt sfield=' . $this->facet['field'] . '}');
+
+    // Set search radius.
+    $query->addParam('d', $distance);
+
+    // Set facets.
+    foreach ($facet_distances as $facet_option) {
+      $facet_distance = $distance * $facet_option;
+      $query->addParam('facet.query', '{!geofilt d=' . $facet_distance . ' key=d' . $facet_distance . '}');
+    }
+  }
+
+  /**
+   * Initializes the facet's build array.
+   *
+   * @return array
+   *   The initialized render array.
+   */
+  public function build() {
+    $build = array();
+    if ($response = apachesolr_static_response_cache($this->adapter->getSearcher())) {
+      if (isset($response->facet_counts->facet_queries)) {
+        foreach ($response->facet_counts->facet_queries as $value => $count) {
+          // Skip zero results values.
+          if ($count > 0) {
+            $build[$value] = array('#count' => $count);
+          }
+        }
+      }
+    }
+    return $build;
+  }
+}
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/protwords.txt b/profiles/acquia/modules/apachesolr/solr-conf/protwords.txt
deleted file mode 100644
index f0fd084..0000000
--- a/profiles/acquia/modules/apachesolr/solr-conf/protwords.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-#-----------------------------------------------------------------------
-# This file blocks words from being operated on by the stemmer and word delimiter.
-&amp;
-&lt;
-&gt;
-&#039;
-&quot;
-
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/schema-solr3x.xml b/profiles/acquia/modules/apachesolr/solr-conf/schema-solr3x.xml
deleted file mode 100644
index 8c16bf0..0000000
--- a/profiles/acquia/modules/apachesolr/solr-conf/schema-solr3x.xml
+++ /dev/null
@@ -1,524 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-
-<!--
- This is the Solr schema file. This file should be named "schema.xml" and
- should be in the conf directory under the solr home
- (i.e. ./solr/conf/schema.xml by default)
- or located where the classloader for the Solr webapp can find it.
-
- For more information, on how to customize this file, please see
- http://wiki.apache.org/solr/SchemaXml
--->
-
-<schema name="drupal-3.0-rc2-solr3" version="1.3">
-    <!-- attribute "name" is the name of this schema and is only used for display purposes.
-         Applications should change this to reflect the nature of the search collection.
-         version="1.2" is Solr's version number for the schema syntax and semantics.  It should
-         not normally be changed by applications.
-         1.0: multiValued attribute did not exist, all fields are multiValued by nature
-         1.1: multiValued attribute introduced, false by default
-         1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
-         1.3: removed optional field compress feature
-       -->
-  <types>
-    <!-- field type definitions. The "name" attribute is
-       just a label to be used by field definitions.  The "class"
-       attribute and any other attributes determine the real
-       behavior of the fieldType.
-         Class names starting with "solr" refer to java classes in the
-       org.apache.solr.analysis package.
-    -->
-
-    <!-- The StrField type is not analyzed, but indexed/stored verbatim.
-       - StrField and TextField support an optional compressThreshold which
-       limits compression (if enabled in the derived fields) to values which
-       exceed a certain size (in characters).
-    -->
-    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
-
-    <!-- boolean type: "true" or "false" -->
-    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
-    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
-    <fieldtype name="binary" class="solr.BinaryField"/>
-
-    <!-- The optional sortMissingLast and sortMissingFirst attributes are
-         currently supported on types that are sorted internally as strings.
-       - If sortMissingLast="true", then a sort on this field will cause documents
-         without the field to come after documents with the field,
-         regardless of the requested sort order (asc or desc).
-       - If sortMissingFirst="true", then a sort on this field will cause documents
-         without the field to come before documents with the field,
-         regardless of the requested sort order.
-       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
-         then default lucene sorting will be used which places docs without the
-         field first in an ascending sort and last in a descending sort.
-    -->
-
-    <!-- numeric field types that can be sorted, but are not optimized for range queries -->
-    <fieldType name="integer" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-
-    <!--
-      Note:
-      These should only be used for compatibility with existing indexes (created with older Solr versions)
-      or if "sortMissingFirst" or "sortMissingLast" functionality is needed. Use Trie based fields instead.
-
-      Numeric field types that manipulate the value into
-      a string value that isn't human-readable in its internal form,
-      but with a lexicographic ordering the same as the numeric ordering,
-      so that range queries work correctly.
-    -->
-    <fieldType name="sint" class="solr.TrieIntField" sortMissingLast="true" omitNorms="true"/>
-    <fieldType name="slong" class="solr.TrieFloatField" sortMissingLast="true" omitNorms="true"/>
-    <fieldType name="sfloat" class="solr.TrieLongField" sortMissingLast="true" omitNorms="true"/>
-    <fieldType name="sdouble" class="solr.TrieDoubleField" sortMissingLast="true" omitNorms="true"/>
-
-    <!--
-     Numeric field types that index each value at various levels of precision
-     to accelerate range queries when the number of values between the range
-     endpoints is large. See the javadoc for NumericRangeQuery for internal
-     implementation details.
-
-     Smaller precisionStep values (specified in bits) will lead to more tokens
-     indexed per value, slightly larger index size, and faster range queries.
-     A precisionStep of 0 disables indexing at different precision levels.
-    -->
-    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-
-    <!--
-     The ExternalFileField type gets values from an external file instead of the
-     index. This is useful for data such as rankings that might change frequently
-     and require different update frequencies than the documents they are
-     associated with.
-    -->
-    <fieldType name="pfloat" class="solr.FloatField" omitNorms="true"/>
-    <fieldType name="file" keyField="id" defVal="1" stored="false" indexed="false" class="solr.ExternalFileField" valType="pfloat"/>
-
-    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
-         is a more restricted form of the canonical representation of dateTime
-         http://www.w3.org/TR/xmlschema-2/#dateTime
-         The trailing "Z" designates UTC time and is mandatory.
-         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
-         All other components are mandatory.
-
-         Expressions can also be used to denote calculations that should be
-         performed relative to "NOW" to determine the value, ie...
-
-               NOW/HOUR
-                  ... Round to the start of the current hour
-               NOW-1DAY
-                  ... Exactly 1 day prior to now
-               NOW/DAY+6MONTHS+3DAYS
-                  ... 6 months and 3 days in the future from the start of
-                      the current day
-
-         Consult the DateField javadocs for more information.
-      -->
-    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
-
-    <!-- A Trie based date field for faster date range queries and date faceting. -->
-    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>
-
-    <!-- solr.TextField allows the specification of custom text analyzers
-         specified as a tokenizer and a list of token filters. Different
-         analyzers may be specified for indexing and querying.
-
-         The optional positionIncrementGap puts space between multiple fields of
-         this type on the same document, with the purpose of preventing false phrase
-         matching across fields.
-
-         For more info on customizing your analyzer chain, please see
-         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
-     -->
-
-    <!-- One can also specify an existing Analyzer class that has a
-         default constructor via the class attribute on the analyzer element
-    <fieldType name="text_greek" class="solr.TextField">
-      <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
-    </fieldType>
-    -->
-
-    <!-- A text field that only splits on whitespace for exact matching of words -->
-    <fieldType name="text_ws" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
-      <analyzer>
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
-        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
-        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
-        Synonyms and stopwords are customized by external files, and stemming is enabled.
-        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
-        WordDelim parts) are removed.
-        -->
-    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
-      <analyzer type="index">
-        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <!-- in this example, we will only use synonyms at query time
-        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
-        -->
-        <!-- Case insensitive stop word removal.
-          add enablePositionIncrements=true in both the index and query
-          analyzers to leave a 'gap' for more accurate phrase queries.
-        -->
-        <filter class="solr.StopFilterFactory"
-                ignoreCase="true"
-                words="stopwords.txt"
-                enablePositionIncrements="true"
-                />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="1"
-                catenateNumbers="1"
-                catenateAll="0"
-                splitOnCaseChange="1"
-                preserveOriginal="1"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
-        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
-      </analyzer>
-      <analyzer type="query">
-        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
-        <filter class="solr.StopFilterFactory"
-                ignoreCase="true"
-                words="stopwords.txt"
-                enablePositionIncrements="true"
-                />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="0"
-                catenateNumbers="0"
-                catenateAll="0"
-                splitOnCaseChange="1"
-                preserveOriginal="1"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
-        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <!-- An unstemmed text field - good if one does not know the language of the field -->
-    <fieldType name="text_und" class="solr.TextField" positionIncrementGap="100">
-      <analyzer type="index">
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="1"
-                catenateNumbers="1"
-                catenateAll="0"
-                splitOnCaseChange="0"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-      <analyzer type="query">
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
-        <filter class="solr.StopFilterFactory"
-                ignoreCase="true"
-                words="stopwords.txt"
-                enablePositionIncrements="true"
-                />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="0"
-                catenateNumbers="0"
-                catenateAll="0"
-                splitOnCaseChange="0"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <!-- Edge N gram type - for example for matching against queries with results
-        KeywordTokenizer leaves input string intact as a single term.
-        see: http://www.lucidimagination.com/blog/2009/09/08/auto-suggest-from-popular-queries-using-edgengrams/
-   -->
-    <fieldType name="edge_n2_kw_text" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
-     <analyzer type="index">
-       <tokenizer class="solr.KeywordTokenizerFactory"/>
-       <filter class="solr.LowerCaseFilterFactory"/>
-       <filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="25" />
-     </analyzer>
-     <analyzer type="query">
-       <tokenizer class="solr.KeywordTokenizerFactory"/>
-       <filter class="solr.LowerCaseFilterFactory"/>
-     </analyzer>
-    </fieldType>
-   <!--  Setup simple analysis for spell checking -->
-
-   <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100">
-     <analyzer>
-       <tokenizer class="solr.StandardTokenizerFactory" />
-       <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
-       <filter class="solr.LengthFilterFactory" min="4" max="20" />
-       <filter class="solr.LowerCaseFilterFactory" />
-       <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
-     </analyzer>
-   </fieldType>
-
-    <!-- This is an example of using the KeywordTokenizer along
-         With various TokenFilterFactories to produce a sortable field
-         that does not include some properties of the source text
-      -->
-    <fieldType name="sortString" class="solr.TextField" sortMissingLast="true" omitNorms="true">
-      <analyzer>
-        <!-- KeywordTokenizer does no actual tokenizing, so the entire
-             input string is preserved as a single token
-          -->
-        <tokenizer class="solr.KeywordTokenizerFactory"/>
-        <!-- The LowerCase TokenFilter does what you expect, which can be
-             when you want your sorting to be case insensitive
-          -->
-        <filter class="solr.LowerCaseFilterFactory" />
-        <!-- The TrimFilter removes any leading or trailing whitespace -->
-        <filter class="solr.TrimFilterFactory" />
-        <!-- The PatternReplaceFilter gives you the flexibility to use
-             Java Regular expression to replace any sequence of characters
-             matching a pattern with an arbitrary replacement string,
-             which may include back refrences to portions of the orriginal
-             string matched by the pattern.
-
-             See the Java Regular Expression documentation for more
-             infomation on pattern and replacement string syntax.
-
-             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
-
-        <filter class="solr.PatternReplaceFilterFactory"
-                pattern="(^\p{Punct}+)" replacement="" replace="all"
-        />
-        -->
-      </analyzer>
-    </fieldType>
-
-    <!-- A random sort type -->
-    <fieldType name="rand" class="solr.RandomSortField" indexed="true" />
-
-    <!-- since fields of this type are by default not stored or indexed, any data added to
-         them will be ignored outright
-     -->
-    <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField" />
-
-    <!-- Begin added types to use features in Solr 3.4+ -->
-    <fieldType name="point" class="solr.PointType" dimension="2" subFieldType="tdouble"/>
-
-    <!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
-    <fieldType name="location" class="solr.LatLonType" subFieldType="tdouble"/>
-
-   <!--
-    A Geohash is a compact representation of a latitude longitude pair in a single field.
-    See http://wiki.apache.org/solr/SpatialSearch
-   -->
-    <fieldtype name="geohash" class="solr.GeoHashField"/>
-    <!-- End added Solr 3.4+ types -->
- </types>
-
-
- <fields>
-   <!-- Valid attributes for fields:
-     name: mandatory - the name for the field
-     type: mandatory - the name of a previously defined type from the <types> section
-     indexed: true if this field should be indexed (searchable or sortable)
-     stored: true if this field should be retrievable
-     compressed: [false] if this field should be stored using gzip compression
-       (this will only apply if the field type is compressable; among
-       the standard field types, only TextField and StrField are)
-     multiValued: true if this field may contain multiple values per document
-     omitNorms: (expert) set to true to omit the norms associated with
-       this field (this disables length normalization and index-time
-       boosting for the field, and saves some memory).  Only full-text
-       fields or fields that need an index-time boost need norms.
-   -->
-
-<!-- The document id is usually derived from a site-spcific key (hash) and the entity type and ID like:
-     $document->id = $hash . '/node/' . $node->nid; -->
-
-   <field name="id" type="string" indexed="true" stored="true" required="true" />
-   <!-- entity_id is the numeric object ID, e.g. Node ID, File ID -->
-   <field name="entity_id"  type="long" indexed="true" stored="true" />
-   <!-- entity_type is 'node', 'file', 'user', or some other Drupal object type -->
-   <field name="entity_type" type="string" indexed="true" stored="true" required="true" />
-   <!-- bundle is a node type, or as appropriate for other entity types -->
-   <field name="bundle" type="string" indexed="true" stored="true"/>
-   <field name="bundle_name" type="string" indexed="true" stored="true"/>
-
-   <field name="site" type="string" indexed="true" stored="true"/>
-   <field name="hash" type="string" indexed="true" stored="true"/>
-   <field name="url" type="string" indexed="true" stored="true"/>
-   <!-- label is the default field for a human-readable string for this entity (e.g. the title of a node) -->
-   <field name="label" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
-   <!-- The string version of the title is used for sorting -->
-   <copyField source="label" dest="sort_label"/>
-   <!-- content is the default field for full text search - dump crap here -->
-   <field name="content" type="text" indexed="true" stored="true" termVectors="true"/>
-   <field name="teaser" type="text" indexed="false" stored="true"/>
-
-   <field name="path" type="string" indexed="true" stored="true"/>
-   <field name="path_alias" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
-
- <!-- These are the fields that correspond to a Drupal node. The beauty of having
-     Lucene store title, body, type, etc., is that we retrieve them with the search
-     result set and don't need to go to the database with a node_load. -->
-
-   <field name="tid"  type="long" indexed="true" stored="true" multiValued="true"/>
-
-   <field name="taxonomy_names" type="text" indexed="true" stored="false" termVectors="true" multiValued="true" omitNorms="true"/>
-   <!-- Copy terms to a single field that contains all taxonomy term names -->
-   <copyField source="tm_vid_*" dest="taxonomy_names"/>
-
-   <!-- Here, default is used to create a "timestamp" field indicating
-        when each document was indexed.-->
-   <field name="timestamp" type="tdate" indexed="true" stored="true" default="NOW" multiValued="false"/>
-
-	<!-- This field is used to build the spellchecker index -->
-   <field name="spell" type="textSpell" indexed="true" stored="true" multiValued="true"/>
-
-  <!-- copyField commands copy one field to another at the time a document
-        is added to the index.  It's used either to index the same field differently,
-        or to add multiple fields to the same field for easier/faster searching.  -->
-   <copyField source="label" dest="spell"/>
-   <copyField source="content" dest="spell"/>
-
-   <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
-        will be used if the name matches any of the patterns.
-        RESTRICTION: the glob-like pattern in the name attribute must have
-        a "*" only at the start or the end.
-        EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
-        Longer patterns will be matched first.  if equal size patterns
-        both match, the first appearing in the schema will be used.  -->
-
-   <!-- A set of fields to contain text extracted from HTML tag contents which we
-        can boost at query time. -->
-   <dynamicField name="tags_*" type="text"   indexed="true" stored="false" omitNorms="true"/>
-
-   <!-- For 2 and 3 letter prefix dynamic fields, the 1st letter indicates the data type and
-        the last letter is 's' for single valued, 'm' for multi-valued -->
-
-   <!-- We use long for integer since 64 bit ints are now common in PHP. -->
-   <dynamicField name="is_*"  type="long"    indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="im_*"  type="long"    indexed="true"  stored="true" multiValued="true"/>
-   <!-- List of floats can be saved in a regular float field -->
-   <dynamicField name="fs_*"  type="float"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="fm_*"  type="float"   indexed="true"  stored="true" multiValued="true"/>
-   <!-- List of doubles can be saved in a regular double field -->
-   <dynamicField name="ps_*"  type="double"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="pm_*"  type="double"   indexed="true"  stored="true" multiValued="true"/>
-   <!-- List of booleans can be saved in a regular boolean field -->
-   <dynamicField name="bm_*"  type="boolean" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="bs_*"  type="boolean" indexed="true"  stored="true" multiValued="false"/>
-   <!-- Regular text (without processing) can be stored in a string field-->
-   <dynamicField name="ss_*"  type="string"  indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="sm_*"  type="string"  indexed="true"  stored="true" multiValued="true"/>
-   <!-- Normal text fields are for full text - the relevance of a match depends on the length of the text -->
-   <dynamicField name="ts_*"  type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true"/>
-   <dynamicField name="tm_*"  type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true"/>
-   <!-- Unstemmed text fields for full text - the relevance of a match depends on the length of the text -->
-   <dynamicField name="tus_*" type="text_und" indexed="true"  stored="true" multiValued="false" termVectors="true"/>
-   <dynamicField name="tum_*" type="text_und" indexed="true"  stored="true" multiValued="true" termVectors="true"/>
-   <!-- These text fields omit norms - useful for extracted text like taxonomy_names -->
-   <dynamicField name="tos_*" type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true" omitNorms="true"/>
-   <dynamicField name="tom_*" type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true" omitNorms="true"/>
-   <!-- Special-purpose text fields -->
-   <dynamicField name="tes_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="false" omitTermFreqAndPositions="true" />
-   <dynamicField name="tem_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="true" omitTermFreqAndPositions="true" />
-   <dynamicField name="tws_*" type="text_ws" indexed="true" stored="true" multiValued="false"/>
-   <dynamicField name="twm_*" type="text_ws" indexed="true" stored="true" multiValued="true"/>
-
-   <!-- trie dates are preferred, so give them the 2 letter prefix -->
-   <dynamicField name="ds_*"  type="tdate"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="dm_*"  type="tdate"   indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="its_*" type="tlong"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="itm_*" type="tlong"   indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="fts_*" type="tfloat"  indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ftm_*" type="tfloat"  indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="pts_*" type="tdouble" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ptm_*" type="tdouble" indexed="true"  stored="true" multiValued="true"/>
-   <!-- Binary fields can be populated using base64 encoded data. Useful e.g. for embedding
-        a small image in a search result using the data URI scheme -->
-   <dynamicField name="xs_*"  type="binary"  indexed="false" stored="true" multiValued="false"/>
-   <dynamicField name="xm_*"  type="binary"  indexed="false" stored="true" multiValued="true"/>
-   <!-- In rare cases a date rather than tdate is needed for sortMissingLast -->
-   <dynamicField name="dds_*" type="date"    indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ddm_*" type="date"    indexed="true"  stored="true" multiValued="true"/>
-   <!-- Sortable fields, good for sortMissingLast support &
-        We use long for integer since 64 bit ints are now common in PHP. -->
-   <dynamicField name="iss_*" type="slong"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ism_*" type="slong"   indexed="true"  stored="true" multiValued="true"/>
-   <!-- In rare cases a sfloat rather than tfloat is needed for sortMissingLast -->
-   <dynamicField name="fss_*" type="sfloat"  indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="fsm_*" type="sfloat"  indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="pss_*" type="sdouble" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="psm_*" type="sdouble" indexed="true"  stored="true" multiValued="true"/>
-   <!-- In case a 32 bit int is really needed, we provide these fields. 'h' is mnemonic for 'half word', i.e. 32 bit on 64 arch -->
-   <dynamicField name="hs_*" type="integer" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="hm_*" type="integer" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="hss_*" type="sint"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="hsm_*" type="sint"   indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="hts_*" type="tint"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="htm_*" type="tint"   indexed="true"  stored="true" multiValued="true"/>
-
-   <!-- Unindexed string fields that can be used to store values that won't be searchable -->
-   <dynamicField name="zs_*" type="string"   indexed="false"  stored="true" multiValued="false"/>
-   <dynamicField name="zm_*" type="string"   indexed="false"  stored="true" multiValued="true"/>
-
-   <!-- Begin added fields to use features in Solr 3.4+
-        http://wiki.apache.org/solr/SpatialSearch#geodist_-_The_distance_function -->
-   <dynamicField name="points_*" type="point" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="pointm_*" type="point" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="locs_*" type="location" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="locm_*" type="location" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="geos_*" type="geohash" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="geom_*" type="geohash" indexed="true"  stored="true" multiValued="true"/>
-
-   <!-- External file fields -->
-   <dynamicField name="eff_*" type="file"/>
-   <!-- End added fields for Solr 3.4+ -->
-
-   <!-- Sortable version of the dynamic string field -->
-   <dynamicField name="sort_*" type="sortString" indexed="true" stored="false"/>
-   <copyField source="ss_*" dest="sort_*"/>
-  <!-- A random sort field -->
-   <dynamicField name="random_*" type="rand" indexed="true" stored="true"/>
-   <!-- This field is used to store access information (e.g. node access grants), as opposed to field data -->
-   <dynamicField name="access_*" type="integer" indexed="true" stored="false" multiValued="true"/>
-
-   <!-- The following causes solr to ignore any fields that don't already match an existing
-        field name or dynamic field, rather than reporting them as an error.
-        Alternately, change the type="ignored" to some other type e.g. "text" if you want
-        unknown fields indexed and/or stored by default -->
-   <dynamicField name="*" type="ignored" multiValued="true" />
-
- </fields>
-
- <!-- Field to use to determine and enforce document uniqueness.
-      Unless this field is marked with required="false", it will be a required field
-   -->
- <uniqueKey>id</uniqueKey>
-
- <!-- field for the QueryParser to use when an explicit fieldname is absent -->
- <defaultSearchField>content</defaultSearchField>
-
- <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
- <solrQueryParser defaultOperator="AND"/>
-
-</schema>
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/schema.xml b/profiles/acquia/modules/apachesolr/solr-conf/schema.xml
deleted file mode 100644
index 7f42de4..0000000
--- a/profiles/acquia/modules/apachesolr/solr-conf/schema.xml
+++ /dev/null
@@ -1,497 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-
-<!--
- This is the Solr schema file. This file should be named "schema.xml" and
- should be in the conf directory under the solr home
- (i.e. ./solr/conf/schema.xml by default)
- or located where the classloader for the Solr webapp can find it.
-
- For more information, on how to customize this file, please see
- http://wiki.apache.org/solr/SchemaXml
--->
-
-<schema name="drupal-3.0-rc2" version="1.2">
-    <!-- attribute "name" is the name of this schema and is only used for display purposes.
-         Applications should change this to reflect the nature of the search collection.
-         version="1.2" is Solr's version number for the schema syntax and semantics.  It should
-         not normally be changed by applications.
-         1.0: multiValued attribute did not exist, all fields are multiValued by nature
-         1.1: multiValued attribute introduced, false by default
-         1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
-       -->
-  <types>
-    <!-- field type definitions. The "name" attribute is
-       just a label to be used by field definitions.  The "class"
-       attribute and any other attributes determine the real
-       behavior of the fieldType.
-         Class names starting with "solr" refer to java classes in the
-       org.apache.solr.analysis package.
-    -->
-
-    <!-- The StrField type is not analyzed, but indexed/stored verbatim.
-       - StrField and TextField support an optional compressThreshold which
-       limits compression (if enabled in the derived fields) to values which
-       exceed a certain size (in characters).
-    -->
-    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
-
-    <!-- boolean type: "true" or "false" -->
-    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
-    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
-    <fieldtype name="binary" class="solr.BinaryField"/>
-
-    <!-- The optional sortMissingLast and sortMissingFirst attributes are
-         currently supported on types that are sorted internally as strings.
-       - If sortMissingLast="true", then a sort on this field will cause documents
-         without the field to come after documents with the field,
-         regardless of the requested sort order (asc or desc).
-       - If sortMissingFirst="true", then a sort on this field will cause documents
-         without the field to come before documents with the field,
-         regardless of the requested sort order.
-       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
-         then default lucene sorting will be used which places docs without the
-         field first in an ascending sort and last in a descending sort.
-    -->
-
-    <!-- numeric field types that can be sorted, but are not optimized for range queries -->
-    <fieldType name="integer" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
-
-    <!--
-      Note:
-      These should only be used for compatibility with existing indexes (created with older Solr versions)
-      or if "sortMissingFirst" or "sortMissingLast" functionality is needed. Use Trie based fields instead.
-
-      Numeric field types that manipulate the value into
-      a string value that isn't human-readable in its internal form,
-      but with a lexicographic ordering the same as the numeric ordering,
-      so that range queries work correctly.
-    -->
-    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
-    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
-    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
-    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>
-
-    <!--
-     Numeric field types that index each value at various levels of precision
-     to accelerate range queries when the number of values between the range
-     endpoints is large. See the javadoc for NumericRangeQuery for internal
-     implementation details.
-
-     Smaller precisionStep values (specified in bits) will lead to more tokens
-     indexed per value, slightly larger index size, and faster range queries.
-     A precisionStep of 0 disables indexing at different precision levels.
-    -->
-    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
-
-
-    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
-         is a more restricted form of the canonical representation of dateTime
-         http://www.w3.org/TR/xmlschema-2/#dateTime
-         The trailing "Z" designates UTC time and is mandatory.
-         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
-         All other components are mandatory.
-
-         Expressions can also be used to denote calculations that should be
-         performed relative to "NOW" to determine the value, ie...
-
-               NOW/HOUR
-                  ... Round to the start of the current hour
-               NOW-1DAY
-                  ... Exactly 1 day prior to now
-               NOW/DAY+6MONTHS+3DAYS
-                  ... 6 months and 3 days in the future from the start of
-                      the current day
-
-         Consult the DateField javadocs for more information.
-      -->
-    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
-
-    <!-- A Trie based date field for faster date range queries and date faceting. -->
-    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>
-
-    <!-- solr.TextField allows the specification of custom text analyzers
-         specified as a tokenizer and a list of token filters. Different
-         analyzers may be specified for indexing and querying.
-
-         The optional positionIncrementGap puts space between multiple fields of
-         this type on the same document, with the purpose of preventing false phrase
-         matching across fields.
-
-         For more info on customizing your analyzer chain, please see
-         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
-     -->
-
-    <!-- One can also specify an existing Analyzer class that has a
-         default constructor via the class attribute on the analyzer element
-    <fieldType name="text_greek" class="solr.TextField">
-      <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
-    </fieldType>
-    -->
-
-    <!-- A text field that only splits on whitespace for exact matching of words -->
-    <fieldType name="text_ws" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
-      <analyzer>
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
-        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
-        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
-        Synonyms and stopwords are customized by external files, and stemming is enabled.
-        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
-        WordDelim parts) are removed.
-        -->
-    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
-      <analyzer type="index">
-        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <!-- in this example, we will only use synonyms at query time
-        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
-        -->
-        <!-- Case insensitive stop word removal.
-          add enablePositionIncrements=true in both the index and query
-          analyzers to leave a 'gap' for more accurate phrase queries.
-        -->
-        <filter class="solr.StopFilterFactory"
-                ignoreCase="true"
-                words="stopwords.txt"
-                enablePositionIncrements="true"
-                />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="1"
-                catenateNumbers="1"
-                catenateAll="0"
-                splitOnCaseChange="1"
-                preserveOriginal="1"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
-        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
-      </analyzer>
-      <analyzer type="query">
-        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
-        <filter class="solr.StopFilterFactory"
-                ignoreCase="true"
-                words="stopwords.txt"
-                enablePositionIncrements="true"
-                />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="0"
-                catenateNumbers="0"
-                catenateAll="0"
-                splitOnCaseChange="1"
-                preserveOriginal="1"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
-        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <!-- An unstemmed text field - good if one does not know the language of the field -->
-    <fieldType name="text_und" class="solr.TextField" positionIncrementGap="100">
-      <analyzer type="index">
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="1"
-                catenateNumbers="1"
-                catenateAll="0"
-                splitOnCaseChange="0"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-      <analyzer type="query">
-        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
-        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
-        <filter class="solr.StopFilterFactory"
-                ignoreCase="true"
-                words="stopwords.txt"
-                enablePositionIncrements="true"
-                />
-        <filter class="solr.WordDelimiterFilterFactory"
-                protected="protwords.txt"
-                generateWordParts="1"
-                generateNumberParts="1"
-                catenateWords="0"
-                catenateNumbers="0"
-                catenateAll="0"
-                splitOnCaseChange="0"/>
-        <filter class="solr.LengthFilterFactory" min="2" max="100" />
-        <filter class="solr.LowerCaseFilterFactory"/>
-      </analyzer>
-    </fieldType>
-
-    <!-- Edge N gram type - for example for matching against queries with results
-        KeywordTokenizer leaves input string intact as a single term.
-        see: http://www.lucidimagination.com/blog/2009/09/08/auto-suggest-from-popular-queries-using-edgengrams/
-   -->
-    <fieldType name="edge_n2_kw_text" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
-     <analyzer type="index">
-       <tokenizer class="solr.KeywordTokenizerFactory"/>
-       <filter class="solr.LowerCaseFilterFactory"/>
-       <filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="25" />
-     </analyzer>
-     <analyzer type="query">
-       <tokenizer class="solr.KeywordTokenizerFactory"/>
-       <filter class="solr.LowerCaseFilterFactory"/>
-     </analyzer>
-    </fieldType>
-   <!--  Setup simple analysis for spell checking -->
-
-   <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100">
-     <analyzer>
-       <tokenizer class="solr.StandardTokenizerFactory" />
-       <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
-       <filter class="solr.LengthFilterFactory" min="4" max="20" />
-       <filter class="solr.LowerCaseFilterFactory" />
-       <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
-     </analyzer>
-   </fieldType>
-
-    <!-- This is an example of using the KeywordTokenizer along
-         With various TokenFilterFactories to produce a sortable field
-         that does not include some properties of the source text
-      -->
-    <fieldType name="sortString" class="solr.TextField" sortMissingLast="true" omitNorms="true">
-      <analyzer>
-        <!-- KeywordTokenizer does no actual tokenizing, so the entire
-             input string is preserved as a single token
-          -->
-        <tokenizer class="solr.KeywordTokenizerFactory"/>
-        <!-- The LowerCase TokenFilter does what you expect, which can be
-             when you want your sorting to be case insensitive
-          -->
-        <filter class="solr.LowerCaseFilterFactory" />
-        <!-- The TrimFilter removes any leading or trailing whitespace -->
-        <filter class="solr.TrimFilterFactory" />
-        <!-- The PatternReplaceFilter gives you the flexibility to use
-             Java Regular expression to replace any sequence of characters
-             matching a pattern with an arbitrary replacement string,
-             which may include back refrences to portions of the orriginal
-             string matched by the pattern.
-
-             See the Java Regular Expression documentation for more
-             infomation on pattern and replacement string syntax.
-
-             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
-
-        <filter class="solr.PatternReplaceFilterFactory"
-                pattern="(^\p{Punct}+)" replacement="" replace="all"
-        />
-        -->
-      </analyzer>
-    </fieldType>
-
-    <!-- A random sort type -->
-    <fieldType name="rand" class="solr.RandomSortField" indexed="true" />
-
-    <!-- since fields of this type are by default not stored or indexed, any data added to
-         them will be ignored outright
-     -->
-    <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField" />
-
- </types>
-
-
- <fields>
-   <!-- Valid attributes for fields:
-     name: mandatory - the name for the field
-     type: mandatory - the name of a previously defined type from the <types> section
-     indexed: true if this field should be indexed (searchable or sortable)
-     stored: true if this field should be retrievable
-     compressed: [false] if this field should be stored using gzip compression
-       (this will only apply if the field type is compressable; among
-       the standard field types, only TextField and StrField are)
-     multiValued: true if this field may contain multiple values per document
-     omitNorms: (expert) set to true to omit the norms associated with
-       this field (this disables length normalization and index-time
-       boosting for the field, and saves some memory).  Only full-text
-       fields or fields that need an index-time boost need norms.
-   -->
-
-<!-- The document id is usually derived from a site-spcific key (hash) and the entity type and ID like:
-     $document->id = $hash . '/node/' . $node->nid; -->
-
-   <field name="id" type="string" indexed="true" stored="true" required="true" />
-   <!-- entity_id is the numeric object ID, e.g. Node ID, File ID -->
-   <field name="entity_id"  type="long" indexed="true" stored="true" />
-   <!-- entity_type is 'node', 'file', 'user', or some other Drupal object type -->
-   <field name="entity_type" type="string" indexed="true" stored="true" required="true" />
-   <!-- bundle is a node type, or as appropriate for other entity types -->
-   <field name="bundle" type="string" indexed="true" stored="true"/>
-   <field name="bundle_name" type="string" indexed="true" stored="true"/>
-
-   <field name="site" type="string" indexed="true" stored="true"/>
-   <field name="hash" type="string" indexed="true" stored="true"/>
-   <field name="url" type="string" indexed="true" stored="true"/>
-   <!-- label is the default field for a human-readable string for this entity (e.g. the title of a node) -->
-   <field name="label" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
-   <!-- The string version of the title is used for sorting -->
-   <copyField source="label" dest="sort_label"/>
-   <!-- content is the default field for full text search - dump crap here -->
-   <field name="content" type="text" indexed="true" stored="true" termVectors="true"/>
-   <field name="teaser" type="text" indexed="false" stored="true"/>
-
-   <field name="path" type="string" indexed="true" stored="true"/>
-   <field name="path_alias" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
-
- <!-- These are the fields that correspond to a Drupal node. The beauty of having
-     Lucene store title, body, type, etc., is that we retrieve them with the search
-     result set and don't need to go to the database with a node_load. -->
-
-   <field name="tid"  type="long" indexed="true" stored="true" multiValued="true"/>
-
-   <field name="taxonomy_names" type="text" indexed="true" stored="false" termVectors="true" multiValued="true" omitNorms="true"/>
-   <!-- Copy terms to a single field that contains all taxonomy term names -->
-   <copyField source="tm_vid_*" dest="taxonomy_names"/>
-
-   <!-- Here, default is used to create a "timestamp" field indicating
-        when each document was indexed.-->
-   <field name="timestamp" type="tdate" indexed="true" stored="true" default="NOW" multiValued="false"/>
-
-	<!-- This field is used to build the spellchecker index -->
-   <field name="spell" type="textSpell" indexed="true" stored="true" multiValued="true"/>
-
-  <!-- copyField commands copy one field to another at the time a document
-        is added to the index.  It's used either to index the same field differently,
-        or to add multiple fields to the same field for easier/faster searching.  -->
-   <copyField source="label" dest="spell"/>
-   <copyField source="content" dest="spell"/>
-
-   <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
-        will be used if the name matches any of the patterns.
-        RESTRICTION: the glob-like pattern in the name attribute must have
-        a "*" only at the start or the end.
-        EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
-        Longer patterns will be matched first.  if equal size patterns
-        both match, the first appearing in the schema will be used.  -->
-
-   <!-- A set of fields to contain text extracted from HTML tag contents which we
-        can boost at query time. -->
-   <dynamicField name="tags_*" type="text"   indexed="true" stored="false" omitNorms="true"/>
-
-   <!-- For 2 and 3 letter prefix dynamic fields, the 1st letter indicates the data type and
-        the last letter is 's' for single valued, 'm' for multi-valued -->
-
-   <!-- We use long for integer since 64 bit ints are now common in PHP. -->
-   <dynamicField name="is_*"  type="long"    indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="im_*"  type="long"    indexed="true"  stored="true" multiValued="true"/>
-   <!-- List of floats can be saved in a regular float field -->
-   <dynamicField name="fs_*"  type="float"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="fm_*"  type="float"   indexed="true"  stored="true" multiValued="true"/>
-   <!-- List of booleans can be saved in a regular boolean field -->
-   <dynamicField name="bm_*"  type="boolean" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="bs_*"  type="boolean" indexed="true"  stored="true" multiValued="false"/>
-   <!-- Regular text (without processing) can be stored in a string field-->
-   <dynamicField name="ss_*"  type="string"  indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="sm_*"  type="string"  indexed="true"  stored="true" multiValued="true"/>
-   <!-- Normal text fields are for full text - the relevance of a match depends on the length of the text -->
-   <dynamicField name="ts_*"  type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true"/>
-   <dynamicField name="tm_*"  type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true"/>
-   <!-- Unstemmed text fields for full text - the relevance of a match depends on the length of the text -->
-   <dynamicField name="tus_*" type="text_und" indexed="true"  stored="true" multiValued="false" termVectors="true"/>
-   <dynamicField name="tum_*" type="text_und" indexed="true"  stored="true" multiValued="true" termVectors="true"/>
-   <!-- These text fields omit norms - useful for extracted text like taxonomy_names -->
-   <dynamicField name="tos_*" type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true" omitNorms="true"/>
-   <dynamicField name="tom_*" type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true" omitNorms="true"/>
-   <!-- Special-purpose text fields -->
-   <dynamicField name="tes_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="false" omitTermFreqAndPositions="true" />
-   <dynamicField name="tem_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="true" omitTermFreqAndPositions="true" />
-   <dynamicField name="tws_*" type="text_ws" indexed="true" stored="true" multiValued="false"/>
-   <dynamicField name="twm_*" type="text_ws" indexed="true" stored="true" multiValued="true"/>
-
-   <!-- trie dates are preferred, so give them the 2 letter prefix -->
-   <dynamicField name="ds_*"  type="tdate"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="dm_*"  type="tdate"   indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="its_*" type="tlong"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="itm_*" type="tlong"   indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="fts_*" type="tfloat"  indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ftm_*" type="tfloat"  indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="pts_*" type="tdouble" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ptm_*" type="tdouble" indexed="true"  stored="true" multiValued="true"/>
-   <!-- Binary fields can be populated using base64 encoded data. Useful e.g. for embedding
-        a small image in a search result using the data URI scheme -->
-   <dynamicField name="xs_*"  type="binary"  indexed="false" stored="true" multiValued="false"/>
-   <dynamicField name="xm_*"  type="binary"  indexed="false" stored="true" multiValued="true"/>
-   <!-- In rare cases a date rather than tdate is needed for sortMissingLast -->
-   <dynamicField name="dds_*" type="date"    indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ddm_*" type="date"    indexed="true"  stored="true" multiValued="true"/>
-   <!-- Sortable fields, good for sortMissingLast support &
-        We use long for integer since 64 bit ints are now common in PHP. -->
-   <dynamicField name="iss_*" type="slong"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="ism_*" type="slong"   indexed="true"  stored="true" multiValued="true"/>
-   <!-- In rare cases a sfloat rather than tfloat is needed for sortMissingLast -->
-   <dynamicField name="fss_*" type="sfloat"  indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="fsm_*" type="sfloat"  indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="pss_*" type="sdouble" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="psm_*" type="sdouble" indexed="true"  stored="true" multiValued="true"/>
-   <!-- In case a 32 bit int is really needed, we provide these fields. 'h' is mnemonic for 'half word', i.e. 32 bit on 64 arch -->
-   <dynamicField name="hs_*" type="integer" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="hm_*" type="integer" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="hss_*" type="sint"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="hsm_*" type="sint"   indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="hts_*" type="tint"   indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="htm_*" type="tint"   indexed="true"  stored="true" multiValued="true"/>
-
-   <!-- Unindexed string fields that can be used to store values that won't be searchable -->
-   <dynamicField name="zs_*" type="string"   indexed="false"  stored="true" multiValued="false"/>
-   <dynamicField name="zm_*" type="string"   indexed="false"  stored="true" multiValued="true"/>
-
-   <!-- Begin added fields to support modules that use features in Solr 3.4
-   but are actually using solr 1.4 -->
-   <dynamicField name="points_*" type="string" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="pointm_*" type="string" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="locs_*" type="string" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="locm_*" type="string" indexed="true"  stored="true" multiValued="true"/>
-   <dynamicField name="geos_*" type="string" indexed="true"  stored="true" multiValued="false"/>
-   <dynamicField name="geom_*" type="string" indexed="true"  stored="true" multiValued="true"/>
-   <!-- End added fields for the support of modules that should use solr 3.4 -->
-
-   <!-- Sortable version of the dynamic string field -->
-   <dynamicField name="sort_*" type="sortString" indexed="true" stored="false"/>
-   <copyField source="ss_*" dest="sort_*"/>
-  <!-- A random sort field -->
-   <dynamicField name="random_*" type="rand" indexed="true" stored="true"/>
-   <!-- This field is used to store access information (e.g. node access grants), as opposed to field data -->
-   <dynamicField name="access_*" type="integer" indexed="true" stored="false" multiValued="true"/>
-
-   <!-- The following causes solr to ignore any fields that don't already match an existing
-        field name or dynamic field, rather than reporting them as an error.
-        Alternately, change the type="ignored" to some other type e.g. "text" if you want
-        unknown fields indexed and/or stored by default -->
-   <dynamicField name="*" type="ignored" multiValued="true" />
-
- </fields>
-
- <!-- Field to use to determine and enforce document uniqueness.
-      Unless this field is marked with required="false", it will be a required field
-   -->
- <uniqueKey>id</uniqueKey>
-
- <!-- field for the QueryParser to use when an explicit fieldname is absent -->
- <defaultSearchField>content</defaultSearchField>
-
- <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
- <solrQueryParser defaultOperator="AND"/>
-
-</schema>
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/protwords.txt b/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/protwords.txt
new file mode 100644
index 0000000..f0fd084
--- /dev/null
+++ b/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/protwords.txt
@@ -0,0 +1,8 @@
+#-----------------------------------------------------------------------
+# This file blocks words from being operated on by the stemmer and word delimiter.
+&amp;
+&lt;
+&gt;
+&#039;
+&quot;
+
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/schema.xml b/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/schema.xml
new file mode 100644
index 0000000..133b118
--- /dev/null
+++ b/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/schema.xml
@@ -0,0 +1,497 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<!--
+ This is the Solr schema file. This file should be named "schema.xml" and
+ should be in the conf directory under the solr home
+ (i.e. ./solr/conf/schema.xml by default)
+ or located where the classloader for the Solr webapp can find it.
+
+ For more information, on how to customize this file, please see
+ http://wiki.apache.org/solr/SchemaXml
+-->
+
+<schema name="drupal-3.0-0-solr1.4" version="1.2">
+    <!-- attribute "name" is the name of this schema and is only used for display purposes.
+         Applications should change this to reflect the nature of the search collection.
+         version="1.2" is Solr's version number for the schema syntax and semantics.  It should
+         not normally be changed by applications.
+         1.0: multiValued attribute did not exist, all fields are multiValued by nature
+         1.1: multiValued attribute introduced, false by default
+         1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
+       -->
+  <types>
+    <!-- field type definitions. The "name" attribute is
+       just a label to be used by field definitions.  The "class"
+       attribute and any other attributes determine the real
+       behavior of the fieldType.
+         Class names starting with "solr" refer to java classes in the
+       org.apache.solr.analysis package.
+    -->
+
+    <!-- The StrField type is not analyzed, but indexed/stored verbatim.
+       - StrField and TextField support an optional compressThreshold which
+       limits compression (if enabled in the derived fields) to values which
+       exceed a certain size (in characters).
+    -->
+    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
+
+    <!-- boolean type: "true" or "false" -->
+    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
+    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
+    <fieldtype name="binary" class="solr.BinaryField"/>
+
+    <!-- The optional sortMissingLast and sortMissingFirst attributes are
+         currently supported on types that are sorted internally as strings.
+       - If sortMissingLast="true", then a sort on this field will cause documents
+         without the field to come after documents with the field,
+         regardless of the requested sort order (asc or desc).
+       - If sortMissingFirst="true", then a sort on this field will cause documents
+         without the field to come before documents with the field,
+         regardless of the requested sort order.
+       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
+         then default lucene sorting will be used which places docs without the
+         field first in an ascending sort and last in a descending sort.
+    -->
+
+    <!-- numeric field types that can be sorted, but are not optimized for range queries -->
+    <fieldType name="integer" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+
+    <!--
+      Note:
+      These should only be used for compatibility with existing indexes (created with older Solr versions)
+      or if "sortMissingFirst" or "sortMissingLast" functionality is needed. Use Trie based fields instead.
+
+      Numeric field types that manipulate the value into
+      a string value that isn't human-readable in its internal form,
+      but with a lexicographic ordering the same as the numeric ordering,
+      so that range queries work correctly.
+    -->
+    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
+    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
+    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
+    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>
+
+    <!--
+     Numeric field types that index each value at various levels of precision
+     to accelerate range queries when the number of values between the range
+     endpoints is large. See the javadoc for NumericRangeQuery for internal
+     implementation details.
+
+     Smaller precisionStep values (specified in bits) will lead to more tokens
+     indexed per value, slightly larger index size, and faster range queries.
+     A precisionStep of 0 disables indexing at different precision levels.
+    -->
+    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+
+
+    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
+         is a more restricted form of the canonical representation of dateTime
+         http://www.w3.org/TR/xmlschema-2/#dateTime
+         The trailing "Z" designates UTC time and is mandatory.
+         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
+         All other components are mandatory.
+
+         Expressions can also be used to denote calculations that should be
+         performed relative to "NOW" to determine the value, ie...
+
+               NOW/HOUR
+                  ... Round to the start of the current hour
+               NOW-1DAY
+                  ... Exactly 1 day prior to now
+               NOW/DAY+6MONTHS+3DAYS
+                  ... 6 months and 3 days in the future from the start of
+                      the current day
+
+         Consult the DateField javadocs for more information.
+      -->
+    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
+
+    <!-- A Trie based date field for faster date range queries and date faceting. -->
+    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>
+
+    <!-- solr.TextField allows the specification of custom text analyzers
+         specified as a tokenizer and a list of token filters. Different
+         analyzers may be specified for indexing and querying.
+
+         The optional positionIncrementGap puts space between multiple fields of
+         this type on the same document, with the purpose of preventing false phrase
+         matching across fields.
+
+         For more info on customizing your analyzer chain, please see
+         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
+     -->
+
+    <!-- One can also specify an existing Analyzer class that has a
+         default constructor via the class attribute on the analyzer element
+    <fieldType name="text_greek" class="solr.TextField">
+      <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
+    </fieldType>
+    -->
+
+    <!-- A text field that only splits on whitespace for exact matching of words -->
+    <fieldType name="text_ws" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
+      <analyzer>
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
+        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
+        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
+        Synonyms and stopwords are customized by external files, and stemming is enabled.
+        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
+        WordDelim parts) are removed.
+        -->
+    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
+      <analyzer type="index">
+        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <!-- in this example, we will only use synonyms at query time
+        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
+        -->
+        <!-- Case insensitive stop word removal.
+          add enablePositionIncrements=true in both the index and query
+          analyzers to leave a 'gap' for more accurate phrase queries.
+        -->
+        <filter class="solr.StopFilterFactory"
+                ignoreCase="true"
+                words="stopwords.txt"
+                enablePositionIncrements="true"
+                />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="1"
+                catenateNumbers="1"
+                catenateAll="0"
+                splitOnCaseChange="1"
+                preserveOriginal="1"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
+        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
+      </analyzer>
+      <analyzer type="query">
+        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
+        <filter class="solr.StopFilterFactory"
+                ignoreCase="true"
+                words="stopwords.txt"
+                enablePositionIncrements="true"
+                />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="0"
+                catenateNumbers="0"
+                catenateAll="0"
+                splitOnCaseChange="1"
+                preserveOriginal="1"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
+        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <!-- An unstemmed text field - good if one does not know the language of the field -->
+    <fieldType name="text_und" class="solr.TextField" positionIncrementGap="100">
+      <analyzer type="index">
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="1"
+                catenateNumbers="1"
+                catenateAll="0"
+                splitOnCaseChange="0"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+      <analyzer type="query">
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
+        <filter class="solr.StopFilterFactory"
+                ignoreCase="true"
+                words="stopwords.txt"
+                enablePositionIncrements="true"
+                />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="0"
+                catenateNumbers="0"
+                catenateAll="0"
+                splitOnCaseChange="0"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <!-- Edge N gram type - for example for matching against queries with results
+        KeywordTokenizer leaves input string intact as a single term.
+        see: http://www.lucidimagination.com/blog/2009/09/08/auto-suggest-from-popular-queries-using-edgengrams/
+   -->
+    <fieldType name="edge_n2_kw_text" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
+     <analyzer type="index">
+       <tokenizer class="solr.KeywordTokenizerFactory"/>
+       <filter class="solr.LowerCaseFilterFactory"/>
+       <filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="25" />
+     </analyzer>
+     <analyzer type="query">
+       <tokenizer class="solr.KeywordTokenizerFactory"/>
+       <filter class="solr.LowerCaseFilterFactory"/>
+     </analyzer>
+    </fieldType>
+   <!--  Setup simple analysis for spell checking -->
+
+   <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100">
+     <analyzer>
+       <tokenizer class="solr.StandardTokenizerFactory" />
+       <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
+       <filter class="solr.LengthFilterFactory" min="4" max="20" />
+       <filter class="solr.LowerCaseFilterFactory" />
+       <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
+     </analyzer>
+   </fieldType>
+
+    <!-- This is an example of using the KeywordTokenizer along
+         With various TokenFilterFactories to produce a sortable field
+         that does not include some properties of the source text
+      -->
+    <fieldType name="sortString" class="solr.TextField" sortMissingLast="true" omitNorms="true">
+      <analyzer>
+        <!-- KeywordTokenizer does no actual tokenizing, so the entire
+             input string is preserved as a single token
+          -->
+        <tokenizer class="solr.KeywordTokenizerFactory"/>
+        <!-- The LowerCase TokenFilter does what you expect, which can be
+             when you want your sorting to be case insensitive
+          -->
+        <filter class="solr.LowerCaseFilterFactory" />
+        <!-- The TrimFilter removes any leading or trailing whitespace -->
+        <filter class="solr.TrimFilterFactory" />
+        <!-- The PatternReplaceFilter gives you the flexibility to use
+             Java Regular expression to replace any sequence of characters
+             matching a pattern with an arbitrary replacement string,
+             which may include back refrences to portions of the orriginal
+             string matched by the pattern.
+
+             See the Java Regular Expression documentation for more
+             infomation on pattern and replacement string syntax.
+
+             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
+
+        <filter class="solr.PatternReplaceFilterFactory"
+                pattern="(^\p{Punct}+)" replacement="" replace="all"
+        />
+        -->
+      </analyzer>
+    </fieldType>
+
+    <!-- A random sort type -->
+    <fieldType name="rand" class="solr.RandomSortField" indexed="true" />
+
+    <!-- since fields of this type are by default not stored or indexed, any data added to
+         them will be ignored outright
+     -->
+    <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField" />
+
+ </types>
+
+
+ <fields>
+   <!-- Valid attributes for fields:
+     name: mandatory - the name for the field
+     type: mandatory - the name of a previously defined type from the <types> section
+     indexed: true if this field should be indexed (searchable or sortable)
+     stored: true if this field should be retrievable
+     compressed: [false] if this field should be stored using gzip compression
+       (this will only apply if the field type is compressable; among
+       the standard field types, only TextField and StrField are)
+     multiValued: true if this field may contain multiple values per document
+     omitNorms: (expert) set to true to omit the norms associated with
+       this field (this disables length normalization and index-time
+       boosting for the field, and saves some memory).  Only full-text
+       fields or fields that need an index-time boost need norms.
+   -->
+
+<!-- The document id is usually derived from a site-spcific key (hash) and the entity type and ID like:
+     $document->id = $hash . '/node/' . $node->nid; -->
+
+   <field name="id" type="string" indexed="true" stored="true" required="true" />
+   <!-- entity_id is the numeric object ID, e.g. Node ID, File ID -->
+   <field name="entity_id"  type="long" indexed="true" stored="true" />
+   <!-- entity_type is 'node', 'file', 'user', or some other Drupal object type -->
+   <field name="entity_type" type="string" indexed="true" stored="true" required="true" />
+   <!-- bundle is a node type, or as appropriate for other entity types -->
+   <field name="bundle" type="string" indexed="true" stored="true"/>
+   <field name="bundle_name" type="string" indexed="true" stored="true"/>
+
+   <field name="site" type="string" indexed="true" stored="true"/>
+   <field name="hash" type="string" indexed="true" stored="true"/>
+   <field name="url" type="string" indexed="true" stored="true"/>
+   <!-- label is the default field for a human-readable string for this entity (e.g. the title of a node) -->
+   <field name="label" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
+   <!-- The string version of the title is used for sorting -->
+   <copyField source="label" dest="sort_label"/>
+   <!-- content is the default field for full text search - dump crap here -->
+   <field name="content" type="text" indexed="true" stored="true" termVectors="true"/>
+   <field name="teaser" type="text" indexed="false" stored="true"/>
+
+   <field name="path" type="string" indexed="true" stored="true"/>
+   <field name="path_alias" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
+
+ <!-- These are the fields that correspond to a Drupal node. The beauty of having
+     Lucene store title, body, type, etc., is that we retrieve them with the search
+     result set and don't need to go to the database with a node_load. -->
+
+   <field name="tid"  type="long" indexed="true" stored="true" multiValued="true"/>
+
+   <field name="taxonomy_names" type="text" indexed="true" stored="false" termVectors="true" multiValued="true" omitNorms="true"/>
+   <!-- Copy terms to a single field that contains all taxonomy term names -->
+   <copyField source="tm_vid_*" dest="taxonomy_names"/>
+
+   <!-- Here, default is used to create a "timestamp" field indicating
+        when each document was indexed.-->
+   <field name="timestamp" type="tdate" indexed="true" stored="true" default="NOW" multiValued="false"/>
+
+	<!-- This field is used to build the spellchecker index -->
+   <field name="spell" type="textSpell" indexed="true" stored="true" multiValued="true"/>
+
+  <!-- copyField commands copy one field to another at the time a document
+        is added to the index.  It's used either to index the same field differently,
+        or to add multiple fields to the same field for easier/faster searching.  -->
+   <copyField source="label" dest="spell"/>
+   <copyField source="content" dest="spell"/>
+
+   <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
+        will be used if the name matches any of the patterns.
+        RESTRICTION: the glob-like pattern in the name attribute must have
+        a "*" only at the start or the end.
+        EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
+        Longer patterns will be matched first.  if equal size patterns
+        both match, the first appearing in the schema will be used.  -->
+
+   <!-- A set of fields to contain text extracted from HTML tag contents which we
+        can boost at query time. -->
+   <dynamicField name="tags_*" type="text"   indexed="true" stored="false" omitNorms="true"/>
+
+   <!-- For 2 and 3 letter prefix dynamic fields, the 1st letter indicates the data type and
+        the last letter is 's' for single valued, 'm' for multi-valued -->
+
+   <!-- We use long for integer since 64 bit ints are now common in PHP. -->
+   <dynamicField name="is_*"  type="long"    indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="im_*"  type="long"    indexed="true"  stored="true" multiValued="true"/>
+   <!-- List of floats can be saved in a regular float field -->
+   <dynamicField name="fs_*"  type="float"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="fm_*"  type="float"   indexed="true"  stored="true" multiValued="true"/>
+   <!-- List of booleans can be saved in a regular boolean field -->
+   <dynamicField name="bm_*"  type="boolean" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="bs_*"  type="boolean" indexed="true"  stored="true" multiValued="false"/>
+   <!-- Regular text (without processing) can be stored in a string field-->
+   <dynamicField name="ss_*"  type="string"  indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="sm_*"  type="string"  indexed="true"  stored="true" multiValued="true"/>
+   <!-- Normal text fields are for full text - the relevance of a match depends on the length of the text -->
+   <dynamicField name="ts_*"  type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true"/>
+   <dynamicField name="tm_*"  type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true"/>
+   <!-- Unstemmed text fields for full text - the relevance of a match depends on the length of the text -->
+   <dynamicField name="tus_*" type="text_und" indexed="true"  stored="true" multiValued="false" termVectors="true"/>
+   <dynamicField name="tum_*" type="text_und" indexed="true"  stored="true" multiValued="true" termVectors="true"/>
+   <!-- These text fields omit norms - useful for extracted text like taxonomy_names -->
+   <dynamicField name="tos_*" type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true" omitNorms="true"/>
+   <dynamicField name="tom_*" type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true" omitNorms="true"/>
+   <!-- Special-purpose text fields -->
+   <dynamicField name="tes_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="false" omitTermFreqAndPositions="true" />
+   <dynamicField name="tem_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="true" omitTermFreqAndPositions="true" />
+   <dynamicField name="tws_*" type="text_ws" indexed="true" stored="true" multiValued="false"/>
+   <dynamicField name="twm_*" type="text_ws" indexed="true" stored="true" multiValued="true"/>
+
+   <!-- trie dates are preferred, so give them the 2 letter prefix -->
+   <dynamicField name="ds_*"  type="tdate"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="dm_*"  type="tdate"   indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="its_*" type="tlong"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="itm_*" type="tlong"   indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="fts_*" type="tfloat"  indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ftm_*" type="tfloat"  indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="pts_*" type="tdouble" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ptm_*" type="tdouble" indexed="true"  stored="true" multiValued="true"/>
+   <!-- Binary fields can be populated using base64 encoded data. Useful e.g. for embedding
+        a small image in a search result using the data URI scheme -->
+   <dynamicField name="xs_*"  type="binary"  indexed="false" stored="true" multiValued="false"/>
+   <dynamicField name="xm_*"  type="binary"  indexed="false" stored="true" multiValued="true"/>
+   <!-- In rare cases a date rather than tdate is needed for sortMissingLast -->
+   <dynamicField name="dds_*" type="date"    indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ddm_*" type="date"    indexed="true"  stored="true" multiValued="true"/>
+   <!-- Sortable fields, good for sortMissingLast support &
+        We use long for integer since 64 bit ints are now common in PHP. -->
+   <dynamicField name="iss_*" type="slong"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ism_*" type="slong"   indexed="true"  stored="true" multiValued="true"/>
+   <!-- In rare cases a sfloat rather than tfloat is needed for sortMissingLast -->
+   <dynamicField name="fss_*" type="sfloat"  indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="fsm_*" type="sfloat"  indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="pss_*" type="sdouble" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="psm_*" type="sdouble" indexed="true"  stored="true" multiValued="true"/>
+   <!-- In case a 32 bit int is really needed, we provide these fields. 'h' is mnemonic for 'half word', i.e. 32 bit on 64 arch -->
+   <dynamicField name="hs_*" type="integer" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="hm_*" type="integer" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="hss_*" type="sint"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="hsm_*" type="sint"   indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="hts_*" type="tint"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="htm_*" type="tint"   indexed="true"  stored="true" multiValued="true"/>
+
+   <!-- Unindexed string fields that can be used to store values that won't be searchable -->
+   <dynamicField name="zs_*" type="string"   indexed="false"  stored="true" multiValued="false"/>
+   <dynamicField name="zm_*" type="string"   indexed="false"  stored="true" multiValued="true"/>
+
+   <!-- Begin added fields to support modules that use features in Solr 3.4
+   but are actually using solr 1.4 -->
+   <dynamicField name="points_*" type="string" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="pointm_*" type="string" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="locs_*" type="string" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="locm_*" type="string" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="geos_*" type="string" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="geom_*" type="string" indexed="true"  stored="true" multiValued="true"/>
+   <!-- End added fields for the support of modules that should use solr 3.4 -->
+
+   <!-- Sortable version of the dynamic string field -->
+   <dynamicField name="sort_*" type="sortString" indexed="true" stored="false"/>
+   <copyField source="ss_*" dest="sort_*"/>
+  <!-- A random sort field -->
+   <dynamicField name="random_*" type="rand" indexed="true" stored="true"/>
+   <!-- This field is used to store access information (e.g. node access grants), as opposed to field data -->
+   <dynamicField name="access_*" type="integer" indexed="true" stored="false" multiValued="true"/>
+
+   <!-- The following causes solr to ignore any fields that don't already match an existing
+        field name or dynamic field, rather than reporting them as an error.
+        Alternately, change the type="ignored" to some other type e.g. "text" if you want
+        unknown fields indexed and/or stored by default -->
+   <dynamicField name="*" type="ignored" multiValued="true" />
+
+ </fields>
+
+ <!-- Field to use to determine and enforce document uniqueness.
+      Unless this field is marked with required="false", it will be a required field
+   -->
+ <uniqueKey>id</uniqueKey>
+
+ <!-- field for the QueryParser to use when an explicit fieldname is absent -->
+ <defaultSearchField>content</defaultSearchField>
+
+ <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
+ <solrQueryParser defaultOperator="AND"/>
+
+</schema>
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/solrconfig.xml b/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/solrconfig.xml
new file mode 100644
index 0000000..a0818cd
--- /dev/null
+++ b/profiles/acquia/modules/apachesolr/solr-conf/solr-1.4/solrconfig.xml
@@ -0,0 +1,736 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<config name="drupal-3.0-0-solr1.4">
+  <!-- Set this to 'false' if you want solr to continue working after it has
+       encountered an severe configuration error.  In a production environment,
+       you may want solr to keep working even if one handler is mis-configured.
+
+       You may also set this to false using by setting the system property:
+         -Dsolr.abortOnConfigurationError=false
+     -->
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+
+  <!-- Used to specify an alternate directory to hold all index data
+       other than the default ./data under the Solr home.
+       If replication is in use, this should match the replication configuration. -->
+<!--
+  <dataDir>${solr.data.dir:./solr/data}</dataDir>
+-->
+
+  <indexDefaults>
+   <!-- Values here affect all index writers and act as a default unless overridden. -->
+    <useCompoundFile>false</useCompoundFile>
+
+    <mergeFactor>10</mergeFactor>
+    <!--
+     If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
+
+     -->
+    <!--<maxBufferedDocs>1000</maxBufferedDocs>-->
+    <!-- Tell Lucene when to flush documents to disk.
+    Giving Lucene more memory for indexing means faster indexing at the cost of more RAM
+
+    If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
+
+    -->
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <maxMergeDocs>2147483647</maxMergeDocs>
+    <maxFieldLength>20000</maxFieldLength>
+    <writeLockTimeout>1000</writeLockTimeout>
+    <commitLockTimeout>10000</commitLockTimeout>
+
+    <!--
+     Expert: Turn on Lucene's auto commit capability.
+     This causes intermediate segment flushes to write a new lucene
+     index descriptor, enabling it to be opened by an external
+     IndexReader.
+     NOTE: Despite the name, this value does not have any relation to Solr's autoCommit functionality
+     -->
+    <!--<luceneAutoCommit>false</luceneAutoCommit>-->
+    <!--
+     Expert:
+     The Merge Policy in Lucene controls how merging is handled by Lucene.  The default in 2.3 is the LogByteSizeMergePolicy, previous
+     versions used LogDocMergePolicy.
+
+     LogByteSizeMergePolicy chooses segments to merge based on their size.  The Lucene 2.2 default, LogDocMergePolicy chose when
+     to merge based on number of documents
+
+     Other implementations of MergePolicy must have a no-argument constructor
+     -->
+    <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy" />
+
+    <!--
+     Expert:
+     The Merge Scheduler in Lucene controls how merges are performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
+      can perform merges in the background using separate threads.  The SerialMergeScheduler (Lucene 2.2 default) does not.
+     -->
+    <!--<mergeScheduler>org.apache.lucene.index.ConcurrentMergeScheduler</mergeScheduler>-->
+
+    <!--
+      This option specifies which Lucene LockFactory implementation to use.
+
+      single = SingleInstanceLockFactory - suggested for a read-only index
+               or when there is no possibility of another process trying
+               to modify the index.
+      native = NativeFSLockFactory
+      simple = SimpleFSLockFactory
+
+      (For backwards compatibility with Solr 1.2, 'simple' is the default
+       if not specified.)
+    -->
+    <lockType>single</lockType>
+  </indexDefaults>
+
+  <mainIndex>
+    <!-- options specific to the main on-disk lucene index -->
+    <useCompoundFile>false</useCompoundFile>
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <mergeFactor>4</mergeFactor>
+    <maxMergeDocs>2147483647</maxMergeDocs>
+    <maxFieldLength>20000</maxFieldLength>
+
+    <!-- If true, unlock any held write or commit locks on startup.
+         This defeats the locking mechanism that allows multiple
+         processes to safely access a lucene index, and should be
+         used with care.
+         This is not needed if lock type is 'none' or 'single'
+     -->
+    <unlockOnStartup>false</unlockOnStartup>
+
+    <!--
+        Custom deletion policies can specified here. The class must
+        implement org.apache.lucene.index.IndexDeletionPolicy.
+
+        http://lucene.apache.org/java/2_3_2/api/org/apache/lucene/index/IndexDeletionPolicy.html
+
+        The standard Solr IndexDeletionPolicy implementation supports deleting
+        index commit points on number of commits, age of commit point and
+        optimized status.
+
+        The latest commit point should always be preserved regardless
+        of the criteria.
+    -->
+    <deletionPolicy class="solr.SolrDeletionPolicy">
+      <!-- Keep only optimized commit points -->
+      <str name="keepOptimizedOnly">false</str>
+      <!-- The maximum number of commit points to be kept -->
+      <str name="maxCommitsToKeep">1</str>
+      <!--
+          Delete all commit points once they have reached the given age.
+          Supports DateMathParser syntax e.g.
+
+          <str name="maxCommitAge">30MINUTES</str>
+          <str name="maxCommitAge">1DAY</str>
+      -->
+    </deletionPolicy>
+
+  </mainIndex>
+
+  <!--	Enables JMX if and only if an existing MBeanServer is found, use
+  		this if you want to configure JMX through JVM parameters. Remove
+  		this to disable exposing Solr configuration and statistics to JMX.
+
+		If you want to connect to a particular server, specify the agentId
+		e.g. <jmx agentId="myAgent" />
+
+		If you want to start a new MBeanServer, specify the serviceUrl
+		e.g <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr" />
+
+		For more details see http://wiki.apache.org/solr/SolrJmx
+  -->
+  <jmx />
+
+  <!-- the default high-performance update handler -->
+  <updateHandler class="solr.DirectUpdateHandler2">
+
+    <!-- A prefix of "solr." for class names is an alias that
+         causes solr to search appropriate packages, including
+         org.apache.solr.(search|update|request|core|analysis)
+     -->
+
+    <!-- Perform a <commit/> automatically under certain conditions:
+         maxDocs - number of updates since last commit is greater than this
+         maxTime - oldest uncommited update (in ms) is this long ago
+    -->
+    <autoCommit>
+      <maxDocs>2000</maxDocs>
+      <maxTime>120000</maxTime>
+    </autoCommit>
+
+
+    <!-- The RunExecutableListener executes an external command.
+         exe - the name of the executable to run
+         dir - dir to use as the current working directory. default="."
+         wait - the calling thread waits until the executable returns. default="true"
+         args - the arguments to pass to the program.  default=nothing
+         env - environment variables to set.  default=nothing
+      -->
+    <!-- A postCommit event is fired after every commit or optimize command
+    <listener event="postCommit" class="solr.RunExecutableListener">
+      <str name="exe">solr/bin/snapshooter</str>
+      <str name="dir">.</str>
+      <bool name="wait">true</bool>
+      <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
+      <arr name="env"> <str>MYVAR=val1</str> </arr>
+    </listener>
+    -->
+    <!-- A postOptimize event is fired only after every optimize command, useful
+         in conjunction with index distribution to only distribute optimized indicies
+    <listener event="postOptimize" class="solr.RunExecutableListener">
+      <str name="exe">snapshooter</str>
+      <str name="dir">solr/bin</str>
+      <bool name="wait">true</bool>
+    </listener>
+    -->
+
+  </updateHandler>
+
+
+  <query>
+    <!-- Maximum number of clauses in a boolean query... can affect
+        range or prefix queries that expand to big boolean
+        queries.  An exception is thrown if exceeded.  -->
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+
+    <!-- There are two implementations of cache available for Solr,
+         LRUCache, based on a synchronized LinkedHashMap, and
+         FastLRUCache, based on a ConcurrentHashMap.  FastLRUCache has faster gets
+         and slower puts in single threaded operation and thus is generally faster
+         than LRUCache when the hit ratio of the cache is high (> 75%), and may be
+         faster under other scenarios on multi-cpu systems. -->
+    <!-- Cache used by SolrIndexSearcher for filters (DocSets),
+         unordered sets of *all* documents that match a query.
+         When a new searcher is opened, its caches may be prepopulated
+         or "autowarmed" using data from caches in the old searcher.
+         autowarmCount is the number of items to prepopulate.  For LRUCache,
+         the autowarmed items will be the most recently accessed items.
+       Parameters:
+         class - the SolrCache implementation LRUCache or FastLRUCache
+         size - the maximum number of entries in the cache
+         initialSize - the initial capacity (number of entries) of
+           the cache.  (seel java.util.HashMap)
+         autowarmCount - the number of entries to prepopulate from
+           and old cache.
+         -->
+    <filterCache
+      class="solr.FastLRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="128"/>
+
+    <!-- Cache used to hold field values that are quickly accessible
+         by document id.  The fieldValueCache is created by default
+         even if not configured here.
+      <fieldValueCache
+        class="solr.FastLRUCache"
+        size="512"
+        autowarmCount="128"
+        showItems="32"
+      />
+    -->
+
+   <!-- queryResultCache caches results of searches - ordered lists of
+         document ids (DocList) based on a query, a sort, and the range
+         of documents requested.  -->
+    <queryResultCache
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="32"/>
+
+  <!-- documentCache caches Lucene Document objects (the stored fields for each document).
+       Since Lucene internal document ids are transient, this cache will not be autowarmed.  -->
+    <documentCache
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="0"/>
+
+    <!-- If true, stored fields that are not requested will be loaded lazily.
+
+    This can result in a significant speed improvement if the usual case is to
+    not load all stored fields, especially if the skipped fields are large compressed
+    text fields.
+    -->
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+    <!-- Example of a generic cache.  These caches may be accessed by name
+         through SolrIndexSearcher.getCache(),cacheLookup(), and cacheInsert().
+         The purpose is to enable easy caching of user/application level data.
+         The regenerator argument should be specified as an implementation
+         of solr.search.CacheRegenerator if autowarming is desired.  -->
+    <!--
+    <cache name="myUserCache"
+      class="solr.LRUCache"
+      size="4096"
+      initialSize="1024"
+      autowarmCount="1024"
+      regenerator="org.mycompany.mypackage.MyRegenerator"
+      />
+    -->
+
+   <!-- An optimization that attempts to use a filter to satisfy a search.
+         If the requested sort does not include score, then the filterCache
+         will be checked for a filter matching the query. If found, the filter
+         will be used as the source of document ids, and then the sort will be
+         applied to that.
+    <useFilterForSortedQuery>true</useFilterForSortedQuery>
+   -->
+
+   <!-- An optimization for use with the queryResultCache.  When a search
+         is requested, a superset of the requested number of document ids
+         are collected.  For example, if a search for a particular query
+         requests matching documents 10 through 19, and queryWindowSize is 50,
+         then documents 0 through 49 will be collected and cached.  Any further
+         requests in that range can be satisfied via the cache.  -->
+    <queryResultWindowSize>50</queryResultWindowSize>
+
+    <!-- Maximum number of documents to cache for any entry in the
+         queryResultCache. -->
+    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+    <!-- This entry enables an int hash representation for filters (DocSets)
+         when the number of items in the set is less than maxSize.  For smaller
+         sets, this representation is more memory efficient, more efficient to
+         iterate over, and faster to take intersections.  -->
+    <HashDocSet maxSize="3000" loadFactor="0.75"/>
+
+    <!-- a newSearcher event is fired whenever a new searcher is being prepared
+         and there is a current searcher handling requests (aka registered). -->
+    <!-- QuerySenderListener takes an array of NamedList and executes a
+         local query request for each NamedList in sequence. -->
+    <listener event="newSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst> <str name="q">solr</str> <str name="start">0</str> <str name="rows">10</str> </lst>
+        <lst> <str name="q">rocks</str> <str name="start">0</str> <str name="rows">10</str> </lst>
+        <lst><str name="q">static newSearcher warming query from solrconfig.xml</str></lst>
+      </arr>
+    </listener>
+
+    <!-- a firstSearcher event is fired whenever a new searcher is being
+         prepared but there is no current registered searcher to handle
+         requests or to gain autowarming data from. -->
+    <listener event="firstSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst> <str name="q">fast_warm</str> <str name="start">0</str> <str name="rows">10</str> </lst>
+        <lst><str name="q">static firstSearcher warming query from solrconfig.xml</str></lst>
+      </arr>
+    </listener>
+
+    <!-- If a search request comes in and there is no current registered searcher,
+         then immediately register the still warming searcher and use it.  If
+         "false" then all requests will block until the first searcher is done
+         warming. -->
+    <useColdSearcher>false</useColdSearcher>
+
+    <!-- Maximum number of searchers that may be warming in the background
+      concurrently.  An error is returned if this limit is exceeded. Recommend
+      1-2 for read-only slaves, higher for masters w/o cache warming. -->
+    <maxWarmingSearchers>2</maxWarmingSearchers>
+
+  </query>
+
+  <!--
+    Let the dispatch filter handler /select?qt=XXX
+    handleSelect=true will use consistent error handling for /select and /update
+    handleSelect=false will use solr1.1 style error formatting
+    -->
+  <requestDispatcher handleSelect="true" >
+    <!--Make sure your system has some authentication before enabling remote streaming!  -->
+    <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
+
+    <!-- Set HTTP caching related parameters (for proxy caches and clients).
+
+         To get the behaviour of Solr 1.2 (ie: no caching related headers)
+         use the never304="true" option and do not specify a value for
+         <cacheControl>
+    -->
+    <!-- <httpCaching never304="true"> -->
+    <httpCaching lastModifiedFrom="openTime"
+                 etagSeed="Solr">
+       <!-- lastModFrom="openTime" is the default, the Last-Modified value
+            (and validation against If-Modified-Since requests) will all be
+            relative to when the current Searcher was opened.
+            You can change it to lastModFrom="dirLastMod" if you want the
+            value to exactly corrispond to when the physical index was last
+            modified.
+
+            etagSeed="..." is an option you can change to force the ETag
+            header (and validation against If-None-Match requests) to be
+            differnet even if the index has not changed (ie: when making
+            significant changes to your config file)
+
+            lastModifiedFrom and etagSeed are both ignored if you use the
+            never304="true" option.
+       -->
+       <!-- If you include a <cacheControl> directive, it will be used to
+            generate a Cache-Control header, as well as an Expires header
+            if the value contains "max-age="
+
+            By default, no Cache-Control header is generated.
+
+            You can use the <cacheControl> option even if you have set
+            never304="true"
+       -->
+       <!-- <cacheControl>max-age=30, public</cacheControl> -->
+    </httpCaching>
+  </requestDispatcher>
+
+
+  <!-- requestHandler plugins... incoming queries will be dispatched to the
+     correct handler based on the path or the qt (query type) param.
+     Names starting with a '/' are accessed with the a path equal to the
+     registered name.  Names without a leading '/' are accessed with:
+      http://host/app/select?qt=name
+     If no qt is defined, the requestHandler that declares default="true"
+     will be used.
+  -->
+  <requestHandler name="standard" class="solr.SearchHandler">
+    <!-- default values for query parameters -->
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+       <bool name="omitHeader">true</bool>
+       <!--
+       <int name="rows">10</int>
+       <str name="fl">*</str>
+       <str name="version">2.1</str>
+        -->
+     </lst>
+  </requestHandler>
+
+<!-- Please refer to http://wiki.apache.org/solr/SolrReplication for details on configuring replication -->
+<!-- MASTER_REPLICATION_START
+<requestHandler name="/replication" class="solr.ReplicationHandler" >
+    <lst name="master">
+        <str name="replicateAfter">commit</str>
+        <str name="replicateAfter">startup</str>
+        <str name="confFiles">schema.xml,mapping-ISOLatin1Accent.txt,protwords.txt,stopwords.txt,synonyms.txt,elevate.xml</str>
+    </lst>
+</requestHandler>
+ MASTER_REPLICATION_END -->
+
+<!-- SLAVE_REPLICATION_START
+<requestHandler name="/replication" class="solr.ReplicationHandler" >
+    <lst name="slave">
+        <str name="masterUrl">$MASTER_CORE_URL/replication</str>
+        <str name="pollInterval">$POLL_TIME</str>
+     </lst>
+</requestHandler>
+ SLAVE_REPLICATION_END -->
+
+  <!-- DisMaxRequestHandler allows easy searching across multiple fields
+       for simple user-entered phrases.  It's implementation is now
+       just the standard SearchHandler with a default query type
+       of "dismax".
+       see http://wiki.apache.org/solr/DisMaxRequestHandler
+   -->
+  <requestHandler name="dismax" class="solr.SearchHandler">
+    <lst name="defaults">
+     <str name="defType">dismax</str>
+     <str name="echoParams">explicit</str>
+     <bool name="omitHeader">true</bool>
+    </lst>
+  </requestHandler>
+
+  <!-- Note how you can register the same handler multiple times with
+       different names (and different init parameters)
+    -->
+  <requestHandler name="drupal" class="solr.SearchHandler" default="true">
+    <lst name="defaults">
+     <str name="defType">dismax</str>
+     <str name="echoParams">explicit</str>
+     <bool name="omitHeader">true</bool>
+     <float name="tie">0.01</float>
+     <str name="pf">
+        content^2.0
+     </str>
+     <int name="ps">15</int>
+     <!-- Abort any searches longer than 4 seconds -->
+     <!-- <int name="timeAllowed">4000</int>  -->
+     <str name="mm">1</str>
+     <str name="q.alt">*:*</str>
+
+   <!-- example highlighter config, enable per-query with hl=true -->
+     <str name="hl">true</str>
+     <str name="hl.fl">content</str>
+     <int name="hl.snippets">3</int>
+     <str name="hl.mergeContiguous">true</str>
+   <!-- instructs Solr to return the field itself if no query terms are
+        found -->
+     <str name="f.content.hl.alternateField">teaser</str>
+     <str name="f.content.hl.maxAlternateFieldLength">256</str>
+     <!-- JS: I wasn't getting good results here... I'm turning off for now
+     because I was getting periods (.) by themselves at the beginning of
+     snippets and don't feel like debugging anymore.  Without the regex is
+     faster too -->
+     <!--<str name="f.content.hl.fragmenter">regex</str>--> <!-- defined below -->
+
+    <!-- By default, don't spell check -->
+      <str name="spellcheck">false</str>
+    <!-- Defaults for the spell checker when used -->
+      <str name="spellcheck.onlyMorePopular">true</str>
+      <str name="spellcheck.extendedResults">false</str>
+      <!--  The number of suggestions to return -->
+      <str name="spellcheck.count">1</str>
+    </lst>
+    <arr name="last-components">
+      <str>spellcheck</str>
+    </arr>
+  </requestHandler>
+
+  <!-- The more like this handler offers many advantages over the standard handler,
+    when performing moreLikeThis requests.-->
+  <requestHandler name="mlt" class="solr.MoreLikeThisHandler">
+    <lst name="defaults">
+      <str name="mlt.mintf">1</str>
+      <str name="mlt.mindf">1</str>
+      <str name="mlt.minwl">3</str>
+      <str name="mlt.maxwl">15</str>
+      <str name="mlt.maxqt">20</str>
+      <str name="mlt.match.include">false</str>
+      <!-- Abort any searches longer than 1.5 seconds -->
+      <!-- <int name="timeAllowed">1500</int> -->
+    </lst>
+  </requestHandler>
+
+
+  <!--
+   Search components are registered to SolrCore and used by Search Handlers
+
+   By default, the following components are avaliable:
+
+   <searchComponent name="query"     class="org.apache.solr.handler.component.QueryComponent" />
+   <searchComponent name="facet"     class="org.apache.solr.handler.component.FacetComponent" />
+   <searchComponent name="mlt"       class="org.apache.solr.handler.component.MoreLikeThisComponent" />
+   <searchComponent name="highlight" class="org.apache.solr.handler.component.HighlightComponent" />
+   <searchComponent name="stats"     class="org.apache.solr.handler.component.StatsComponent" />
+   <searchComponent name="debug"     class="org.apache.solr.handler.component.DebugComponent" />
+
+   Default configuration in a requestHandler would look like:
+    <arr name="components">
+      <str>query</str>
+      <str>facet</str>
+      <str>mlt</str>
+      <str>highlight</str>
+      <str>stats</str>
+      <str>debug</str>
+    </arr>
+
+    If you register a searchComponent to one of the standard names, that will be used instead.
+    To insert components before or after the 'standard' components, use:
+
+    <arr name="first-components">
+      <str>myFirstComponentName</str>
+    </arr>
+
+    <arr name="last-components">
+      <str>myLastComponentName</str>
+    </arr>
+  -->
+
+   <!-- The spell check component can return a list of alternative spelling
+  suggestions.  -->
+  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+
+    <str name="queryAnalyzerFieldType">textSpell</str>
+
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">spell</str>
+      <str name="spellcheckIndexDir">./spellchecker1</str>
+      <str name="buildOnOptimize">true</str>
+    </lst>
+    <lst name="spellchecker">
+      <str name="name">jarowinkler</str>
+      <str name="field">spell</str>
+      <!-- Use a different Distance Measure -->
+      <str name="distanceMeasure">org.apache.lucene.search.spell.JaroWinklerDistance</str>
+      <str name="spellcheckIndexDir">./spellchecker2</str>
+      <str name="buildOnOptimize">true</str>
+    </lst>
+
+  </searchComponent>
+
+  <queryConverter name="queryConverter" class="solr.SpellingQueryConverter"/>
+
+  <!-- a search component that enables you to configure the top results for
+       a given query regardless of the normal lucene scoring.-->
+  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
+    <!-- pick a fieldType to analyze queries -->
+    <str name="queryFieldType">string</str>
+    <str name="config-file">elevate.xml</str>
+  </searchComponent>
+
+  <!-- a request handler utilizing the elevator component -->
+  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="echoParams">explicit</str>
+    </lst>
+    <arr name="last-components">
+      <str>elevator</str>
+    </arr>
+  </requestHandler>
+
+
+  <!-- Update request handler.
+
+       Note: Since solr1.1 requestHandlers requires a valid content type header if posted in
+       the body. For example, curl now requires: -H 'Content-type:text/xml; charset=utf-8'
+       The response format differs from solr1.1 formatting and returns a standard error code.
+
+       To enable solr1.1 behavior, remove the /update handler or change its path
+    -->
+  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
+
+  <!--
+   Analysis request handler.  Since Solr 1.3.  Use to returnhow a document is analyzed.  Useful
+   for debugging and as a token server for other types of applications
+   -->
+  <requestHandler name="/analysis" class="solr.AnalysisRequestHandler" />
+
+
+  <!-- CSV update handler, loaded on demand -->
+  <requestHandler name="/update/csv" class="solr.CSVRequestHandler" startup="lazy" />
+
+
+  <!--
+   Admin Handlers - This will register all the standard admin RequestHandlers.  Adding
+   this single handler is equivalent to registering:
+
+  <requestHandler name="/admin/luke"       class="org.apache.solr.handler.admin.LukeRequestHandler" />
+  <requestHandler name="/admin/system"     class="org.apache.solr.handler.admin.SystemInfoHandler" />
+  <requestHandler name="/admin/plugins"    class="org.apache.solr.handler.admin.PluginInfoHandler" />
+  <requestHandler name="/admin/threads"    class="org.apache.solr.handler.admin.ThreadDumpHandler" />
+  <requestHandler name="/admin/properties" class="org.apache.solr.handler.admin.PropertiesRequestHandler" />
+  <requestHandler name="/admin/file"       class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
+
+  If you wish to hide files under ${solr.home}/conf, explicitly register the ShowFileRequestHandler using:
+  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
+    <lst name="invariants">
+     <str name="hidden">synonyms.txt</str>
+     <str name="hidden">anotherfile.txt</str>
+    </lst>
+  </requestHandler>
+  -->
+  <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />
+
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="PingRequestHandler">
+    <lst name="defaults">
+      <str name="qt">standard</str>
+      <str name="q">solrpingquery</str>
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Files that are needed to start the service -->
+  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
+    <lst name="invariants">
+     <str name="hidden">admin-extra.html</str>
+     <str name="hidden">scripts.conf</str>
+     <str name="hidden">xslt/example.xsl</str>
+     <str name="hidden">xslt/example_atom.xsl</str>
+     <str name="hidden">xslt/example_rss.xsl</str>
+     <str name="hidden">xslt/luke.xsl</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Echo the request contents back to the client -->
+  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
+    <lst name="defaults">
+     <str name="echoParams">explicit</str> <!-- for all params (including the default etc) use: 'all' -->
+     <str name="echoHandler">true</str>
+    </lst>
+  </requestHandler>
+
+  <highlighting>
+   <!-- Configure the standard fragmenter -->
+   <!-- This could most likely be commented out in the "default" case -->
+   <fragmenter name="gap" class="org.apache.solr.highlight.GapFragmenter" default="true">
+    <lst name="defaults">
+     <int name="hl.fragsize">100</int>
+    </lst>
+   </fragmenter>
+
+   <!-- A regular-expression-based fragmenter (f.i., for sentence extraction) -->
+   <fragmenter name="regex" class="org.apache.solr.highlight.RegexFragmenter">
+    <lst name="defaults">
+      <!-- slightly smaller fragsizes work better because of slop -->
+      <int name="hl.fragsize">70</int>
+      <!-- allow 50% slop on fragment sizes -->
+      <float name="hl.regex.slop">0.5</float>
+      <!-- a basic sentence pattern -->
+      <str name="hl.regex.pattern">[-\w ,/\n\"']{20,200}</str>
+    </lst>
+   </fragmenter>
+
+   <!-- Configure the standard formatter -->
+   <formatter name="html" class="org.apache.solr.highlight.HtmlFormatter" default="true">
+    <lst name="defaults">
+     <str name="hl.simple.pre"><![CDATA[<strong>]]></str>
+     <str name="hl.simple.post"><![CDATA[</strong>]]></str>
+    </lst>
+   </formatter>
+  </highlighting>
+
+
+  <!-- queryResponseWriter plugins... query responses will be written using the
+    writer specified by the 'wt' request parameter matching the name of a registered
+    writer.
+    The "default" writer is the default and will be used if 'wt' is not specified
+    in the request. XMLResponseWriter will be used if nothing is specified here.
+    The json, python, and ruby writers are also available by default.
+
+    <queryResponseWriter name="xml" class="org.apache.solr.request.XMLResponseWriter" default="true"/>
+    <queryResponseWriter name="json" class="org.apache.solr.request.JSONResponseWriter"/>
+    <queryResponseWriter name="python" class="org.apache.solr.request.PythonResponseWriter"/>
+    <queryResponseWriter name="ruby" class="org.apache.solr.request.RubyResponseWriter"/>
+    <queryResponseWriter name="php" class="org.apache.solr.request.PHPResponseWriter"/>
+    <queryResponseWriter name="phps" class="org.apache.solr.request.PHPSerializedResponseWriter"/>
+
+    <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
+  -->
+
+  <!-- XSLT response writer transforms the XML output by any xslt file found
+       in Solr's conf/xslt directory.  Changes to xslt files are checked for
+       every xsltCacheLifetimeSeconds.
+   -->
+  <queryResponseWriter name="xslt" class="org.apache.solr.request.XSLTResponseWriter">
+    <int name="xsltCacheLifetimeSeconds">5</int>
+  </queryResponseWriter>
+
+
+  <!-- example of registering a query parser
+  <queryParser name="lucene" class="org.apache.solr.search.LuceneQParserPlugin"/>
+  -->
+
+  <!-- example of registering a custom function parser
+  <valueSourceParser name="myfunc" class="com.mycompany.MyValueSourceParser" />
+  -->
+
+  <!-- config for the admin interface -->
+  <admin>
+    <defaultQuery>solr</defaultQuery>
+    <!-- configure a healthcheck file for servers behind a loadbalancer
+    <healthcheck type="file">server-enabled</healthcheck>
+    -->
+  </admin>
+
+</config>
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/protwords.txt b/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/protwords.txt
new file mode 100644
index 0000000..f0fd084
--- /dev/null
+++ b/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/protwords.txt
@@ -0,0 +1,8 @@
+#-----------------------------------------------------------------------
+# This file blocks words from being operated on by the stemmer and word delimiter.
+&amp;
+&lt;
+&gt;
+&#039;
+&quot;
+
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/schema.xml b/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/schema.xml
new file mode 100644
index 0000000..2cebb36
--- /dev/null
+++ b/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/schema.xml
@@ -0,0 +1,524 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<!--
+ This is the Solr schema file. This file should be named "schema.xml" and
+ should be in the conf directory under the solr home
+ (i.e. ./solr/conf/schema.xml by default)
+ or located where the classloader for the Solr webapp can find it.
+
+ For more information, on how to customize this file, please see
+ http://wiki.apache.org/solr/SchemaXml
+-->
+
+<schema name="drupal-3.0-0-solr3" version="1.3">
+    <!-- attribute "name" is the name of this schema and is only used for display purposes.
+         Applications should change this to reflect the nature of the search collection.
+         version="1.2" is Solr's version number for the schema syntax and semantics.  It should
+         not normally be changed by applications.
+         1.0: multiValued attribute did not exist, all fields are multiValued by nature
+         1.1: multiValued attribute introduced, false by default
+         1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
+         1.3: removed optional field compress feature
+       -->
+  <types>
+    <!-- field type definitions. The "name" attribute is
+       just a label to be used by field definitions.  The "class"
+       attribute and any other attributes determine the real
+       behavior of the fieldType.
+         Class names starting with "solr" refer to java classes in the
+       org.apache.solr.analysis package.
+    -->
+
+    <!-- The StrField type is not analyzed, but indexed/stored verbatim.
+       - StrField and TextField support an optional compressThreshold which
+       limits compression (if enabled in the derived fields) to values which
+       exceed a certain size (in characters).
+    -->
+    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
+
+    <!-- boolean type: "true" or "false" -->
+    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
+    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
+    <fieldtype name="binary" class="solr.BinaryField"/>
+
+    <!-- The optional sortMissingLast and sortMissingFirst attributes are
+         currently supported on types that are sorted internally as strings.
+       - If sortMissingLast="true", then a sort on this field will cause documents
+         without the field to come after documents with the field,
+         regardless of the requested sort order (asc or desc).
+       - If sortMissingFirst="true", then a sort on this field will cause documents
+         without the field to come before documents with the field,
+         regardless of the requested sort order.
+       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
+         then default lucene sorting will be used which places docs without the
+         field first in an ascending sort and last in a descending sort.
+    -->
+
+    <!-- numeric field types that can be sorted, but are not optimized for range queries -->
+    <fieldType name="integer" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
+
+    <!--
+      Note:
+      These should only be used for compatibility with existing indexes (created with older Solr versions)
+      or if "sortMissingFirst" or "sortMissingLast" functionality is needed. Use Trie based fields instead.
+
+      Numeric field types that manipulate the value into
+      a string value that isn't human-readable in its internal form,
+      but with a lexicographic ordering the same as the numeric ordering,
+      so that range queries work correctly.
+    -->
+    <fieldType name="sint" class="solr.TrieIntField" sortMissingLast="true" omitNorms="true"/>
+    <fieldType name="slong" class="solr.TrieFloatField" sortMissingLast="true" omitNorms="true"/>
+    <fieldType name="sfloat" class="solr.TrieLongField" sortMissingLast="true" omitNorms="true"/>
+    <fieldType name="sdouble" class="solr.TrieDoubleField" sortMissingLast="true" omitNorms="true"/>
+
+    <!--
+     Numeric field types that index each value at various levels of precision
+     to accelerate range queries when the number of values between the range
+     endpoints is large. See the javadoc for NumericRangeQuery for internal
+     implementation details.
+
+     Smaller precisionStep values (specified in bits) will lead to more tokens
+     indexed per value, slightly larger index size, and faster range queries.
+     A precisionStep of 0 disables indexing at different precision levels.
+    -->
+    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
+
+    <!--
+     The ExternalFileField type gets values from an external file instead of the
+     index. This is useful for data such as rankings that might change frequently
+     and require different update frequencies than the documents they are
+     associated with.
+    -->
+    <fieldType name="pfloat" class="solr.FloatField" omitNorms="true"/>
+    <fieldType name="file" keyField="id" defVal="1" stored="false" indexed="false" class="solr.ExternalFileField" valType="pfloat"/>
+
+    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
+         is a more restricted form of the canonical representation of dateTime
+         http://www.w3.org/TR/xmlschema-2/#dateTime
+         The trailing "Z" designates UTC time and is mandatory.
+         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
+         All other components are mandatory.
+
+         Expressions can also be used to denote calculations that should be
+         performed relative to "NOW" to determine the value, ie...
+
+               NOW/HOUR
+                  ... Round to the start of the current hour
+               NOW-1DAY
+                  ... Exactly 1 day prior to now
+               NOW/DAY+6MONTHS+3DAYS
+                  ... 6 months and 3 days in the future from the start of
+                      the current day
+
+         Consult the DateField javadocs for more information.
+      -->
+    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
+
+    <!-- A Trie based date field for faster date range queries and date faceting. -->
+    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>
+
+    <!-- solr.TextField allows the specification of custom text analyzers
+         specified as a tokenizer and a list of token filters. Different
+         analyzers may be specified for indexing and querying.
+
+         The optional positionIncrementGap puts space between multiple fields of
+         this type on the same document, with the purpose of preventing false phrase
+         matching across fields.
+
+         For more info on customizing your analyzer chain, please see
+         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
+     -->
+
+    <!-- One can also specify an existing Analyzer class that has a
+         default constructor via the class attribute on the analyzer element
+    <fieldType name="text_greek" class="solr.TextField">
+      <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
+    </fieldType>
+    -->
+
+    <!-- A text field that only splits on whitespace for exact matching of words -->
+    <fieldType name="text_ws" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
+      <analyzer>
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
+        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
+        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
+        Synonyms and stopwords are customized by external files, and stemming is enabled.
+        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
+        WordDelim parts) are removed.
+        -->
+    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
+      <analyzer type="index">
+        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <!-- in this example, we will only use synonyms at query time
+        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
+        -->
+        <!-- Case insensitive stop word removal.
+          add enablePositionIncrements=true in both the index and query
+          analyzers to leave a 'gap' for more accurate phrase queries.
+        -->
+        <filter class="solr.StopFilterFactory"
+                ignoreCase="true"
+                words="stopwords.txt"
+                enablePositionIncrements="true"
+                />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="1"
+                catenateNumbers="1"
+                catenateAll="0"
+                splitOnCaseChange="1"
+                preserveOriginal="1"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
+        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
+      </analyzer>
+      <analyzer type="query">
+        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
+        <filter class="solr.StopFilterFactory"
+                ignoreCase="true"
+                words="stopwords.txt"
+                enablePositionIncrements="true"
+                />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="0"
+                catenateNumbers="0"
+                catenateAll="0"
+                splitOnCaseChange="1"
+                preserveOriginal="1"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
+        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <!-- An unstemmed text field - good if one does not know the language of the field -->
+    <fieldType name="text_und" class="solr.TextField" positionIncrementGap="100">
+      <analyzer type="index">
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="1"
+                catenateNumbers="1"
+                catenateAll="0"
+                splitOnCaseChange="0"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+      <analyzer type="query">
+        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
+        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
+        <filter class="solr.StopFilterFactory"
+                ignoreCase="true"
+                words="stopwords.txt"
+                enablePositionIncrements="true"
+                />
+        <filter class="solr.WordDelimiterFilterFactory"
+                protected="protwords.txt"
+                generateWordParts="1"
+                generateNumberParts="1"
+                catenateWords="0"
+                catenateNumbers="0"
+                catenateAll="0"
+                splitOnCaseChange="0"/>
+        <filter class="solr.LengthFilterFactory" min="2" max="100" />
+        <filter class="solr.LowerCaseFilterFactory"/>
+      </analyzer>
+    </fieldType>
+
+    <!-- Edge N gram type - for example for matching against queries with results
+        KeywordTokenizer leaves input string intact as a single term.
+        see: http://www.lucidimagination.com/blog/2009/09/08/auto-suggest-from-popular-queries-using-edgengrams/
+   -->
+    <fieldType name="edge_n2_kw_text" class="solr.TextField" omitNorms="true" positionIncrementGap="100">
+     <analyzer type="index">
+       <tokenizer class="solr.KeywordTokenizerFactory"/>
+       <filter class="solr.LowerCaseFilterFactory"/>
+       <filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="25" />
+     </analyzer>
+     <analyzer type="query">
+       <tokenizer class="solr.KeywordTokenizerFactory"/>
+       <filter class="solr.LowerCaseFilterFactory"/>
+     </analyzer>
+    </fieldType>
+   <!--  Setup simple analysis for spell checking -->
+
+   <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100">
+     <analyzer>
+       <tokenizer class="solr.StandardTokenizerFactory" />
+       <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
+       <filter class="solr.LengthFilterFactory" min="4" max="20" />
+       <filter class="solr.LowerCaseFilterFactory" />
+       <filter class="solr.RemoveDuplicatesTokenFilterFactory" />
+     </analyzer>
+   </fieldType>
+
+    <!-- This is an example of using the KeywordTokenizer along
+         With various TokenFilterFactories to produce a sortable field
+         that does not include some properties of the source text
+      -->
+    <fieldType name="sortString" class="solr.TextField" sortMissingLast="true" omitNorms="true">
+      <analyzer>
+        <!-- KeywordTokenizer does no actual tokenizing, so the entire
+             input string is preserved as a single token
+          -->
+        <tokenizer class="solr.KeywordTokenizerFactory"/>
+        <!-- The LowerCase TokenFilter does what you expect, which can be
+             when you want your sorting to be case insensitive
+          -->
+        <filter class="solr.LowerCaseFilterFactory" />
+        <!-- The TrimFilter removes any leading or trailing whitespace -->
+        <filter class="solr.TrimFilterFactory" />
+        <!-- The PatternReplaceFilter gives you the flexibility to use
+             Java Regular expression to replace any sequence of characters
+             matching a pattern with an arbitrary replacement string,
+             which may include back refrences to portions of the orriginal
+             string matched by the pattern.
+
+             See the Java Regular Expression documentation for more
+             infomation on pattern and replacement string syntax.
+
+             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
+
+        <filter class="solr.PatternReplaceFilterFactory"
+                pattern="(^\p{Punct}+)" replacement="" replace="all"
+        />
+        -->
+      </analyzer>
+    </fieldType>
+
+    <!-- A random sort type -->
+    <fieldType name="rand" class="solr.RandomSortField" indexed="true" />
+
+    <!-- since fields of this type are by default not stored or indexed, any data added to
+         them will be ignored outright
+     -->
+    <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField" />
+
+    <!-- Begin added types to use features in Solr 3.4+ -->
+    <fieldType name="point" class="solr.PointType" dimension="2" subFieldType="tdouble"/>
+
+    <!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
+    <fieldType name="location" class="solr.LatLonType" subFieldType="tdouble"/>
+
+   <!--
+    A Geohash is a compact representation of a latitude longitude pair in a single field.
+    See http://wiki.apache.org/solr/SpatialSearch
+   -->
+    <fieldtype name="geohash" class="solr.GeoHashField"/>
+    <!-- End added Solr 3.4+ types -->
+ </types>
+
+
+ <fields>
+   <!-- Valid attributes for fields:
+     name: mandatory - the name for the field
+     type: mandatory - the name of a previously defined type from the <types> section
+     indexed: true if this field should be indexed (searchable or sortable)
+     stored: true if this field should be retrievable
+     compressed: [false] if this field should be stored using gzip compression
+       (this will only apply if the field type is compressable; among
+       the standard field types, only TextField and StrField are)
+     multiValued: true if this field may contain multiple values per document
+     omitNorms: (expert) set to true to omit the norms associated with
+       this field (this disables length normalization and index-time
+       boosting for the field, and saves some memory).  Only full-text
+       fields or fields that need an index-time boost need norms.
+   -->
+
+<!-- The document id is usually derived from a site-spcific key (hash) and the entity type and ID like:
+     $document->id = $hash . '/node/' . $node->nid; -->
+
+   <field name="id" type="string" indexed="true" stored="true" required="true" />
+   <!-- entity_id is the numeric object ID, e.g. Node ID, File ID -->
+   <field name="entity_id"  type="long" indexed="true" stored="true" />
+   <!-- entity_type is 'node', 'file', 'user', or some other Drupal object type -->
+   <field name="entity_type" type="string" indexed="true" stored="true" required="true" />
+   <!-- bundle is a node type, or as appropriate for other entity types -->
+   <field name="bundle" type="string" indexed="true" stored="true"/>
+   <field name="bundle_name" type="string" indexed="true" stored="true"/>
+
+   <field name="site" type="string" indexed="true" stored="true"/>
+   <field name="hash" type="string" indexed="true" stored="true"/>
+   <field name="url" type="string" indexed="true" stored="true"/>
+   <!-- label is the default field for a human-readable string for this entity (e.g. the title of a node) -->
+   <field name="label" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
+   <!-- The string version of the title is used for sorting -->
+   <copyField source="label" dest="sort_label"/>
+   <!-- content is the default field for full text search - dump crap here -->
+   <field name="content" type="text" indexed="true" stored="true" termVectors="true"/>
+   <field name="teaser" type="text" indexed="false" stored="true"/>
+
+   <field name="path" type="string" indexed="true" stored="true"/>
+   <field name="path_alias" type="text" indexed="true" stored="true" termVectors="true" omitNorms="true"/>
+
+ <!-- These are the fields that correspond to a Drupal node. The beauty of having
+     Lucene store title, body, type, etc., is that we retrieve them with the search
+     result set and don't need to go to the database with a node_load. -->
+
+   <field name="tid"  type="long" indexed="true" stored="true" multiValued="true"/>
+
+   <field name="taxonomy_names" type="text" indexed="true" stored="false" termVectors="true" multiValued="true" omitNorms="true"/>
+   <!-- Copy terms to a single field that contains all taxonomy term names -->
+   <copyField source="tm_vid_*" dest="taxonomy_names"/>
+
+   <!-- Here, default is used to create a "timestamp" field indicating
+        when each document was indexed.-->
+   <field name="timestamp" type="tdate" indexed="true" stored="true" default="NOW" multiValued="false"/>
+
+	<!-- This field is used to build the spellchecker index -->
+   <field name="spell" type="textSpell" indexed="true" stored="true" multiValued="true"/>
+
+  <!-- copyField commands copy one field to another at the time a document
+        is added to the index.  It's used either to index the same field differently,
+        or to add multiple fields to the same field for easier/faster searching.  -->
+   <copyField source="label" dest="spell"/>
+   <copyField source="content" dest="spell"/>
+
+   <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
+        will be used if the name matches any of the patterns.
+        RESTRICTION: the glob-like pattern in the name attribute must have
+        a "*" only at the start or the end.
+        EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
+        Longer patterns will be matched first.  if equal size patterns
+        both match, the first appearing in the schema will be used.  -->
+
+   <!-- A set of fields to contain text extracted from HTML tag contents which we
+        can boost at query time. -->
+   <dynamicField name="tags_*" type="text"   indexed="true" stored="false" omitNorms="true"/>
+
+   <!-- For 2 and 3 letter prefix dynamic fields, the 1st letter indicates the data type and
+        the last letter is 's' for single valued, 'm' for multi-valued -->
+
+   <!-- We use long for integer since 64 bit ints are now common in PHP. -->
+   <dynamicField name="is_*"  type="long"    indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="im_*"  type="long"    indexed="true"  stored="true" multiValued="true"/>
+   <!-- List of floats can be saved in a regular float field -->
+   <dynamicField name="fs_*"  type="float"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="fm_*"  type="float"   indexed="true"  stored="true" multiValued="true"/>
+   <!-- List of doubles can be saved in a regular double field -->
+   <dynamicField name="ps_*"  type="double"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="pm_*"  type="double"   indexed="true"  stored="true" multiValued="true"/>
+   <!-- List of booleans can be saved in a regular boolean field -->
+   <dynamicField name="bm_*"  type="boolean" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="bs_*"  type="boolean" indexed="true"  stored="true" multiValued="false"/>
+   <!-- Regular text (without processing) can be stored in a string field-->
+   <dynamicField name="ss_*"  type="string"  indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="sm_*"  type="string"  indexed="true"  stored="true" multiValued="true"/>
+   <!-- Normal text fields are for full text - the relevance of a match depends on the length of the text -->
+   <dynamicField name="ts_*"  type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true"/>
+   <dynamicField name="tm_*"  type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true"/>
+   <!-- Unstemmed text fields for full text - the relevance of a match depends on the length of the text -->
+   <dynamicField name="tus_*" type="text_und" indexed="true"  stored="true" multiValued="false" termVectors="true"/>
+   <dynamicField name="tum_*" type="text_und" indexed="true"  stored="true" multiValued="true" termVectors="true"/>
+   <!-- These text fields omit norms - useful for extracted text like taxonomy_names -->
+   <dynamicField name="tos_*" type="text"    indexed="true"  stored="true" multiValued="false" termVectors="true" omitNorms="true"/>
+   <dynamicField name="tom_*" type="text"    indexed="true"  stored="true" multiValued="true" termVectors="true" omitNorms="true"/>
+   <!-- Special-purpose text fields -->
+   <dynamicField name="tes_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="false" omitTermFreqAndPositions="true" />
+   <dynamicField name="tem_*" type="edge_n2_kw_text" indexed="true" stored="true" multiValued="true" omitTermFreqAndPositions="true" />
+   <dynamicField name="tws_*" type="text_ws" indexed="true" stored="true" multiValued="false"/>
+   <dynamicField name="twm_*" type="text_ws" indexed="true" stored="true" multiValued="true"/>
+
+   <!-- trie dates are preferred, so give them the 2 letter prefix -->
+   <dynamicField name="ds_*"  type="tdate"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="dm_*"  type="tdate"   indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="its_*" type="tlong"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="itm_*" type="tlong"   indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="fts_*" type="tfloat"  indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ftm_*" type="tfloat"  indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="pts_*" type="tdouble" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ptm_*" type="tdouble" indexed="true"  stored="true" multiValued="true"/>
+   <!-- Binary fields can be populated using base64 encoded data. Useful e.g. for embedding
+        a small image in a search result using the data URI scheme -->
+   <dynamicField name="xs_*"  type="binary"  indexed="false" stored="true" multiValued="false"/>
+   <dynamicField name="xm_*"  type="binary"  indexed="false" stored="true" multiValued="true"/>
+   <!-- In rare cases a date rather than tdate is needed for sortMissingLast -->
+   <dynamicField name="dds_*" type="date"    indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ddm_*" type="date"    indexed="true"  stored="true" multiValued="true"/>
+   <!-- Sortable fields, good for sortMissingLast support &
+        We use long for integer since 64 bit ints are now common in PHP. -->
+   <dynamicField name="iss_*" type="slong"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="ism_*" type="slong"   indexed="true"  stored="true" multiValued="true"/>
+   <!-- In rare cases a sfloat rather than tfloat is needed for sortMissingLast -->
+   <dynamicField name="fss_*" type="sfloat"  indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="fsm_*" type="sfloat"  indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="pss_*" type="sdouble" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="psm_*" type="sdouble" indexed="true"  stored="true" multiValued="true"/>
+   <!-- In case a 32 bit int is really needed, we provide these fields. 'h' is mnemonic for 'half word', i.e. 32 bit on 64 arch -->
+   <dynamicField name="hs_*" type="integer" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="hm_*" type="integer" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="hss_*" type="sint"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="hsm_*" type="sint"   indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="hts_*" type="tint"   indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="htm_*" type="tint"   indexed="true"  stored="true" multiValued="true"/>
+
+   <!-- Unindexed string fields that can be used to store values that won't be searchable -->
+   <dynamicField name="zs_*" type="string"   indexed="false"  stored="true" multiValued="false"/>
+   <dynamicField name="zm_*" type="string"   indexed="false"  stored="true" multiValued="true"/>
+
+   <!-- Begin added fields to use features in Solr 3.4+
+        http://wiki.apache.org/solr/SpatialSearch#geodist_-_The_distance_function -->
+   <dynamicField name="points_*" type="point" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="pointm_*" type="point" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="locs_*" type="location" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="locm_*" type="location" indexed="true"  stored="true" multiValued="true"/>
+   <dynamicField name="geos_*" type="geohash" indexed="true"  stored="true" multiValued="false"/>
+   <dynamicField name="geom_*" type="geohash" indexed="true"  stored="true" multiValued="true"/>
+
+   <!-- External file fields -->
+   <dynamicField name="eff_*" type="file"/>
+   <!-- End added fields for Solr 3.4+ -->
+
+   <!-- Sortable version of the dynamic string field -->
+   <dynamicField name="sort_*" type="sortString" indexed="true" stored="false"/>
+   <copyField source="ss_*" dest="sort_*"/>
+  <!-- A random sort field -->
+   <dynamicField name="random_*" type="rand" indexed="true" stored="true"/>
+   <!-- This field is used to store access information (e.g. node access grants), as opposed to field data -->
+   <dynamicField name="access_*" type="integer" indexed="true" stored="false" multiValued="true"/>
+
+   <!-- The following causes solr to ignore any fields that don't already match an existing
+        field name or dynamic field, rather than reporting them as an error.
+        Alternately, change the type="ignored" to some other type e.g. "text" if you want
+        unknown fields indexed and/or stored by default -->
+   <dynamicField name="*" type="ignored" multiValued="true" />
+
+ </fields>
+
+ <!-- Field to use to determine and enforce document uniqueness.
+      Unless this field is marked with required="false", it will be a required field
+   -->
+ <uniqueKey>id</uniqueKey>
+
+ <!-- field for the QueryParser to use when an explicit fieldname is absent -->
+ <defaultSearchField>content</defaultSearchField>
+
+ <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
+ <solrQueryParser defaultOperator="AND"/>
+
+</schema>
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/solrconfig.xml b/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/solrconfig.xml
new file mode 100644
index 0000000..ade4fcd
--- /dev/null
+++ b/profiles/acquia/modules/apachesolr/solr-conf/solr-3.x/solrconfig.xml
@@ -0,0 +1,743 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<config name="drupal-3.0-0-solr3">
+  <!-- Controls what version of Lucene various components of Solr
+       adhere to.  Generally, you want to use the latest version to
+       get all bug fixes and improvements. It is highly recommended
+       that you fully re-index after changing this setting as it can
+       affect both how text is indexed and queried.
+    -->
+  <luceneMatchVersion>LUCENE_35</luceneMatchVersion>
+  <!-- Set this to 'false' if you want solr to continue working after it has
+       encountered an severe configuration error.  In a production environment,
+       you may want solr to keep working even if one handler is mis-configured.
+
+       You may also set this to false using by setting the system property:
+         -Dsolr.abortOnConfigurationError=false
+     -->
+  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
+
+  <!-- Used to specify an alternate directory to hold all index data
+       other than the default ./data under the Solr home.
+       If replication is in use, this should match the replication configuration. -->
+<!--
+  <dataDir>${solr.data.dir:./solr/data}</dataDir>
+-->
+
+  <indexDefaults>
+   <!-- Values here affect all index writers and act as a default unless overridden. -->
+    <useCompoundFile>false</useCompoundFile>
+
+    <mergeFactor>10</mergeFactor>
+    <!--
+     If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
+
+     -->
+    <!--<maxBufferedDocs>1000</maxBufferedDocs>-->
+    <!-- Tell Lucene when to flush documents to disk.
+    Giving Lucene more memory for indexing means faster indexing at the cost of more RAM
+
+    If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
+
+    -->
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <maxMergeDocs>2147483647</maxMergeDocs>
+    <maxFieldLength>20000</maxFieldLength>
+    <writeLockTimeout>1000</writeLockTimeout>
+    <commitLockTimeout>10000</commitLockTimeout>
+
+    <!--
+     Expert: Turn on Lucene's auto commit capability.
+     This causes intermediate segment flushes to write a new lucene
+     index descriptor, enabling it to be opened by an external
+     IndexReader.
+     NOTE: Despite the name, this value does not have any relation to Solr's autoCommit functionality
+     -->
+    <!--<luceneAutoCommit>false</luceneAutoCommit>-->
+    <!--
+     Expert:
+     The Merge Policy in Lucene controls how merging is handled by Lucene.  The default in 2.3 is the LogByteSizeMergePolicy, previous
+     versions used LogDocMergePolicy.
+
+     LogByteSizeMergePolicy chooses segments to merge based on their size.  The Lucene 2.2 default, LogDocMergePolicy chose when
+     to merge based on number of documents
+
+     Other implementations of MergePolicy must have a no-argument constructor
+     -->
+    <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy" />
+
+    <!--
+     Expert:
+     The Merge Scheduler in Lucene controls how merges are performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
+      can perform merges in the background using separate threads.  The SerialMergeScheduler (Lucene 2.2 default) does not.
+     -->
+    <!--<mergeScheduler>org.apache.lucene.index.ConcurrentMergeScheduler</mergeScheduler>-->
+
+    <!--
+      This option specifies which Lucene LockFactory implementation to use.
+
+      single = SingleInstanceLockFactory - suggested for a read-only index
+               or when there is no possibility of another process trying
+               to modify the index.
+      native = NativeFSLockFactory
+      simple = SimpleFSLockFactory
+
+      (For backwards compatibility with Solr 1.2, 'simple' is the default
+       if not specified.)
+    -->
+    <lockType>single</lockType>
+  </indexDefaults>
+
+  <mainIndex>
+    <!-- options specific to the main on-disk lucene index -->
+    <useCompoundFile>false</useCompoundFile>
+    <ramBufferSizeMB>32</ramBufferSizeMB>
+    <mergeFactor>4</mergeFactor>
+    <maxMergeDocs>2147483647</maxMergeDocs>
+    <maxFieldLength>20000</maxFieldLength>
+
+    <!-- If true, unlock any held write or commit locks on startup.
+         This defeats the locking mechanism that allows multiple
+         processes to safely access a lucene index, and should be
+         used with care.
+         This is not needed if lock type is 'none' or 'single'
+     -->
+    <unlockOnStartup>false</unlockOnStartup>
+
+    <!--
+        Custom deletion policies can specified here. The class must
+        implement org.apache.lucene.index.IndexDeletionPolicy.
+
+        http://lucene.apache.org/java/2_3_2/api/org/apache/lucene/index/IndexDeletionPolicy.html
+
+        The standard Solr IndexDeletionPolicy implementation supports deleting
+        index commit points on number of commits, age of commit point and
+        optimized status.
+
+        The latest commit point should always be preserved regardless
+        of the criteria.
+    -->
+    <deletionPolicy class="solr.SolrDeletionPolicy">
+      <!-- Keep only optimized commit points -->
+      <str name="keepOptimizedOnly">false</str>
+      <!-- The maximum number of commit points to be kept -->
+      <str name="maxCommitsToKeep">1</str>
+      <!--
+          Delete all commit points once they have reached the given age.
+          Supports DateMathParser syntax e.g.
+
+          <str name="maxCommitAge">30MINUTES</str>
+          <str name="maxCommitAge">1DAY</str>
+      -->
+    </deletionPolicy>
+
+  </mainIndex>
+
+  <!--	Enables JMX if and only if an existing MBeanServer is found, use
+  		this if you want to configure JMX through JVM parameters. Remove
+  		this to disable exposing Solr configuration and statistics to JMX.
+
+		If you want to connect to a particular server, specify the agentId
+		e.g. <jmx agentId="myAgent" />
+
+		If you want to start a new MBeanServer, specify the serviceUrl
+		e.g <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr" />
+
+		For more details see http://wiki.apache.org/solr/SolrJmx
+  -->
+  <jmx />
+
+  <!-- the default high-performance update handler -->
+  <updateHandler class="solr.DirectUpdateHandler2">
+
+    <!-- A prefix of "solr." for class names is an alias that
+         causes solr to search appropriate packages, including
+         org.apache.solr.(search|update|request|core|analysis)
+     -->
+
+    <!-- Perform a <commit/> automatically under certain conditions:
+         maxDocs - number of updates since last commit is greater than this
+         maxTime - oldest uncommited update (in ms) is this long ago
+    -->
+    <autoCommit>
+      <maxDocs>2000</maxDocs>
+      <maxTime>120000</maxTime>
+    </autoCommit>
+
+
+    <!-- The RunExecutableListener executes an external command.
+         exe - the name of the executable to run
+         dir - dir to use as the current working directory. default="."
+         wait - the calling thread waits until the executable returns. default="true"
+         args - the arguments to pass to the program.  default=nothing
+         env - environment variables to set.  default=nothing
+      -->
+    <!-- A postCommit event is fired after every commit or optimize command
+    <listener event="postCommit" class="solr.RunExecutableListener">
+      <str name="exe">solr/bin/snapshooter</str>
+      <str name="dir">.</str>
+      <bool name="wait">true</bool>
+      <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
+      <arr name="env"> <str>MYVAR=val1</str> </arr>
+    </listener>
+    -->
+    <!-- A postOptimize event is fired only after every optimize command, useful
+         in conjunction with index distribution to only distribute optimized indicies
+    <listener event="postOptimize" class="solr.RunExecutableListener">
+      <str name="exe">snapshooter</str>
+      <str name="dir">solr/bin</str>
+      <bool name="wait">true</bool>
+    </listener>
+    -->
+
+  </updateHandler>
+
+
+  <query>
+    <!-- Maximum number of clauses in a boolean query... can affect
+        range or prefix queries that expand to big boolean
+        queries.  An exception is thrown if exceeded.  -->
+    <maxBooleanClauses>1024</maxBooleanClauses>
+
+
+    <!-- There are two implementations of cache available for Solr,
+         LRUCache, based on a synchronized LinkedHashMap, and
+         FastLRUCache, based on a ConcurrentHashMap.  FastLRUCache has faster gets
+         and slower puts in single threaded operation and thus is generally faster
+         than LRUCache when the hit ratio of the cache is high (> 75%), and may be
+         faster under other scenarios on multi-cpu systems. -->
+    <!-- Cache used by SolrIndexSearcher for filters (DocSets),
+         unordered sets of *all* documents that match a query.
+         When a new searcher is opened, its caches may be prepopulated
+         or "autowarmed" using data from caches in the old searcher.
+         autowarmCount is the number of items to prepopulate.  For LRUCache,
+         the autowarmed items will be the most recently accessed items.
+       Parameters:
+         class - the SolrCache implementation LRUCache or FastLRUCache
+         size - the maximum number of entries in the cache
+         initialSize - the initial capacity (number of entries) of
+           the cache.  (seel java.util.HashMap)
+         autowarmCount - the number of entries to prepopulate from
+           and old cache.
+         -->
+    <filterCache
+      class="solr.FastLRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="128"/>
+
+    <!-- Cache used to hold field values that are quickly accessible
+         by document id.  The fieldValueCache is created by default
+         even if not configured here.
+      <fieldValueCache
+        class="solr.FastLRUCache"
+        size="512"
+        autowarmCount="128"
+        showItems="32"
+      />
+    -->
+
+   <!-- queryResultCache caches results of searches - ordered lists of
+         document ids (DocList) based on a query, a sort, and the range
+         of documents requested.  -->
+    <queryResultCache
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="32"/>
+
+  <!-- documentCache caches Lucene Document objects (the stored fields for each document).
+       Since Lucene internal document ids are transient, this cache will not be autowarmed.  -->
+    <documentCache
+      class="solr.LRUCache"
+      size="512"
+      initialSize="512"
+      autowarmCount="0"/>
+
+    <!-- If true, stored fields that are not requested will be loaded lazily.
+
+    This can result in a significant speed improvement if the usual case is to
+    not load all stored fields, especially if the skipped fields are large compressed
+    text fields.
+    -->
+    <enableLazyFieldLoading>true</enableLazyFieldLoading>
+
+    <!-- Example of a generic cache.  These caches may be accessed by name
+         through SolrIndexSearcher.getCache(),cacheLookup(), and cacheInsert().
+         The purpose is to enable easy caching of user/application level data.
+         The regenerator argument should be specified as an implementation
+         of solr.search.CacheRegenerator if autowarming is desired.  -->
+    <!--
+    <cache name="myUserCache"
+      class="solr.LRUCache"
+      size="4096"
+      initialSize="1024"
+      autowarmCount="1024"
+      regenerator="org.mycompany.mypackage.MyRegenerator"
+      />
+    -->
+
+   <!-- An optimization that attempts to use a filter to satisfy a search.
+         If the requested sort does not include score, then the filterCache
+         will be checked for a filter matching the query. If found, the filter
+         will be used as the source of document ids, and then the sort will be
+         applied to that.
+    <useFilterForSortedQuery>true</useFilterForSortedQuery>
+   -->
+
+   <!-- An optimization for use with the queryResultCache.  When a search
+         is requested, a superset of the requested number of document ids
+         are collected.  For example, if a search for a particular query
+         requests matching documents 10 through 19, and queryWindowSize is 50,
+         then documents 0 through 49 will be collected and cached.  Any further
+         requests in that range can be satisfied via the cache.  -->
+    <queryResultWindowSize>50</queryResultWindowSize>
+
+    <!-- Maximum number of documents to cache for any entry in the
+         queryResultCache. -->
+    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
+
+    <!-- This entry enables an int hash representation for filters (DocSets)
+         when the number of items in the set is less than maxSize.  For smaller
+         sets, this representation is more memory efficient, more efficient to
+         iterate over, and faster to take intersections.  -->
+    <HashDocSet maxSize="3000" loadFactor="0.75"/>
+
+    <!-- a newSearcher event is fired whenever a new searcher is being prepared
+         and there is a current searcher handling requests (aka registered). -->
+    <!-- QuerySenderListener takes an array of NamedList and executes a
+         local query request for each NamedList in sequence. -->
+    <listener event="newSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst> <str name="q">solr</str> <str name="start">0</str> <str name="rows">10</str> </lst>
+        <lst> <str name="q">rocks</str> <str name="start">0</str> <str name="rows">10</str> </lst>
+        <lst><str name="q">static newSearcher warming query from solrconfig.xml</str></lst>
+      </arr>
+    </listener>
+
+    <!-- a firstSearcher event is fired whenever a new searcher is being
+         prepared but there is no current registered searcher to handle
+         requests or to gain autowarming data from. -->
+    <listener event="firstSearcher" class="solr.QuerySenderListener">
+      <arr name="queries">
+        <lst> <str name="q">fast_warm</str> <str name="start">0</str> <str name="rows">10</str> </lst>
+        <lst><str name="q">static firstSearcher warming query from solrconfig.xml</str></lst>
+      </arr>
+    </listener>
+
+    <!-- If a search request comes in and there is no current registered searcher,
+         then immediately register the still warming searcher and use it.  If
+         "false" then all requests will block until the first searcher is done
+         warming. -->
+    <useColdSearcher>false</useColdSearcher>
+
+    <!-- Maximum number of searchers that may be warming in the background
+      concurrently.  An error is returned if this limit is exceeded. Recommend
+      1-2 for read-only slaves, higher for masters w/o cache warming. -->
+    <maxWarmingSearchers>2</maxWarmingSearchers>
+
+  </query>
+
+  <!--
+    Let the dispatch filter handler /select?qt=XXX
+    handleSelect=true will use consistent error handling for /select and /update
+    handleSelect=false will use solr1.1 style error formatting
+    -->
+  <requestDispatcher handleSelect="true" >
+    <!--Make sure your system has some authentication before enabling remote streaming!  -->
+    <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
+
+    <!-- Set HTTP caching related parameters (for proxy caches and clients).
+
+         To get the behaviour of Solr 1.2 (ie: no caching related headers)
+         use the never304="true" option and do not specify a value for
+         <cacheControl>
+    -->
+    <!-- <httpCaching never304="true"> -->
+    <httpCaching lastModifiedFrom="openTime"
+                 etagSeed="Solr">
+       <!-- lastModFrom="openTime" is the default, the Last-Modified value
+            (and validation against If-Modified-Since requests) will all be
+            relative to when the current Searcher was opened.
+            You can change it to lastModFrom="dirLastMod" if you want the
+            value to exactly corrispond to when the physical index was last
+            modified.
+
+            etagSeed="..." is an option you can change to force the ETag
+            header (and validation against If-None-Match requests) to be
+            differnet even if the index has not changed (ie: when making
+            significant changes to your config file)
+
+            lastModifiedFrom and etagSeed are both ignored if you use the
+            never304="true" option.
+       -->
+       <!-- If you include a <cacheControl> directive, it will be used to
+            generate a Cache-Control header, as well as an Expires header
+            if the value contains "max-age="
+
+            By default, no Cache-Control header is generated.
+
+            You can use the <cacheControl> option even if you have set
+            never304="true"
+       -->
+       <!-- <cacheControl>max-age=30, public</cacheControl> -->
+    </httpCaching>
+  </requestDispatcher>
+
+
+  <!-- requestHandler plugins... incoming queries will be dispatched to the
+     correct handler based on the path or the qt (query type) param.
+     Names starting with a '/' are accessed with the a path equal to the
+     registered name.  Names without a leading '/' are accessed with:
+      http://host/app/select?qt=name
+     If no qt is defined, the requestHandler that declares default="true"
+     will be used.
+  -->
+  <requestHandler name="standard" class="solr.SearchHandler">
+    <!-- default values for query parameters -->
+     <lst name="defaults">
+       <str name="echoParams">explicit</str>
+       <bool name="omitHeader">true</bool>
+       <!--
+       <int name="rows">10</int>
+       <str name="fl">*</str>
+       <str name="version">2.1</str>
+        -->
+     </lst>
+  </requestHandler>
+
+<!-- Please refer to http://wiki.apache.org/solr/SolrReplication for details on configuring replication -->
+<!-- MASTER_REPLICATION_START
+<requestHandler name="/replication" class="solr.ReplicationHandler" >
+    <lst name="master">
+        <str name="replicateAfter">commit</str>
+        <str name="replicateAfter">startup</str>
+        <str name="confFiles">schema.xml,mapping-ISOLatin1Accent.txt,protwords.txt,stopwords.txt,synonyms.txt,elevate.xml</str>
+    </lst>
+</requestHandler>
+ MASTER_REPLICATION_END -->
+
+<!-- SLAVE_REPLICATION_START
+<requestHandler name="/replication" class="solr.ReplicationHandler" >
+    <lst name="slave">
+        <str name="masterUrl">$MASTER_CORE_URL/replication</str>
+        <str name="pollInterval">$POLL_TIME</str>
+     </lst>
+</requestHandler>
+ SLAVE_REPLICATION_END -->
+
+  <!-- DisMaxRequestHandler allows easy searching across multiple fields
+       for simple user-entered phrases.  It's implementation is now
+       just the standard SearchHandler with a default query type
+       of "dismax".
+       see http://wiki.apache.org/solr/DisMaxRequestHandler
+   -->
+  <requestHandler name="dismax" class="solr.SearchHandler">
+    <lst name="defaults">
+     <str name="defType">dismax</str>
+     <str name="echoParams">explicit</str>
+     <bool name="omitHeader">true</bool>
+    </lst>
+  </requestHandler>
+
+  <!-- Note how you can register the same handler multiple times with
+       different names (and different init parameters)
+    -->
+  <requestHandler name="drupal" class="solr.SearchHandler" default="true">
+    <lst name="defaults">
+     <str name="defType">dismax</str>
+     <str name="echoParams">explicit</str>
+     <bool name="omitHeader">true</bool>
+     <float name="tie">0.01</float>
+     <str name="pf">
+        content^2.0
+     </str>
+     <int name="ps">15</int>
+     <!-- Abort any searches longer than 4 seconds -->
+     <!-- <int name="timeAllowed">4000</int>  -->
+     <str name="mm">1</str>
+     <str name="q.alt">*:*</str>
+
+   <!-- example highlighter config, enable per-query with hl=true -->
+     <str name="hl">true</str>
+     <str name="hl.fl">content</str>
+     <int name="hl.snippets">3</int>
+     <str name="hl.mergeContiguous">true</str>
+   <!-- instructs Solr to return the field itself if no query terms are
+        found -->
+     <str name="f.content.hl.alternateField">teaser</str>
+     <str name="f.content.hl.maxAlternateFieldLength">256</str>
+     <!-- JS: I wasn't getting good results here... I'm turning off for now
+     because I was getting periods (.) by themselves at the beginning of
+     snippets and don't feel like debugging anymore.  Without the regex is
+     faster too -->
+     <!--<str name="f.content.hl.fragmenter">regex</str>--> <!-- defined below -->
+
+    <!-- By default, don't spell check -->
+      <str name="spellcheck">false</str>
+    <!-- Defaults for the spell checker when used -->
+      <str name="spellcheck.onlyMorePopular">true</str>
+      <str name="spellcheck.extendedResults">false</str>
+      <!--  The number of suggestions to return -->
+      <str name="spellcheck.count">1</str>
+    </lst>
+    <arr name="last-components">
+      <str>spellcheck</str>
+    </arr>
+  </requestHandler>
+
+  <!-- The more like this handler offers many advantages over the standard handler,
+    when performing moreLikeThis requests.-->
+  <requestHandler name="mlt" class="solr.MoreLikeThisHandler">
+    <lst name="defaults">
+      <str name="mlt.mintf">1</str>
+      <str name="mlt.mindf">1</str>
+      <str name="mlt.minwl">3</str>
+      <str name="mlt.maxwl">15</str>
+      <str name="mlt.maxqt">20</str>
+      <str name="mlt.match.include">false</str>
+      <!-- Abort any searches longer than 1.5 seconds -->
+      <!-- <int name="timeAllowed">1500</int> -->
+    </lst>
+  </requestHandler>
+
+
+  <!--
+   Search components are registered to SolrCore and used by Search Handlers
+
+   By default, the following components are avaliable:
+
+   <searchComponent name="query"     class="org.apache.solr.handler.component.QueryComponent" />
+   <searchComponent name="facet"     class="org.apache.solr.handler.component.FacetComponent" />
+   <searchComponent name="mlt"       class="org.apache.solr.handler.component.MoreLikeThisComponent" />
+   <searchComponent name="highlight" class="org.apache.solr.handler.component.HighlightComponent" />
+   <searchComponent name="stats"     class="org.apache.solr.handler.component.StatsComponent" />
+   <searchComponent name="debug"     class="org.apache.solr.handler.component.DebugComponent" />
+
+   Default configuration in a requestHandler would look like:
+    <arr name="components">
+      <str>query</str>
+      <str>facet</str>
+      <str>mlt</str>
+      <str>highlight</str>
+      <str>stats</str>
+      <str>debug</str>
+    </arr>
+
+    If you register a searchComponent to one of the standard names, that will be used instead.
+    To insert components before or after the 'standard' components, use:
+
+    <arr name="first-components">
+      <str>myFirstComponentName</str>
+    </arr>
+
+    <arr name="last-components">
+      <str>myLastComponentName</str>
+    </arr>
+  -->
+
+   <!-- The spell check component can return a list of alternative spelling
+  suggestions.  -->
+  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
+
+    <str name="queryAnalyzerFieldType">textSpell</str>
+
+    <lst name="spellchecker">
+      <str name="name">default</str>
+      <str name="field">spell</str>
+      <str name="spellcheckIndexDir">./spellchecker1</str>
+      <str name="buildOnOptimize">true</str>
+    </lst>
+    <lst name="spellchecker">
+      <str name="name">jarowinkler</str>
+      <str name="field">spell</str>
+      <!-- Use a different Distance Measure -->
+      <str name="distanceMeasure">org.apache.lucene.search.spell.JaroWinklerDistance</str>
+      <str name="spellcheckIndexDir">./spellchecker2</str>
+      <str name="buildOnOptimize">true</str>
+    </lst>
+
+  </searchComponent>
+
+  <queryConverter name="queryConverter" class="solr.SpellingQueryConverter"/>
+
+  <!-- a search component that enables you to configure the top results for
+       a given query regardless of the normal lucene scoring.-->
+  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
+    <!-- pick a fieldType to analyze queries -->
+    <str name="queryFieldType">string</str>
+    <str name="config-file">elevate.xml</str>
+  </searchComponent>
+
+  <!-- a request handler utilizing the elevator component -->
+  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
+    <lst name="defaults">
+      <str name="echoParams">explicit</str>
+    </lst>
+    <arr name="last-components">
+      <str>elevator</str>
+    </arr>
+  </requestHandler>
+
+
+  <!-- Update request handler.
+
+       Note: Since solr1.1 requestHandlers requires a valid content type header if posted in
+       the body. For example, curl now requires: -H 'Content-type:text/xml; charset=utf-8'
+       The response format differs from solr1.1 formatting and returns a standard error code.
+
+       To enable solr1.1 behavior, remove the /update handler or change its path
+    -->
+  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
+
+  <!--
+   Analysis request handler.  Since Solr 1.3.  Use to returnhow a document is analyzed.  Useful
+   for debugging and as a token server for other types of applications
+   -->
+  <requestHandler name="/analysis" class="solr.AnalysisRequestHandler" />
+
+
+  <!-- CSV update handler, loaded on demand -->
+  <requestHandler name="/update/csv" class="solr.CSVRequestHandler" startup="lazy" />
+
+
+  <!--
+   Admin Handlers - This will register all the standard admin RequestHandlers.  Adding
+   this single handler is equivalent to registering:
+
+  <requestHandler name="/admin/luke"       class="org.apache.solr.handler.admin.LukeRequestHandler" />
+  <requestHandler name="/admin/system"     class="org.apache.solr.handler.admin.SystemInfoHandler" />
+  <requestHandler name="/admin/plugins"    class="org.apache.solr.handler.admin.PluginInfoHandler" />
+  <requestHandler name="/admin/threads"    class="org.apache.solr.handler.admin.ThreadDumpHandler" />
+  <requestHandler name="/admin/properties" class="org.apache.solr.handler.admin.PropertiesRequestHandler" />
+  <requestHandler name="/admin/file"       class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
+
+  If you wish to hide files under ${solr.home}/conf, explicitly register the ShowFileRequestHandler using:
+  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
+    <lst name="invariants">
+     <str name="hidden">synonyms.txt</str>
+     <str name="hidden">anotherfile.txt</str>
+    </lst>
+  </requestHandler>
+  -->
+  <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />
+
+  <!-- ping/healthcheck -->
+  <requestHandler name="/admin/ping" class="PingRequestHandler">
+    <lst name="defaults">
+      <str name="qt">standard</str>
+      <str name="q">solrpingquery</str>
+      <str name="echoParams">all</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Files that are needed to start the service -->
+  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
+    <lst name="invariants">
+     <str name="hidden">admin-extra.html</str>
+     <str name="hidden">scripts.conf</str>
+     <str name="hidden">xslt/example.xsl</str>
+     <str name="hidden">xslt/example_atom.xsl</str>
+     <str name="hidden">xslt/example_rss.xsl</str>
+     <str name="hidden">xslt/luke.xsl</str>
+    </lst>
+  </requestHandler>
+
+  <!-- Echo the request contents back to the client -->
+  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
+    <lst name="defaults">
+     <str name="echoParams">explicit</str> <!-- for all params (including the default etc) use: 'all' -->
+     <str name="echoHandler">true</str>
+    </lst>
+  </requestHandler>
+
+  <highlighting>
+   <!-- Configure the standard fragmenter -->
+   <!-- This could most likely be commented out in the "default" case -->
+   <fragmenter name="gap" class="org.apache.solr.highlight.GapFragmenter" default="true">
+    <lst name="defaults">
+     <int name="hl.fragsize">100</int>
+    </lst>
+   </fragmenter>
+
+   <!-- A regular-expression-based fragmenter (f.i., for sentence extraction) -->
+   <fragmenter name="regex" class="org.apache.solr.highlight.RegexFragmenter">
+    <lst name="defaults">
+      <!-- slightly smaller fragsizes work better because of slop -->
+      <int name="hl.fragsize">70</int>
+      <!-- allow 50% slop on fragment sizes -->
+      <float name="hl.regex.slop">0.5</float>
+      <!-- a basic sentence pattern -->
+      <str name="hl.regex.pattern">[-\w ,/\n\"']{20,200}</str>
+    </lst>
+   </fragmenter>
+
+   <!-- Configure the standard formatter -->
+   <formatter name="html" class="org.apache.solr.highlight.HtmlFormatter" default="true">
+    <lst name="defaults">
+     <str name="hl.simple.pre"><![CDATA[<strong>]]></str>
+     <str name="hl.simple.post"><![CDATA[</strong>]]></str>
+    </lst>
+   </formatter>
+  </highlighting>
+
+
+  <!-- queryResponseWriter plugins... query responses will be written using the
+    writer specified by the 'wt' request parameter matching the name of a registered
+    writer.
+    The "default" writer is the default and will be used if 'wt' is not specified
+    in the request. XMLResponseWriter will be used if nothing is specified here.
+    The json, python, and ruby writers are also available by default.
+
+    <queryResponseWriter name="xml" class="org.apache.solr.request.XMLResponseWriter" default="true"/>
+    <queryResponseWriter name="json" class="org.apache.solr.request.JSONResponseWriter"/>
+    <queryResponseWriter name="python" class="org.apache.solr.request.PythonResponseWriter"/>
+    <queryResponseWriter name="ruby" class="org.apache.solr.request.RubyResponseWriter"/>
+    <queryResponseWriter name="php" class="org.apache.solr.request.PHPResponseWriter"/>
+    <queryResponseWriter name="phps" class="org.apache.solr.request.PHPSerializedResponseWriter"/>
+
+    <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
+  -->
+
+  <!-- XSLT response writer transforms the XML output by any xslt file found
+       in Solr's conf/xslt directory.  Changes to xslt files are checked for
+       every xsltCacheLifetimeSeconds.
+   -->
+  <queryResponseWriter name="xslt" class="org.apache.solr.request.XSLTResponseWriter">
+    <int name="xsltCacheLifetimeSeconds">5</int>
+  </queryResponseWriter>
+
+
+  <!-- example of registering a query parser
+  <queryParser name="lucene" class="org.apache.solr.search.LuceneQParserPlugin"/>
+  -->
+
+  <!-- example of registering a custom function parser
+  <valueSourceParser name="myfunc" class="com.mycompany.MyValueSourceParser" />
+  -->
+
+  <!-- config for the admin interface -->
+  <admin>
+    <defaultQuery>solr</defaultQuery>
+    <!-- configure a healthcheck file for servers behind a loadbalancer
+    <healthcheck type="file">server-enabled</healthcheck>
+    -->
+  </admin>
+
+</config>
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solrconfig-solr3x.xml b/profiles/acquia/modules/apachesolr/solr-conf/solrconfig-solr3x.xml
deleted file mode 100644
index 627637e..0000000
--- a/profiles/acquia/modules/apachesolr/solr-conf/solrconfig-solr3x.xml
+++ /dev/null
@@ -1,743 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<config name="drupal-3.0-rc2-solr3">
-  <!-- Controls what version of Lucene various components of Solr
-       adhere to.  Generally, you want to use the latest version to
-       get all bug fixes and improvements. It is highly recommended
-       that you fully re-index after changing this setting as it can
-       affect both how text is indexed and queried.
-    -->
-  <luceneMatchVersion>LUCENE_35</luceneMatchVersion>
-  <!-- Set this to 'false' if you want solr to continue working after it has
-       encountered an severe configuration error.  In a production environment,
-       you may want solr to keep working even if one handler is mis-configured.
-
-       You may also set this to false using by setting the system property:
-         -Dsolr.abortOnConfigurationError=false
-     -->
-  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-
-  <!-- Used to specify an alternate directory to hold all index data
-       other than the default ./data under the Solr home.
-       If replication is in use, this should match the replication configuration. -->
-<!--
-  <dataDir>${solr.data.dir:./solr/data}</dataDir>
--->
-
-  <indexDefaults>
-   <!-- Values here affect all index writers and act as a default unless overridden. -->
-    <useCompoundFile>false</useCompoundFile>
-
-    <mergeFactor>10</mergeFactor>
-    <!--
-     If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
-
-     -->
-    <!--<maxBufferedDocs>1000</maxBufferedDocs>-->
-    <!-- Tell Lucene when to flush documents to disk.
-    Giving Lucene more memory for indexing means faster indexing at the cost of more RAM
-
-    If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
-
-    -->
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <maxMergeDocs>2147483647</maxMergeDocs>
-    <maxFieldLength>20000</maxFieldLength>
-    <writeLockTimeout>1000</writeLockTimeout>
-    <commitLockTimeout>10000</commitLockTimeout>
-
-    <!--
-     Expert: Turn on Lucene's auto commit capability.
-     This causes intermediate segment flushes to write a new lucene
-     index descriptor, enabling it to be opened by an external
-     IndexReader.
-     NOTE: Despite the name, this value does not have any relation to Solr's autoCommit functionality
-     -->
-    <!--<luceneAutoCommit>false</luceneAutoCommit>-->
-    <!--
-     Expert:
-     The Merge Policy in Lucene controls how merging is handled by Lucene.  The default in 2.3 is the LogByteSizeMergePolicy, previous
-     versions used LogDocMergePolicy.
-
-     LogByteSizeMergePolicy chooses segments to merge based on their size.  The Lucene 2.2 default, LogDocMergePolicy chose when
-     to merge based on number of documents
-
-     Other implementations of MergePolicy must have a no-argument constructor
-     -->
-    <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy" />
-
-    <!--
-     Expert:
-     The Merge Scheduler in Lucene controls how merges are performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
-      can perform merges in the background using separate threads.  The SerialMergeScheduler (Lucene 2.2 default) does not.
-     -->
-    <!--<mergeScheduler>org.apache.lucene.index.ConcurrentMergeScheduler</mergeScheduler>-->
-
-    <!--
-      This option specifies which Lucene LockFactory implementation to use.
-
-      single = SingleInstanceLockFactory - suggested for a read-only index
-               or when there is no possibility of another process trying
-               to modify the index.
-      native = NativeFSLockFactory
-      simple = SimpleFSLockFactory
-
-      (For backwards compatibility with Solr 1.2, 'simple' is the default
-       if not specified.)
-    -->
-    <lockType>single</lockType>
-  </indexDefaults>
-
-  <mainIndex>
-    <!-- options specific to the main on-disk lucene index -->
-    <useCompoundFile>false</useCompoundFile>
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <mergeFactor>4</mergeFactor>
-    <maxMergeDocs>2147483647</maxMergeDocs>
-    <maxFieldLength>20000</maxFieldLength>
-
-    <!-- If true, unlock any held write or commit locks on startup.
-         This defeats the locking mechanism that allows multiple
-         processes to safely access a lucene index, and should be
-         used with care.
-         This is not needed if lock type is 'none' or 'single'
-     -->
-    <unlockOnStartup>false</unlockOnStartup>
-
-    <!--
-        Custom deletion policies can specified here. The class must
-        implement org.apache.lucene.index.IndexDeletionPolicy.
-
-        http://lucene.apache.org/java/2_3_2/api/org/apache/lucene/index/IndexDeletionPolicy.html
-
-        The standard Solr IndexDeletionPolicy implementation supports deleting
-        index commit points on number of commits, age of commit point and
-        optimized status.
-
-        The latest commit point should always be preserved regardless
-        of the criteria.
-    -->
-    <deletionPolicy class="solr.SolrDeletionPolicy">
-      <!-- Keep only optimized commit points -->
-      <str name="keepOptimizedOnly">false</str>
-      <!-- The maximum number of commit points to be kept -->
-      <str name="maxCommitsToKeep">1</str>
-      <!--
-          Delete all commit points once they have reached the given age.
-          Supports DateMathParser syntax e.g.
-
-          <str name="maxCommitAge">30MINUTES</str>
-          <str name="maxCommitAge">1DAY</str>
-      -->
-    </deletionPolicy>
-
-  </mainIndex>
-
-  <!--	Enables JMX if and only if an existing MBeanServer is found, use
-  		this if you want to configure JMX through JVM parameters. Remove
-  		this to disable exposing Solr configuration and statistics to JMX.
-
-		If you want to connect to a particular server, specify the agentId
-		e.g. <jmx agentId="myAgent" />
-
-		If you want to start a new MBeanServer, specify the serviceUrl
-		e.g <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr" />
-
-		For more details see http://wiki.apache.org/solr/SolrJmx
-  -->
-  <jmx />
-
-  <!-- the default high-performance update handler -->
-  <updateHandler class="solr.DirectUpdateHandler2">
-
-    <!-- A prefix of "solr." for class names is an alias that
-         causes solr to search appropriate packages, including
-         org.apache.solr.(search|update|request|core|analysis)
-     -->
-
-    <!-- Perform a <commit/> automatically under certain conditions:
-         maxDocs - number of updates since last commit is greater than this
-         maxTime - oldest uncommited update (in ms) is this long ago
-    -->
-    <autoCommit>
-      <maxDocs>2000</maxDocs>
-      <maxTime>120000</maxTime>
-    </autoCommit>
-
-
-    <!-- The RunExecutableListener executes an external command.
-         exe - the name of the executable to run
-         dir - dir to use as the current working directory. default="."
-         wait - the calling thread waits until the executable returns. default="true"
-         args - the arguments to pass to the program.  default=nothing
-         env - environment variables to set.  default=nothing
-      -->
-    <!-- A postCommit event is fired after every commit or optimize command
-    <listener event="postCommit" class="solr.RunExecutableListener">
-      <str name="exe">solr/bin/snapshooter</str>
-      <str name="dir">.</str>
-      <bool name="wait">true</bool>
-      <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
-      <arr name="env"> <str>MYVAR=val1</str> </arr>
-    </listener>
-    -->
-    <!-- A postOptimize event is fired only after every optimize command, useful
-         in conjunction with index distribution to only distribute optimized indicies
-    <listener event="postOptimize" class="solr.RunExecutableListener">
-      <str name="exe">snapshooter</str>
-      <str name="dir">solr/bin</str>
-      <bool name="wait">true</bool>
-    </listener>
-    -->
-
-  </updateHandler>
-
-
-  <query>
-    <!-- Maximum number of clauses in a boolean query... can affect
-        range or prefix queries that expand to big boolean
-        queries.  An exception is thrown if exceeded.  -->
-    <maxBooleanClauses>1024</maxBooleanClauses>
-
-
-    <!-- There are two implementations of cache available for Solr,
-         LRUCache, based on a synchronized LinkedHashMap, and
-         FastLRUCache, based on a ConcurrentHashMap.  FastLRUCache has faster gets
-         and slower puts in single threaded operation and thus is generally faster
-         than LRUCache when the hit ratio of the cache is high (> 75%), and may be
-         faster under other scenarios on multi-cpu systems. -->
-    <!-- Cache used by SolrIndexSearcher for filters (DocSets),
-         unordered sets of *all* documents that match a query.
-         When a new searcher is opened, its caches may be prepopulated
-         or "autowarmed" using data from caches in the old searcher.
-         autowarmCount is the number of items to prepopulate.  For LRUCache,
-         the autowarmed items will be the most recently accessed items.
-       Parameters:
-         class - the SolrCache implementation LRUCache or FastLRUCache
-         size - the maximum number of entries in the cache
-         initialSize - the initial capacity (number of entries) of
-           the cache.  (seel java.util.HashMap)
-         autowarmCount - the number of entries to prepopulate from
-           and old cache.
-         -->
-    <filterCache
-      class="solr.FastLRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="128"/>
-
-    <!-- Cache used to hold field values that are quickly accessible
-         by document id.  The fieldValueCache is created by default
-         even if not configured here.
-      <fieldValueCache
-        class="solr.FastLRUCache"
-        size="512"
-        autowarmCount="128"
-        showItems="32"
-      />
-    -->
-
-   <!-- queryResultCache caches results of searches - ordered lists of
-         document ids (DocList) based on a query, a sort, and the range
-         of documents requested.  -->
-    <queryResultCache
-      class="solr.LRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="32"/>
-
-  <!-- documentCache caches Lucene Document objects (the stored fields for each document).
-       Since Lucene internal document ids are transient, this cache will not be autowarmed.  -->
-    <documentCache
-      class="solr.LRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="0"/>
-
-    <!-- If true, stored fields that are not requested will be loaded lazily.
-
-    This can result in a significant speed improvement if the usual case is to
-    not load all stored fields, especially if the skipped fields are large compressed
-    text fields.
-    -->
-    <enableLazyFieldLoading>true</enableLazyFieldLoading>
-
-    <!-- Example of a generic cache.  These caches may be accessed by name
-         through SolrIndexSearcher.getCache(),cacheLookup(), and cacheInsert().
-         The purpose is to enable easy caching of user/application level data.
-         The regenerator argument should be specified as an implementation
-         of solr.search.CacheRegenerator if autowarming is desired.  -->
-    <!--
-    <cache name="myUserCache"
-      class="solr.LRUCache"
-      size="4096"
-      initialSize="1024"
-      autowarmCount="1024"
-      regenerator="org.mycompany.mypackage.MyRegenerator"
-      />
-    -->
-
-   <!-- An optimization that attempts to use a filter to satisfy a search.
-         If the requested sort does not include score, then the filterCache
-         will be checked for a filter matching the query. If found, the filter
-         will be used as the source of document ids, and then the sort will be
-         applied to that.
-    <useFilterForSortedQuery>true</useFilterForSortedQuery>
-   -->
-
-   <!-- An optimization for use with the queryResultCache.  When a search
-         is requested, a superset of the requested number of document ids
-         are collected.  For example, if a search for a particular query
-         requests matching documents 10 through 19, and queryWindowSize is 50,
-         then documents 0 through 49 will be collected and cached.  Any further
-         requests in that range can be satisfied via the cache.  -->
-    <queryResultWindowSize>50</queryResultWindowSize>
-
-    <!-- Maximum number of documents to cache for any entry in the
-         queryResultCache. -->
-    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-    <!-- This entry enables an int hash representation for filters (DocSets)
-         when the number of items in the set is less than maxSize.  For smaller
-         sets, this representation is more memory efficient, more efficient to
-         iterate over, and faster to take intersections.  -->
-    <HashDocSet maxSize="3000" loadFactor="0.75"/>
-
-    <!-- a newSearcher event is fired whenever a new searcher is being prepared
-         and there is a current searcher handling requests (aka registered). -->
-    <!-- QuerySenderListener takes an array of NamedList and executes a
-         local query request for each NamedList in sequence. -->
-    <listener event="newSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst> <str name="q">solr</str> <str name="start">0</str> <str name="rows">10</str> </lst>
-        <lst> <str name="q">rocks</str> <str name="start">0</str> <str name="rows">10</str> </lst>
-        <lst><str name="q">static newSearcher warming query from solrconfig.xml</str></lst>
-      </arr>
-    </listener>
-
-    <!-- a firstSearcher event is fired whenever a new searcher is being
-         prepared but there is no current registered searcher to handle
-         requests or to gain autowarming data from. -->
-    <listener event="firstSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst> <str name="q">fast_warm</str> <str name="start">0</str> <str name="rows">10</str> </lst>
-        <lst><str name="q">static firstSearcher warming query from solrconfig.xml</str></lst>
-      </arr>
-    </listener>
-
-    <!-- If a search request comes in and there is no current registered searcher,
-         then immediately register the still warming searcher and use it.  If
-         "false" then all requests will block until the first searcher is done
-         warming. -->
-    <useColdSearcher>false</useColdSearcher>
-
-    <!-- Maximum number of searchers that may be warming in the background
-      concurrently.  An error is returned if this limit is exceeded. Recommend
-      1-2 for read-only slaves, higher for masters w/o cache warming. -->
-    <maxWarmingSearchers>2</maxWarmingSearchers>
-
-  </query>
-
-  <!--
-    Let the dispatch filter handler /select?qt=XXX
-    handleSelect=true will use consistent error handling for /select and /update
-    handleSelect=false will use solr1.1 style error formatting
-    -->
-  <requestDispatcher handleSelect="true" >
-    <!--Make sure your system has some authentication before enabling remote streaming!  -->
-    <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
-
-    <!-- Set HTTP caching related parameters (for proxy caches and clients).
-
-         To get the behaviour of Solr 1.2 (ie: no caching related headers)
-         use the never304="true" option and do not specify a value for
-         <cacheControl>
-    -->
-    <!-- <httpCaching never304="true"> -->
-    <httpCaching lastModifiedFrom="openTime"
-                 etagSeed="Solr">
-       <!-- lastModFrom="openTime" is the default, the Last-Modified value
-            (and validation against If-Modified-Since requests) will all be
-            relative to when the current Searcher was opened.
-            You can change it to lastModFrom="dirLastMod" if you want the
-            value to exactly corrispond to when the physical index was last
-            modified.
-
-            etagSeed="..." is an option you can change to force the ETag
-            header (and validation against If-None-Match requests) to be
-            differnet even if the index has not changed (ie: when making
-            significant changes to your config file)
-
-            lastModifiedFrom and etagSeed are both ignored if you use the
-            never304="true" option.
-       -->
-       <!-- If you include a <cacheControl> directive, it will be used to
-            generate a Cache-Control header, as well as an Expires header
-            if the value contains "max-age="
-
-            By default, no Cache-Control header is generated.
-
-            You can use the <cacheControl> option even if you have set
-            never304="true"
-       -->
-       <!-- <cacheControl>max-age=30, public</cacheControl> -->
-    </httpCaching>
-  </requestDispatcher>
-
-
-  <!-- requestHandler plugins... incoming queries will be dispatched to the
-     correct handler based on the path or the qt (query type) param.
-     Names starting with a '/' are accessed with the a path equal to the
-     registered name.  Names without a leading '/' are accessed with:
-      http://host/app/select?qt=name
-     If no qt is defined, the requestHandler that declares default="true"
-     will be used.
-  -->
-  <requestHandler name="standard" class="solr.SearchHandler">
-    <!-- default values for query parameters -->
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-       <bool name="omitHeader">true</bool>
-       <!--
-       <int name="rows">10</int>
-       <str name="fl">*</str>
-       <str name="version">2.1</str>
-        -->
-     </lst>
-  </requestHandler>
-
-<!-- Please refer to http://wiki.apache.org/solr/SolrReplication for details on configuring replication -->
-<!-- MASTER_REPLICATION_START
-<requestHandler name="/replication" class="solr.ReplicationHandler" >
-    <lst name="master">
-        <str name="replicateAfter">commit</str>
-        <str name="replicateAfter">startup</str>
-        <str name="confFiles">schema.xml,mapping-ISOLatin1Accent.txt,protwords.txt,stopwords.txt,synonyms.txt,elevate.xml</str>
-    </lst>
-</requestHandler>
- MASTER_REPLICATION_END -->
-
-<!-- SLAVE_REPLICATION_START
-<requestHandler name="/replication" class="solr.ReplicationHandler" >
-    <lst name="slave">
-        <str name="masterUrl">$MASTER_CORE_URL/replication</str>
-        <str name="pollInterval">$POLL_TIME</str>
-     </lst>
-</requestHandler>
- SLAVE_REPLICATION_END -->
-
-  <!-- DisMaxRequestHandler allows easy searching across multiple fields
-       for simple user-entered phrases.  It's implementation is now
-       just the standard SearchHandler with a default query type
-       of "dismax".
-       see http://wiki.apache.org/solr/DisMaxRequestHandler
-   -->
-  <requestHandler name="dismax" class="solr.SearchHandler">
-    <lst name="defaults">
-     <str name="defType">dismax</str>
-     <str name="echoParams">explicit</str>
-     <bool name="omitHeader">true</bool>
-    </lst>
-  </requestHandler>
-
-  <!-- Note how you can register the same handler multiple times with
-       different names (and different init parameters)
-    -->
-  <requestHandler name="drupal" class="solr.SearchHandler" default="true">
-    <lst name="defaults">
-     <str name="defType">dismax</str>
-     <str name="echoParams">explicit</str>
-     <bool name="omitHeader">true</bool>
-     <float name="tie">0.01</float>
-     <str name="pf">
-        content^2.0
-     </str>
-     <int name="ps">15</int>
-     <!-- Abort any searches longer than 4 seconds -->
-     <!-- <int name="timeAllowed">4000</int>  -->
-     <str name="mm">1</str>
-     <str name="q.alt">*:*</str>
-
-   <!-- example highlighter config, enable per-query with hl=true -->
-     <str name="hl">true</str>
-     <str name="hl.fl">content</str>
-     <int name="hl.snippets">3</int>
-     <str name="hl.mergeContiguous">true</str>
-   <!-- instructs Solr to return the field itself if no query terms are
-        found -->
-     <str name="f.content.hl.alternateField">teaser</str>
-     <str name="f.content.hl.maxAlternateFieldLength">256</str>
-     <!-- JS: I wasn't getting good results here... I'm turning off for now
-     because I was getting periods (.) by themselves at the beginning of
-     snippets and don't feel like debugging anymore.  Without the regex is
-     faster too -->
-     <!--<str name="f.content.hl.fragmenter">regex</str>--> <!-- defined below -->
-
-    <!-- By default, don't spell check -->
-      <str name="spellcheck">false</str>
-    <!-- Defaults for the spell checker when used -->
-      <str name="spellcheck.onlyMorePopular">true</str>
-      <str name="spellcheck.extendedResults">false</str>
-      <!--  The number of suggestions to return -->
-      <str name="spellcheck.count">1</str>
-    </lst>
-    <arr name="last-components">
-      <str>spellcheck</str>
-    </arr>
-  </requestHandler>
-
-  <!-- The more like this handler offers many advantages over the standard handler,
-    when performing moreLikeThis requests.-->
-  <requestHandler name="mlt" class="solr.MoreLikeThisHandler">
-    <lst name="defaults">
-      <str name="mlt.mintf">1</str>
-      <str name="mlt.mindf">1</str>
-      <str name="mlt.minwl">3</str>
-      <str name="mlt.maxwl">15</str>
-      <str name="mlt.maxqt">20</str>
-      <str name="mlt.match.include">false</str>
-      <!-- Abort any searches longer than 1.5 seconds -->
-      <!-- <int name="timeAllowed">1500</int> -->
-    </lst>
-  </requestHandler>
-
-
-  <!--
-   Search components are registered to SolrCore and used by Search Handlers
-
-   By default, the following components are avaliable:
-
-   <searchComponent name="query"     class="org.apache.solr.handler.component.QueryComponent" />
-   <searchComponent name="facet"     class="org.apache.solr.handler.component.FacetComponent" />
-   <searchComponent name="mlt"       class="org.apache.solr.handler.component.MoreLikeThisComponent" />
-   <searchComponent name="highlight" class="org.apache.solr.handler.component.HighlightComponent" />
-   <searchComponent name="stats"     class="org.apache.solr.handler.component.StatsComponent" />
-   <searchComponent name="debug"     class="org.apache.solr.handler.component.DebugComponent" />
-
-   Default configuration in a requestHandler would look like:
-    <arr name="components">
-      <str>query</str>
-      <str>facet</str>
-      <str>mlt</str>
-      <str>highlight</str>
-      <str>stats</str>
-      <str>debug</str>
-    </arr>
-
-    If you register a searchComponent to one of the standard names, that will be used instead.
-    To insert components before or after the 'standard' components, use:
-
-    <arr name="first-components">
-      <str>myFirstComponentName</str>
-    </arr>
-
-    <arr name="last-components">
-      <str>myLastComponentName</str>
-    </arr>
-  -->
-
-   <!-- The spell check component can return a list of alternative spelling
-  suggestions.  -->
-  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
-
-    <str name="queryAnalyzerFieldType">textSpell</str>
-
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">spell</str>
-      <str name="spellcheckIndexDir">./spellchecker1</str>
-      <str name="buildOnOptimize">true</str>
-    </lst>
-    <lst name="spellchecker">
-      <str name="name">jarowinkler</str>
-      <str name="field">spell</str>
-      <!-- Use a different Distance Measure -->
-      <str name="distanceMeasure">org.apache.lucene.search.spell.JaroWinklerDistance</str>
-      <str name="spellcheckIndexDir">./spellchecker2</str>
-      <str name="buildOnOptimize">true</str>
-    </lst>
-
-  </searchComponent>
-
-  <queryConverter name="queryConverter" class="solr.SpellingQueryConverter"/>
-
-  <!-- a search component that enables you to configure the top results for
-       a given query regardless of the normal lucene scoring.-->
-  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
-    <!-- pick a fieldType to analyze queries -->
-    <str name="queryFieldType">string</str>
-    <str name="config-file">elevate.xml</str>
-  </searchComponent>
-
-  <!-- a request handler utilizing the elevator component -->
-  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="echoParams">explicit</str>
-    </lst>
-    <arr name="last-components">
-      <str>elevator</str>
-    </arr>
-  </requestHandler>
-
-
-  <!-- Update request handler.
-
-       Note: Since solr1.1 requestHandlers requires a valid content type header if posted in
-       the body. For example, curl now requires: -H 'Content-type:text/xml; charset=utf-8'
-       The response format differs from solr1.1 formatting and returns a standard error code.
-
-       To enable solr1.1 behavior, remove the /update handler or change its path
-    -->
-  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
-
-  <!--
-   Analysis request handler.  Since Solr 1.3.  Use to returnhow a document is analyzed.  Useful
-   for debugging and as a token server for other types of applications
-   -->
-  <requestHandler name="/analysis" class="solr.AnalysisRequestHandler" />
-
-
-  <!-- CSV update handler, loaded on demand -->
-  <requestHandler name="/update/csv" class="solr.CSVRequestHandler" startup="lazy" />
-
-
-  <!--
-   Admin Handlers - This will register all the standard admin RequestHandlers.  Adding
-   this single handler is equivalent to registering:
-
-  <requestHandler name="/admin/luke"       class="org.apache.solr.handler.admin.LukeRequestHandler" />
-  <requestHandler name="/admin/system"     class="org.apache.solr.handler.admin.SystemInfoHandler" />
-  <requestHandler name="/admin/plugins"    class="org.apache.solr.handler.admin.PluginInfoHandler" />
-  <requestHandler name="/admin/threads"    class="org.apache.solr.handler.admin.ThreadDumpHandler" />
-  <requestHandler name="/admin/properties" class="org.apache.solr.handler.admin.PropertiesRequestHandler" />
-  <requestHandler name="/admin/file"       class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
-
-  If you wish to hide files under ${solr.home}/conf, explicitly register the ShowFileRequestHandler using:
-  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
-    <lst name="invariants">
-     <str name="hidden">synonyms.txt</str>
-     <str name="hidden">anotherfile.txt</str>
-    </lst>
-  </requestHandler>
-  -->
-  <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />
-
-  <!-- ping/healthcheck -->
-  <requestHandler name="/admin/ping" class="PingRequestHandler">
-    <lst name="defaults">
-      <str name="qt">standard</str>
-      <str name="q">solrpingquery</str>
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Files that are needed to start the service -->
-  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
-    <lst name="invariants">
-     <str name="hidden">admin-extra.html</str>
-     <str name="hidden">scripts.conf</str>
-     <str name="hidden">xslt/example.xsl</str>
-     <str name="hidden">xslt/example_atom.xsl</str>
-     <str name="hidden">xslt/example_rss.xsl</str>
-     <str name="hidden">xslt/luke.xsl</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Echo the request contents back to the client -->
-  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
-    <lst name="defaults">
-     <str name="echoParams">explicit</str> <!-- for all params (including the default etc) use: 'all' -->
-     <str name="echoHandler">true</str>
-    </lst>
-  </requestHandler>
-
-  <highlighting>
-   <!-- Configure the standard fragmenter -->
-   <!-- This could most likely be commented out in the "default" case -->
-   <fragmenter name="gap" class="org.apache.solr.highlight.GapFragmenter" default="true">
-    <lst name="defaults">
-     <int name="hl.fragsize">100</int>
-    </lst>
-   </fragmenter>
-
-   <!-- A regular-expression-based fragmenter (f.i., for sentence extraction) -->
-   <fragmenter name="regex" class="org.apache.solr.highlight.RegexFragmenter">
-    <lst name="defaults">
-      <!-- slightly smaller fragsizes work better because of slop -->
-      <int name="hl.fragsize">70</int>
-      <!-- allow 50% slop on fragment sizes -->
-      <float name="hl.regex.slop">0.5</float>
-      <!-- a basic sentence pattern -->
-      <str name="hl.regex.pattern">[-\w ,/\n\"']{20,200}</str>
-    </lst>
-   </fragmenter>
-
-   <!-- Configure the standard formatter -->
-   <formatter name="html" class="org.apache.solr.highlight.HtmlFormatter" default="true">
-    <lst name="defaults">
-     <str name="hl.simple.pre"><![CDATA[<strong>]]></str>
-     <str name="hl.simple.post"><![CDATA[</strong>]]></str>
-    </lst>
-   </formatter>
-  </highlighting>
-
-
-  <!-- queryResponseWriter plugins... query responses will be written using the
-    writer specified by the 'wt' request parameter matching the name of a registered
-    writer.
-    The "default" writer is the default and will be used if 'wt' is not specified
-    in the request. XMLResponseWriter will be used if nothing is specified here.
-    The json, python, and ruby writers are also available by default.
-
-    <queryResponseWriter name="xml" class="org.apache.solr.request.XMLResponseWriter" default="true"/>
-    <queryResponseWriter name="json" class="org.apache.solr.request.JSONResponseWriter"/>
-    <queryResponseWriter name="python" class="org.apache.solr.request.PythonResponseWriter"/>
-    <queryResponseWriter name="ruby" class="org.apache.solr.request.RubyResponseWriter"/>
-    <queryResponseWriter name="php" class="org.apache.solr.request.PHPResponseWriter"/>
-    <queryResponseWriter name="phps" class="org.apache.solr.request.PHPSerializedResponseWriter"/>
-
-    <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
-  -->
-
-  <!-- XSLT response writer transforms the XML output by any xslt file found
-       in Solr's conf/xslt directory.  Changes to xslt files are checked for
-       every xsltCacheLifetimeSeconds.
-   -->
-  <queryResponseWriter name="xslt" class="org.apache.solr.request.XSLTResponseWriter">
-    <int name="xsltCacheLifetimeSeconds">5</int>
-  </queryResponseWriter>
-
-
-  <!-- example of registering a query parser
-  <queryParser name="lucene" class="org.apache.solr.search.LuceneQParserPlugin"/>
-  -->
-
-  <!-- example of registering a custom function parser
-  <valueSourceParser name="myfunc" class="com.mycompany.MyValueSourceParser" />
-  -->
-
-  <!-- config for the admin interface -->
-  <admin>
-    <defaultQuery>solr</defaultQuery>
-    <!-- configure a healthcheck file for servers behind a loadbalancer
-    <healthcheck type="file">server-enabled</healthcheck>
-    -->
-  </admin>
-
-</config>
diff --git a/profiles/acquia/modules/apachesolr/solr-conf/solrconfig.xml b/profiles/acquia/modules/apachesolr/solr-conf/solrconfig.xml
deleted file mode 100644
index 070f327..0000000
--- a/profiles/acquia/modules/apachesolr/solr-conf/solrconfig.xml
+++ /dev/null
@@ -1,736 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<config name="drupal-3.0-rc2">
-  <!-- Set this to 'false' if you want solr to continue working after it has
-       encountered an severe configuration error.  In a production environment,
-       you may want solr to keep working even if one handler is mis-configured.
-
-       You may also set this to false using by setting the system property:
-         -Dsolr.abortOnConfigurationError=false
-     -->
-  <abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>
-
-  <!-- Used to specify an alternate directory to hold all index data
-       other than the default ./data under the Solr home.
-       If replication is in use, this should match the replication configuration. -->
-<!--
-  <dataDir>${solr.data.dir:./solr/data}</dataDir>
--->
-
-  <indexDefaults>
-   <!-- Values here affect all index writers and act as a default unless overridden. -->
-    <useCompoundFile>false</useCompoundFile>
-
-    <mergeFactor>10</mergeFactor>
-    <!--
-     If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
-
-     -->
-    <!--<maxBufferedDocs>1000</maxBufferedDocs>-->
-    <!-- Tell Lucene when to flush documents to disk.
-    Giving Lucene more memory for indexing means faster indexing at the cost of more RAM
-
-    If both ramBufferSizeMB and maxBufferedDocs is set, then Lucene will flush based on whichever limit is hit first.
-
-    -->
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <maxMergeDocs>2147483647</maxMergeDocs>
-    <maxFieldLength>20000</maxFieldLength>
-    <writeLockTimeout>1000</writeLockTimeout>
-    <commitLockTimeout>10000</commitLockTimeout>
-
-    <!--
-     Expert: Turn on Lucene's auto commit capability.
-     This causes intermediate segment flushes to write a new lucene
-     index descriptor, enabling it to be opened by an external
-     IndexReader.
-     NOTE: Despite the name, this value does not have any relation to Solr's autoCommit functionality
-     -->
-    <!--<luceneAutoCommit>false</luceneAutoCommit>-->
-    <!--
-     Expert:
-     The Merge Policy in Lucene controls how merging is handled by Lucene.  The default in 2.3 is the LogByteSizeMergePolicy, previous
-     versions used LogDocMergePolicy.
-
-     LogByteSizeMergePolicy chooses segments to merge based on their size.  The Lucene 2.2 default, LogDocMergePolicy chose when
-     to merge based on number of documents
-
-     Other implementations of MergePolicy must have a no-argument constructor
-     -->
-    <mergePolicy class="org.apache.lucene.index.LogByteSizeMergePolicy" />
-
-    <!--
-     Expert:
-     The Merge Scheduler in Lucene controls how merges are performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
-      can perform merges in the background using separate threads.  The SerialMergeScheduler (Lucene 2.2 default) does not.
-     -->
-    <!--<mergeScheduler>org.apache.lucene.index.ConcurrentMergeScheduler</mergeScheduler>-->
-
-    <!--
-      This option specifies which Lucene LockFactory implementation to use.
-
-      single = SingleInstanceLockFactory - suggested for a read-only index
-               or when there is no possibility of another process trying
-               to modify the index.
-      native = NativeFSLockFactory
-      simple = SimpleFSLockFactory
-
-      (For backwards compatibility with Solr 1.2, 'simple' is the default
-       if not specified.)
-    -->
-    <lockType>single</lockType>
-  </indexDefaults>
-
-  <mainIndex>
-    <!-- options specific to the main on-disk lucene index -->
-    <useCompoundFile>false</useCompoundFile>
-    <ramBufferSizeMB>32</ramBufferSizeMB>
-    <mergeFactor>4</mergeFactor>
-    <maxMergeDocs>2147483647</maxMergeDocs>
-    <maxFieldLength>20000</maxFieldLength>
-
-    <!-- If true, unlock any held write or commit locks on startup.
-         This defeats the locking mechanism that allows multiple
-         processes to safely access a lucene index, and should be
-         used with care.
-         This is not needed if lock type is 'none' or 'single'
-     -->
-    <unlockOnStartup>false</unlockOnStartup>
-
-    <!--
-        Custom deletion policies can specified here. The class must
-        implement org.apache.lucene.index.IndexDeletionPolicy.
-
-        http://lucene.apache.org/java/2_3_2/api/org/apache/lucene/index/IndexDeletionPolicy.html
-
-        The standard Solr IndexDeletionPolicy implementation supports deleting
-        index commit points on number of commits, age of commit point and
-        optimized status.
-
-        The latest commit point should always be preserved regardless
-        of the criteria.
-    -->
-    <deletionPolicy class="solr.SolrDeletionPolicy">
-      <!-- Keep only optimized commit points -->
-      <str name="keepOptimizedOnly">false</str>
-      <!-- The maximum number of commit points to be kept -->
-      <str name="maxCommitsToKeep">1</str>
-      <!--
-          Delete all commit points once they have reached the given age.
-          Supports DateMathParser syntax e.g.
-
-          <str name="maxCommitAge">30MINUTES</str>
-          <str name="maxCommitAge">1DAY</str>
-      -->
-    </deletionPolicy>
-
-  </mainIndex>
-
-  <!--	Enables JMX if and only if an existing MBeanServer is found, use
-  		this if you want to configure JMX through JVM parameters. Remove
-  		this to disable exposing Solr configuration and statistics to JMX.
-
-		If you want to connect to a particular server, specify the agentId
-		e.g. <jmx agentId="myAgent" />
-
-		If you want to start a new MBeanServer, specify the serviceUrl
-		e.g <jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr" />
-
-		For more details see http://wiki.apache.org/solr/SolrJmx
-  -->
-  <jmx />
-
-  <!-- the default high-performance update handler -->
-  <updateHandler class="solr.DirectUpdateHandler2">
-
-    <!-- A prefix of "solr." for class names is an alias that
-         causes solr to search appropriate packages, including
-         org.apache.solr.(search|update|request|core|analysis)
-     -->
-
-    <!-- Perform a <commit/> automatically under certain conditions:
-         maxDocs - number of updates since last commit is greater than this
-         maxTime - oldest uncommited update (in ms) is this long ago
-    -->
-    <autoCommit>
-      <maxDocs>2000</maxDocs>
-      <maxTime>120000</maxTime>
-    </autoCommit>
-
-
-    <!-- The RunExecutableListener executes an external command.
-         exe - the name of the executable to run
-         dir - dir to use as the current working directory. default="."
-         wait - the calling thread waits until the executable returns. default="true"
-         args - the arguments to pass to the program.  default=nothing
-         env - environment variables to set.  default=nothing
-      -->
-    <!-- A postCommit event is fired after every commit or optimize command
-    <listener event="postCommit" class="solr.RunExecutableListener">
-      <str name="exe">solr/bin/snapshooter</str>
-      <str name="dir">.</str>
-      <bool name="wait">true</bool>
-      <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
-      <arr name="env"> <str>MYVAR=val1</str> </arr>
-    </listener>
-    -->
-    <!-- A postOptimize event is fired only after every optimize command, useful
-         in conjunction with index distribution to only distribute optimized indicies
-    <listener event="postOptimize" class="solr.RunExecutableListener">
-      <str name="exe">snapshooter</str>
-      <str name="dir">solr/bin</str>
-      <bool name="wait">true</bool>
-    </listener>
-    -->
-
-  </updateHandler>
-
-
-  <query>
-    <!-- Maximum number of clauses in a boolean query... can affect
-        range or prefix queries that expand to big boolean
-        queries.  An exception is thrown if exceeded.  -->
-    <maxBooleanClauses>1024</maxBooleanClauses>
-
-
-    <!-- There are two implementations of cache available for Solr,
-         LRUCache, based on a synchronized LinkedHashMap, and
-         FastLRUCache, based on a ConcurrentHashMap.  FastLRUCache has faster gets
-         and slower puts in single threaded operation and thus is generally faster
-         than LRUCache when the hit ratio of the cache is high (> 75%), and may be
-         faster under other scenarios on multi-cpu systems. -->
-    <!-- Cache used by SolrIndexSearcher for filters (DocSets),
-         unordered sets of *all* documents that match a query.
-         When a new searcher is opened, its caches may be prepopulated
-         or "autowarmed" using data from caches in the old searcher.
-         autowarmCount is the number of items to prepopulate.  For LRUCache,
-         the autowarmed items will be the most recently accessed items.
-       Parameters:
-         class - the SolrCache implementation LRUCache or FastLRUCache
-         size - the maximum number of entries in the cache
-         initialSize - the initial capacity (number of entries) of
-           the cache.  (seel java.util.HashMap)
-         autowarmCount - the number of entries to prepopulate from
-           and old cache.
-         -->
-    <filterCache
-      class="solr.FastLRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="128"/>
-
-    <!-- Cache used to hold field values that are quickly accessible
-         by document id.  The fieldValueCache is created by default
-         even if not configured here.
-      <fieldValueCache
-        class="solr.FastLRUCache"
-        size="512"
-        autowarmCount="128"
-        showItems="32"
-      />
-    -->
-
-   <!-- queryResultCache caches results of searches - ordered lists of
-         document ids (DocList) based on a query, a sort, and the range
-         of documents requested.  -->
-    <queryResultCache
-      class="solr.LRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="32"/>
-
-  <!-- documentCache caches Lucene Document objects (the stored fields for each document).
-       Since Lucene internal document ids are transient, this cache will not be autowarmed.  -->
-    <documentCache
-      class="solr.LRUCache"
-      size="512"
-      initialSize="512"
-      autowarmCount="0"/>
-
-    <!-- If true, stored fields that are not requested will be loaded lazily.
-
-    This can result in a significant speed improvement if the usual case is to
-    not load all stored fields, especially if the skipped fields are large compressed
-    text fields.
-    -->
-    <enableLazyFieldLoading>true</enableLazyFieldLoading>
-
-    <!-- Example of a generic cache.  These caches may be accessed by name
-         through SolrIndexSearcher.getCache(),cacheLookup(), and cacheInsert().
-         The purpose is to enable easy caching of user/application level data.
-         The regenerator argument should be specified as an implementation
-         of solr.search.CacheRegenerator if autowarming is desired.  -->
-    <!--
-    <cache name="myUserCache"
-      class="solr.LRUCache"
-      size="4096"
-      initialSize="1024"
-      autowarmCount="1024"
-      regenerator="org.mycompany.mypackage.MyRegenerator"
-      />
-    -->
-
-   <!-- An optimization that attempts to use a filter to satisfy a search.
-         If the requested sort does not include score, then the filterCache
-         will be checked for a filter matching the query. If found, the filter
-         will be used as the source of document ids, and then the sort will be
-         applied to that.
-    <useFilterForSortedQuery>true</useFilterForSortedQuery>
-   -->
-
-   <!-- An optimization for use with the queryResultCache.  When a search
-         is requested, a superset of the requested number of document ids
-         are collected.  For example, if a search for a particular query
-         requests matching documents 10 through 19, and queryWindowSize is 50,
-         then documents 0 through 49 will be collected and cached.  Any further
-         requests in that range can be satisfied via the cache.  -->
-    <queryResultWindowSize>50</queryResultWindowSize>
-
-    <!-- Maximum number of documents to cache for any entry in the
-         queryResultCache. -->
-    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
-
-    <!-- This entry enables an int hash representation for filters (DocSets)
-         when the number of items in the set is less than maxSize.  For smaller
-         sets, this representation is more memory efficient, more efficient to
-         iterate over, and faster to take intersections.  -->
-    <HashDocSet maxSize="3000" loadFactor="0.75"/>
-
-    <!-- a newSearcher event is fired whenever a new searcher is being prepared
-         and there is a current searcher handling requests (aka registered). -->
-    <!-- QuerySenderListener takes an array of NamedList and executes a
-         local query request for each NamedList in sequence. -->
-    <listener event="newSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst> <str name="q">solr</str> <str name="start">0</str> <str name="rows">10</str> </lst>
-        <lst> <str name="q">rocks</str> <str name="start">0</str> <str name="rows">10</str> </lst>
-        <lst><str name="q">static newSearcher warming query from solrconfig.xml</str></lst>
-      </arr>
-    </listener>
-
-    <!-- a firstSearcher event is fired whenever a new searcher is being
-         prepared but there is no current registered searcher to handle
-         requests or to gain autowarming data from. -->
-    <listener event="firstSearcher" class="solr.QuerySenderListener">
-      <arr name="queries">
-        <lst> <str name="q">fast_warm</str> <str name="start">0</str> <str name="rows">10</str> </lst>
-        <lst><str name="q">static firstSearcher warming query from solrconfig.xml</str></lst>
-      </arr>
-    </listener>
-
-    <!-- If a search request comes in and there is no current registered searcher,
-         then immediately register the still warming searcher and use it.  If
-         "false" then all requests will block until the first searcher is done
-         warming. -->
-    <useColdSearcher>false</useColdSearcher>
-
-    <!-- Maximum number of searchers that may be warming in the background
-      concurrently.  An error is returned if this limit is exceeded. Recommend
-      1-2 for read-only slaves, higher for masters w/o cache warming. -->
-    <maxWarmingSearchers>2</maxWarmingSearchers>
-
-  </query>
-
-  <!--
-    Let the dispatch filter handler /select?qt=XXX
-    handleSelect=true will use consistent error handling for /select and /update
-    handleSelect=false will use solr1.1 style error formatting
-    -->
-  <requestDispatcher handleSelect="true" >
-    <!--Make sure your system has some authentication before enabling remote streaming!  -->
-    <requestParsers enableRemoteStreaming="false" multipartUploadLimitInKB="2048" />
-
-    <!-- Set HTTP caching related parameters (for proxy caches and clients).
-
-         To get the behaviour of Solr 1.2 (ie: no caching related headers)
-         use the never304="true" option and do not specify a value for
-         <cacheControl>
-    -->
-    <!-- <httpCaching never304="true"> -->
-    <httpCaching lastModifiedFrom="openTime"
-                 etagSeed="Solr">
-       <!-- lastModFrom="openTime" is the default, the Last-Modified value
-            (and validation against If-Modified-Since requests) will all be
-            relative to when the current Searcher was opened.
-            You can change it to lastModFrom="dirLastMod" if you want the
-            value to exactly corrispond to when the physical index was last
-            modified.
-
-            etagSeed="..." is an option you can change to force the ETag
-            header (and validation against If-None-Match requests) to be
-            differnet even if the index has not changed (ie: when making
-            significant changes to your config file)
-
-            lastModifiedFrom and etagSeed are both ignored if you use the
-            never304="true" option.
-       -->
-       <!-- If you include a <cacheControl> directive, it will be used to
-            generate a Cache-Control header, as well as an Expires header
-            if the value contains "max-age="
-
-            By default, no Cache-Control header is generated.
-
-            You can use the <cacheControl> option even if you have set
-            never304="true"
-       -->
-       <!-- <cacheControl>max-age=30, public</cacheControl> -->
-    </httpCaching>
-  </requestDispatcher>
-
-
-  <!-- requestHandler plugins... incoming queries will be dispatched to the
-     correct handler based on the path or the qt (query type) param.
-     Names starting with a '/' are accessed with the a path equal to the
-     registered name.  Names without a leading '/' are accessed with:
-      http://host/app/select?qt=name
-     If no qt is defined, the requestHandler that declares default="true"
-     will be used.
-  -->
-  <requestHandler name="standard" class="solr.SearchHandler">
-    <!-- default values for query parameters -->
-     <lst name="defaults">
-       <str name="echoParams">explicit</str>
-       <bool name="omitHeader">true</bool>
-       <!--
-       <int name="rows">10</int>
-       <str name="fl">*</str>
-       <str name="version">2.1</str>
-        -->
-     </lst>
-  </requestHandler>
-
-<!-- Please refer to http://wiki.apache.org/solr/SolrReplication for details on configuring replication -->
-<!-- MASTER_REPLICATION_START
-<requestHandler name="/replication" class="solr.ReplicationHandler" >
-    <lst name="master">
-        <str name="replicateAfter">commit</str>
-        <str name="replicateAfter">startup</str>
-        <str name="confFiles">schema.xml,mapping-ISOLatin1Accent.txt,protwords.txt,stopwords.txt,synonyms.txt,elevate.xml</str>
-    </lst>
-</requestHandler>
- MASTER_REPLICATION_END -->
-
-<!-- SLAVE_REPLICATION_START
-<requestHandler name="/replication" class="solr.ReplicationHandler" >
-    <lst name="slave">
-        <str name="masterUrl">$MASTER_CORE_URL/replication</str>
-        <str name="pollInterval">$POLL_TIME</str>
-     </lst>
-</requestHandler>
- SLAVE_REPLICATION_END -->
-
-  <!-- DisMaxRequestHandler allows easy searching across multiple fields
-       for simple user-entered phrases.  It's implementation is now
-       just the standard SearchHandler with a default query type
-       of "dismax".
-       see http://wiki.apache.org/solr/DisMaxRequestHandler
-   -->
-  <requestHandler name="dismax" class="solr.SearchHandler">
-    <lst name="defaults">
-     <str name="defType">dismax</str>
-     <str name="echoParams">explicit</str>
-     <bool name="omitHeader">true</bool>
-    </lst>
-  </requestHandler>
-
-  <!-- Note how you can register the same handler multiple times with
-       different names (and different init parameters)
-    -->
-  <requestHandler name="drupal" class="solr.SearchHandler" default="true">
-    <lst name="defaults">
-     <str name="defType">dismax</str>
-     <str name="echoParams">explicit</str>
-     <bool name="omitHeader">true</bool>
-     <float name="tie">0.01</float>
-     <str name="pf">
-        content^2.0
-     </str>
-     <int name="ps">15</int>
-     <!-- Abort any searches longer than 4 seconds -->
-     <!-- <int name="timeAllowed">4000</int>  -->
-     <str name="mm">1</str>
-     <str name="q.alt">*:*</str>
-
-   <!-- example highlighter config, enable per-query with hl=true -->
-     <str name="hl">true</str>
-     <str name="hl.fl">content</str>
-     <int name="hl.snippets">3</int>
-     <str name="hl.mergeContiguous">true</str>
-   <!-- instructs Solr to return the field itself if no query terms are
-        found -->
-     <str name="f.content.hl.alternateField">teaser</str>
-     <str name="f.content.hl.maxAlternateFieldLength">256</str>
-     <!-- JS: I wasn't getting good results here... I'm turning off for now
-     because I was getting periods (.) by themselves at the beginning of
-     snippets and don't feel like debugging anymore.  Without the regex is
-     faster too -->
-     <!--<str name="f.content.hl.fragmenter">regex</str>--> <!-- defined below -->
-
-    <!-- By default, don't spell check -->
-      <str name="spellcheck">false</str>
-    <!-- Defaults for the spell checker when used -->
-      <str name="spellcheck.onlyMorePopular">true</str>
-      <str name="spellcheck.extendedResults">false</str>
-      <!--  The number of suggestions to return -->
-      <str name="spellcheck.count">1</str>
-    </lst>
-    <arr name="last-components">
-      <str>spellcheck</str>
-    </arr>
-  </requestHandler>
-
-  <!-- The more like this handler offers many advantages over the standard handler,
-    when performing moreLikeThis requests.-->
-  <requestHandler name="mlt" class="solr.MoreLikeThisHandler">
-    <lst name="defaults">
-      <str name="mlt.mintf">1</str>
-      <str name="mlt.mindf">1</str>
-      <str name="mlt.minwl">3</str>
-      <str name="mlt.maxwl">15</str>
-      <str name="mlt.maxqt">20</str>
-      <str name="mlt.match.include">false</str>
-      <!-- Abort any searches longer than 1.5 seconds -->
-      <!-- <int name="timeAllowed">1500</int> -->
-    </lst>
-  </requestHandler>
-
-
-  <!--
-   Search components are registered to SolrCore and used by Search Handlers
-
-   By default, the following components are avaliable:
-
-   <searchComponent name="query"     class="org.apache.solr.handler.component.QueryComponent" />
-   <searchComponent name="facet"     class="org.apache.solr.handler.component.FacetComponent" />
-   <searchComponent name="mlt"       class="org.apache.solr.handler.component.MoreLikeThisComponent" />
-   <searchComponent name="highlight" class="org.apache.solr.handler.component.HighlightComponent" />
-   <searchComponent name="stats"     class="org.apache.solr.handler.component.StatsComponent" />
-   <searchComponent name="debug"     class="org.apache.solr.handler.component.DebugComponent" />
-
-   Default configuration in a requestHandler would look like:
-    <arr name="components">
-      <str>query</str>
-      <str>facet</str>
-      <str>mlt</str>
-      <str>highlight</str>
-      <str>stats</str>
-      <str>debug</str>
-    </arr>
-
-    If you register a searchComponent to one of the standard names, that will be used instead.
-    To insert components before or after the 'standard' components, use:
-
-    <arr name="first-components">
-      <str>myFirstComponentName</str>
-    </arr>
-
-    <arr name="last-components">
-      <str>myLastComponentName</str>
-    </arr>
-  -->
-
-   <!-- The spell check component can return a list of alternative spelling
-  suggestions.  -->
-  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">
-
-    <str name="queryAnalyzerFieldType">textSpell</str>
-
-    <lst name="spellchecker">
-      <str name="name">default</str>
-      <str name="field">spell</str>
-      <str name="spellcheckIndexDir">./spellchecker1</str>
-      <str name="buildOnOptimize">true</str>
-    </lst>
-    <lst name="spellchecker">
-      <str name="name">jarowinkler</str>
-      <str name="field">spell</str>
-      <!-- Use a different Distance Measure -->
-      <str name="distanceMeasure">org.apache.lucene.search.spell.JaroWinklerDistance</str>
-      <str name="spellcheckIndexDir">./spellchecker2</str>
-      <str name="buildOnOptimize">true</str>
-    </lst>
-
-  </searchComponent>
-
-  <queryConverter name="queryConverter" class="solr.SpellingQueryConverter"/>
-
-  <!-- a search component that enables you to configure the top results for
-       a given query regardless of the normal lucene scoring.-->
-  <searchComponent name="elevator" class="solr.QueryElevationComponent" >
-    <!-- pick a fieldType to analyze queries -->
-    <str name="queryFieldType">string</str>
-    <str name="config-file">elevate.xml</str>
-  </searchComponent>
-
-  <!-- a request handler utilizing the elevator component -->
-  <requestHandler name="/elevate" class="solr.SearchHandler" startup="lazy">
-    <lst name="defaults">
-      <str name="echoParams">explicit</str>
-    </lst>
-    <arr name="last-components">
-      <str>elevator</str>
-    </arr>
-  </requestHandler>
-
-
-  <!-- Update request handler.
-
-       Note: Since solr1.1 requestHandlers requires a valid content type header if posted in
-       the body. For example, curl now requires: -H 'Content-type:text/xml; charset=utf-8'
-       The response format differs from solr1.1 formatting and returns a standard error code.
-
-       To enable solr1.1 behavior, remove the /update handler or change its path
-    -->
-  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />
-
-  <!--
-   Analysis request handler.  Since Solr 1.3.  Use to returnhow a document is analyzed.  Useful
-   for debugging and as a token server for other types of applications
-   -->
-  <requestHandler name="/analysis" class="solr.AnalysisRequestHandler" />
-
-
-  <!-- CSV update handler, loaded on demand -->
-  <requestHandler name="/update/csv" class="solr.CSVRequestHandler" startup="lazy" />
-
-
-  <!--
-   Admin Handlers - This will register all the standard admin RequestHandlers.  Adding
-   this single handler is equivalent to registering:
-
-  <requestHandler name="/admin/luke"       class="org.apache.solr.handler.admin.LukeRequestHandler" />
-  <requestHandler name="/admin/system"     class="org.apache.solr.handler.admin.SystemInfoHandler" />
-  <requestHandler name="/admin/plugins"    class="org.apache.solr.handler.admin.PluginInfoHandler" />
-  <requestHandler name="/admin/threads"    class="org.apache.solr.handler.admin.ThreadDumpHandler" />
-  <requestHandler name="/admin/properties" class="org.apache.solr.handler.admin.PropertiesRequestHandler" />
-  <requestHandler name="/admin/file"       class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
-
-  If you wish to hide files under ${solr.home}/conf, explicitly register the ShowFileRequestHandler using:
-  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
-    <lst name="invariants">
-     <str name="hidden">synonyms.txt</str>
-     <str name="hidden">anotherfile.txt</str>
-    </lst>
-  </requestHandler>
-  -->
-  <requestHandler name="/admin/" class="org.apache.solr.handler.admin.AdminHandlers" />
-
-  <!-- ping/healthcheck -->
-  <requestHandler name="/admin/ping" class="PingRequestHandler">
-    <lst name="defaults">
-      <str name="qt">standard</str>
-      <str name="q">solrpingquery</str>
-      <str name="echoParams">all</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Files that are needed to start the service -->
-  <requestHandler name="/admin/file" class="org.apache.solr.handler.admin.ShowFileRequestHandler" >
-    <lst name="invariants">
-     <str name="hidden">admin-extra.html</str>
-     <str name="hidden">scripts.conf</str>
-     <str name="hidden">xslt/example.xsl</str>
-     <str name="hidden">xslt/example_atom.xsl</str>
-     <str name="hidden">xslt/example_rss.xsl</str>
-     <str name="hidden">xslt/luke.xsl</str>
-    </lst>
-  </requestHandler>
-
-  <!-- Echo the request contents back to the client -->
-  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
-    <lst name="defaults">
-     <str name="echoParams">explicit</str> <!-- for all params (including the default etc) use: 'all' -->
-     <str name="echoHandler">true</str>
-    </lst>
-  </requestHandler>
-
-  <highlighting>
-   <!-- Configure the standard fragmenter -->
-   <!-- This could most likely be commented out in the "default" case -->
-   <fragmenter name="gap" class="org.apache.solr.highlight.GapFragmenter" default="true">
-    <lst name="defaults">
-     <int name="hl.fragsize">100</int>
-    </lst>
-   </fragmenter>
-
-   <!-- A regular-expression-based fragmenter (f.i., for sentence extraction) -->
-   <fragmenter name="regex" class="org.apache.solr.highlight.RegexFragmenter">
-    <lst name="defaults">
-      <!-- slightly smaller fragsizes work better because of slop -->
-      <int name="hl.fragsize">70</int>
-      <!-- allow 50% slop on fragment sizes -->
-      <float name="hl.regex.slop">0.5</float>
-      <!-- a basic sentence pattern -->
-      <str name="hl.regex.pattern">[-\w ,/\n\"']{20,200}</str>
-    </lst>
-   </fragmenter>
-
-   <!-- Configure the standard formatter -->
-   <formatter name="html" class="org.apache.solr.highlight.HtmlFormatter" default="true">
-    <lst name="defaults">
-     <str name="hl.simple.pre"><![CDATA[<strong>]]></str>
-     <str name="hl.simple.post"><![CDATA[</strong>]]></str>
-    </lst>
-   </formatter>
-  </highlighting>
-
-
-  <!-- queryResponseWriter plugins... query responses will be written using the
-    writer specified by the 'wt' request parameter matching the name of a registered
-    writer.
-    The "default" writer is the default and will be used if 'wt' is not specified
-    in the request. XMLResponseWriter will be used if nothing is specified here.
-    The json, python, and ruby writers are also available by default.
-
-    <queryResponseWriter name="xml" class="org.apache.solr.request.XMLResponseWriter" default="true"/>
-    <queryResponseWriter name="json" class="org.apache.solr.request.JSONResponseWriter"/>
-    <queryResponseWriter name="python" class="org.apache.solr.request.PythonResponseWriter"/>
-    <queryResponseWriter name="ruby" class="org.apache.solr.request.RubyResponseWriter"/>
-    <queryResponseWriter name="php" class="org.apache.solr.request.PHPResponseWriter"/>
-    <queryResponseWriter name="phps" class="org.apache.solr.request.PHPSerializedResponseWriter"/>
-
-    <queryResponseWriter name="custom" class="com.example.MyResponseWriter"/>
-  -->
-
-  <!-- XSLT response writer transforms the XML output by any xslt file found
-       in Solr's conf/xslt directory.  Changes to xslt files are checked for
-       every xsltCacheLifetimeSeconds.
-   -->
-  <queryResponseWriter name="xslt" class="org.apache.solr.request.XSLTResponseWriter">
-    <int name="xsltCacheLifetimeSeconds">5</int>
-  </queryResponseWriter>
-
-
-  <!-- example of registering a query parser
-  <queryParser name="lucene" class="org.apache.solr.search.LuceneQParserPlugin"/>
-  -->
-
-  <!-- example of registering a custom function parser
-  <valueSourceParser name="myfunc" class="com.mycompany.MyValueSourceParser" />
-  -->
-
-  <!-- config for the admin interface -->
-  <admin>
-    <defaultQuery>solr</defaultQuery>
-    <!-- configure a healthcheck file for servers behind a loadbalancer
-    <healthcheck type="file">server-enabled</healthcheck>
-    -->
-  </admin>
-
-</config>
diff --git a/profiles/acquia/modules/apachesolr/tests/Dummy_Solr.php b/profiles/acquia/modules/apachesolr/tests/Dummy_Solr.php
index fbd8566..27286c9 100644
--- a/profiles/acquia/modules/apachesolr/tests/Dummy_Solr.php
+++ b/profiles/acquia/modules/apachesolr/tests/Dummy_Solr.php
@@ -5,12 +5,13 @@
  *   Dummy object to simulate a Solr Service
  *
  */
-class DummySolr {
+class DummySolr implements DrupalApacheSolrServiceInterface {
+
   function getId() {
     return __CLASS__;
   }
 
-  function getFields() {
+  function getFields($num_terms = 0) {
     return (object) array(
        'is_uid' =>
       (object) array(
@@ -226,16 +227,212 @@ class DummySolr {
 
   protected $last_search = array();
 
-  public function search($query = '', $params = array(), $method = 'GET') {
+  public function search($query = '', array $params = array(), $method = 'GET') {
     $this->last_search = array('query' => $query, 'params' => $params, 'method' => $method);
     $response = new stdClass();
-    $response->response = array();
-    $response->data = '';
+    $response->response = new stdClass();
+    $response->response->numFound = 0;
+    $response->response->docs = array();
+
     return $response;
   }
 
   public function getLastSearch() {
     return $this->last_search;
   }
+
+ /**
+   * Call the /admin/ping servlet, to test the connection to the server.
+   *
+   * @param $timeout
+   *   maximum time to wait for ping in seconds, -1 for unlimited (default 2).
+   * @return
+   *   (float) seconds taken to ping the server, FALSE if timeout occurs.
+   */
+  function ping($timeout = 2) {
+  }
+
+  /**
+   * Get information about the Solr Core.
+   *
+   * @return
+   *   (string) system info encoded in json
+   */
+  function getSystemInfo() {
+  }
+
+  /**
+   * Get meta-data about the index.
+   */
+  function getLuke($num_terms = 0) {
+  }
+
+  /**
+   * Get information about the Solr Core.
+   *
+   * Returns a Simple XMl document
+   */
+  function getStats() {
+  }
+
+  /**
+   * Get summary information about the Solr Core.
+   */
+  function getStatsSummary() {
+  }
+
+  /**
+   * Clear cached Solr data.
+   */
+  function clearCache() {
+  }
+
+  /**
+   * Constructor
+   *
+   * @param $url
+   *   The URL to the Solr server, possibly including a core name.  E.g. http://localhost:8983/solr/
+   *   or https://search.example.com/solr/core99/
+   * @param $env_id
+   *   The machine name of a corresponding saved configuration used for loading
+   *   data like which facets are enabled.
+   */
+  function __construct($url, $env_id = NULL) {
+  }
+
+  /**
+   * Make a request to a servlet (a path) that's not a standard path.
+   *
+   * @param string $servlet
+   *   A path to be added to the base Solr path. e.g. 'extract/tika'
+   *
+   * @param array $params
+   *   Any request parameters when constructing the URL.
+   *
+   * @param array $options
+   *  @see drupal_http_request() $options.
+   *
+   * @return
+   *  response object
+   *
+   * @thows Exception
+   */
+  function makeServletRequest($servlet, $params = array(), $options = array()) {
+  }
+
+  /**
+   * Get the Solr url
+   *
+   * @return string
+   */
+  function getUrl() {
+  }
+
+  /**
+   * Set the Solr url.
+   *
+   * @param $url
+   *
+   * @return $this
+   */
+  function setUrl($url) {
+  }
+
+  /**
+   * Raw update Method. Takes a raw post body and sends it to the update service. Post body
+   * should be a complete and well formed xml document.
+   *
+   * @param string $rawPost
+   * @param float $timeout Maximum expected duration (in seconds)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function update($rawPost, $timeout = FALSE) {
+  }
+
+  /**
+   * Add an array of Solr Documents to the index all at once
+   *
+   * @param array $documents Should be an array of ApacheSolrDocument instances
+   * @param boolean $allowDups
+   * @param boolean $overwritePending
+   * @param boolean $overwriteCommitted
+   *
+   * @return response objecte
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function addDocuments($documents, $overwrite = NULL, $commitWithin = NULL) {
+  }
+
+  /**
+   * Send a commit command.  Will be synchronous unless both wait parameters are set to false.
+   *
+   * @param boolean $optimize Defaults to true
+   * @param boolean $waitFlush Defaults to true
+   * @param boolean $waitSearcher Defaults to true
+   * @param float $timeout Maximum expected duration (in seconds) of the commit operation on the server (otherwise, will throw a communication exception). Defaults to 1 hour
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function commit($optimize = true, $waitFlush = true, $waitSearcher = true, $timeout = 3600) {
+  }
+
+  /**
+   * Create a delete document based on document ID
+   *
+   * @param string $id Expected to be utf-8 encoded
+   * @param float $timeout Maximum expected duration of the delete operation on the server (otherwise, will throw a communication exception)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+   function deleteById($id, $timeout = 3600) {
+   }
+
+  /**
+   * Create and post a delete document based on multiple document IDs.
+   *
+   * @param array $ids Expected to be utf-8 encoded strings
+   * @param float $timeout Maximum expected duration of the delete operation on the server (otherwise, will throw a communication exception)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function deleteByMultipleIds($ids, $timeout = 3600) {
+  }
+
+  /**
+   * Create a delete document based on a query and submit it
+   *
+   * @param string $rawQuery Expected to be utf-8 encoded
+   * @param float $timeout Maximum expected duration of the delete operation on the server (otherwise, will throw a communication exception)
+   * @return stdClass response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function deleteByQuery($rawQuery, $timeout = 3600) {
+  }
+
+  /**
+   * Send an optimize command.  Will be synchronous unless both wait parameters are set
+   * to false.
+   *
+   * @param boolean $waitFlush
+   * @param boolean $waitSearcher
+   * @param float $timeout Maximum expected duration of the commit operation on the server (otherwise, will throw a communication exception)
+   *
+   * @return response object
+   *
+   * @throws Exception If an error occurs during the service call
+   */
+  function optimize($waitFlush = true, $waitSearcher = true, $timeout = 3600) {
+  }
 }
 
diff --git a/profiles/acquia/modules/apachesolr/tests/apachesolr_base.test b/profiles/acquia/modules/apachesolr/tests/apachesolr_base.test
index 17b28e6..30a7e57 100644
--- a/profiles/acquia/modules/apachesolr/tests/apachesolr_base.test
+++ b/profiles/acquia/modules/apachesolr/tests/apachesolr_base.test
@@ -1,10 +1,46 @@
 <?php
+
+abstract class DrupalSolrOfflineWebTestCase extends DrupalWebTestCase {
+  function _nestedCompare($a1, $a2) {
+    if (count($a1) != count($a2)) {
+      $extra1 = array_diff_key($a1, $a2);
+      $extra2 = array_diff_key($a2, $a1);
+      $extra = '';
+      if ($extra1) {
+        $extra .= ' Extra keys in $a1: ' . implode(', ', array_keys($extra1));
+      }
+      if ($extra2) {
+        $extra .= ' Extra keys in $a2: ' . implode(', ', array_keys($extra2));
+      }
+      debug('count($a1) != count($a2) :' . $extra);
+      return FALSE;
+    }
+    foreach ($a1 as $k => $v) {
+      if (!isset($a2[$k])) {
+        debug("\$a2[$k] is not set");
+        return FALSE;
+      }
+      if (is_array($a1[$k]) && is_array($a2[$k])) {
+        if (!$this->_nestedCompare($a1[$k], $a2[$k])) {
+          debug("_nestedCompare(\$a1[$k], \$a2[$k]) is false");
+          return FALSE;
+        }
+      }
+      elseif ($a1[$k] !== $a2[$k]) {
+        debug("\$a1[$k] !== \$a2[$k] : " . var_export($a1[$k], TRUE) . " " . var_export($a2[$k], TRUE));
+        return FALSE;
+      }
+    }
+    return TRUE;
+  }
+}
+
 /**
  * @file
  *   Unit test class that provides tests for base functionality of the Apachesolr
  *   Module without having the need of a Solr Server
  */
-class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
+class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalSolrOfflineWebTestCase {
   /**
    * A global basic user who can search.
    */
@@ -49,7 +85,7 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
   }
 
   /**
-   *	Asserts that the module was installed and that a notice appears that the server is offline
+   * Asserts that the module was installed and that a notice appears that the server is offline
    */
   function testServerOffline() {
     // Load the default server.
@@ -66,9 +102,14 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
   }
 
   /**
-   *	Asserts that the module was installed and that a notice appears that the server is offline
+   * Asserts that the module was installed and that a notice appears that the server is offline
    */
   function testIndexFileIncluded() {
+    $env_id = apachesolr_default_environment();
+    $environment = apachesolr_environment_load($env_id);
+    $environment['url'] = 'http://localhost/solr/core_that_should_not_exist';
+    apachesolr_environment_save($environment);
+
     $paths = array(
       'user',
       'node',
@@ -92,7 +133,7 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
   }
 
   /**
-   *	Asserts that we can edit a search environment
+   * Asserts that we can edit a search environment
    */
   function testEditSearchEnvironment() {
     $this->drupalLogin($this->admin_user);
@@ -102,15 +143,13 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
     $edit = array('name' => 'new description foo bar', 'url' => 'http://localhost:8983/solr/core_does_not_exists');
     $this->drupalPost($this->getUrl(), $edit, t('Save'));
     $this->assertResponse(200);
-    drupal_static_reset('apachesolr_load_all_environments');
-    drupal_static_reset('apachesolr_get_solr');
     $this->drupalGet('admin/config/search/apachesolr/settings');
     $this->assertText(t('new description foo bar'), t('Search environment description was succesfully edited'));
     $this->assertText('http://localhost:8983/solr/core_does_not_exists', t('Search environment url was succesfully edited'));
   }
 
   /**
-   *	Asserts that we can use various url forms for the search environment
+   * Asserts that we can use various url forms for the search environment
    */
   function testEditSearchEnvironmentURLs() {
     // Set the various url schemes that will be tested
@@ -128,15 +167,13 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
       $edit = array('url' => $url);
       $this->drupalPost($this->getUrl(), $edit, t('Save'));
       $this->assertResponse(200);
-      drupal_static_reset('apachesolr_load_all_environments');
-      drupal_static_reset('apachesolr_get_solr');
       $this->drupalGet('admin/config/search/apachesolr/settings');
       $this->assertText($url, t('Search environment url was succesfully set to !url', array('!url' => $url)));
     }
   }
 
   /**
-   *	Asserts that we can edit a search environment
+   * Asserts that we can clone a search environment
    */
   function testCloneSearchEnvironment() {
     $this->drupalLogin($this->admin_user);
@@ -146,14 +183,22 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
     $this->assertText(t('Are you sure you want to clone search environment localhost server'), t('Clone confirmation page was succesfully loaded'));
     $this->drupalPost($this->getUrl(), array(), t('Clone'));
     $this->assertResponse(200);
-    drupal_static_reset('apachesolr_load_all_environments');
-    drupal_static_reset('apachesolr_get_solr');
     $this->drupalGet('admin/config/search/apachesolr/settings');
     $this->assertText(t('localhost server [cloned]'), t('Search Environment was succesfully cloned'));
+    // Check if the bundles and configurations are exactly the same
+    // after we clear the caches.
+    apachesolr_environments_clear_cache();
+    $envs = apachesolr_load_all_environments();
+    $this->assertEqual(count($envs), 2, 'Now we have 2 environments');
+    $orig_env = $envs['solr'];
+    unset($envs['solr']);
+    $cloned_env = array_pop($envs);
+    $this->assertTrue($this->_nestedCompare($orig_env['index_bundles'], $cloned_env['index_bundles']));
+    $this->assertTrue($this->_nestedCompare($orig_env['conf'], $cloned_env['conf']));
   }
 
   /**
-   *	Asserts that we can edit a search environment
+   * Asserts that we can edit a search environment
    */
   function testCreateNewSearchEnvironment() {
     // Create a new environment
@@ -165,8 +210,6 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
     $edit = array('url' => 'http://localhost:8983/solr', 'name' => 'my test description', 'env_id' => 'solr_test');
     $this->drupalPost($this->getUrl(), $edit, t('Save'));
     $this->assertResponse(200);
-    drupal_static_reset('apachesolr_load_all_environments');
-    drupal_static_reset('apachesolr_get_solr');
     $this->drupalGet('admin/config/search/apachesolr/settings');
     $this->assertText(t('my test description'), t('Search Environment was succesfully created'));
 
@@ -178,18 +221,12 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
     $edit = array('make_default' => 1, 'conf[apachesolr_read_only]' => APACHESOLR_READ_ONLY);
     $this->drupalPost($this->getUrl(), $edit, t('Save'));
     $this->assertResponse(200);
-    drupal_static_reset('apachesolr_load_all_environments');
-    drupal_static_reset('apachesolr_get_solr');
     $this->drupalGet('admin/config/search/apachesolr/settings');
     $this->assertText(t('my test description (Default)'), t('New Search environment was succesfully changed to default environment'));
-    // Load it, to fill our cache.
-    apachesolr_environment_load('solr_test');
+    // Clear our cache.
+    apachesolr_environments_clear_cache();
     $mode = apachesolr_environment_variable_get('solr_test', 'apachesolr_read_only', APACHESOLR_READ_WRITE);
-    $this->assertEqual($mode, APACHESOLR_READ_ONLY, t('Environment succesfully changed to read only'));
-  }
-
-  function tearDown() {
-    parent::tearDown();
+    $this->assertEqual($mode, APACHESOLR_READ_ONLY, 'Environment succesfully changed to read only');
   }
 }
 
@@ -198,7 +235,7 @@ class DrupalSolrOfflineEnvironmentWebTestCase extends DrupalWebTestCase {
  *   Unit test class that provides tests for base functionality of the Apachesolr
  *   Module without having the need of a Solr Server
  */
-class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalWebTestCase {
+class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalSolrOfflineWebTestCase {
   /**
    * A global basic user who can search.
    */
@@ -240,6 +277,14 @@ class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalWebTestCase {
     // Assign users to their test suite-wide properties.
     $this->basic_user = $basic_user;
     $this->admin_user = $admin_user;
+
+    // Make sure our environment does not exists
+    $env_id = apachesolr_default_environment(NULL, TRUE);
+    $environment = apachesolr_environment_load($env_id, TRUE);
+    $environment['url'] = 'http://localhost/solr/core_that_should_not_exist';
+    apachesolr_environment_save($environment);
+    // Reset all caches
+    apachesolr_load_all_environments(TRUE);
   }
 
   /**
@@ -253,7 +298,7 @@ class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalWebTestCase {
   }
 
   /**
-   *	Asserts that we can edit a search environment
+   * Asserts that we can edit a search environment
    */
   function testEditSearchPage() {
     $this->drupalLogin($this->admin_user);
@@ -266,21 +311,22 @@ class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalWebTestCase {
       'page_title' => 'Test Title',
       'search_path' => 'search/searchdifferentpath',
     );
-    $this->drupalPost($this->getUrl(), $edit, t('Save configuration'));
+    $this->drupalPost($this->getUrl(), $edit, t('Save'));
     $this->assertResponse(200);
     // Make sure the menu is recognized
-    drupal_static_reset('apachesolr_search_page_load');
+    drupal_static_reset('apachesolr_search_load_all_search_pages');
     menu_cache_clear_all();
     menu_rebuild();
+
     $this->drupalGet('admin/config/search/apachesolr/search-pages');
     $this->assertText(t('Test Search Page'), t('Search page was succesfully edited'));
     $this->assertText('search/searchdifferentpath', t('Search path was updated'));
     $this->drupalGet('search/searchdifferentpath');
-    $this->assertText(t('The Apache Solr search engine is not available. Please contact your site administrator.'), t('Search path was sucessfully created and is accessible'));
+    $this->assertText(t('Search is temporarily unavailable. If the problem persists, please contact the site administrator.'), t('Search path was successfully created and is accessible'));
   }
 
   /**
-   *	Asserts that we can edit a search environment
+   * Asserts that we can clone a search page
    */
   function testCloneSearchPage() {
     $this->drupalLogin($this->admin_user);
@@ -290,13 +336,13 @@ class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalWebTestCase {
     $this->assertText(t('Are you sure you want to clone search page Core Search?'), t('Clone confirmation page was succesfully loaded'));
     $this->drupalPost($this->getUrl(), array(), t('Clone'));
     $this->assertResponse(200);
-    drupal_static_reset('apachesolr_search_page_load');
+    drupal_static_reset('apachesolr_search_load_all_search_pages');
     $this->drupalGet('admin/config/search/apachesolr/search-pages');
-    $this->assertText(t('Core Search [cloned]'), t('Search Environment was succesfully cloned'));
+    $this->assertText(t('Core Search [cloned]'), 'Search page was succesfully cloned');
   }
 
   /**
-   *	Asserts that we can edit a search environment
+   * Asserts that we can edit a search environment
    */
   function testNewAndRemoveSearchPage() {
     // Create a new search page
@@ -313,10 +359,10 @@ class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalWebTestCase {
       'page_title' => 'Test Title',
       'search_path' => 'search/searchdifferentpath',
     );
-    $this->drupalPost($this->getUrl(), $edit, t('Save configuration'));
+    $this->drupalPost($this->getUrl(), $edit, t('Save'));
     $this->assertResponse(200);
     // Make sure the menu is recognized
-    drupal_static_reset('apachesolr_search_page_load');
+    drupal_static_reset('apachesolr_search_load_all_search_pages');
     menu_cache_clear_all();
     menu_rebuild();
     $this->drupalGet('admin/config/search/apachesolr/search-pages');
@@ -327,13 +373,17 @@ class DrupalSolrOfflineSearchPagesWebTestCase extends DrupalWebTestCase {
     $this->assertText(t('search page configuration will be deleted.This action cannot be undone.'), t('Delete confirmation page was succesfully loaded'));
     $this->drupalPost($this->getUrl(), array(), t('Delete'));
     $this->assertResponse(200);
-    drupal_static_reset('apachesolr_search_page_load');
+    drupal_static_reset('apachesolr_search_load_all_search_pages');
     $this->drupalGet('admin/config/search/apachesolr/search-pages');
     $this->assertNoText(t('Test Search Page'), t('Search Environment was succesfully deleted'));
-  }
-
-  function tearDown() {
-    parent::tearDown();
+    apachesolr_environment_save(array('env_id' => 'DummySolr', 'service_class' => 'DummySolr', 'name' => 'dummy server', 'url' => 'http://localhost:8983/solr'));
+    $solr = new DummySolr($url = NULL, $env_id = 'DummySolr');
+    $params = array(
+      'rows' => 5,
+    );
+    $results = apachesolr_search_run('apachesolr_test', $params, '', '', 0, $solr);
+    $query = apachesolr_current_query('DummySolr');
+    $this->assertEqual($query->getParam('rows'), 5, 'Passed in rows param overrode default');
   }
 }
 
@@ -368,20 +418,58 @@ class DrupalSolrNodeTestCase extends DrupalWebTestCase {
 
     $this->drupalLogin($admin_user);
 
-    //Create 2 nodes
-    $edit = array();
-    $edit['uid'] = $admin_user->uid;
-    $node = $this->drupalCreateNode($edit);
-
-    $this->drupalGet('admin/content/node');
-    // Remove the same node
-    $this->clickLink(t('delete'));
-    $this->assertText(t('Are you sure you want to delete'), t('Delete confirmation page was succesfully loaded'));
-    $this->drupalPost($this->getUrl(), array(), t('Delete'));
-    $this->assertResponse(200);
-  }
-  function tearDown() {
-    parent::tearDown();
+    // enable our bundles to be indexed, and clear caches
+    apachesolr_index_set_bundles('solr', 'node', array('page', 'article'));
+    entity_info_cache_clear();
+    apachesolr_environments_clear_cache();
+
+    // Define types of node bundles that we want to index
+    $types = array('page', 'article');
+
+    foreach ($types as $type) {
+      $edit = array();
+      // Create a node of the type $type.
+      $edit['uid'] = $admin_user->uid;
+      $edit['type'] = $type;
+      $edit['title'] = $this->randomName(16);
+      $node = $this->drupalCreateNode($edit);
+      $this->assertTrue(is_object($node) && isset($node->nid), t('Article type @type has been created.', array('@type' => $type)));
+
+      // Check that the node has been created.
+      $node = $this->drupalGetNodeByTitle($edit['title']);
+      $this->assertTrue($node, t('Created article @type found in database.', array('@type' => $type)));
+
+      // Check that the node has status 1
+      $indexer_table = apachesolr_get_indexer_table('node');
+      $query = db_select($indexer_table, 'aien')
+        ->condition('entity_id', $node->nid)
+        ->fields('aien', array('entity_id', 'status'));
+      $db_node = $query->execute()->fetchObject();
+      $this->assertEqual($db_node->status, 1, t('Node @entity_id has status 1', array('@entity_id' => $db_node->entity_id)));
+
+      // Delete the node
+      $this->drupalPost('node/' . $node->nid . '/delete', array(), t('Delete'));
+
+      // check if the entity delete does its work. It should have set the
+      // status to 0 so it will be deleted when solr comes online
+      $indexer_table = apachesolr_get_indexer_table('node');
+      $query = db_select($indexer_table, 'aien')
+        ->condition('entity_id', $node->nid)
+        ->fields('aien', array('entity_id', 'status'));
+      $db_node = $query->execute()->fetchObject();
+
+      // Check that all of the nodes (should only have 1) have status 0, it
+      // is set as 0 because it is pending to be deleted
+      $this->assertEqual($db_node->status, 0, t('Node @entity_id has status 0', array('@entity_id' => $db_node->entity_id)));
+
+      // Check that all the nodes have been deleted.
+      $count = db_select('node', 'n')
+        ->condition('n.nid', $node->nid)
+        ->countQuery()
+        ->execute()
+        ->fetchField();
+      $this->assertEqual($count, 0, t('No more nodes left in the node table.'));
+    }
   }
 }
 
diff --git a/profiles/acquia/modules/apachesolr/tests/apachesolr_test/apachesolr_test.info b/profiles/acquia/modules/apachesolr/tests/apachesolr_test/apachesolr_test.info
index 26916b8..69b7442 100644
--- a/profiles/acquia/modules/apachesolr/tests/apachesolr_test/apachesolr_test.info
+++ b/profiles/acquia/modules/apachesolr/tests/apachesolr_test/apachesolr_test.info
@@ -3,12 +3,13 @@ description = Support module for apachesolr module testing.
 package = Search Toolkit
 core = 7.x
 hidden = TRUE
+dependencies[] = apachesolr
 
-; Information added by drupal.org packaging script on 2012-08-10
-version = "7.x-1.0-rc3"
+; Information added by drupal.org packaging script on 2012-10-16
+version = "7.x-1.1"
 core = "7.x"
 project = "apachesolr"
-datestamp = "1344627704"
+datestamp = "1350356169"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/apachesolr/tests/solr_base_query.test b/profiles/acquia/modules/apachesolr/tests/solr_base_query.test
index b3a5600..4cf550d 100644
--- a/profiles/acquia/modules/apachesolr/tests/solr_base_query.test
+++ b/profiles/acquia/modules/apachesolr/tests/solr_base_query.test
@@ -199,6 +199,12 @@ class SolrBaseQueryTests extends DrupalUnitTestCase {
       $message = t('Filter (@fq) is not Valid', array('@fq' => $filter));
       $this->assertFalse($query->validFilterValue($filter), $message);
     }
-
+    // Check parameter normalization.
+    $query->addParam('spellcheck', TRUE);
+    $this->assertTrue($query->getParam('spellcheck') === 'true', "TRUE normalized to string 'true'");
+    $query->replaceParam('spellcheck', FALSE);
+    $this->assertTrue($query->getParam('spellcheck') === 'false', "FALSE normalized to string 'false'");
+    $query->addParam('fl', array(' x ', TRUE));
+    $this->assertTrue($query->getParam('fl') === array('x', 'true'), "Array of params all normalized");
   }
 }
diff --git a/profiles/acquia/modules/apachesolr/tests/solr_index_and_search.test b/profiles/acquia/modules/apachesolr/tests/solr_index_and_search.test
index a41bd8f..e449ef5 100755
--- a/profiles/acquia/modules/apachesolr/tests/solr_index_and_search.test
+++ b/profiles/acquia/modules/apachesolr/tests/solr_index_and_search.test
@@ -1,104 +1,143 @@
 <?php
 
-class DrupalSolrOnlineWebTestCase extends DrupalWebTestCase {
+abstract class AbstractDrupalSolrOnlineWebTestCase extends DrupalWebTestCase {
+
+  protected $solr;
+
+  protected $solr_available = FALSE; // workaround for drupal.org test bot
+
   /**
    * Implementation of setUp().
    */
   function setUp() {
+    // Install modules needed for this test. This could have been passed in as
+    // either a single array argument or a variable number of string arguments.
+    $modules = func_get_args();
+    if (isset($modules[0]) && is_array($modules[0])) {
+      $modules = $modules[0];
+    }
+    $modules[] = 'apachesolr';
+    $modules[] = 'apachesolr_search';
+    $modules[] = 'search';
+
+    parent::setUp($modules);
+  }
+
+  function setUpSolr() {
+    $patterns = func_get_args();
 
-    parent::setUp('apachesolr', 'apachesolr_search', 'search');
     // Load the default server.
     $env_id = apachesolr_default_environment();
     $environment = apachesolr_environment_load($env_id);
+    // Because we are in a clean environment, this will always be the default
+    // http://localhost:8983/solr
+    $this->core_admin_url = "{$environment['url']}/admin/cores";
 
-    if (apachesolr_server_status($environment['url'])) {
+    // The core admin url will give a valid response if the
+    // Solr server is running locally.
+    if ($this->coreAdminAvailable()) {
       // We will use a core named after the simpletest prefix.
-      // Normal base URL will be http://localhost:8983/solr
-      $base_url = $environment['url'];
       $environment['url'] .= '/' . $this->databasePrefix;
-      apachesolr_environment_save($environment);
-      $solr_url = $environment['url'];
-      $core_admin_url = "$base_url/admin/cores";
       $filesdir = variable_get('file_public_path');
 
-      // Create our 'solr core dir'
+      // Create our Solr core directory.
       mkdir("$filesdir/solr", 0777, TRUE);
       mkdir("$filesdir/solr/conf");
 
-      // Our virtual solr core is located here
+      // Our temporary core is located here.
       $instancedir = realpath("$filesdir/solr");
 
-      // Copy all files in solr-conf dir to our virtual solr core
-      $pattern = dirname(__FILE__) . '/../solr-conf/*';
-      foreach (glob($pattern) as $conf_file) {
-        copy($conf_file, "$instancedir/conf/" . basename($conf_file));
-      }
-
-      $pattern = dirname(__FILE__) . '/conf/*';
-      foreach (glob($pattern) as $conf_file) {
-        copy($conf_file, "$instancedir/conf/" . basename($conf_file));
+      // Copy all files in solr-conf dir to our temporary solr core.
+      // @todo - use the Solr 3.x conf where appropriate.
+      foreach ($patterns as $pattern) {
+        foreach (glob($pattern) as $conf_file) {
+          copy($conf_file, "$instancedir/conf/" . basename($conf_file));
+        }
       }
 
-      // Copy(dirname(__FILE__) . '/../solr-conf/schema.xml', "$instancedir/conf/schema.xml");
-      $contents = file_get_contents(dirname(__FILE__) . '/../solr-conf/solrconfig.xml');
+      $contents = file_get_contents("$instancedir/conf/solrconfig.xml");
 
       // Change the autoCommit time down to 1 second.
+      // @todo - use solrcore.properties file for 3.x.
       file_put_contents("$instancedir/conf/solrconfig.xml", preg_replace('@<maxTime>[0-9]+</maxTime>@', '<maxTime>1000</maxTime>', $contents));
-      $query['action'] = 'CREATE';
+
       $query['name'] = $this->databasePrefix;
       $query['instanceDir'] = $instancedir;
-      $this->drupalGet($core_admin_url, array('query' => $query));
-      $this->assertResponse(200);
-      $this->instancedir = $instancedir;
-      $this->solr_url = $solr_url;
-      $this->core_admin_url = $core_admin_url;
-      $this->checkCoreStatus();
+      $created = $this->coreAdmin('CREATE', $query);
+
+      if ($created && apachesolr_server_status($environment['url'])) {
+        $this->instancedir = $instancedir;
+        $this->solr_url = $environment['url'];
+        apachesolr_environment_save($environment);
+        $this->solr = apachesolr_get_solr($env_id);
+        $this->solr_available = TRUE;
+        $this->checkCoreStatus($this->databasePrefix);
+      }
     }
-    else {
+    // Workaround for drupal.org test bot.
+    // The tests succeed but further tests will not run because $this->solr_available is FALSE.
+    if (!$this->solr_available) {
       $this->pass(t('Warning : The solr instance could not be found. Please enable a multicore one on http://localhost:8983/solr'));
     }
   }
 
+  protected function coreAdminAvailable() {
+    $url = url($this->core_admin_url, array('query' => array('action' => 'STATUS')));
+    $options['timeout'] = 2;
+    $result = drupal_http_request($url, $options);
+    return ($result->code == 200 && empty($result->error));
+  }
+
   /**
    * Helper function to invoke core admin actions.
    */
-  protected function coreAdmin($action, $return_response = FALSE) {
-    // Load the default server.
-    $env_id = apachesolr_default_environment();
-    $environment = apachesolr_environment_load($env_id);
-
-    if (apachesolr_server_status($environment['url'])) {
-      $query = array();
-      $query['action'] = $action;
-      $query['wt'] = 'json';
-      $query['indent'] = '1';
-      $query['core'] = $this->databasePrefix;
-      $this->drupalGet($this->core_admin_url, array('query' => $query));
-      $this->assertResponse(200);
-      if ($return_response) {
-        return json_decode($this->drupalGetContent(), TRUE);
-      }
+  protected function coreAdmin($action, $query = array()) {
+    $query['action'] = $action;
+    $query['wt'] = 'json';
+    $query['indent'] = '1';
+    $this->drupalGet($this->core_admin_url, array('query' => $query));
+    if ($this->assertResponse(200)) {
+      return json_decode($this->drupalGetContent(), TRUE);
     }
     else {
-      $this->pass(t('Warning : The solr instance could not be found. Please enable a multicore one on http://localhost:8983/solr'));
+      return FALSE;
     }
   }
 
   /**
    * Helper function to verify that the expected core exists.
    */
-  protected function checkCoreStatus() {
-    $response = $this->coreAdmin('STATUS', TRUE);
-    $this->assertTrue(isset($response['status'][$this->databasePrefix]['index']), 'Found Solr test core index status');
+  protected function checkCoreStatus($core_name) {
+    $response = $this->coreAdmin('STATUS', array('core' => $core_name));
+    $this->assertTrue(isset($response['status'][$core_name]['index']), 'Found Solr test core index status');
   }
 
   function tearDown() {
-    // Unload the Solr core.
-    $this->coreAdmin('UNLOAD');
+    // Workaround for drupal.org test bot
+    if ($this->solr_available) {
+      // Unload the Solr core.
+      $this->coreAdmin('UNLOAD', array('core' => $this->databasePrefix));
+    }
     parent::tearDown();
   }
 }
 
+
+class DrupalSolrOnlineWebTestCase extends AbstractDrupalSolrOnlineWebTestCase {
+  /**
+   * Implementation of setUp().
+   */
+  function setUp() {
+    parent::setUp();
+    parent::setUpSolr(
+      // The Solr 1.4 conf will work in both 1.4 and 3.5.
+      dirname(__FILE__) . '/../solr-conf/solr-1.4/*',
+      dirname(__FILE__) . '/conf/*'
+    );
+  }
+}
+
+
 class DrupalSolrMatchTestCase extends DrupalSolrOnlineWebTestCase {
   public static function getInfo() {
     return array(
@@ -112,53 +151,38 @@ class DrupalSolrMatchTestCase extends DrupalSolrOnlineWebTestCase {
    * Test search indexing.
    */
   function testMatching() {
-    // Load the default server.
-    $env_id = apachesolr_default_environment();
-    $environment = apachesolr_environment_load($env_id);
-    if (apachesolr_server_status($environment['url'])) {
-      $solr = apachesolr_get_solr($env_id);
-      $this->assertTrue($solr->ping(), "The Server could be Pinged");
-      $response = $solr->search("*:*", 0, 0, array('qt' => 'standard'));
+    if ($this->solr_available) { // workaround for drupal.org test bot
+      $this->assertTrue($this->solr->ping(), "The Server could be Pinged");
+      $response = $this->solr->search("*:*", array('qt' => 'standard'));
       $response = $response->response;
       $this->assertEqual($response->numFound, 0, "There should not be any documents in the index");
-    }
-    else {
-      $this->pass(t('Warning : The solr instance could not be found. Please enable a multicore one on http://localhost:8983/solr'));
+      $this->populateIndex(7);
+      $response = $this->solr->search("*:*", array('qt' => 'standard'));
+      $response = $response->response;
+      $this->assertEqual($response->numFound, 7, "There should be 7 documents in the index");
+      $this->_testQueries();
     }
   }
 
   /**
    * Set up a small index of items to test against.
    */
-  function _setup() {
+  protected function populateIndex($count) {
 
     variable_set('minimum_word_size', 3);
-    for ($i = 1; $i <= 7; ++$i) {
-      $documents[] = $this->_solr_build_document($i, array('entity_id' => $i, 'content' => $this->getText($i)));
+    for ($i = 1; $i <= $count; ++$i) {
+      $documents[] = $this->buildDocument(array('entity_id' => $i, 'content' => $this->getText($i)));
     }
-
-    $this->_solr_index($documents);
+    $this->solr->addDocuments($documents);
+    $this->solr->commit();
   }
 
-  function _solr_index($documents) {
-    $batch = 0;
-    $batches = (count($documents) / 20);
-    while ($batch < $batches) {
-        $batch++;
-        $docs = array_splice($documents, 0, 20);
-        try {
-          $this->solr->addDocuments($docs);
-          $this->solr->commit();
-        }
-        catch (Exception $e) {
-          drupal_set_message($e->getMessage());
-        }
-    }
-  }
-
-  function _solr_build_document($nid, $values = array()) {
+  protected function buildDocument($values = array()) {
     $document = new ApacheSolrDocument();
-    $document->id = apachesolr_document_id($nid);
+    if (!isset($values['entity_type'])) {
+       $values['entity_type'] = 'fake.';
+    }
+    $document->id = apachesolr_document_id($values['entity_id'], $values['entity_type']);
     foreach ($values as $key => $value) {
       $document->$key = $value;
     }
@@ -178,6 +202,8 @@ class DrupalSolrMatchTestCase extends DrupalSolrOnlineWebTestCase {
    *   7  am minim veniam es cillum dolore eu
    */
   function getText($n) {
+    // Start over after 7.
+    $n = $n % 7;
     $words = explode(' ', "Ipsum dolore sit am. Ut enim am minim veniam. Es cillum dolore eu.");
     return implode(' ', array_slice($words, $n - 1, $n));
   }
@@ -202,6 +228,13 @@ class DrupalSolrMatchTestCase extends DrupalSolrOnlineWebTestCase {
       'ipsum' => array(1),
       'enim' => array(4, 5, 6),
       'xxxxx' => array(),
+      // Mixed queries.
+      '"minim am veniam es" OR "dolore sit"' => array(2),
+      '"minim am veniam es" OR "sit dolore"' => array(),
+      '"am minim veniam es" -eu' => array(6),
+      '"am minim veniam" -"cillum dolore"' => array(5, 6),
+    );
+    $broken = array(
       'enim minim' => array(5, 6),
       'enim xxxxx' => array(),
       'dolore eu' => array(7),
@@ -225,18 +258,14 @@ class DrupalSolrMatchTestCase extends DrupalSolrOnlineWebTestCase {
       '"sit dolore"' => array(),
       '"am minim veniam es"' => array(6, 7),
       '"minim am veniam es"' => array(),
+      'xxxxx "minim am veniam es" OR dolore' => array(),
+      'xx "minim am veniam es" OR dolore' => array(),
       // Mixed queries.
       '"am minim veniam es" OR dolore' => array(2, 6, 7),
-      '"minim am veniam es" OR "dolore sit"' => array(2),
-      '"minim am veniam es" OR "sit dolore"' => array(),
-      '"am minim veniam es" -eu' => array(6),
-      '"am minim veniam" -"cillum dolore"' => array(5, 6),
       '"am minim veniam" -"dolore cillum"' => array(5, 6, 7),
-      'xxxxx "minim am veniam es" OR dolore' => array(),
-      'xx "minim am veniam es" OR dolore' => array()
     );
     foreach ($queries as $query => $results) {
-      $response = $this->solr->search($query);
+      $response = $this->solr->search($query, array('qt' => 'standard'));
       $this->_testQueryMatching($query, $response->response->docs, $results);
       //@TODO: We might get to this later
       #$this->_testQueryScores($query, $response->responses->docs, $results);
@@ -257,7 +286,7 @@ class DrupalSolrMatchTestCase extends DrupalSolrOnlineWebTestCase {
     // Compare $results and $found.
     sort($found);
     sort($results);
-    $this->assertEqual($found, $results, "Query matching '$query'");
+    $this->assertEqual($found, $results, strtr("Query matching '$query' found: @found expected: @expected", array('@found' => implode(',', $found), '@expected' => implode(',', $results))));
   }
 
   /**
diff --git a/profiles/acquia/modules/ctools/bulk_export/bulk_export.info b/profiles/acquia/modules/ctools/bulk_export/bulk_export.info
index 02cab44..5fea894 100644
--- a/profiles/acquia/modules/ctools/bulk_export/bulk_export.info
+++ b/profiles/acquia/modules/ctools/bulk_export/bulk_export.info
@@ -4,11 +4,11 @@ core = 7.x
 dependencies[] = ctools
 package = Chaos tool suite
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/ctools.info b/profiles/acquia/modules/ctools/ctools.info
index 3092ced..b965dff 100644
--- a/profiles/acquia/modules/ctools/ctools.info
+++ b/profiles/acquia/modules/ctools/ctools.info
@@ -6,11 +6,11 @@ files[] = includes/context.inc
 files[] = includes/math-expr.inc
 files[] = includes/stylizer.inc
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/ctools_access_ruleset/ctools_access_ruleset.info b/profiles/acquia/modules/ctools/ctools_access_ruleset/ctools_access_ruleset.info
index 24e36ab..feed10d 100644
--- a/profiles/acquia/modules/ctools/ctools_access_ruleset/ctools_access_ruleset.info
+++ b/profiles/acquia/modules/ctools/ctools_access_ruleset/ctools_access_ruleset.info
@@ -4,11 +4,11 @@ core = 7.x
 package = Chaos tool suite
 dependencies[] = ctools
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/ctools_ajax_sample/ctools_ajax_sample.info b/profiles/acquia/modules/ctools/ctools_ajax_sample/ctools_ajax_sample.info
index 1b4ee13..4422d75 100644
--- a/profiles/acquia/modules/ctools/ctools_ajax_sample/ctools_ajax_sample.info
+++ b/profiles/acquia/modules/ctools/ctools_ajax_sample/ctools_ajax_sample.info
@@ -4,11 +4,11 @@ package = Chaos tool suite
 dependencies[] = ctools
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.info b/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.info
index 1ecba04..9af773c 100644
--- a/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.info
+++ b/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.info
@@ -4,11 +4,11 @@ core = 7.x
 package = Chaos tool suite
 dependencies[] = ctools
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.install b/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.install
index 8348434..b4512f2 100644
--- a/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.install
+++ b/profiles/acquia/modules/ctools/ctools_custom_content/ctools_custom_content.install
@@ -17,7 +17,7 @@ function ctools_custom_content_schema_1() {
       'bulk export' => TRUE,
       'primary key' => 'cid',
       'api' => array(
-        'owner' => 'ctools',
+        'owner' => 'ctools_custom_content',
         'api' => 'ctools_content',
         'minimum_version' => 1,
         'current_version' => 1,
diff --git a/profiles/acquia/modules/ctools/ctools_plugin_example/ctools_plugin_example.info b/profiles/acquia/modules/ctools/ctools_plugin_example/ctools_plugin_example.info
index 61c9626..b7f6bcb 100644
--- a/profiles/acquia/modules/ctools/ctools_plugin_example/ctools_plugin_example.info
+++ b/profiles/acquia/modules/ctools/ctools_plugin_example/ctools_plugin_example.info
@@ -7,11 +7,11 @@ dependencies[] = page_manager
 dependencies[] = advanced_help
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/help/plugins-creating.html b/profiles/acquia/modules/ctools/help/plugins-creating.html
index 186bb74..29a9014 100644
--- a/profiles/acquia/modules/ctools/help/plugins-creating.html
+++ b/profiles/acquia/modules/ctools/help/plugins-creating.html
@@ -1,7 +1,7 @@
 There are two primary pieces to using plugins. The first is getting the data, and the second is using the data.
 
 <h2>Defining a plugin</h2>
-To define that you offer a plugin that modules can implement, you first must implement hook_ctools_plugin_type() to tell the plugin system about your plugin. 
+To define that you offer a plugin that modules can implement, you first must implement hook_ctools_plugin_type() to tell the plugin system about your plugin.
 
 <pre>
 /**
@@ -49,7 +49,7 @@ The following information can be specified for each plugin type:
 <dd><em>Defaults to:</em> <strong>FALSE</strong></dd>
 <dd>If set to TRUE, the plugin type can automatically have 'child plugins' meaning each plugin can actually provide multiple plugins. This is mostly used for plugins that store some of their information in the database, such as views, blocks or exportable custom versions of plugins.</dd>
 <dd>To implement, each plugin can have a 'get child' and 'get children' callback. Both of these should be implemented for performance reasons, since it is best to avoid getting all children if necessary, but if 'get child' is not implemented, it will fall back to 'get children' if it has to.</dd>
-<dd>Child plugins should be named parent:child, with the : being the separator, so that it knows which parent plugin to ask for teh child. The 'get children' method should at least return the parent plugin as part of the list, unless it wants the parent plugin itself to not be a choosable option, which is not unheard of. </dd>
+<dd>Child plugins should be named parent:child, with the : being the separator, so that it knows which parent plugin to ask for the child. The 'get children' method should at least return the parent plugin as part of the list, unless it wants the parent plugin itself to not be a choosable option, which is not unheard of. </dd>
 <dd>'get children' arguments are ($plugin, $parent) and 'get child' arguments are ($plugin, $parent, $child).
 </dl>
 
diff --git a/profiles/acquia/modules/ctools/includes/context-task-handler.inc b/profiles/acquia/modules/ctools/includes/context-task-handler.inc
index 10fd793..617f20e 100644
--- a/profiles/acquia/modules/ctools/includes/context-task-handler.inc
+++ b/profiles/acquia/modules/ctools/includes/context-task-handler.inc
@@ -100,6 +100,24 @@ function ctools_context_handler_render_handler($task, $subtask, $handler, $conte
     return NULL;
   }
 
+  if ($page) {
+    if ($subtask) {
+      $task_name = page_manager_make_task_name($task['name'], $subtask['name']);
+    }
+    else {
+      $task_name = $task['name'];
+    }
+
+    page_manager_get_current_page(array(
+      'name' => $task_name,
+      'task' => $task,
+      'subtask' => $subtask,
+      'contexts' => $contexts,
+      'arguments' => $args,
+      'handler' => $handler,
+    ));
+  }
+
   $info = $function($handler, $contexts, $args);
   if (!$info) {
     return NULL;
@@ -119,22 +137,6 @@ function ctools_context_handler_render_handler($task, $subtask, $handler, $conte
     return $info;
   }
 
-  if ($subtask) {
-    $task_name = page_manager_make_task_name($task['name'], $subtask['name']);
-  }
-  else {
-    $task_name = $task['name'];
-  }
-
-  page_manager_get_current_page(array(
-    'name' => $task_name,
-    'task' => $task,
-    'subtask' => $subtask,
-    'contexts' => $contexts,
-    'arguments' => $args,
-    'handler' => $handler,
-  ));
-
   if (!empty($info['response code']) && $info['response code'] != 200) {
     switch ($info['response code']) {
       case 403:
diff --git a/profiles/acquia/modules/ctools/includes/context.inc b/profiles/acquia/modules/ctools/includes/context.inc
index 720a6fc..5c7a4ce 100644
--- a/profiles/acquia/modules/ctools/includes/context.inc
+++ b/profiles/acquia/modules/ctools/includes/context.inc
@@ -633,7 +633,7 @@ function ctools_context_keyword_substitute($string, $keywords, $contexts, $conve
 
   // Look for context matches we we only have to convert known matches.
   $matches = array();
-  if (preg_match_all('/%([a-zA-Z0-9%:_-]+)/us', $string, $matches)) {
+  if (preg_match_all('/%(%|[a-zA-Z0-9_-]+(?:\:[a-zA-Z0-9_-]+)?)/us', $string, $matches)) {
     foreach ($matches[1] as $keyword) {
       // Ignore anything it finds with %%.
       if ($keyword[0] == '%') {
diff --git a/profiles/acquia/modules/ctools/includes/css.inc b/profiles/acquia/modules/ctools/includes/css.inc
index 8bc4c66..ee11d48 100644
--- a/profiles/acquia/modules/ctools/includes/css.inc
+++ b/profiles/acquia/modules/ctools/includes/css.inc
@@ -284,8 +284,9 @@ function ctools_css_disassemble($css) {
   $disassembled_css = array();
   // Remove comments.
   $css = preg_replace("/\/\*(.*)?\*\//Usi", "", $css);
-  // Split out each statement
-  $statements = preg_split('/[;}]/', $css);
+  // Split out each statement. Match either a right curly brace or a semi-colon
+  // that precedes a left curly brace with no right curly brace separating them.
+  $statements = preg_split('/}|;(?=[^}]*{)/', $css);
 
   // If we have any statements, parse them.
   if (!empty($statements)) {
diff --git a/profiles/acquia/modules/ctools/includes/export.inc b/profiles/acquia/modules/ctools/includes/export.inc
index dfbe74b..0b2ef46 100644
--- a/profiles/acquia/modules/ctools/includes/export.inc
+++ b/profiles/acquia/modules/ctools/includes/export.inc
@@ -386,10 +386,15 @@ function ctools_export_crud_disable($table, $object) {
  */
 function ctools_export_load_object($table, $type = 'all', $args = array()) {
   $cache = &drupal_static(__FUNCTION__);
+  $cache_table_exists = &drupal_static(__FUNCTION__ . '_table_exists', array());
   $cached_database = &drupal_static('ctools_export_load_object_all');
 
+  if (!array_key_exists($table, $cache_table_exists)) {
+    $cache_table_exists[$table] = db_table_exists($table);
+  }
+
   $schema = ctools_export_get_schema($table);
-  if (empty($schema) || !db_table_exists($table)) {
+  if (empty($schema) || !$cache_table_exists[$table]) {
     return array();
   }
 
diff --git a/profiles/acquia/modules/ctools/includes/wizard.inc b/profiles/acquia/modules/ctools/includes/wizard.inc
index 946ed0f..6f5d794 100644
--- a/profiles/acquia/modules/ctools/includes/wizard.inc
+++ b/profiles/acquia/modules/ctools/includes/wizard.inc
@@ -430,6 +430,12 @@ function ctools_wizard_submit(&$form, &$form_state) {
       }
       else if ($type == 'next') {
         $form_state['redirect'] = ctools_wizard_get_path($form_state['form_info'], $form_state['clicked_button']['#next']);
+        if (!empty($_GET['destination'])) {
+          // We don't want drupal_goto redirect this request
+          // back. ctools_wizard_get_path ensures that the destination is
+          // carried over on subsequent pages.
+          unset($_GET['destination']);
+        }
       }
       else if (isset($form_state['form_info']['return path'])) {
         $form_state['redirect'] = $form_state['form_info']['return path'];
@@ -449,11 +455,27 @@ function ctools_wizard_get_path($form_info, $step) {
     foreach ($form_info['path'] as $id => $part) {
       $form_info['path'][$id] = str_replace('%step', $step, $form_info['path'][$id]);
     }
-    return $form_info['path'];
+    $path = $form_info['path'];
   }
   else {
-    return array(str_replace('%step', $step, $form_info['path']));
+    $path = array(str_replace('%step', $step, $form_info['path']));
+  }
+
+  // If destination is set, carry it over so it'll take effect when
+  // saving. The submit handler will unset destination to avoid drupal_goto
+  // redirecting us.
+  if (!empty($_GET['destination'])) {
+    // Ensure that options is an array.
+    if (!isset($path[1]) || !is_array($path[1])) {
+      $path[1] = array();
+    }
+    // Ensure that the query part of options is an array.
+    $path[1] += array('query' => array());
+    // Add the destination parameter, if not set already.
+    $path[1]['query'] += drupal_get_destination();
   }
+
+  return $path;
 }
 
 /**
diff --git a/profiles/acquia/modules/ctools/js/auto-submit.js b/profiles/acquia/modules/ctools/js/auto-submit.js
index 59178c4..890dd1f 100644
--- a/profiles/acquia/modules/ctools/js/auto-submit.js
+++ b/profiles/acquia/modules/ctools/js/auto-submit.js
@@ -16,6 +16,12 @@
  *   '#attributes' => array('class' => array('ctools-auto-submit-full-form')),
  * @endcode
  *
+ * If you want to exclude a field from the ctool-auto-submit-full-form auto submission,
+ * add the class ctools-auto-submit-exclude to the form element. With FAPI, add:
+ * @code
+ *   '#attributes' => array('class' => array('ctools-auto-submit-exclude')),
+ * @endcode
+ *
  * Finally, you have to identify which button you want clicked for autosubmit.
  * The behavior of this button will be honored if it's ajaxy or not:
  * @code
@@ -39,7 +45,7 @@ Drupal.behaviors.CToolsAutoSubmit = {
     // the change event bubbles so we only need to bind it to the outer form
     $('form.ctools-auto-submit-full-form', context)
       .add('.ctools-auto-submit', context)
-      .filter('form, select, input:not(:text, :submit)')
+      .filter('form, select, input:not(:text, :submit, .ctools-auto-submit-exclude)')
       .once('ctools-auto-submit')
       .change(function (e) {
         // don't trigger on text change for full-form
@@ -68,6 +74,7 @@ Drupal.behaviors.CToolsAutoSubmit = {
     ];
     // Don't wait for change event on textfields
     $('.ctools-auto-submit-full-form input:text, input:text.ctools-auto-submit', context)
+      .filter(':not(.ctools-auto-submit-exclude)')
       .once('ctools-auto-submit', function () {
         // each textinput element has his own timeout
         var timeoutID = 0;
diff --git a/profiles/acquia/modules/ctools/js/modal.js b/profiles/acquia/modules/ctools/js/modal.js
index 1376d82..5b417d0 100644
--- a/profiles/acquia/modules/ctools/js/modal.js
+++ b/profiles/acquia/modules/ctools/js/modal.js
@@ -278,7 +278,10 @@
       Drupal.CTools.Modal.show(Drupal.CTools.Modal.getSettings(ajax.element));
     }
     $('#modal-title').html(response.title);
-    $('#modal-content').html(response.output);
+    // Simulate an actual page load by scrolling to the top after adding the
+    // content. This is helpful for allowing users to see error messages at the
+    // top of a form, etc.
+    $('#modal-content').html(response.output).scrollTop(0);
     Drupal.attachBehaviors();
   }
 
diff --git a/profiles/acquia/modules/ctools/page_manager/page_manager.info b/profiles/acquia/modules/ctools/page_manager/page_manager.info
index 57a6f15..291ab1c 100644
--- a/profiles/acquia/modules/ctools/page_manager/page_manager.info
+++ b/profiles/acquia/modules/ctools/page_manager/page_manager.info
@@ -4,11 +4,11 @@ core = 7.x
 dependencies[] = ctools
 package = Chaos tool suite
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/page_manager/page_manager.install b/profiles/acquia/modules/ctools/page_manager/page_manager.install
index ad2781c..b170ce7 100644
--- a/profiles/acquia/modules/ctools/page_manager/page_manager.install
+++ b/profiles/acquia/modules/ctools/page_manager/page_manager.install
@@ -23,6 +23,8 @@ function page_manager_schema_1() {
       'identifier' => 'handler',
       'bulk export' => TRUE,
       'export callback' => 'page_manager_export_task_handler',
+      'load callback' => 'page_manager_export_task_handler_load',
+      'delete callback' => 'page_manager_delete_task_handler',
       'primary key' => 'did',
       'api' => array(
         'owner' => 'page_manager',
diff --git a/profiles/acquia/modules/ctools/page_manager/page_manager.module b/profiles/acquia/modules/ctools/page_manager/page_manager.module
index 6d6c199..62f6d27 100644
--- a/profiles/acquia/modules/ctools/page_manager/page_manager.module
+++ b/profiles/acquia/modules/ctools/page_manager/page_manager.module
@@ -696,6 +696,44 @@ function page_manager_export_task_handler($handler, $indent = '') {
 }
 
 /**
+ * Loads page manager handler for export.
+ *
+ * Callback to load page manager handler within ctools_export_crud_load().
+ *
+ * @param string $name
+ *   The name of the handler to load.
+ *
+ * @return
+ *   Loaded page manager handler object, extended with external properties.
+ */
+function page_manager_export_task_handler_load($name) {
+  $table = 'page_manager_handlers';
+  $schema = ctools_export_get_schema($table);
+  $export = $schema['export'];
+
+  $result = ctools_export_load_object($table, 'names', array($name));
+  if (isset($result[$name])) {
+    $handler = $result[$name];
+
+    // Weight is stored in additional table so that in-code task handlers
+    // don't need to get written to the database just because they have their
+    // weight changed. Therefore, handler could have no correspondent database
+    // entry. Revert will not be performed for this handler and the weight
+    // will not be reverted. To make possible revert of the weight field
+    // export_type must simulate that the handler is stored in the database.
+    $handler->export_type = EXPORT_IN_DATABASE;
+
+    // Also, page manager handler weight should be overriden with correspondent
+    // weight from page_manager_weights table, if there is one.
+    $result = db_query('SELECT weight FROM {page_manager_weights} WHERE name = (:names)', array(':names' => $handler->name))->fetchField();
+    if (is_numeric($result)) {
+      $handler->weight = $result;
+    }
+    return $handler;
+  }
+}
+
+/**
  * Create a new task handler object.
  *
  * @param $plugin
diff --git a/profiles/acquia/modules/ctools/plugins/access/entity_field_value.inc b/profiles/acquia/modules/ctools/plugins/access/entity_field_value.inc
index 1fb1fe8..59b01fb 100644
--- a/profiles/acquia/modules/ctools/plugins/access/entity_field_value.inc
+++ b/profiles/acquia/modules/ctools/plugins/access/entity_field_value.inc
@@ -141,7 +141,13 @@ function ctools_entity_field_value_ctools_access_check($conf, $context, $plugin)
 
   if ($field_items = field_get_items($entity_type, $context->data, $field_name)) {
     $langcode = field_language($entity_type, $context->data, $field_name);
-
+    // Get field storage columns.
+    $instance = field_info_instance($entity_type, $field_name, $bundle_type);
+    $field = field_info_field_by_id($instance['field_id']);
+    $columns = array();
+    foreach ($field['columns'] as $column => $attributes) {
+      $columns[$column] = _field_sql_storage_columnname($field_name, $column);
+    }
     foreach ($conf as $potential_field => $values) {
       if ($field_name === $potential_field) {
 
@@ -152,8 +158,14 @@ function ctools_entity_field_value_ctools_access_check($conf, $context, $plugin)
 
         // Check field value.
         foreach ($field_items as $field_value) {
-          if (in_array($field_value['value'], $conf_value_array)) {
-            return TRUE;
+          foreach ($field_value as $field_column => $value) {
+            // Iterate through config values.
+            foreach ($conf_value_array as $conf_value) {
+              //
+              if ($value == $conf_value[$field_column]) {
+                return TRUE;
+              }
+            }
           }
         }
       }
@@ -168,8 +180,8 @@ function _ctools_entity_field_value_ctools_access_get_conf_field_values($values,
   }
   $conf_values = array();
 
-  foreach ($values[$langcode] as $value) {
-    $conf_values[] = $value['value'];
+  foreach ($values[$langcode] as $delta => $value) {
+    $conf_values[$delta] = $value;
   }
 
   return $conf_values;
diff --git a/profiles/acquia/modules/ctools/plugins/content_types/block/block.inc b/profiles/acquia/modules/ctools/plugins/content_types/block/block.inc
index 866f72e..f5b0063 100644
--- a/profiles/acquia/modules/ctools/plugins/content_types/block/block.inc
+++ b/profiles/acquia/modules/ctools/plugins/content_types/block/block.inc
@@ -78,21 +78,72 @@ function _ctools_block_content_type_content_type($module, $delta, $block) {
 }
 
 /**
+ * Load block info from the database.
+ *
+ * This is copied from _block_load_blocks(). It doesn't use that
+ * function because _block_load_blocks sorts by region, and it
+ * doesn't cache its results anyway.
+ */
+function _ctools_block_load_blocks() {
+  $blocks = &drupal_static(__FUNCTION__, NULL);
+  if (!isset($blocks)) {
+    global $theme_key;
+
+    $query = db_select('block', 'b');
+    $result = $query
+      ->fields('b')
+      ->condition('b.theme', $theme_key)
+      ->orderBy('b.region')
+      ->orderBy('b.weight')
+      ->orderBy('b.module')
+      ->addTag('block_load')
+      ->addTag('translatable')
+      ->execute();
+
+    $block_info = $result->fetchAllAssoc('bid');
+    // Allow modules to modify the block list.
+    drupal_alter('block_list', $block_info);
+
+    $blocks = array();
+    foreach ($block_info as $block) {
+      $blocks["{$block->module}_{$block->delta}"] = $block;
+    }
+  }
+
+  return $blocks;
+}
+
+/**
+ * Fetch the stored info for a block.
+ *
+ * The primary reason to use this is so that modules which perform alters
+ * can have their alters make it to the block.
+ */
+function _ctools_get_block_info($module, $delta) {
+  $blocks = _ctools_block_load_blocks();
+
+  $key = $module . '_' . $delta;
+  if (isset($blocks[$key])) {
+    return $blocks[$key];
+  }
+}
+
+/**
  * Output function for the 'block' content type. Outputs a block
  * based on the module and delta supplied in the configuration.
  */
 function ctools_block_content_type_render($subtype, $conf) {
   list($module, $delta) = _ctools_block_get_module_delta($subtype, $conf);
 
-  $info = new stdClass;
-  $info->module = $module;
-  $info->delta = $delta;
+  $info = _ctools_get_block_info($module, $delta);
   $block = module_invoke($module, 'block_view', $delta);
 
-  // Allow modules to modify the block before it is viewed, via either
-  // hook_block_view_alter() or hook_block_view_MODULE_DELTA_alter().
-  drupal_alter(array('block_view', "block_view_{$module}_{$delta}"), $block, $info);
-  $block = (object) $block;
+  if (!empty($info)) {
+    // Allow modules to modify the block before it is viewed, via either
+    // hook_block_view_alter() or hook_block_view_MODULE_DELTA_alter().
+    drupal_alter(array('block_view', "block_view_{$module}_{$delta}"), $block, $info);
+    $block = (object) $block;
+  }
 
   if (empty($block)) {
     return;
@@ -101,7 +152,10 @@ function ctools_block_content_type_render($subtype, $conf) {
   $block->module = $module;
   $block->delta = $delta;
 
-  if (isset($block->subject)) {
+  if ($module == 'block') {
+    $block->title = $info->title;
+  }
+  else if (isset($block->subject)) {
     $block->title = $block->subject;
   }
   else {
diff --git a/profiles/acquia/modules/ctools/plugins/content_types/entity_context/entity_field.inc b/profiles/acquia/modules/ctools/plugins/content_types/entity_context/entity_field.inc
index fb3fad2..2da4044 100644
--- a/profiles/acquia/modules/ctools/plugins/content_types/entity_context/entity_field.inc
+++ b/profiles/acquia/modules/ctools/plugins/content_types/entity_context/entity_field.inc
@@ -154,7 +154,7 @@ function ctools_entity_field_content_type_render($subtype, $conf, $panel_args, $
   $clone->{$field_name}[$language] = $all_values;
   $field_output = field_view_field($entity_type, $clone, $field_name, $field_settings, $language);
 
-  if (!empty($conf['override_title'])) {
+  if (!empty($field_output) && !empty($conf['override_title'])) {
     $field_output['#title'] = filter_xss_admin($conf['override_title_text']);
   }
 
diff --git a/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_author.inc b/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_author.inc
index 5cb6a34..350df40 100644
--- a/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_author.inc
+++ b/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_author.inc
@@ -43,7 +43,7 @@ function ctools_node_form_author_content_type_render($subtype, $conf, $panel_arg
 }
 
 function ctools_node_form_author_content_type_admin_title($subtype, $conf, $context) {
-  return t('"@s" node form publishing options', array('@s' => $context->identifier));
+  return t('"@s" node form author information', array('@s' => $context->identifier));
 }
 
 function ctools_node_form_author_content_type_edit_form($form, &$form_state) {
diff --git a/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_publishing.inc b/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_publishing.inc
index 3f3cf25..e73cff2 100644
--- a/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_publishing.inc
+++ b/profiles/acquia/modules/ctools/plugins/content_types/node_form/node_form_publishing.inc
@@ -45,7 +45,7 @@ function ctools_node_form_publishing_content_type_render($subtype, $conf, $panel
 }
 
 function ctools_node_form_publishing_content_type_admin_title($subtype, $conf, $context) {
-  return t('"@s" node form author information', array('@s' => $context->identifier));
+  return t('"@s" node form publishing options', array('@s' => $context->identifier));
 }
 
 function ctools_node_form_publishing_content_type_edit_form($form, &$form_state) {
diff --git a/profiles/acquia/modules/ctools/plugins/content_types/term_context/term_description.inc b/profiles/acquia/modules/ctools/plugins/content_types/term_context/term_description.inc
index 35988e6..2b953ed 100644
--- a/profiles/acquia/modules/ctools/plugins/content_types/term_context/term_description.inc
+++ b/profiles/acquia/modules/ctools/plugins/content_types/term_context/term_description.inc
@@ -20,7 +20,7 @@ function ctools_term_description_content_type_render($subtype, $conf, $panel_arg
 
   $block->title = $term->name;
   if ($term) {
-    $block->content = _filter_autop(filter_xss_admin($term->description));
+    $block->content = check_markup($term->description, $term->format, '', TRUE);
     $block->delta = $term->tid;
 
     if (user_access('administer taxonomy')) {
diff --git a/profiles/acquia/modules/ctools/stylizer/stylizer.info b/profiles/acquia/modules/ctools/stylizer/stylizer.info
index ebe1404..888180b 100644
--- a/profiles/acquia/modules/ctools/stylizer/stylizer.info
+++ b/profiles/acquia/modules/ctools/stylizer/stylizer.info
@@ -5,11 +5,11 @@ package = Chaos tool suite
 dependencies[] = ctools
 dependencies[] = color
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/tests/context.test b/profiles/acquia/modules/ctools/tests/context.test
new file mode 100644
index 0000000..b5f6fb1
--- /dev/null
+++ b/profiles/acquia/modules/ctools/tests/context.test
@@ -0,0 +1,58 @@
+<?php
+
+class CtoolsContextKeywordsSubstitutionTestCase extends DrupalWebTestCase {
+  public static function getInfo() {
+    return array(
+      'name' => 'Keywords substitution',
+      'description' => 'Verify that keywords are properly replaced with data.',
+      'group' => 'Chaos Tools Suite',
+    );
+  }
+
+  public function setUp() {
+    parent::setUp('ctools');
+
+    ctools_include('context');
+  }
+
+  public function testKeywordsSubstitution() {
+    // Create node context for substitution.
+    $node = $this->drupalCreateNode();
+    $context = ctools_context_create('node', $node);
+    $contexts = array('argument_1' => $context);
+
+    // Run tests on some edge cases.
+    $checks = array(
+      '%node:title' => array(
+        "{$node->title}",
+        t('Keyword and converter have been replaced.'),
+      ),
+      '%%node:title' => array(
+        "%node:title",
+        t('Keyword after escaped percent sign left untouched.'),
+      ),
+      '%node:title%node:nid' => array(
+        "{$node->title}{$node->nid}",
+        t('Multiple substitutions have been replaced.'),
+      ),
+      '%node:title:' => array(
+        "{$node->title}:",
+        t('Colon after keyword and converter left untouched.'),
+      ),
+      '%node:title%%' => array(
+        "{$node->title}%",
+        t('Escaped percent sign after keyword and converter left untouched.'),
+      ),
+      '%%%node:title' => array(
+        "%{$node->title}",
+        t('Keyword after escaped and unescaped percent sign has been replaced.'),
+      ),
+    );
+    foreach ($checks as $string => $expectations) {
+      list($expected_result, $message) = $expectations;
+      $actual_result = ctools_context_keyword_substitute($string, array(), $contexts);
+      $this->assertEqual($actual_result, $expected_result, $message);
+    }
+  }
+
+}
diff --git a/profiles/acquia/modules/ctools/tests/css.test b/profiles/acquia/modules/ctools/tests/css.test
index 039e975..4a5200c 100644
--- a/profiles/acquia/modules/ctools/tests/css.test
+++ b/profiles/acquia/modules/ctools/tests/css.test
@@ -65,5 +65,17 @@ class CtoolsCssTestCase extends DrupalWebTestCase {
     $font_size = (strpos($filtered, 'font-size:12px;') !== FALSE);
     $color = (strpos($filtered, 'color:blue') !== FALSE);
     $this->assertTrue($font_size && $color, 'Multiple properties are merged.');
+
+    $css = '@import url("other.css");p {color: red;}';
+    $filtered = ctools_css_filter($css);
+    $other_css = (strpos($filtered, 'other.css') === FALSE);
+    $color = (strpos($filtered, 'color:red') !== FALSE);
+    $this->assertTrue($other_css && $color, 'CSS is properly sanitized.');
+
+    $css = ';p {color: red; font-size: 12px;}';
+    $filtered = ctools_css_filter($css);
+    $font_size = (strpos($filtered, 'font-size:12px;') !== FALSE);
+    $color = (strpos($filtered, 'color:red') !== FALSE);
+    $this->assertTrue($font_size && $color, 'Multiple properties are retained.');
   }
 }
diff --git a/profiles/acquia/modules/ctools/tests/ctools_export_test/ctools_export_test.info b/profiles/acquia/modules/ctools/tests/ctools_export_test/ctools_export_test.info
index 28e0d59..1e41af2 100644
--- a/profiles/acquia/modules/ctools/tests/ctools_export_test/ctools_export_test.info
+++ b/profiles/acquia/modules/ctools/tests/ctools_export_test/ctools_export_test.info
@@ -7,11 +7,11 @@ hidden = TRUE
 
 files[] = ctools_export.test
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/tests/ctools_plugin_test.info b/profiles/acquia/modules/ctools/tests/ctools_plugin_test.info
index 4548d06..a7fbb6f 100644
--- a/profiles/acquia/modules/ctools/tests/ctools_plugin_test.info
+++ b/profiles/acquia/modules/ctools/tests/ctools_plugin_test.info
@@ -6,13 +6,14 @@ dependencies[] = ctools
 files[] = ctools.plugins.test
 files[] = object_cache.test
 files[] = css.test
+files[] = context.test
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/ctools/views_content/views_content.info b/profiles/acquia/modules/ctools/views_content/views_content.info
index 0894532..91ffc1e 100644
--- a/profiles/acquia/modules/ctools/views_content/views_content.info
+++ b/profiles/acquia/modules/ctools/views_content/views_content.info
@@ -9,11 +9,11 @@ files[] = plugins/views/views_content_plugin_display_ctools_context.inc
 files[] = plugins/views/views_content_plugin_display_panel_pane.inc
 files[] = plugins/views/views_content_plugin_style_ctools_context.inc
 
-; Information added by drupal.org packaging script on 2012-08-08
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-18
+version = "7.x-1.2"
 core = "7.x"
 project = "ctools"
-datestamp = "1344463011"
+datestamp = "1345319204"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.block.inc b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.block.inc
index 3a868c2..1fe1151 100644
--- a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.block.inc
+++ b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.block.inc
@@ -169,9 +169,18 @@ function current_search_check_visibility($delta) {
     return FALSE;
   }
 
-  // Returns TRUE if search keys were entered by the user or this block is
-  // configured to be displayed on empty pages.
-  return ($adapter->getSearchKeys() || $config->settings['advanced']['empty_searches']);
+  // Returns TRUE based on the empty_searches setting and the current search.
+  switch ($config->settings['advanced']['empty_searches']) {
+    case CURRENT_SEARCH_DISPLAY_KEYS:
+      return ($adapter->getSearchKeys());
+    case CURRENT_SEARCH_DISPLAY_FILTERS:
+      return ($adapter->getAllActiveItems());
+    case CURRENT_SEARCH_DISPLAY_KEYS_FILTERS:
+      return ($adapter->getSearchKeys() || $adapter->getAllActiveItems());
+    case CURRENT_SEARCH_DISPLAY_ALWAYS:
+    default:
+      return TRUE;
+  }
 }
 
 /**
diff --git a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.info b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.info
index 4f6282a..bada67a 100644
--- a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.info
+++ b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.info
@@ -10,11 +10,11 @@ files[] = plugins/current_search/item_text.inc
 files[] = tests/current_search.test
 configure = admin/config/search/current_search
 
-; Information added by drupal.org packaging script on 2012-07-31
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-09-20
+version = "7.x-1.2"
 core = "7.x"
 project = "facetapi"
-datestamp = "1343771560"
+datestamp = "1348169693"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.module b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.module
index b802dca..21fa39c 100644
--- a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.module
+++ b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.module
@@ -6,6 +6,27 @@
  * current search.
  */
 
+/**
+ * Display current search block only when keywords are entered.
+ */
+define('CURRENT_SEARCH_DISPLAY_KEYS', 0);
+
+/**
+ * Display current search block on empty searches where no keywords are entered.
+ */
+define('CURRENT_SEARCH_DISPLAY_ALWAYS', 1);
+
+/**
+ * Display current search block only when one or more facet items are active.
+ */
+define('CURRENT_SEARCH_DISPLAY_FILTERS', 2);
+
+/**
+ * Display current search block when either keywords are entered one or more
+ * facet items are active.
+ */
+define('CURRENT_SEARCH_DISPLAY_KEYS_FILTERS', 3);
+
 // Includes the Block hooks and form alterations.
 require_once dirname(__FILE__) . '/current_search.block.inc';
 
diff --git a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.theme.inc b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.theme.inc
index 2b309fe..0ec966d 100644
--- a/profiles/acquia/modules/facetapi/contrib/current_search/current_search.theme.inc
+++ b/profiles/acquia/modules/facetapi/contrib/current_search/current_search.theme.inc
@@ -24,7 +24,7 @@
  */
 function theme_current_search_text(array $variables) {
   // Initializes output, sanitizes text if necessary.
-  $sanitize = $variables['options']['html'];
+  $sanitize = empty($variables['options']['html']);
   $output = ($sanitize) ? check_plain($variables['text']) : $variables['text'];
 
   // Adds wrapper markup and CSS classes.
diff --git a/profiles/acquia/modules/facetapi/contrib/current_search/plugins/current_search/item_text.inc b/profiles/acquia/modules/facetapi/contrib/current_search/plugins/current_search/item_text.inc
index 48e367c..83748a4 100644
--- a/profiles/acquia/modules/facetapi/contrib/current_search/plugins/current_search/item_text.inc
+++ b/profiles/acquia/modules/facetapi/contrib/current_search/plugins/current_search/item_text.inc
@@ -25,16 +25,24 @@ class CurrentSearchItemText extends CurrentSearchItem {
     if ($this->settings['plural']) {
       $condition = '[' . $this->settings['plural_condition'] . ']';
       $count = (int) token_replace($condition, $data);
-      $raw_text = ($count != 1) ? $this->settings['text_plural'] : $this->settings['text'];
+      if ($count != 1) {
+        $raw_text = $this->settings['text_plural'];
+        $translation_key = 'text_plural';
+      }
+      else {
+        $raw_text = $this->settings['text'];
+        $translation_key = 'text';
+      }
     }
     else {
       $raw_text = $this->settings['text'];
+      $translation_key = 'text';
     }
 
     // Translates text, returns themed output.
-    $translated_text = $this->translate('text', $raw_text);
+    $translated_text = $this->translate($translation_key, $raw_text);
     $variables = array(
-      'text' => filter_xss(token_replace($translated_text, $data)),
+      'text' => filter_xss_admin(token_replace($translated_text, $data)),
       'wrapper' => $this->settings['wrapper'],
       'element' => $this->settings['element'],
       'css' => $this->settings['css'],
diff --git a/profiles/acquia/modules/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php b/profiles/acquia/modules/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php
index 346a5be..7186605 100644
--- a/profiles/acquia/modules/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php
+++ b/profiles/acquia/modules/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php
@@ -426,10 +426,23 @@ function current_search_settings_form(&$form, &$form_state) {
     '#tree' => TRUE,
   );
 
+  // This setting was originally intended as a way for site builders to enable
+  // the current search block on pages where no keywords were submitted by the
+  // end user, which is known as an "empty search". The display settings were
+  // expanded beyond empty searches at http://drupal.org/node/1779670 leaving
+  // us with the unfortunate "empty_searches" key which no longer reflects what
+  // this setting does.
   $form['advanced_settings']['empty_searches'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Display current search block on empty search pages.'),
-    '#default_value' => !empty($item->settings['advanced']['empty_searches']),
+    '#type' => 'radios',
+    '#title' => t('Display settings'),
+    '#options' => array(
+      CURRENT_SEARCH_DISPLAY_KEYS => t('Display only when keywords are entered.'),
+      CURRENT_SEARCH_DISPLAY_ALWAYS => t('Display on empty searches where no keywords are entered.'),
+      CURRENT_SEARCH_DISPLAY_FILTERS => t('Display only when one or more facet items are active.'),
+      CURRENT_SEARCH_DISPLAY_KEYS_FILTERS => t('Display when either keywords are entered one or more facet items are active.'),
+    ),
+    '#default_value' => $item->settings['advanced']['empty_searches'],
+    '#description' => t('This setting determines when the current search block will be displayed.'),
   );
 
 }
diff --git a/profiles/acquia/modules/facetapi/contrib/current_search/tests/current_search.test b/profiles/acquia/modules/facetapi/contrib/current_search/tests/current_search.test
index e49d9ba..a74d0ba 100644
--- a/profiles/acquia/modules/facetapi/contrib/current_search/tests/current_search.test
+++ b/profiles/acquia/modules/facetapi/contrib/current_search/tests/current_search.test
@@ -147,4 +147,52 @@ class CurrentSearchBugFixTestCase extends CurrentSearchTestCase {
 
     $this->facetapiIssueMessage('http://drupal.org/node/1668980');
   }
+
+  /**
+   * Tests bug fixed at http://drupal.org/node/1728496.
+   *
+   * @see http://drupal.org/node/1728496
+   */
+  public function testPluralTranslation() {
+    variable_set('facetapi:translator_module', 'facetapi_test');
+
+    // Enable the standard current search block via the UI.
+    $this->drupalLogin($this->adminUser);
+    $this->currentSearchEnableBlock('standard');
+    $this->drupalLogin($this->authenticatedUser);
+
+    // Set the result count to 1 to test singular translation.
+    $this->drupalGet('facetapi_test/search', array('query' => array('keys' => 'test', 'count' => 1)));
+    $raw = filter_xss_admin('s:36:"current_search:standard:results:text";');
+    $this->assertRaw($raw, t('Singular text in current search block is translated.'));
+
+    // Set the result count to 10 to test plural translation.
+    $this->drupalGet('facetapi_test/search', array('query' => array('keys' => 'test', 'count' => 10)));
+    $raw = filter_xss_admin('s:43:"current_search:standard:results:text_plural";');
+    $this->assertRaw($raw, t('Plural text in current search block is translated.'));
+  }
+
+  /**
+   * Tests bug fixed at http://drupal.org/node/1751514.
+   *
+   * @see http://drupal.org/node/1751514
+   * @see http://drupal.org/node/1741444
+   */
+  public function testCurrentSearchTextEncoding() {
+    $raw_text = '<test>';
+    $variables = array(
+      'text' => $raw_text,
+      'wrapper' => 0,
+    );
+
+    // Test that the variable is escaped using check_plain().
+    $variables['options'] = array('html' => FALSE);
+    $sanitized_text = theme('current_search_text', $variables);
+    $this->assertEqual(check_plain($raw_text), $sanitized_text, t('Text is properly sanitized by the theme_current_search_text() function.'), 'Current Search Blocks');
+
+    // Test that the HTML is not double encoded.
+    $variables['options'] = array('html' => TRUE);
+    $unsanitized_text = theme('current_search_text', $variables);
+    $this->assertEqual($raw_text, $unsanitized_text, t('HTML is not double encoded by the theme_current_search_text() function.'), 'Current Search Blocks');
+  }
 }
diff --git a/profiles/acquia/modules/facetapi/facetapi.info b/profiles/acquia/modules/facetapi/facetapi.info
index 7b0939f..e81908a 100644
--- a/profiles/acquia/modules/facetapi/facetapi.info
+++ b/profiles/acquia/modules/facetapi/facetapi.info
@@ -18,11 +18,11 @@ files[] = plugins/facetapi/widget_links.inc
 files[] = tests/facetapi_test.plugins.inc
 files[] = tests/facetapi.test
 
-; Information added by drupal.org packaging script on 2012-07-31
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-09-20
+version = "7.x-1.2"
 core = "7.x"
 project = "facetapi"
-datestamp = "1343771560"
+datestamp = "1348169693"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/facetapi/plugins/facetapi/url_processor_standard.inc b/profiles/acquia/modules/facetapi/plugins/facetapi/url_processor_standard.inc
index 4cab73b..b3ddf91 100644
--- a/profiles/acquia/modules/facetapi/plugins/facetapi/url_processor_standard.inc
+++ b/profiles/acquia/modules/facetapi/plugins/facetapi/url_processor_standard.inc
@@ -66,14 +66,6 @@ class FacetapiUrlProcessorStandard extends FacetapiUrlProcessor {
     $active_items = $this->adapter->getAllActiveItems();
 
     $item = menu_get_item();
-    $last_load_func = is_array($item['load_functions']) ? end($item['load_functions']) : NULL;
-    if (!empty($item['title']) && ((!$keys && $active_items) || ($keys && $last_load_func != 'menu_tail_load'))) {
-      $last = end($breadcrumb);
-      $this_page = l($item['title'], $item['href'], $item['localized_options']);
-      if ($last != $this_page) {
-        $breadcrumb[] = $this_page;
-      }
-    }
 
     // Initializes base breadcrumb query.
     $query = $this->params;
diff --git a/profiles/acquia/modules/facetapi/tests/facetapi.test b/profiles/acquia/modules/facetapi/tests/facetapi.test
index ad7fc45..c68cc22 100644
--- a/profiles/acquia/modules/facetapi/tests/facetapi.test
+++ b/profiles/acquia/modules/facetapi/tests/facetapi.test
@@ -428,7 +428,8 @@ class FacetapiApiFunctions extends FacetapiTestCase {
     // Sets Facet API Test as the translator module.
     variable_set('facetapi:translator_module', 'facetapi_test');
     $translated = facetapi_translate_string('name', 'untranslated');
-    $this->assertEqual($translated, 'translated', t('String translated by facetapi_translate_string().'), 'Facet API');
+    $array = unserialize($translated);
+    $this->assertEqual($array['return'], 'translated', t('String translated by facetapi_translate_string().'), 'Facet API');
   }
 
   /**
diff --git a/profiles/acquia/modules/facetapi/tests/facetapi_test.info b/profiles/acquia/modules/facetapi/tests/facetapi_test.info
index bf74063..b96428f 100644
--- a/profiles/acquia/modules/facetapi/tests/facetapi_test.info
+++ b/profiles/acquia/modules/facetapi/tests/facetapi_test.info
@@ -5,11 +5,11 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-07-31
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-09-20
+version = "7.x-1.2"
 core = "7.x"
 project = "facetapi"
-datestamp = "1343771560"
+datestamp = "1348169693"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/facetapi/tests/facetapi_test.module b/profiles/acquia/modules/facetapi/tests/facetapi_test.module
index 4d21685..7fa49b6 100644
--- a/profiles/acquia/modules/facetapi/tests/facetapi_test.module
+++ b/profiles/acquia/modules/facetapi/tests/facetapi_test.module
@@ -76,9 +76,16 @@ function facetapi_test_facetapi_searcher_info() {
 
 /**
  * Implements hook_facetapi_translate_string().
+ *
+ * Returns a serialized array for testing.
  */
 function facetapi_test_facetapi_translate_string($name, $string, $langcode = NULL) {
-  return 'translated';
+  return serialize(array(
+    'name' => $name,
+    'string' => $string,
+    'langcode' => (string) $langcode,
+    'return' => 'translated',
+  ));
 }
 
 /**
@@ -155,16 +162,23 @@ function facetapi_test_process_hierarchy(array $values) {
 function facetapi_test_search_callback() {
   $build = array();
 
+  // Load adapter, throw exception on error.
   if (!$adapter = facetapi_adapter_load('facetapi_test')) {
     throw new Exception(t('Error loading adapter.'));
   }
 
+  // Set result count if passed through query string.
+  if (isset($_GET['count'])) {
+    $adapter->setResultCount((int) $_GET['count']);
+  }
+
+  // Instantiate a dummy query class, initialize facets.
   $query = new stdClass();
   $adapter->addActiveFilters($query);
 
+  // Set keywords if passed through query string.
   $keys = isset($_GET['keys']) ? $_GET['keys'] : arg(2);
   $adapter->setSearchKeys($keys);
-  $adapter->setResultCount(10);
 
   $build['placeholder'] = array(
     '#markup' => t('Placeholder'),
diff --git a/profiles/acquia/modules/facetapi/tests/facetapi_test.plugins.inc b/profiles/acquia/modules/facetapi/tests/facetapi_test.plugins.inc
index 7edd4dd..4570f4e 100644
--- a/profiles/acquia/modules/facetapi/tests/facetapi_test.plugins.inc
+++ b/profiles/acquia/modules/facetapi/tests/facetapi_test.plugins.inc
@@ -17,7 +17,7 @@ class FacetapiTestAdapter extends FacetapiAdapter {
   /**
    * The total number of results in the query.
    */
-  protected $resultCount;
+  protected $resultCount = 10;
 
   /**
    * Implements FacetapiAdapter::searchExecuted().
diff --git a/profiles/acquia/modules/pathauto/pathauto.info b/profiles/acquia/modules/pathauto/pathauto.info
index fd09300..f341f59 100644
--- a/profiles/acquia/modules/pathauto/pathauto.info
+++ b/profiles/acquia/modules/pathauto/pathauto.info
@@ -7,11 +7,11 @@ files[] = pathauto.test
 configure = admin/config/search/path/patterns
 recommends[] = redirect
 
-; Information added by drupal.org packaging script on 2012-05-13
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-08-09
+version = "7.x-1.2"
 core = "7.x"
 project = "pathauto"
-datestamp = "1336950382"
+datestamp = "1344525185"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/pathauto/pathauto.install b/profiles/acquia/modules/pathauto/pathauto.install
index dcca163..cd5211c 100644
--- a/profiles/acquia/modules/pathauto/pathauto.install
+++ b/profiles/acquia/modules/pathauto/pathauto.install
@@ -33,7 +33,7 @@ function pathauto_install() {
  * Implements hook_uninstall().
  */
 function pathauto_uninstall() {
-  // Delete all the pathauto variables and then clear the variable cache
+  // Delete all the pathauto variables and then clear the variable cache.
   db_query("DELETE FROM {variable} WHERE name LIKE 'pathauto_%'");
   cache_clear_all('variables', 'cache');
 }
diff --git a/profiles/acquia/modules/pathauto/pathauto.module b/profiles/acquia/modules/pathauto/pathauto.module
index 1875caa..dffc292 100644
--- a/profiles/acquia/modules/pathauto/pathauto.module
+++ b/profiles/acquia/modules/pathauto/pathauto.module
@@ -389,6 +389,34 @@ function pathauto_action_info() {
   return $info;
 }
 
+/**
+ * Returns the language code of the given entity.
+ *
+ * Backward compatibility layer to ensure that installations running an older
+ * version of core where entity_language() is not avilable do not break.
+ *
+ * @param string $entity_type
+ *   An entity type.
+ * @param object $entity
+ *   An entity object.
+ * @param bool $check_language_property
+ *   A boolean if TRUE, will attempt to fetch the language code from
+ *   $entity->language if the entity_language() function failed or does not
+ *   exist. Default is TRUE.
+ */
+function pathauto_entity_language($entity_type, $entity, $check_language_property = TRUE) {
+  $langcode = NULL;
+
+  if (function_exists('entity_language')) {
+    $langcode = entity_language($entity_type, $entity);
+  }
+  elseif ($check_language_property && !empty($entity->language)) {
+    $langcode = $entity->language;
+  }
+
+  return !empty($langcode) ? $langcode : LANGUAGE_NONE;
+}
+
 if (!function_exists('path_field_extra_fields')) {
 /**
  * Implements hook_field_extra_fields() on behalf of path.module.
@@ -461,7 +489,8 @@ function pathauto_node_delete($node) {
  */
 function pathauto_form_node_form_alter(&$form, &$form_state) {
   $node = $form_state['node'];
-  pathauto_field_attach_form('node', $node, $form, $form_state, $node->language);
+  $langcode = pathauto_entity_language('node', $node);
+  pathauto_field_attach_form('node', $node, $form, $form_state, $langcode);
 }
 
 /**
@@ -492,9 +521,7 @@ function pathauto_node_update_alias(stdClass $node, $op, array $options = array(
     return;
   }
 
-  $options += array(
-    'language' => !empty($node->language) ? $node->language : LANGUAGE_NONE,
-  );
+  $options += array('language' => pathauto_entity_language('node', $node));
 
   // Skip processing if the node has no pattern.
   if (!pathauto_pattern_load_by_entity('node', $node->type, $options['language'])) {
@@ -574,7 +601,7 @@ function pathauto_taxonomy_term_delete($term) {
  */
 function pathauto_form_taxonomy_form_term_alter(&$form, $form_state) {
   $term = $form_state['term'];
-  $langcode = !empty($term->language) ? $term->language : LANGUAGE_NONE;
+  $langcode = pathauto_entity_language('taxonomy_term', $term);
   pathauto_field_attach_form('taxonomy_term', $term, $form, $form_state, $langcode);
 }
 
@@ -594,11 +621,6 @@ function pathauto_taxonomy_term_update_alias(stdClass $term, $op, array $options
     return;
   }
 
-  $options += array(
-    'alias children' => FALSE,
-    'language' => !empty($term->language) ? $term->language : LANGUAGE_NONE,
-  );
-
   $module = 'taxonomy_term';
   if ($term->vid == variable_get('forum_nav_vocabulary', '')) {
     if (module_exists('forum')) {
@@ -615,6 +637,11 @@ function pathauto_taxonomy_term_update_alias(stdClass $term, $op, array $options
     $term->vocabulary_machine_name = $vocabulary->machine_name;
   }
 
+  $options += array(
+    'alias children' => FALSE,
+    'language' => pathauto_entity_language('taxonomy_term', $term),
+  );
+
   // Skip processing if the term has no pattern.
   if (!pathauto_pattern_load_by_entity($module, $term->vocabulary_machine_name)) {
     return;
@@ -727,7 +754,9 @@ function pathauto_user_update_alias(stdClass $account, $op, array $options = arr
 
   $options += array(
     'alias blog' => module_exists('blog'),
-    'language' => LANGUAGE_NONE,
+    // $user->language is not the user entity language, thus we need to skip
+    // the property fallback check.
+    'language' => pathauto_entity_language('user', $account, FALSE),
   );
 
   // Skip processing if the account has no pattern.
@@ -772,8 +801,8 @@ function pathauto_user_update_alias_multiple(array $uids, $op, array $options =
 /**
  * Update action wrapper for pathauto_user_update_alias().
  */
-function pathauto_user_update_action($user, $context = array()) {
-  pathauto_user_update_alias($user, 'bulkupdate', array('message' => TRUE));
+function pathauto_user_update_action($account, $context = array()) {
+  pathauto_user_update_alias($account, 'bulkupdate', array('message' => TRUE));
 }
 
 /**
diff --git a/profiles/acquia/modules/token/tests/token_test.info b/profiles/acquia/modules/token/tests/token_test.info
index f022f44..cea9f33 100644
--- a/profiles/acquia/modules/token/tests/token_test.info
+++ b/profiles/acquia/modules/token/tests/token_test.info
@@ -5,11 +5,11 @@ core = 7.x
 files[] = token_test.module
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-05-15
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-09-12
+version = "7.x-1.3"
 core = "7.x"
 project = "token"
-datestamp = "1337115392"
+datestamp = "1347466790"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/token/token.css b/profiles/acquia/modules/token/token.css
index 5c3b3ba..5432f0f 100644
--- a/profiles/acquia/modules/token/token.css
+++ b/profiles/acquia/modules/token/token.css
@@ -4,6 +4,10 @@
   margin-left: 19px;
 }
 
+.ui-dialog-content .token-tree {
+  margin-left: 0;
+}
+
 .token-tree td, .token-tree th {
   padding-top: 0;
   padding-bottom: 0;
diff --git a/profiles/acquia/modules/token/token.info b/profiles/acquia/modules/token/token.info
index 26bb7a0..0216f2f 100644
--- a/profiles/acquia/modules/token/token.info
+++ b/profiles/acquia/modules/token/token.info
@@ -7,11 +7,11 @@ files[] = token.tokens.inc
 files[] = token.pages.inc
 files[] = token.test
 
-; Information added by drupal.org packaging script on 2012-05-15
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2012-09-12
+version = "7.x-1.3"
 core = "7.x"
 project = "token"
-datestamp = "1337115392"
+datestamp = "1347466790"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/acquia/modules/token/token.js b/profiles/acquia/modules/token/token.js
index 59715f4..88a75c1 100644
--- a/profiles/acquia/modules/token/token.js
+++ b/profiles/acquia/modules/token/token.js
@@ -9,6 +9,32 @@ Drupal.behaviors.tokenTree = {
   }
 };
 
+Drupal.behaviors.tokenDialog = {
+  attach: function (context, settings) {
+    $('a.token-dialog', context).once('token-dialog').click(function() {
+      var url = $(this).attr('href');
+      var dialog = $('<div style="display: none" class="loading">' + Drupal.t('Loading token browser...') + '</div>').appendTo('body');
+      dialog.dialog({
+        title: $(this).attr('title') || Drupal.t('Available tokens'),
+        width: 700,
+        close: function(event, ui) {
+          dialog.remove();
+        }
+      });
+      // Load the token tree using AJAX.
+      dialog.load(
+        url,
+        {},
+        function (responseText, textStatus, XMLHttpRequest) {
+          dialog.removeClass('loading');
+        }
+      );
+      // Prevent browser from following the link.
+      return false;
+    });
+  }
+}
+
 Drupal.behaviors.tokenInsert = {
   attach: function (context, settings) {
     // Keep track of which textfield was last selected/focused.
diff --git a/profiles/acquia/modules/token/token.module b/profiles/acquia/modules/token/token.module
index 56e3ceb..7bba8a7 100644
--- a/profiles/acquia/modules/token/token.module
+++ b/profiles/acquia/modules/token/token.module
@@ -11,7 +11,7 @@
 define('TOKEN_MAX_DEPTH', 9);
 
 /**
- * Impelements hook_help().
+ * Implements hook_help().
  */
 function token_help($path, $arg) {
   if ($path == 'admin/help#token') {
@@ -73,6 +73,13 @@ function token_menu() {
     'file' => 'token.pages.inc',
   );*/
 
+  $items['token/tree'] = array(
+    'page callback' => 'token_page_output_tree',
+    'access callback' => TRUE,
+    'type' => MENU_CALLBACK,
+    'file' => 'token.pages.inc',
+  );
+
   // Devel token pages.
   if (module_exists('devel')) {
     $items['node/%node/devel/token'] = array(
@@ -146,16 +153,37 @@ function token_type_load($token_type) {
  * Implements hook_theme().
  */
 function token_theme() {
-  return array(
-    'tree_table' => array(
-      'variables' => array('header' => array(), 'rows' => array(), 'attributes' => array(), 'empty' => '', 'caption' => ''),
-      'file' => 'token.pages.inc',
+  $info['tree_table'] = array(
+    'variables' => array(
+      'header' => array(),
+      'rows' => array(),
+      'attributes' => array(),
+      'empty' => '',
+      'caption' => '',
     ),
-    'token_tree' => array(
-      'variables' => array('token_types' => array(), 'global_types' => TRUE, 'click_insert' => TRUE, 'show_restricted' => FALSE, 'recursion_limit' => 3),
-      'file' => 'token.pages.inc',
+    'file' => 'token.pages.inc',
+  );
+  $info['token_tree'] = array(
+    'variables' => array(
+      'token_types' => array(),
+      'global_types' => TRUE,
+      'click_insert' => TRUE,
+      'show_restricted' => FALSE,
+      'recursion_limit' => 3,
+      'dialog' => FALSE,
+    ),
+    'file' => 'token.pages.inc',
+  );
+  $info['token_tree_link'] = array(
+    'variables' => array(
+      'text' => NULL,
+      'options' => array(),
+      'dialog' => TRUE,
     ),
+    'file' => 'token.pages.inc',
   );
+
+  return $info;
 }
 
 /**
@@ -175,6 +203,17 @@ function token_library() {
     ),
   );
 
+  $libraries['dialog'] = array(
+    'title' => 'Token dialog',
+    'version' => '1.0',
+    'js' => array(
+      drupal_get_path('module', 'token') . '/token.js' => array(),
+    ),
+    'dependencies' => array(
+      array('system', 'ui.dialog'),
+    ),
+  );
+
   return $libraries;
 }
 
@@ -274,14 +313,17 @@ function token_field_display_alter(&$display, $context) {
     // use the default token formatter.
     if (empty($view_mode_settings[$context['view_mode']]['custom_settings'])) {
       $field_type_info = field_info_field_types($context['field']['type']);
-      if (!empty($field_type_info['default_token_formatter'])) {
-        $display['type'] = $field_type_info['default_token_formatter'];
 
-        $formatter_info = field_info_formatter_types($display['type']);
-        $display['settings'] = isset($formatter_info['settings']) ? $formatter_info['settings'] : array();
-        $display['settings']['label'] = 'hidden';
-        $display['module'] = $formatter_info['module'];
-      }
+      // If the field has specified a specific formatter to be used by default
+      // with tokens, use that, otherwise use the default formatter.
+      $formatter = !empty($field_type_info['default_token_formatter']) ? $field_type_info['default_token_formatter'] : $field_type_info['default_formatter'];
+
+      // Now that we have a formatter, fill in all the settings.
+      $display['type'] = $formatter;
+      $formatter_info = field_info_formatter_types($formatter);
+      $display['settings'] = isset($formatter_info['settings']) ? $formatter_info['settings'] : array();
+      $display['settings']['label'] = 'hidden';
+      $display['module'] = $formatter_info['module'];
     }
   }
 }
@@ -400,10 +442,12 @@ function token_entity_info_alter(&$info) {
  * Adds missing token support for core modules.
  */
 function token_module_implements_alter(&$implementations, $hook) {
-  if ($hook == 'tokens' || $hook == 'token_info') {
+  module_load_include('inc', 'token', 'token.tokens');
+
+  if ($hook == 'tokens' || $hook == 'token_info' || $hook == 'token_info_alter' || $hook == 'tokens_alter') {
     foreach (_token_core_supported_modules() as $module) {
-      if (module_exists($module)) {
-        $implementations[$module] = TRUE;
+      if (module_exists($module) && function_exists($module . '_' . $hook)) {
+        $implementations[$module] = FALSE;
       }
     }
     // Move token.module to get included first since it is responsible for
@@ -674,7 +718,7 @@ function token_element_validate(&$element, &$form_state) {
   }
 
   // Check if the field defines specific token types.
-  if (!empty($element['#token_types'])) {
+  if (isset($element['#token_types'])) {
     $invalid_tokens = token_get_invalid_tokens_by_context($tokens, $element['#token_types']);
     if ($invalid_tokens) {
       form_error($element, t('The %element-title is using the following invalid tokens: @invalid-tokens.', array('%element-title' => $title, '@invalid-tokens' => implode(', ', $invalid_tokens))));
diff --git a/profiles/acquia/modules/token/token.pages.inc b/profiles/acquia/modules/token/token.pages.inc
index d2f06e9..4e281af 100644
--- a/profiles/acquia/modules/token/token.pages.inc
+++ b/profiles/acquia/modules/token/token.pages.inc
@@ -6,6 +6,63 @@
  */
 
 /**
+ * Theme a link to a token tree either as a regular link or a dialog.
+ */
+function theme_token_tree_link($variables) {
+  if (empty($variables['text'])) {
+    $variables['text'] = t('Browse available tokens.');
+  }
+
+  if (!empty($variables['dialog'])) {
+    drupal_add_library('token', 'dialog');
+    $variables['options']['attributes']['class'][] = 'token-dialog';
+  }
+
+  $info = token_theme();
+  $variables['options']['query']['options'] = array_intersect_key($variables, $info['token_tree']['variables']);
+
+  // We should never pass the dialog option to theme_token_tree(). It is only
+  // used for this function.
+  unset($variables['options']['query']['options']['dialog']);
+
+  // Add a security token so that the tree page should only work when used
+  // when the dialog link is output with theme('token_tree_link').
+  $variables['options']['query']['token'] = drupal_get_token('token-tree:' . serialize($variables['options']['query']['options']));
+
+  // Because PHP converts query strings with arrays into a different syntax on
+  // the next request, the options have to be encoded with JSON in the query
+  // string so that we can reliably decode it for token comparison.
+  $variables['options']['query']['options'] = drupal_json_encode($variables['options']['query']['options']);
+
+  // Set the token tree to open in a separate window.
+  $variables['options']['attributes'] + array('target' => '_blank');
+
+  return l($variables['text'], 'token/tree', $variables['options']);
+}
+
+/**
+ * Page callback to output a token tree as an empty page.
+ */
+function token_page_output_tree() {
+  $options = isset($_GET['options']) ? drupal_json_decode($_GET['options']) : array();
+
+  // Check the token against the serialized options to prevent random access to
+  // the token browser page.
+  if (!isset($_GET['token']) || !drupal_valid_token($_GET['token'], 'token-tree:' . serialize($options))) {
+    return MENU_ACCESS_DENIED;
+  }
+
+  // Force the dialog option to be false so we're not creating a dialog within
+  // a dialog.
+  $options['dialog'] = FALSE;
+
+  $output = theme('token_tree', array($options));
+  print '<html><head><title></title>' . drupal_get_css() . drupal_get_js() . '</head>';
+  print '<body class="token-tree">' . $output . '</body></html>';
+  drupal_exit();
+}
+
+/**
  * Theme a tree table.
  *
  * @ingroup themeable
@@ -32,6 +89,10 @@ function theme_tree_table($variables) {
  * @ingroup themeable
  */
 function theme_token_tree($variables) {
+  if (!empty($variables['dialog'])) {
+    return theme_token_tree_link($variables);
+  }
+
   $token_types = $variables['token_types'];
   $info = token_get_info();
 
diff --git a/profiles/acquia/modules/token/token.test b/profiles/acquia/modules/token/token.test
index 9482ecf..b7e9582 100644
--- a/profiles/acquia/modules/token/token.test
+++ b/profiles/acquia/modules/token/token.test
@@ -1069,11 +1069,17 @@ class TokenBlockTestCase extends TokenTestHelper {
   }
 
   public function testBlockTitleTokens() {
-    $edit['title'] = '[current-page:title] block title';
+    $edit['title'] = '[user:name]';
     $edit['info'] = 'Test token title block';
     $edit['body[value]'] = 'This is the test token title block.';
-    $edit['regions[bartik]'] = 'sidebar_first';
     $this->drupalPost('admin/structure/block/add', $edit, 'Save block');
+    // Ensure token validation is working on the block.
+    $this->assertText('The Block title is using the following invalid tokens: [user:name].');
+
+    // Create the block for real now with a valid title.
+    $edit['title'] = '[current-page:title] block title';
+    $edit['regions[bartik]'] = 'sidebar_first';
+    $this->drupalPost(NULL, $edit, 'Save block');
 
     $this->drupalGet('node');
     $this->assertText('Welcome to ' . variable_get('site_name', 'Drupal') . ' block title');
diff --git a/profiles/minimal/minimal.info b/profiles/minimal/minimal.info
index 13e7f45..68cae52 100644
--- a/profiles/minimal/minimal.info
+++ b/profiles/minimal/minimal.info
@@ -5,10 +5,10 @@ core = 7.x
 dependencies[] = block
 dependencies[] = dblog
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/standard/standard.info b/profiles/standard/standard.info
index 6fec9eb..36e33c9 100644
--- a/profiles/standard/standard.info
+++ b/profiles/standard/standard.info
@@ -24,10 +24,10 @@ dependencies[] = field_ui
 dependencies[] = file
 dependencies[] = rdf
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index 6cc9866..32d6508 100644
--- a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -6,10 +6,10 @@ core = 7.x
 hidden = TRUE
 files[] = drupal_system_listing_compatible_test.test
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index 56a80e9..7803c07 100644
--- a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -8,10 +8,10 @@ version = VERSION
 core = 6.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/profiles/testing/testing.info b/profiles/testing/testing.info
index 13d7f18..8782e1d 100644
--- a/profiles/testing/testing.info
+++ b/profiles/testing/testing.info
@@ -4,10 +4,10 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/robots.standard.txt b/robots.standard.txt
deleted file mode 100644
index 7de8435..0000000
--- a/robots.standard.txt
+++ /dev/null
@@ -1,60 +0,0 @@
-#
-# robots.txt
-#
-# This file is to prevent the crawling and indexing of certain parts
-# of your site by web crawlers and spiders run by sites like Yahoo!
-# and Google. By telling these "robots" where not to go on your site,
-# you save bandwidth and server resources.
-#
-# This file will be ignored unless it is at the root of your host:
-# Used:    http://example.com/robots.txt
-# Ignored: http://example.com/site/robots.txt
-#
-# For more information about the robots.txt standard, see:
-# http://www.robotstxt.org/wc/robots.html
-#
-# For syntax checking, see:
-# http://www.sxw.org.uk/computing/robots/check.html
-
-User-agent: *
-Crawl-delay: 10
-# Directories
-Disallow: /includes/
-Disallow: /misc/
-Disallow: /modules/
-Disallow: /profiles/
-Disallow: /scripts/
-Disallow: /themes/
-# Files
-Disallow: /CHANGELOG.txt
-Disallow: /cron.php
-Disallow: /INSTALL.mysql.txt
-Disallow: /INSTALL.pgsql.txt
-Disallow: /INSTALL.sqlite.txt
-Disallow: /install.php
-Disallow: /INSTALL.txt
-Disallow: /LICENSE.txt
-Disallow: /MAINTAINERS.txt
-Disallow: /update.php
-Disallow: /UPGRADE.txt
-Disallow: /xmlrpc.php
-# Paths (clean URLs)
-Disallow: /admin/
-Disallow: /comment/reply/
-Disallow: /filter/tips/
-Disallow: /node/add/
-Disallow: /search/
-Disallow: /user/register/
-Disallow: /user/password/
-Disallow: /user/login/
-Disallow: /user/logout/
-# Paths (no clean URLs)
-Disallow: /?q=admin/
-Disallow: /?q=comment/reply/
-Disallow: /?q=filter/tips/
-Disallow: /?q=node/add/
-Disallow: /?q=search/
-Disallow: /?q=user/password/
-Disallow: /?q=user/register/
-Disallow: /?q=user/login/
-Disallow: /?q=user/logout/
diff --git a/robots.txt b/robots.txt
new file mode 100644
index 0000000..7de8435
--- /dev/null
+++ b/robots.txt
@@ -0,0 +1,60 @@
+#
+# robots.txt
+#
+# This file is to prevent the crawling and indexing of certain parts
+# of your site by web crawlers and spiders run by sites like Yahoo!
+# and Google. By telling these "robots" where not to go on your site,
+# you save bandwidth and server resources.
+#
+# This file will be ignored unless it is at the root of your host:
+# Used:    http://example.com/robots.txt
+# Ignored: http://example.com/site/robots.txt
+#
+# For more information about the robots.txt standard, see:
+# http://www.robotstxt.org/wc/robots.html
+#
+# For syntax checking, see:
+# http://www.sxw.org.uk/computing/robots/check.html
+
+User-agent: *
+Crawl-delay: 10
+# Directories
+Disallow: /includes/
+Disallow: /misc/
+Disallow: /modules/
+Disallow: /profiles/
+Disallow: /scripts/
+Disallow: /themes/
+# Files
+Disallow: /CHANGELOG.txt
+Disallow: /cron.php
+Disallow: /INSTALL.mysql.txt
+Disallow: /INSTALL.pgsql.txt
+Disallow: /INSTALL.sqlite.txt
+Disallow: /install.php
+Disallow: /INSTALL.txt
+Disallow: /LICENSE.txt
+Disallow: /MAINTAINERS.txt
+Disallow: /update.php
+Disallow: /UPGRADE.txt
+Disallow: /xmlrpc.php
+# Paths (clean URLs)
+Disallow: /admin/
+Disallow: /comment/reply/
+Disallow: /filter/tips/
+Disallow: /node/add/
+Disallow: /search/
+Disallow: /user/register/
+Disallow: /user/password/
+Disallow: /user/login/
+Disallow: /user/logout/
+# Paths (no clean URLs)
+Disallow: /?q=admin/
+Disallow: /?q=comment/reply/
+Disallow: /?q=filter/tips/
+Disallow: /?q=node/add/
+Disallow: /?q=search/
+Disallow: /?q=user/password/
+Disallow: /?q=user/register/
+Disallow: /?q=user/login/
+Disallow: /?q=user/logout/
diff --git a/sites/all/README.txt b/sites/all/README.txt
new file mode 100644
index 0000000..c897088
--- /dev/null
+++ b/sites/all/README.txt
@@ -0,0 +1,7 @@
+
+This directory should be used to place downloaded and custom modules
+and themes which are common to all sites. Keeping contributed and
+custom modules and themes in the sites directory will aid in upgrading
+Drupal core files. Place contributed and custom modules and themes in
+the sites/all/modules and sites/all/themes directories respectively.
+
diff --git a/sites/default/default.settings.php b/sites/default/default.settings.php
new file mode 100644
index 0000000..30699a0
--- /dev/null
+++ b/sites/default/default.settings.php
@@ -0,0 +1,512 @@
+<?php
+
+/**
+ * @file
+ * Drupal site-specific configuration file.
+ *
+ * IMPORTANT NOTE:
+ * This file may have been set to read-only by the Drupal installation
+ * program. If you make changes to this file, be sure to protect it again
+ * after making your modifications. Failure to remove write permissions
+ * to this file is a security risk.
+ *
+ * The configuration file to be loaded is based upon the rules below.
+ *
+ * The configuration directory will be discovered by stripping the
+ * website's hostname from left to right and pathname from right to
+ * left. The first configuration file found will be used and any
+ * others will be ignored. If no other configuration file is found
+ * then the default configuration file at 'sites/default' will be used.
+ *
+ * For example, for a fictitious site installed at
+ * http://www.drupal.org/mysite/test/, the 'settings.php'
+ * is searched in the following directories:
+ *
+ * - sites/www.drupal.org.mysite.test
+ * - sites/drupal.org.mysite.test
+ * - sites/org.mysite.test
+ *
+ * - sites/www.drupal.org.mysite
+ * - sites/drupal.org.mysite
+ * - sites/org.mysite
+ *
+ * - sites/www.drupal.org
+ * - sites/drupal.org
+ * - sites/org
+ *
+ * - sites/default
+ *
+ * If you are installing on a non-standard port number, prefix the
+ * hostname with that number. For example,
+ * http://www.drupal.org:8080/mysite/test/ could be loaded from
+ * sites/8080.www.drupal.org.mysite.test/.
+ */
+
+/**
+ * Database settings:
+ *
+ * The $databases array specifies the database connection or
+ * connections that Drupal may use.  Drupal is able to connect
+ * to multiple databases, including multiple types of databases,
+ * during the same request.
+ *
+ * Each database connection is specified as an array of settings,
+ * similar to the following:
+ * @code
+ * array(
+ *   'driver' => 'mysql',
+ *   'database' => 'databasename',
+ *   'username' => 'username',
+ *   'password' => 'password',
+ *   'host' => 'localhost',
+ *   'port' => 3306,
+ *   'prefix' => 'myprefix_',
+ *   'collation' => 'utf8_general_ci',
+ * );
+ * @endcode
+ *
+ * The "driver" property indicates what Drupal database driver the
+ * connection should use.  This is usually the same as the name of the
+ * database type, such as mysql or sqlite, but not always.  The other
+ * properties will vary depending on the driver.  For SQLite, you must
+ * specify a database file name in a directory that is writable by the
+ * webserver.  For most other drivers, you must specify a
+ * username, password, host, and database name.
+ *
+ * Some database engines support transactions.  In order to enable
+ * transaction support for a given database, set the 'transactions' key
+ * to TRUE.  To disable it, set it to FALSE.  Note that the default value
+ * varies by driver.  For MySQL, the default is FALSE since MyISAM tables
+ * do not support transactions.
+ *
+ * For each database, you may optionally specify multiple "target" databases.
+ * A target database allows Drupal to try to send certain queries to a
+ * different database if it can but fall back to the default connection if not.
+ * That is useful for master/slave replication, as Drupal may try to connect
+ * to a slave server when appropriate and if one is not available will simply
+ * fall back to the single master server.
+ *
+ * The general format for the $databases array is as follows:
+ * @code
+ * $databases['default']['default'] = $info_array;
+ * $databases['default']['slave'][] = $info_array;
+ * $databases['default']['slave'][] = $info_array;
+ * $databases['extra']['default'] = $info_array;
+ * @endcode
+ *
+ * In the above example, $info_array is an array of settings described above.
+ * The first line sets a "default" database that has one master database
+ * (the second level default).  The second and third lines create an array
+ * of potential slave databases.  Drupal will select one at random for a given
+ * request as needed.  The fourth line creates a new database with a name of
+ * "extra".
+ *
+ * For a single database configuration, the following is sufficient:
+ * @code
+ * $databases['default']['default'] = array(
+ *   'driver' => 'mysql',
+ *   'database' => 'databasename',
+ *   'username' => 'username',
+ *   'password' => 'password',
+ *   'host' => 'localhost',
+ *   'prefix' => 'main_',
+ *   'collation' => 'utf8_general_ci',
+ * );
+ * @endcode
+ *
+ * You can optionally set prefixes for some or all database table names
+ * by using the 'prefix' setting. If a prefix is specified, the table
+ * name will be prepended with its value. Be sure to use valid database
+ * characters only, usually alphanumeric and underscore. If no prefixes
+ * are desired, leave it as an empty string ''.
+ *
+ * To have all database names prefixed, set 'prefix' as a string:
+ * @code
+ *   'prefix' => 'main_',
+ * @endcode
+ * To provide prefixes for specific tables, set 'prefix' as an array.
+ * The array's keys are the table names and the values are the prefixes.
+ * The 'default' element is mandatory and holds the prefix for any tables
+ * not specified elsewhere in the array. Example:
+ * @code
+ *   'prefix' => array(
+ *     'default'   => 'main_',
+ *     'users'     => 'shared_',
+ *     'sessions'  => 'shared_',
+ *     'role'      => 'shared_',
+ *     'authmap'   => 'shared_',
+ *   ),
+ * @endcode
+ * You can also use a reference to a schema/database as a prefix. This maybe
+ * useful if your Drupal installation exists in a schema that is not the default
+ * or you want to access several databases from the same code base at the same
+ * time.
+ * Example:
+ * @code
+ *   'prefix' => array(
+ *     'default'   => 'main.',
+ *     'users'     => 'shared.',
+ *     'sessions'  => 'shared.',
+ *     'role'      => 'shared.',
+ *     'authmap'   => 'shared.',
+ *   );
+ * @endcode
+ * NOTE: MySQL and SQLite's definition of a schema is a database.
+ *
+ * Advanced users can add or override initial commands to execute when
+ * connecting to the database server, as well as PDO connection settings. For
+ * example, to enable MySQL SELECT queries to exceed the max_join_size system
+ * variable, and to reduce the database connection timeout to 5 seconds:
+ *
+ * @code
+ * $databases['default']['default'] = array(
+ *   'init_commands' => array(
+ *     'big_selects' => 'SET SQL_BIG_SELECTS=1',
+ *   ),
+ *   'pdo' => array(
+ *     PDO::ATTR_TIMEOUT => 5,
+ *   ),
+ * );
+ * @endcode
+ *
+ * WARNING: These defaults are designed for database portability. Changing them
+ * may cause unexpected behavior, including potential data loss.
+ *
+ * @see DatabaseConnection_mysql::__construct
+ * @see DatabaseConnection_pgsql::__construct
+ * @see DatabaseConnection_sqlite::__construct
+ *
+ * Database configuration format:
+ * @code
+ *   $databases['default']['default'] = array(
+ *     'driver' => 'mysql',
+ *     'database' => 'databasename',
+ *     'username' => 'username',
+ *     'password' => 'password',
+ *     'host' => 'localhost',
+ *     'prefix' => '',
+ *   );
+ *   $databases['default']['default'] = array(
+ *     'driver' => 'pgsql',
+ *     'database' => 'databasename',
+ *     'username' => 'username',
+ *     'password' => 'password',
+ *     'host' => 'localhost',
+ *     'prefix' => '',
+ *   );
+ *   $databases['default']['default'] = array(
+ *     'driver' => 'sqlite',
+ *     'database' => '/path/to/databasefilename',
+ *   );
+ * @endcode
+ */
+$databases = array();
+
+/**
+ * Access control for update.php script.
+ *
+ * If you are updating your Drupal installation using the update.php script but
+ * are not logged in using either an account with the "Administer software
+ * updates" permission or the site maintenance account (the account that was
+ * created during installation), you will need to modify the access check
+ * statement below. Change the FALSE to a TRUE to disable the access check.
+ * After finishing the upgrade, be sure to open this file again and change the
+ * TRUE back to a FALSE!
+ */
+$update_free_access = FALSE;
+
+/**
+ * Salt for one-time login links and cancel links, form tokens, etc.
+ *
+ * This variable will be set to a random value by the installer. All one-time
+ * login links will be invalidated if the value is changed. Note that if your
+ * site is deployed on a cluster of web servers, you must ensure that this
+ * variable has the same value on each server. If this variable is empty, a hash
+ * of the serialized database credentials will be used as a fallback salt.
+ *
+ * For enhanced security, you may set this variable to a value using the
+ * contents of a file outside your docroot that is never saved together
+ * with any backups of your Drupal files and database.
+ *
+ * Example:
+ *   $drupal_hash_salt = file_get_contents('/home/example/salt.txt');
+ *
+ */
+$drupal_hash_salt = '';
+
+/**
+ * Base URL (optional).
+ *
+ * If Drupal is generating incorrect URLs on your site, which could
+ * be in HTML headers (links to CSS and JS files) or visible links on pages
+ * (such as in menus), uncomment the Base URL statement below (remove the
+ * leading hash sign) and fill in the absolute URL to your Drupal installation.
+ *
+ * You might also want to force users to use a given domain.
+ * See the .htaccess file for more information.
+ *
+ * Examples:
+ *   $base_url = 'http://www.example.com';
+ *   $base_url = 'http://www.example.com:8888';
+ *   $base_url = 'http://www.example.com/drupal';
+ *   $base_url = 'https://www.example.com:8888/drupal';
+ *
+ * It is not allowed to have a trailing slash; Drupal will add it
+ * for you.
+ */
+# $base_url = 'http://www.example.com';  // NO trailing slash!
+
+/**
+ * PHP settings:
+ *
+ * To see what PHP settings are possible, including whether they can be set at
+ * runtime (by using ini_set()), read the PHP documentation:
+ * http://www.php.net/manual/en/ini.list.php
+ * See drupal_environment_initialize() in includes/bootstrap.inc for required
+ * runtime settings and the .htaccess file for non-runtime settings. Settings
+ * defined there should not be duplicated here so as to avoid conflict issues.
+ */
+
+/**
+ * Some distributions of Linux (most notably Debian) ship their PHP
+ * installations with garbage collection (gc) disabled. Since Drupal depends on
+ * PHP's garbage collection for clearing sessions, ensure that garbage
+ * collection occurs by using the most common settings.
+ */
+ini_set('session.gc_probability', 1);
+ini_set('session.gc_divisor', 100);
+
+/**
+ * Set session lifetime (in seconds), i.e. the time from the user's last visit
+ * to the active session may be deleted by the session garbage collector. When
+ * a session is deleted, authenticated users are logged out, and the contents
+ * of the user's $_SESSION variable is discarded.
+ */
+ini_set('session.gc_maxlifetime', 200000);
+
+/**
+ * Set session cookie lifetime (in seconds), i.e. the time from the session is
+ * created to the cookie expires, i.e. when the browser is expected to discard
+ * the cookie. The value 0 means "until the browser is closed".
+ */
+ini_set('session.cookie_lifetime', 2000000);
+
+/**
+ * If you encounter a situation where users post a large amount of text, and
+ * the result is stripped out upon viewing but can still be edited, Drupal's
+ * output filter may not have sufficient memory to process it.  If you
+ * experience this issue, you may wish to uncomment the following two lines
+ * and increase the limits of these variables.  For more information, see
+ * http://php.net/manual/en/pcre.configuration.php.
+ */
+# ini_set('pcre.backtrack_limit', 200000);
+# ini_set('pcre.recursion_limit', 200000);
+
+/**
+ * Drupal automatically generates a unique session cookie name for each site
+ * based on its full domain name. If you have multiple domains pointing at the
+ * same Drupal site, you can either redirect them all to a single domain (see
+ * comment in .htaccess), or uncomment the line below and specify their shared
+ * base domain. Doing so assures that users remain logged in as they cross
+ * between your various domains. Make sure to always start the $cookie_domain
+ * with a leading dot, as per RFC 2109.
+ */
+# $cookie_domain = '.example.com';
+
+/**
+ * Variable overrides:
+ *
+ * To override specific entries in the 'variable' table for this site,
+ * set them here. You usually don't need to use this feature. This is
+ * useful in a configuration file for a vhost or directory, rather than
+ * the default settings.php. Any configuration setting from the 'variable'
+ * table can be given a new value. Note that any values you provide in
+ * these variable overrides will not be modifiable from the Drupal
+ * administration interface.
+ *
+ * The following overrides are examples:
+ * - site_name: Defines the site's name.
+ * - theme_default: Defines the default theme for this site.
+ * - anonymous: Defines the human-readable name of anonymous users.
+ * Remove the leading hash signs to enable.
+ */
+# $conf['site_name'] = 'My Drupal site';
+# $conf['theme_default'] = 'garland';
+# $conf['anonymous'] = 'Visitor';
+
+/**
+ * A custom theme can be set for the offline page. This applies when the site
+ * is explicitly set to maintenance mode through the administration page or when
+ * the database is inactive due to an error. It can be set through the
+ * 'maintenance_theme' key. The template file should also be copied into the
+ * theme. It is located inside 'modules/system/maintenance-page.tpl.php'.
+ * Note: This setting does not apply to installation and update pages.
+ */
+# $conf['maintenance_theme'] = 'bartik';
+
+/**
+ * Reverse Proxy Configuration:
+ *
+ * Reverse proxy servers are often used to enhance the performance
+ * of heavily visited sites and may also provide other site caching,
+ * security, or encryption benefits. In an environment where Drupal
+ * is behind a reverse proxy, the real IP address of the client should
+ * be determined such that the correct client IP address is available
+ * to Drupal's logging, statistics, and access management systems. In
+ * the most simple scenario, the proxy server will add an
+ * X-Forwarded-For header to the request that contains the client IP
+ * address. However, HTTP headers are vulnerable to spoofing, where a
+ * malicious client could bypass restrictions by setting the
+ * X-Forwarded-For header directly. Therefore, Drupal's proxy
+ * configuration requires the IP addresses of all remote proxies to be
+ * specified in $conf['reverse_proxy_addresses'] to work correctly.
+ *
+ * Enable this setting to get Drupal to determine the client IP from
+ * the X-Forwarded-For header (or $conf['reverse_proxy_header'] if set).
+ * If you are unsure about this setting, do not have a reverse proxy,
+ * or Drupal operates in a shared hosting environment, this setting
+ * should remain commented out.
+ *
+ * In order for this setting to be used you must specify every possible
+ * reverse proxy IP address in $conf['reverse_proxy_addresses'].
+ * If a complete list of reverse proxies is not available in your
+ * environment (for example, if you use a CDN) you may set the
+ * $_SERVER['REMOTE_ADDR'] variable directly in settings.php.
+ * Be aware, however, that it is likely that this would allow IP
+ * address spoofing unless more advanced precautions are taken.
+ */
+# $conf['reverse_proxy'] = TRUE;
+
+/**
+ * Specify every reverse proxy IP address in your environment.
+ * This setting is required if $conf['reverse_proxy'] is TRUE.
+ */
+# $conf['reverse_proxy_addresses'] = array('a.b.c.d', ...);
+
+/**
+ * Set this value if your proxy server sends the client IP in a header
+ * other than X-Forwarded-For.
+ */
+# $conf['reverse_proxy_header'] = 'HTTP_X_CLUSTER_CLIENT_IP';
+
+/**
+ * Page caching:
+ *
+ * By default, Drupal sends a "Vary: Cookie" HTTP header for anonymous page
+ * views. This tells a HTTP proxy that it may return a page from its local
+ * cache without contacting the web server, if the user sends the same Cookie
+ * header as the user who originally requested the cached page. Without "Vary:
+ * Cookie", authenticated users would also be served the anonymous page from
+ * the cache. If the site has mostly anonymous users except a few known
+ * editors/administrators, the Vary header can be omitted. This allows for
+ * better caching in HTTP proxies (including reverse proxies), i.e. even if
+ * clients send different cookies, they still get content served from the cache.
+ * However, authenticated users should access the site directly (i.e. not use an
+ * HTTP proxy, and bypass the reverse proxy if one is used) in order to avoid
+ * getting cached pages from the proxy.
+ */
+# $conf['omit_vary_cookie'] = TRUE;
+
+/**
+ * CSS/JS aggregated file gzip compression:
+ *
+ * By default, when CSS or JS aggregation and clean URLs are enabled Drupal will
+ * store a gzip compressed (.gz) copy of the aggregated files. If this file is
+ * available then rewrite rules in the default .htaccess file will serve these
+ * files to browsers that accept gzip encoded content. This allows pages to load
+ * faster for these users and has minimal impact on server load. If you are
+ * using a webserver other than Apache httpd, or a caching reverse proxy that is
+ * configured to cache and compress these files itself you may want to uncomment
+ * one or both of the below lines, which will prevent gzip files being stored.
+ */
+# $conf['css_gzip_compression'] = FALSE;
+# $conf['js_gzip_compression'] = FALSE;
+
+/**
+ * String overrides:
+ *
+ * To override specific strings on your site with or without enabling locale
+ * module, add an entry to this list. This functionality allows you to change
+ * a small number of your site's default English language interface strings.
+ *
+ * Remove the leading hash signs to enable.
+ */
+# $conf['locale_custom_strings_en'][''] = array(
+#   'forum'      => 'Discussion board',
+#   '@count min' => '@count minutes',
+# );
+
+/**
+ *
+ * IP blocking:
+ *
+ * To bypass database queries for denied IP addresses, use this setting.
+ * Drupal queries the {blocked_ips} table by default on every page request
+ * for both authenticated and anonymous users. This allows the system to
+ * block IP addresses from within the administrative interface and before any
+ * modules are loaded. However on high traffic websites you may want to avoid
+ * this query, allowing you to bypass database access altogether for anonymous
+ * users under certain caching configurations.
+ *
+ * If using this setting, you will need to add back any IP addresses which
+ * you may have blocked via the administrative interface. Each element of this
+ * array represents a blocked IP address. Uncommenting the array and leaving it
+ * empty will have the effect of disabling IP blocking on your site.
+ *
+ * Remove the leading hash signs to enable.
+ */
+# $conf['blocked_ips'] = array(
+#   'a.b.c.d',
+# );
+
+/**
+ * Fast 404 pages:
+ *
+ * Drupal can generate fully themed 404 pages. However, some of these responses
+ * are for images or other resource files that are not displayed to the user.
+ * This can waste bandwidth, and also generate server load.
+ *
+ * The options below return a simple, fast 404 page for URLs matching a
+ * specific pattern:
+ * - 404_fast_paths_exclude: A regular expression to match paths to exclude,
+ *   such as images generated by image styles, or dynamically-resized images.
+ *   If you need to add more paths, you can add '|path' to the expression.
+ * - 404_fast_paths: A regular expression to match paths that should return a
+ *   simple 404 page, rather than the fully themed 404 page. If you don't have
+ *   any aliases ending in htm or html you can add '|s?html?' to the expression.
+ * - 404_fast_html: The html to return for simple 404 pages.
+ *
+ * Add leading hash signs if you would like to disable this functionality.
+ */
+$conf['404_fast_paths_exclude'] = '/\/(?:styles)\//';
+$conf['404_fast_paths'] = '/\.(?:txt|png|gif|jpe?g|css|js|ico|swf|flv|cgi|bat|pl|dll|exe|asp)$/i';
+$conf['404_fast_html'] = '<html xmlns="http://www.w3.org/1999/xhtml"><head><title>404 Not Found</title></head><body><h1>Not Found</h1><p>The requested URL "@path" was not found on this server.</p></body></html>';
+
+/**
+ * By default, fast 404s are returned as part of the normal page request
+ * process, which will properly serve valid pages that happen to match and will
+ * also log actual 404s to the Drupal log. Alternatively you can choose to
+ * return a 404 now by uncommenting the following line. This will reduce server
+ * load, but will cause even valid pages that happen to match the pattern to
+ * return 404s, rather than the actual page. It will also prevent the Drupal
+ * system log entry. Ensure you understand the effects of this before enabling.
+ *
+ * To enable this functionality, remove the leading hash sign below.
+ */
+# drupal_fast_404();
+
+/**
+ * Authorized file system operations:
+ *
+ * The Update manager module included with Drupal provides a mechanism for
+ * site administrators to securely install missing updates for the site
+ * directly through the web user interface by providing either SSH or FTP
+ * credentials. This allows the site to update the new files as the user who
+ * owns all the Drupal files, instead of as the user the webserver is running
+ * as. However, some sites might wish to disable this functionality, and only
+ * update the code directly via SSH or FTP themselves. This setting completely
+ * disables all functionality related to these authorized file operations.
+ *
+ * Remove the leading hash signs to disable.
+ */
+# $conf['allow_authorize_operations'] = FALSE;
diff --git a/sites/example.sites.php b/sites/example.sites.php
new file mode 100644
index 0000000..08c1020
--- /dev/null
+++ b/sites/example.sites.php
@@ -0,0 +1,43 @@
+<?php
+
+/**
+ * @file
+ * Configuration file for Drupal's multi-site directory aliasing feature.
+ *
+ * Drupal searches for an appropriate configuration directory based on the
+ * website's hostname and pathname. A detailed description of the rules for
+ * discovering the configuration directory can be found in the comment
+ * documentation in 'sites/default/default.settings.php'.
+ *
+ * This file allows you to define a set of aliases that map hostnames and
+ * pathnames to configuration directories. These aliases are loaded prior to
+ * scanning for directories, and they are exempt from the normal discovery
+ * rules. The aliases are defined in an associative array named $sites, which
+ * should look similar to the following:
+ *
+ * $sites = array(
+ *   'devexample.com' => 'example.com',
+ *   'localhost.example' => 'example.com',
+ * );
+ *
+ * The above array will cause Drupal to look for a directory named
+ * "example.com" in the sites directory whenever a request comes from
+ * "example.com", "devexample.com", or "localhost/example". That is useful
+ * on development servers, where the domain name may not be the same as the
+ * domain of the live server. Since Drupal stores file paths into the database
+ * (files, system table, etc.) this will ensure the paths are correct while
+ * accessed on development servers.
+ *
+ * To use this file, copy and rename it such that its path plus filename is
+ * 'sites/sites.php'. If you don't need to use multi-site directory aliasing,
+ * then you can safely ignore this file, and Drupal will ignore it too.
+ */
+
+/**
+ * Multi-site directory aliasing:
+ *
+ * Edit the lines below to define directory aliases. Remove the leading hash
+ * signs to enable.
+ */
+# $sites['devexample.com'] = 'example.com';
+# $sites['localhost.example'] = 'example.com';
diff --git a/themes/bartik/bartik.info b/themes/bartik/bartik.info
index fdbd260..8e4586e 100644
--- a/themes/bartik/bartik.info
+++ b/themes/bartik/bartik.info
@@ -34,10 +34,10 @@ regions[footer] = Footer
 settings[shortcut_module_link] = 0
 
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/themes/garland/garland.info b/themes/garland/garland.info
index 9c39fca..5fe23be 100644
--- a/themes/garland/garland.info
+++ b/themes/garland/garland.info
@@ -7,10 +7,10 @@ stylesheets[all][] = style.css
 stylesheets[print][] = print.css
 settings[garland_width] = fluid
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/themes/seven/seven.info b/themes/seven/seven.info
index b467825..b6a2b90 100644
--- a/themes/seven/seven.info
+++ b/themes/seven/seven.info
@@ -13,10 +13,10 @@ regions[page_bottom] = Page bottom
 regions[sidebar_first] = First sidebar
 regions_hidden[] = sidebar_first
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
diff --git a/themes/stark/stark.info b/themes/stark/stark.info
index bb9394c..7a58fbb 100644
--- a/themes/stark/stark.info
+++ b/themes/stark/stark.info
@@ -5,10 +5,10 @@ version = VERSION
 core = 7.x
 stylesheets[all][] = layout.css
 
-; Information added by drupal.org packaging script on 2012-08-01
-version = "7.15"
+; Information added by drupal.org packaging script on 2012-10-17
+version = "7.16"
 project = "drupal"
-datestamp = "1343839327"
+datestamp = "1350508567"
 
 
 ; Information added by Acquia.com packaging script
