diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..baff153
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,6 @@
+# Ignore configuration files that may contain sensitive information.
+sites/*/settings*.php
+
+# Ignore paths that contain user-generated content.
+sites/*/files
+sites/*/private
diff --git a/.htaccess b/.htaccess
index 9c4a161..9494b53 100644
--- a/.htaccess
+++ b/.htaccess
@@ -13,9 +13,6 @@ Options -Indexes
 # Follow symbolic links in this directory.
 Options +FollowSymLinks
 
-# Multiviews creates problems with aliased URLs and is not needed for Drupal.
-Options -Multiviews
-
 # Make Drupal handle any 404 errors.
 ErrorDocument 404 /index.php
 
@@ -138,5 +135,3 @@ DirectoryIndex index.php index.html index.htm
     </FilesMatch>
   </IfModule>
 </IfModule>
-
-# $Id$
diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index ea91e0d..131e172 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,9 +1,23 @@
 
+Drupal 7.2, 2011-05-25
+----------------------
+- Added a default .gitignore file.
+- Improved PostgreSQL and SQLite support.
+- Numerous critical performance improvements.
+- Numerous critical fixes to the upgrade path.
+- Numerous fixes to language and translation systems.
+- Numerous fixes to AJAX and #states systems.
+- Improvements to the locking system.
+- Numerous documentation fixes.
+- Numerous styling and theme system fixes.
+- Numerous fixes for schema mis-matches between Drupal 6 and 7.
+- Minor internal API clean-ups.
+
 Drupal 7.1, 2011-05-25
 ----------------------
 - Fixed security issues (Cross site scripting, File access bypass), see SA-CORE-2011-001.
 
-Drupal 7.0, 2011-01-05
+Drupal 7.0, 2011-01-05 
 ----------------------
 - Database:
     * Fully rewritten database layer utilizing PHP 5's PDO abstraction layer.
@@ -106,7 +120,7 @@ Drupal 7.0, 2011-01-05
       are available.
 - OpenID:
     * Added support for Gmail and Google Apps for Domain identifiers. Users can
-      now login with their user@domain.com identifier when domain.com is powered
+      now login with their user@example.com identifier when example.com is powered
       by Google.
     * Made the OpenID module more pluggable.
 - Added code registry:
@@ -222,6 +236,156 @@ Drupal 7.0, 2011-01-05
     * Added a locking framework to coordinate long-running operations across
       requests.
 
+Drupal 6.22, 2011-05-25
+-----------------------
+- Made Drupal 6 work better with IIS and Internet Explorer.
+- Fixed .po file imports to work better with custom textgroups.
+- Improved code documentation at various places.
+- Fixed a variety of other bugs.
+
+Drupal 6.21, 2011-05-25
+----------------------
+- Fixed security issues (Cross site scripting), see SA-CORE-2011-001.
+
+Drupal 6.20, 2010-12-15
+----------------------
+- Fixed a variety of small bugs, improved code documentation.
+
+Drupal 6.19, 2010-08-11
+----------------------
+- Fixed a variety of small bugs, improved code documentation.
+
+Drupal 6.18, 2010-08-11
+----------------------
+- Fixed security issues (OpenID authentication bypass, File download access
+  bypass, Comment unpublishing bypass, Actions cross site scripting),
+  see SA-CORE-2010-002.
+
+Drupal 6.17, 2010-06-02
+----------------------
+- Improved PostgreSQL compatibility
+- Better PHP 5.3 and PHP 4 compatibility
+- Better browser compatibility of CSS and JS aggregation
+- Improved logging for login failures
+- Fixed an incompatibility with some contributed modules and the locking system
+- Fixed a variety of other bugs.
+
+Drupal 6.16, 2010-03-03
+----------------------
+- Fixed security issues (Installation cross site scripting, Open redirection,
+  Locale module cross site scripting, Blocked user session regeneration),
+  see SA-CORE-2010-001.
+- Better support for updated jQuery versions.
+- Reduced resource usage of update.module.
+- Fixed several issues relating to support of install profiles and
+  distributions.
+- Added a locking framework to avoid data corruption on long operations.
+- Fixed a variety of other bugs.
+
+Drupal 6.15, 2009-12-16
+----------------------
+- Fixed security issues (Cross site scripting), see SA-CORE-2009-009.
+- Fixed a variety of other bugs.
+
+Drupal 6.14, 2009-09-16
+----------------------
+- Fixed security issues (OpenID association cross site request forgeries,
+  OpenID impersonation and File upload), see SA-CORE-2009-008.
+- Changed the system modules page to not run all cache rebuilds; use the
+  button on the performance settings page to achieve the same effect.
+- Added support for PHP 5.3.0 out of the box.
+- Fixed a variety of small bugs.
+
+Drupal 6.13, 2009-07-01
+----------------------
+- Fixed security issues (Cross site scripting, Input format access bypass and
+  Password leakage in URL), see SA-CORE-2009-007.
+- Fixed a variety of small bugs.
+
+Drupal 6.12, 2009-05-13
+----------------------
+- Fixed security issues (Cross site scripting), see SA-CORE-2009-006.
+- Fixed a variety of small bugs.
+
+Drupal 6.11, 2009-04-29
+----------------------
+- Fixed security issues (Cross site scripting and limited information
+  disclosure), see SA-CORE-2009-005
+- Fixed performance issues with the menu router cache, the update
+  status cache and improved cache invalidation
+- Fixed a variety of small bugs.
+
+Drupal 6.10, 2009-02-25
+----------------------
+- Fixed a security issue, (Local file inclusion on Windows),
+  see SA-CORE-2009-003
+- Fixed node_feed() so custom fields can show up in RSS feeds.
+- Improved PostgreSQL compatibility.
+- Fixed a variety of small bugs.
+
+Drupal 6.9, 2009-01-14
+----------------------
+- Fixed security issues, (Access Bypass, Validation Bypass and Hardening
+  against SQL injection), see SA-CORE-2009-001
+- Made HTTP request checking more robust and informative.
+- Fixed HTTP_HOST checking to work again with HTTP 1.0 clients and
+  basic shell scripts.
+- Removed t() calls from all schema documentation. Suggested best practice
+  changed for contributed modules, see http://drupal.org/node/322731.
+- Fixed a variety of small bugs.
+
+Drupal 6.8, 2008-12-11
+----------------------
+- Removed a previous change incompatible with PHP 5.1.x and lower.
+
+Drupal 6.7, 2008-12-10
+----------------------
+- Fixed security issues, (Cross site request forgery and Cross site scripting), see SA-2008-073
+- Updated robots.txt and .htaccess to match current file use.
+- Fixed a variety of small bugs.
+
+Drupal 6.6, 2008-10-22
+----------------------
+- Fixed security issues, (File inclusion, Cross site scripting), see SA-2008-067
+- Fixed a variety of small bugs.
+
+Drupal 6.5, 2008-10-08
+----------------------
+- Fixed security issues, (File upload access bypass, Access rules bypass,
+  BlogAPI access bypass), see SA-2008-060.
+- Fixed a variety of small bugs.
+
+Drupal 6.4, 2008-08-13
+----------------------
+- Fixed a security issue (Cross site scripting, Arbitrary file uploads via
+  BlogAPI, Cross site request forgeries and Various Upload module
+  vulnerabilities), see SA-2008-047.
+- Improved error messages during installation.
+- Fixed a bug that prevented AHAH handlers to be attached to radios widgets.
+- Fixed a variety of small bugs.
+
+Drupal 6.3, 2008-07-09
+----------------------
+- Fixed security issues, (Cross site scripting, cross site request forgery,
+  session fixation and SQL injection), see SA-2008-044.
+- Slightly modified installation process to prevent file ownership issues on
+  shared hosts.
+- Improved PostgreSQL compatibility (rewritten queries; custom blocks).
+- Upgraded to jQuery 1.2.6.
+- Performance improvements to search, menu handling and form API caches.
+- Fixed Views compatibility issues (Views for Drupal 6 requires Drupal 6.3+).
+- Fixed a variety of small bugs.
+
+Drupal 6.2, 2008-04-09
+----------------------
+- Fixed a variety of small bugs.
+- Fixed a security issue (Access bypasses), see SA-2008-026.
+
+Drupal 6.1, 2008-02-27
+----------------------
+- Fixed a variety of small bugs.
+- Fixed a security issue (Cross site scripting), see SA-2008-018.
+
 Drupal 6.0, 2008-02-13
 ----------------------
 - New, faster and better menu system.
@@ -324,6 +488,95 @@ Drupal 6.0, 2008-02-13
 - Removed old system updates. Updates from Drupal versions prior to 5.x will
   require upgrading to 5.x before upgrading to 6.x.
 
+Drupal 5.23, 2010-08-11
+-----------------------
+- Fixed security issues (File download access bypass, Comment unpublishing
+  bypass), see SA-CORE-2010-002.
+
+Drupal 5.22, 2010-03-03
+-----------------------
+- Fixed security issues (Open redirection, Locale module cross site scripting,
+  Blocked user session regeneration), see SA-CORE-2010-001.
+
+Drupal 5.21, 2009-12-16
+-----------------------
+- Fixed a security issue (Cross site scripting), see SA-CORE-2009-009.
+- Fixed a variety of small bugs.
+
+Drupal 5.20, 2009-09-16
+-----------------------
+- Avoid security problems resulting from writing Drupal 6-style menu
+  declarations.
+- Fixed security issues (session fixation), see SA-CORE-2009-008.
+- Fixed a variety of small bugs.
+
+Drupal 5.19, 2009-07-01
+-----------------------
+- Fixed security issues (Cross site scripting and Password leakage in URL), see
+  SA-CORE-2009-007.          
+- Fixed a variety of small bugs.
+
+Drupal 5.18, 2009-05-13
+-----------------------
+- Fixed security issues (Cross site scripting), see SA-CORE-2009-006.
+- Fixed a variety of small bugs.
+
+Drupal 5.17, 2009-04-29
+-----------------------
+- Fixed security issues (Cross site scripting and limited information
+  disclosure) see SA-CORE-2009-005.
+- Fixed a variety of small bugs.
+
+Drupal 5.16, 2009-02-25
+-----------------------
+- Fixed a security issue, (Local file inclusion on Windows), see SA-CORE-2009-004.
+- Fixed a variety of small bugs.
+
+Drupal 5.15, 2009-01-14
+-----------------------
+- Fixed security issues, (Hardening against SQL injection), see
+  SA-CORE-2009-001
+- Fixed HTTP_HOST checking to work again with HTTP 1.0 clients and basic shell
+  scripts.
+- Fixed a variety of small bugs.
+
+Drupal 5.14, 2008-12-11
+-----------------------
+- removed a previous change incompatible with PHP 5.1.x and lower.
+
+Drupal 5.13, 2008-12-10
+-----------------------
+- fixed a variety of small bugs.
+- fixed security issues, (Cross site request forgery and Cross site scripting), see SA-2008-073
+- updated robots.txt and .htaccess to match current file use.
+
+Drupal 5.12, 2008-10-22
+-----------------------
+- fixed security issues, (File inclusion), see SA-2008-067
+
+Drupal 5.11, 2008-10-08
+-----------------------
+- fixed a variety of small bugs.
+- fixed security issues, (File upload access bypass, Access rules bypass,
+  BlogAPI access bypass, Node validation bypass), see SA-2008-060
+
+Drupal 5.10, 2008-08-13
+-----------------------
+- fixed a variety of small bugs.
+- fixed security issues, (Cross site scripting, Arbitrary file uploads via
+  BlogAPI and Cross site request forgery), see SA-2008-047
+
+Drupal 5.9, 2008-07-23
+----------------------
+- fixed a variety of small bugs.
+- fixed security issues, (Session fixation), see SA-2008-046
+
+Drupal 5.8, 2008-07-09
+----------------------
+- fixed a variety of small bugs.
+- fixed security issues, (Cross site scripting, cross site request forgery, and
+  session fixation), see SA-2008-044
+
 Drupal 5.7, 2008-01-28
 ----------------------
 - fixed the input format configuration page.
diff --git a/COPYRIGHT.txt b/COPYRIGHT.txt
index f416955..e983474 100644
--- a/COPYRIGHT.txt
+++ b/COPYRIGHT.txt
@@ -1,10 +1,10 @@
-// $Id$
 
 All Drupal code is Copyright 2001 - 2010 by the original authors.
 
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
-the Free Software Foundation.
+the Free Software Foundation; either version 2 of the License, or (at
+your option) any later version.
 
 This program is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
diff --git a/INSTALL.mysql.txt b/INSTALL.mysql.txt
index 56bf414..a7c292e 100644
--- a/INSTALL.mysql.txt
+++ b/INSTALL.mysql.txt
@@ -1,12 +1,11 @@
-// $Id$
 
 CREATE THE MySQL DATABASE
 --------------------------
 
-This step is only necessary if you don't already have a database set-up (e.g. by
-your host). In the following examples, 'username' is an example MySQL user which
-has the CREATE and GRANT privileges. Use the appropriate user name for your
-system.
+This step is only necessary if you don't already have a database set up (e.g.,
+by your host). In the following examples, 'username' is an example MySQL user
+which has the CREATE and GRANT privileges. Use the appropriate user name for
+your system.
 
 First, you must create a new database for your Drupal site (here, 'databasename'
 is the name of the new database):
diff --git a/INSTALL.pgsql.txt b/INSTALL.pgsql.txt
index a2aeaea..8fe8043 100644
--- a/INSTALL.pgsql.txt
+++ b/INSTALL.pgsql.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 CREATE THE PostgreSQL DATABASE
 ------------------------------
@@ -7,38 +6,39 @@ Note that the database must be created with UTF-8 (Unicode) encoding.
 
 1. CREATE DATABASE USER
 
-   This step is only necessary if you don't already have a user set up (e.g.
-   by your host) or you want to create new user for use with Drupal only. The
-   following command creates a new user named "username" and asks for a
-   password for that user:
+   This step is only necessary if you don't already have a user set up (e.g., by
+   your host), or want to create a new user for use with Drupal only. The
+   following command creates a new user named 'username' and asks for a password
+   for that user:
 
      createuser --pwprompt --encrypted --no-createrole --no-createdb username
 
-   If there are no errors then the command was successful
+   If there are no errors, then the command was successful.
 
-2. CREATE THE DRUPAL DATABASE
+2. CREATE DRUPAL DATABASE
 
-   This step is only necessary if you don't already have a database set up (e.g.
-   by your host) or you want to create new database for use with Drupal only.
-   The following command creates a new database named "databasename", which is
-   owned by previously created "username":
+   This step is only necessary if you don't already have a database set up
+   (e.g., by your host) or want to create a new database for use with Drupal
+   only. The following command creates a new database named 'databasename',
+   which is owned by the previously created 'username':
 
      createdb --encoding=UTF8 --owner=username databasename
 
-   If there are no errors then the command was successful
+   If there are no errors, then the command was successful.
 
-3. CREATE A SCHEMA OR SCHEMAS (Optional advanced)
+3. CREATE SCHEMA OR SCHEMAS (Optional advanced step)
 
-  Drupal will run across different schemas within your database if you so wish.
-  By default, Drupal runs inside the 'public' schema but you can use $db_prefix
-  inside settings.php to define a schema for Drupal to inside of or specify tables
-  that are shared inside of a separate schema. Drupal will not create schemas for
-  you, infact the user that Drupal runs as should not be allowed to. You'll need
-  execute the SQL below as a superuser (such as a postgres user) and replace
-  'drupaluser' with the username that Drupal uses to connect to PostgreSQL with
-  and replace schema_name with a schema name you wish to use such as 'shared':
+   Drupal will run across different schemas within your database if you so wish.
+   By default, Drupal runs inside the 'public' schema but you can use $db_prefix
+   inside settings.php to define a schema for Drupal to run inside of, or
+   specify tables that are shared inside of a separate schema. Drupal will not
+   create schemas for you. In fact, the user that Drupal runs as should not be
+   allowed to do this. You'll need to execute the SQL below as a superuser,
+   replace 'username' with the username that Drupal uses to connect to
+   PostgreSQL, and replace 'schema_name' with a schema name you wish to use,
+   such as 'shared':
 
-    CREATE SCHEMA schema_name AUTHORIZATION drupaluser;
+     CREATE SCHEMA schema_name AUTHORIZATION username;
 
-  Do this for as many schemas as you need. See default.settings.php for how to
-  set which tables use which schemas.
+   Do this for as many schemas as you need. See default.settings.php for
+   instructions on how to set which tables use which schemas.
diff --git a/INSTALL.sqlite.txt b/INSTALL.sqlite.txt
index e81e6ab..8e57d60 100644
--- a/INSTALL.sqlite.txt
+++ b/INSTALL.sqlite.txt
@@ -1,20 +1,19 @@
-// $Id$
 
 SQLITE REQUIREMENTS
 -------------------
 
-To use SQLite with your Drupal installation, the following requirements must
-be met: server has PHP 5.2 or later with PDO, and the PDO SQLite driver must
-be enabled.
+To use SQLite with your Drupal installation, the following requirements must be
+met: Server has PHP 5.2 or later with PDO, and the PDO SQLite driver must be
+enabled.
 
 SQLITE DATABASE CREATION
 ------------------------
 
 The Drupal installer will create the SQLite database for you. The only
-requirement is the installer must have write permissions the directory where
-the database file resides. This directory (not just the database file) also has
-to remain writeable by the web server going forward for SQLite to continue to be
-able to operate.
+requirement is that the installer must have write permissions to the directory
+where the database file resides. This directory (not just the database file) also
+has to remain writeable by the web server going forward for SQLite to continue to
+be able to operate.
 
 On the "Database configuration" form in the "Database file" field, you must
 supply the exact path to where you wish your database file to reside. It is
diff --git a/INSTALL.txt b/INSTALL.txt
index 783b04d..7b526e3 100644
--- a/INSTALL.txt
+++ b/INSTALL.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 CONTENTS OF THIS FILE
 ---------------------
@@ -10,7 +9,6 @@ CONTENTS OF THIS FILE
  * Multisite configuration
  * More information
 
-
 REQUIREMENTS AND NOTES
 ----------------------
 
@@ -27,24 +25,23 @@ Drupal requires:
 
 For more detailed information about Drupal requirements, including a list of
 PHP extensions and configurations that are required, see "System requirements"
-(http://drupal.org/requirements) in the Drupal handbook.
+(http://drupal.org/requirements) in the Drupal.org online documentation.
 
 For detailed information on how to configure a test server environment using a
 variety of operating systems and web servers, see "Local server setup"
-(http://drupal.org/node/157602) in the Drupal handbook.
+(http://drupal.org/node/157602) in the Drupal.org online documentation.
 
 Note that all directories mentioned in this document are always relative to the
 directory of your Drupal installation, and commands are meant to be run from
 this directory (except for the initial commands that create that directory).
 
-
 OPTIONAL SERVER REQUIREMENTS
 ----------------------------
 
 - If you want to use Drupal's "Clean URLs" feature on an Apache web server, you
   will need the mod_rewrite module and the ability to use local .htaccess
-  files. For Clean URLs support on IIS, see "Using Clean URLs with IIS"
-  (http://drupal.org/node/3854) in the Drupal handbook.
+  files. For Clean URLs support on IIS, see "Clean URLs with IIS"
+  (http://drupal.org/node/3854) in the Drupal.org online documentation.
 
 - If you plan to use XML-based services such as RSS aggregation, you will need
   PHP's XML extension. This extension is enabled by default on most PHP
@@ -60,17 +57,18 @@ OPTIONAL SERVER REQUIREMENTS
   configuration allows the web server to initiate outbound connections. Most web
   hosting setups allow this.
 
-
 INSTALLATION
 ------------
 
 1. Download and extract Drupal.
 
    You can obtain the latest Drupal release from http://drupal.org -- the files
-   are in .tar.gz format and can be extracted using most compression tools.
+   are available in .tar.gz and .zip formats and can be extracted using most
+   compression tools.
 
    To download and extract the files, on a typical Unix/Linux command line, use
-   the following commands (assuming you want version x.y of Drupal):
+   the following commands (assuming you want version x.y of Drupal in .tar.gz
+   format):
 
      wget http://drupal.org/files/projects/drupal-x.y.tar.gz
      tar -zxvf drupal-x.y.tar.gz
@@ -89,7 +87,7 @@ INSTALLATION
    initially:
 
    - Download a translation file for the correct Drupal version and language
-     from the translation server: http://localize.drupal.org/download
+     from the translation server: http://localize.drupal.org/translate/downloads
 
    - Place the file into your installation profile's translations
      directory. For instance, if you are using the Standard install profile,
@@ -257,7 +255,7 @@ INSTALLATION
    For more information on setting file permissions, see "Modifying Linux,
    Unix, and Mac file permissions" (http://drupal.org/node/202483) or
    "Modifying Windows file permissions" (http://drupal.org/node/202491) in the
-   online handbook.
+   Drupal.org online documentation.
 
 8. Set up independent "cron" maintenance jobs.
 
@@ -299,7 +297,6 @@ INSTALLATION
    scripts/ directory. (Note that these scripts must be customized like the
    above example, to add your site-specific cron key and domain name.)
 
-
 BUILDING AND CUSTOMIZING YOUR SITE
 ----------------------------------
 
@@ -317,12 +314,11 @@ multisite installation, you can also place modules and themes in the
 site-specific directories -- see the Multisite Configuration section, below.
 
 Never edit Drupal's core modules and themes; instead, use the hooks available in
-the Drupal API. To modify the behavior of Drupal, develope a module as described
+the Drupal API. To modify the behavior of Drupal, develop a module as described
 at http://drupal.org/developing/modules. To modify the look of Drupal, create a
 subtheme as described at http://drupal.org/node/225125, or a completely new
 theme as described at http://drupal.org/documentation/theme
 
-
 MULTISITE CONFIGURATION
 -----------------------
 
@@ -332,16 +328,15 @@ its own individual configuration.
 Additional site configurations are created in subdirectories within the 'sites'
 directory. Each subdirectory must have a 'settings.php' file, which specifies
 the configuration settings. The easiest way to create additional sites is to
-copy the 'default' directory and modify the 'settings.php' file as
-appropriate. The new directory name is constructed from the site's URL. The
-configuration for www.example.com could be in 'sites/example.com/settings.php'
-(note that 'www.' should be omitted if users can access your site at
-http://example.com/).
+copy the 'default' directory and modify the 'settings.php' file as appropriate.
+The new directory name is constructed from the site's URL. The configuration for
+www.example.com could be in 'sites/example.com/settings.php' (note that 'www.'
+should be omitted if users can access your site at http://example.com/).
 
 Sites do not have to have a different domain. You can also use subdomains and
-subdirectories for Drupal sites. For example, example.com, sub.example.com,
-and sub.example.com/site3 can all be defined as independent Drupal sites. The
-setup for a configuration such as this would look like the following:
+subdirectories for Drupal sites. For example, example.com, sub.example.com, and
+sub.example.com/site3 can all be defined as independent Drupal sites. The setup
+for a configuration such as this would look like the following:
 
   sites/default/settings.php
   sites/example.com/settings.php
@@ -384,15 +379,14 @@ settings, consult http://drupal.org/getting-started/6/install/multi-site
 For more information on configuring Drupal's file system path in a multisite
 configuration, see step 6 above.
 
-
 MORE INFORMATION
 ----------------
 
-- For additional documentation, see the online Drupal handbook:
-  http://drupal.org/handbook
+- See the Drupal.org online documentation:
+  http://drupal.org/documentation
 
-- For a list of security announcements, see the "Security announcements" page
-  at http://drupal.org/security (available as an RSS feed). This page also
+- For a list of security announcements, see the "Security advisories" page at
+  http://drupal.org/security (available as an RSS feed). This page also
   describes how to subscribe to these announcements via e-mail.
 
 - For information about the Drupal security process, or to find out how to
diff --git a/LICENSE.txt b/LICENSE.txt
index e9b0311..94fb846 100644
--- a/LICENSE.txt
+++ b/LICENSE.txt
@@ -1,4 +1,3 @@
-// $Id$
         GNU GENERAL PUBLIC LICENSE
            Version 2, June 1991
 
diff --git a/MAINTAINERS.txt b/MAINTAINERS.txt
index 7bca15b..0af271d 100644
--- a/MAINTAINERS.txt
+++ b/MAINTAINERS.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal core is maintained by the community.  To participate, go to
 
@@ -19,7 +18,7 @@ Drupal 7
 Component maintainers
 ---------------------
 
-AJAX system
+Ajax system
 - Alex Bronstein 'effulgentsia' <http://drupal.org/user/78040>
 - Randy Fay 'rfay' <http://drupal.org/user/30906>
 - Earl Miles 'merlinofchaos' <http://drupal.org/user/26979>
@@ -44,7 +43,7 @@ Database system
 
   - MySQL driver
     - Larry Garfield 'Crell' <http://drupal.org/user/26398>
-    - David Strauss 'David Strauss' <hhttp://drupal.org/user/93254>
+    - David Strauss 'David Strauss' <http://drupal.org/user/93254>
 
   - PostgreSQL driver
     - Damien Tournoud 'DamZ' <http://drupal.org/user/22211>
diff --git a/README.txt b/README.txt
index c49fed1..921f99c 100644
--- a/README.txt
+++ b/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 CONTENTS OF THIS FILE
 ---------------------
@@ -25,14 +24,14 @@ Legal information about Drupal:
 CONFIGURATION AND FEATURES
 --------------------------
 
-Drupal core (what you get when you download and unzip a drupal-x.y.tar.gz file
-from http://drupal.org/project/drupal) has what you need to get started with
-your website. It includes several modules (extensions that add functionality)
-for common website features, such as managing content, user accounts, image
-uploading, and search. Core comes with many options that allow site-specific
-configuration. In addition to the core modules, there are thousands of
-contributed modules (for functionality not included with Drupal core)
-available for download.
+Drupal core (what you get when you download and extract a drupal-x.y.tar.gz or
+drupal-x.y.zip file from http://drupal.org/project/drupal) has what you need to
+get started with your website. It includes several modules (extensions that add
+functionality) for common website features, such as managing content, user
+accounts, image uploading, and search. Core comes with many options that allow
+site-specific configuration. In addition to the core modules, there are
+thousands of contributed modules (for functionality not included with Drupal
+core) available for download.
 
 More about configuration:
  * Install, upgrade, and maintain Drupal:
@@ -49,8 +48,8 @@ APPEARANCE
 
 In Drupal, the appearance of your site is set by the theme (themes are
 extensions that set fonts, colors, and layout). Drupal core comes with several
-themes. More themes are available for download, and you can also create your
-own custom theme.
+themes. More themes are available for download, and you can also create your own
+custom theme.
 
 More about themes:
  * Download contributed themes to sites/all/themes to modify Drupal's
diff --git a/UPGRADE.txt b/UPGRADE.txt
index 59a37bc..d4909d8 100644
--- a/UPGRADE.txt
+++ b/UPGRADE.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 INTRODUCTION
 ------------
@@ -13,7 +12,7 @@ First steps and definitions:
 
   * If you are upgrading to Drupal version x.y, then x is known as the major
     version number, and y is known as the minor version number. The download
-    file will be named drupal-x.y.tar.gz.
+    file will be named drupal-x.y.tar.gz (or drupal-x.y.zip).
 
   * All directories mentioned in this document are relative to the directory of
     your Drupal installation.
diff --git a/authorize.php b/authorize.php
index 63a60e2..cd3df50 100644
--- a/authorize.php
+++ b/authorize.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/cron.php b/cron.php
index 9e5e7cf..c6ce531 100644
--- a/cron.php
+++ b/cron.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/actions.inc b/includes/actions.inc
index 0daf8e8..c2fd4d9 100644
--- a/includes/actions.inc
+++ b/includes/actions.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/ajax.inc b/includes/ajax.inc
index 0f652ef..41c6983 100644
--- a/includes/ajax.inc
+++ b/includes/ajax.inc
@@ -1,17 +1,16 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Functions for use with Drupal's AJAX framework.
+ * Functions for use with Drupal's Ajax framework.
  */
 
 /**
- * @defgroup ajax AJAX framework
+ * @defgroup ajax Ajax framework
  * @{
- * Functions for Drupal's AJAX framework.
+ * Functions for Drupal's Ajax framework.
  *
- * Drupal's AJAX framework is used to dynamically update parts of a page's HTML
+ * Drupal's Ajax framework is used to dynamically update parts of a page's HTML
  * based on data from the server. Upon a specified event, such as a button
  * click, a callback function is triggered which performs server-side logic and
  * may return updated markup, which is then replaced on-the-fly with no page
@@ -20,33 +19,33 @@
  * This framework creates a PHP macro language that allows the server to
  * instruct JavaScript to perform actions on the client browser. When using
  * forms, it can be used with the #ajax property.
- * The #ajax property can be used to bind events to the AJAX framework. By
+ * The #ajax property can be used to bind events to the Ajax framework. By
  * default, #ajax uses 'system/ajax' as its path for submission and thus calls
  * ajax_form_callback() and a defined #ajax['callback'] function.
  * However, you may optionally specify a different path to request or a
  * different callback function to invoke, which can return updated HTML or can
- * also return a richer set of @link ajax_commands AJAX framework commands @endlink.
+ * also return a richer set of @link ajax_commands Ajax framework commands @endlink.
  *
  * Standard form handling is as follows:
  *   - A form element has a #ajax property that includes #ajax['callback'] and
  *     omits #ajax['path']. See below about using #ajax['path'] to implement
  *     advanced use-cases that require something other than standard form
  *     handling.
- *   - On the specified element, AJAX processing is triggered by a change to
+ *   - On the specified element, Ajax processing is triggered by a change to
  *     that element.
  *   - The browser submits an HTTP POST request to the 'system/ajax' Drupal
  *     path.
  *   - The menu page callback for 'system/ajax', ajax_form_callback(), calls
  *     drupal_process_form() to process the form submission and rebuild the
  *     form if necessary. The form is processed in much the same way as if it
- *     were submitted without AJAX, with the same #process functions and
+ *     were submitted without Ajax, with the same #process functions and
  *     validation and submission handlers called in either case, making it easy
- *     to create AJAX-enabled forms that degrade gracefully when JavaScript is
+ *     to create Ajax-enabled forms that degrade gracefully when JavaScript is
  *     disabled.
  *   - After form processing is complete, ajax_form_callback() calls the
  *     function named by #ajax['callback'], which returns the form element that
  *     has been updated and needs to be returned to the browser, or
- *     alternatively, an array of custom AJAX commands.
+ *     alternatively, an array of custom Ajax commands.
  *   - The page delivery callback for 'system/ajax', ajax_deliver(), renders the
  *     element returned by #ajax['callback'], and returns the JSON string
  *     created by ajax_render() to the browser.
@@ -57,7 +56,7 @@
  *     #ajax['callback'], using a JavaScript animation effect specified by
  *     #ajax['effect'].
  *
- * A simple example of basic AJAX use from the
+ * A simple example of basic Ajax use from the
  * @link http://drupal.org/project/examples Examples module @endlink follows:
  * @code
  * function main_page() {
@@ -99,28 +98,28 @@
  * }
  * @endcode
  *
- * In the above example, the 'changethis' element is AJAX-enabled. The default
+ * In the above example, the 'changethis' element is Ajax-enabled. The default
  * #ajax['event'] is 'change', so when the 'changethis' element changes,
- * an AJAX call is made. The form is submitted and reprocessed, and then the
+ * an Ajax call is made. The form is submitted and reprocessed, and then the
  * callback is called.  In this case, the form has been automatically
  * built changing $form['replace_textfield']['#description'], so the callback
  * just returns that part of the form.
  *
- * To implement AJAX handling in a form, add '#ajax' to the form
- * definition of a field. That field will trigger an AJAX event when it is
+ * To implement Ajax handling in a form, add '#ajax' to the form
+ * definition of a field. That field will trigger an Ajax event when it is
  * clicked (or changed, depending on the kind of field). #ajax supports
  * the following parameters (either 'path' or 'callback' is required at least):
  * - #ajax['callback']: The callback to invoke to handle the server side of the
- *   AJAX event, which will receive a $form and $form_state as arguments, and
+ *   Ajax event, which will receive a $form and $form_state as arguments, and
  *   returns a renderable array (most often a form or form fragment), an HTML
- *   string, or an array of AJAX commands. If returning a renderable array or
+ *   string, or an array of Ajax commands. If returning a renderable array or
  *   a string, the value will replace the original element named in
  *   #ajax['wrapper'], and
  *   theme_status_messages()
  *   will be prepended to that
  *   element. (If the status messages are not wanted, return an array
- *   of AJAX commands instead.)
- *   #ajax['wrapper']. If an array of AJAX commands is returned, it will be
+ *   of Ajax commands instead.)
+ *   #ajax['wrapper']. If an array of Ajax commands is returned, it will be
  *   executed by the calling code.
  * - #ajax['path']: The menu path to use for the request. This is often omitted
  *   and the default is used. This path should map
@@ -155,21 +154,21 @@
  *   More information is available in the
  *   @link http://api.drupal.org/api/drupal/developer--topics--forms_api_reference.html/7 Form API Reference @endlink
  *
- * In addition to using Form API for doing in-form modification, AJAX may be
+ * In addition to using Form API for doing in-form modification, Ajax may be
  * enabled by adding classes to buttons and links. By adding the 'use-ajax'
- * class to a link, the link will be loaded via an AJAX call. When using this
+ * class to a link, the link will be loaded via an Ajax call. When using this
  * method, the href of the link can contain '/nojs/' as part of the path. When
- * the AJAX framework makes the request, it will convert this to '/ajax/'.
+ * the Ajax framework makes the request, it will convert this to '/ajax/'.
  * The server is then able to easily tell if this request was made through an
- * actual AJAX request or in a degraded state, and respond appropriately.
+ * actual Ajax request or in a degraded state, and respond appropriately.
  *
  * Similarly, submit buttons can be given the class 'use-ajax-submit'. The
- * form will then be submitted via AJAX to the path specified in the #action.
+ * form will then be submitted via Ajax to the path specified in the #action.
  * Like the ajax-submit class above, this path will have '/nojs/' replaced with
  * '/ajax/' so that the submit handler can tell if the form was submitted
  * in a degraded state or not.
  *
- * When responding to AJAX requests, the server should do what it needs to do
+ * When responding to Ajax requests, the server should do what it needs to do
  * for that request, then create a commands array. This commands array will
  * be converted to a JSON object and returned to the client, which will then
  * iterate over the array and process it like a macro language.
@@ -189,14 +188,14 @@
  *   // Add a visual "changed" marker to the '#object-1' element.
  *   $commands[] = ajax_command_changed('#object-1');
  *   // Menu 'page callback' and #ajax['callback'] functions are supposed to
- *   // return render arrays. If returning an AJAX commands array, it must be
+ *   // return render arrays. If returning an Ajax commands array, it must be
  *   // encapsulated in a render array structure.
  *   return array('#type' => 'ajax', '#commands' => $commands);
  * @endcode
  *
- * When returning an AJAX command array, it is often useful to have
+ * When returning an Ajax command array, it is often useful to have
  * status messages rendered along with other tasks in the command array.
- * In that case the the AJAX commands array may be constructed like this:
+ * In that case the the Ajax commands array may be constructed like this:
  * @code
  *   $commands = array();
  *   $commands[] = ajax_command_replace(NULL, $output);
@@ -204,7 +203,7 @@
  *   return array('#type' => 'ajax', '#commands' => $commands);
  * @endcode
  *
- * See @link ajax_commands AJAX framework commands @endlink
+ * See @link ajax_commands Ajax framework commands @endlink
  */
 
 /**
@@ -215,7 +214,7 @@
  *   functions.
  */
 function ajax_render($commands = array()) {
-  // AJAX responses aren't rendered with html.tpl.php, so we have to call
+  // Ajax responses aren't rendered with html.tpl.php, so we have to call
   // drupal_get_css() and drupal_get_js() here, in order to have new files added
   // during this request to be loaded by the page. We only want to send back
   // files that the page hasn't already loaded, so we implement simple diffing
@@ -235,7 +234,7 @@ function ajax_render($commands = array()) {
       // @todo Inline CSS and JS items are indexed numerically. These can't be
       //   reliably diffed with array_diff_key(), since the number can change
       //   due to factors unrelated to the inline content, so for now, we strip
-      //   the inline items from AJAX responses, and can add support for them
+      //   the inline items from Ajax responses, and can add support for them
       //   when drupal_add_css() and drupal_add_js() are changed to using md5()
       //   or some other hash of the inline content.
       foreach ($items[$type] as $key => $item) {
@@ -251,14 +250,14 @@ function ajax_render($commands = array()) {
   // Settings are handled separately, later in this function, so that changes to
   // the ajaxPageState setting that occur during drupal_get_css() and
   // drupal_get_js() get included, and because the jQuery.extend() code produced
-  // by drupal_get_js() for adding settings isn't appropriate during an AJAX
+  // by drupal_get_js() for adding settings isn't appropriate during an Ajax
   // response, because it does not pass TRUE for the "deep" parameter, and
   // therefore, can clobber existing settings on the page.
   if (isset($items['js']['settings'])) {
     unset($items['js']['settings']);
   }
 
-  // Render the HTML to load these files, and add AJAX commands to insert this
+  // Render the HTML to load these files, and add Ajax commands to insert this
   // HTML in the page. We pass TRUE as the $skip_alter argument to prevent the
   // data from being altered again, as we already altered it above.
   $styles = drupal_get_css($items['css'], TRUE);
@@ -287,16 +286,16 @@ function ajax_render($commands = array()) {
     array_unshift($commands, ajax_command_settings(call_user_func_array('array_merge_recursive', $settings['data']), TRUE));
   }
 
-  // Allow modules to alter any AJAX response.
+  // Allow modules to alter any Ajax response.
   drupal_alter('ajax_render', $commands);
 
   return drupal_json_encode($commands);
 }
 
 /**
- * Get a form submitted via #ajax during an AJAX callback.
+ * Get a form submitted via #ajax during an Ajax callback.
  *
- * This will load a form from the form cache used during AJAX operations. It
+ * This will load a form from the form cache used during Ajax operations. It
  * pulls the form info from $_POST.
  *
  * @return
@@ -326,7 +325,7 @@ function ajax_get_form() {
   // Since some of the submit handlers are run, redirects need to be disabled.
   $form_state['no_redirect'] = TRUE;
 
-  // When a form is rebuilt after AJAX processing, its #build_id and #action
+  // When a form is rebuilt after Ajax processing, its #build_id and #action
   // should not change.
   // @see drupal_rebuild_form()
   $form_state['rebuild_info']['copy']['#build_id'] = TRUE;
@@ -341,10 +340,10 @@ function ajax_get_form() {
 }
 
 /**
- * Menu callback; handles AJAX requests for the #ajax Form API property.
+ * Menu callback; handles Ajax requests for the #ajax Form API property.
  *
  * This rebuilds the form from cache and invokes the defined #ajax['callback']
- * to return an AJAX command structure for JavaScript. In case no 'callback' has
+ * to return an Ajax command structure for JavaScript. In case no 'callback' has
  * been defined, nothing will happen.
  *
  * The Form API #ajax property can be set both for buttons and other input
@@ -361,9 +360,9 @@ function ajax_form_callback() {
 
   // We need to return the part of the form (or some other content) that needs
   // to be re-rendered so the browser can update the page with changed content.
-  // Since this is the generic menu callback used by many AJAX elements, it is
+  // Since this is the generic menu callback used by many Ajax elements, it is
   // up to the #ajax['callback'] function of the element (may or may not be a
-  // button) that triggered the AJAX request to determine what needs to be
+  // button) that triggered the Ajax request to determine what needs to be
   // rendered.
   if (!empty($form_state['triggering_element'])) {
     $callback = $form_state['triggering_element']['#ajax']['callback'];
@@ -374,21 +373,21 @@ function ajax_form_callback() {
 }
 
 /**
- * Theme callback for AJAX requests.
+ * Theme callback for Ajax requests.
  *
- * Many different pages can invoke an AJAX request to system/ajax or another
- * generic AJAX path. It is almost always desired for an AJAX response to be
+ * Many different pages can invoke an Ajax request to system/ajax or another
+ * generic Ajax path. It is almost always desired for an Ajax response to be
  * rendered using the same theme as the base page, because most themes are built
  * with the assumption that they control the entire page, so if the CSS for two
  * themes are both loaded for a given page, they may conflict with each other.
  * For example, Bartik is Drupal's default theme, and Seven is Drupal's default
  * administration theme. Depending on whether the "Use the administration theme
  * when editing or creating content" checkbox is checked, the node edit form may
- * be displayed in either theme, but the AJAX response to the Field module's
+ * be displayed in either theme, but the Ajax response to the Field module's
  * "Add another item" button should be rendered using the same theme as the rest
  * of the page. Therefore, system_menu() sets the 'theme callback' for
  * 'system/ajax' to this function, and it is recommended that modules
- * implementing other generic AJAX paths do the same.
+ * implementing other generic Ajax paths do the same.
  */
 function ajax_base_page_theme() {
   if (!empty($_POST['ajax_page_state']['theme']) && !empty($_POST['ajax_page_state']['theme_token'])) {
@@ -407,9 +406,9 @@ function ajax_base_page_theme() {
 }
 
 /**
- * Package and send the result of a page callback to the browser as an AJAX response.
+ * Package and send the result of a page callback to the browser as an Ajax response.
  *
- * This function is the equivalent of drupal_deliver_html_page(), but for AJAX
+ * This function is the equivalent of drupal_deliver_html_page(), but for Ajax
  * requests. Like that function, it:
  * - Adds needed HTTP headers.
  * - Prints rendered output.
@@ -425,36 +424,71 @@ function ajax_base_page_theme() {
  * @see drupal_deliver_html_page()
  */
 function ajax_deliver($page_callback_result) {
+  // Browsers do not allow JavaScript to read the contents of a user's local
+  // files. To work around that, the jQuery Form plugin submits forms containing
+  // a file input element to an IFRAME, instead of using XHR. Browsers do not
+  // normally expect JSON strings as content within an IFRAME, so the response
+  // must be customized accordingly.
+  // @see http://malsup.com/jquery/form/#file-upload
+  // @see Drupal.ajax.prototype.beforeSend()
+  $iframe_upload = !empty($_POST['ajax_iframe_upload']);
+
   // Emit a Content-Type HTTP header if none has been added by the page callback
   // or by a wrapping delivery callback.
   if (is_null(drupal_get_http_header('Content-Type'))) {
-    // The standard header for JSON is application/json.
-    // @see http://www.ietf.org/rfc/rfc4627.txt?number=4627
-    // However, browsers do not allow JavaScript to read the contents of a
-    // user's local files. To work around that, jQuery submits forms containing
-    // a file input element to an IFRAME, instead of using XHR.
-    // @see http://malsup.com/jquery/form/#file-upload
-    // When Internet Explorer receives application/json content in an IFRAME, it
-    // treats it as a file download and prompts the user to save it. To prevent
-    // that, we return the content as text/plain. But only for POST requests,
-    // since jQuery should always use XHR for GET requests and the incorrect
-    // mime type should not end up in page or proxy server caches.
-    // @see http://drupal.org/node/995854
-    $iframe_upload = !isset($_SERVER['HTTP_X_REQUESTED_WITH']) || $_SERVER['HTTP_X_REQUESTED_WITH'] != 'XMLHttpRequest';
-    if ($iframe_upload && $_SERVER['REQUEST_METHOD'] == 'POST') {
-      drupal_add_http_header('Content-Type', 'text/plain; charset=utf-8');
+    if (!$iframe_upload) {
+      // Standard JSON can be returned to a browser's XHR object, and to
+      // non-browser user agents.
+      // @see http://www.ietf.org/rfc/rfc4627.txt?number=4627
+      drupal_add_http_header('Content-Type', 'application/json; charset=utf-8');
     }
     else {
-      drupal_add_http_header('Content-Type', 'application/json; charset=utf-8');
+      // Browser IFRAMEs expect HTML. With most other content types, Internet
+      // Explorer presents the user with a download prompt.
+      drupal_add_http_header('Content-Type', 'text/html; charset=utf-8');
     }
   }
 
-  // Normalize whatever was returned by the page callback to an AJAX commands
-  // array.
+  // Print the response.
+  $commands = ajax_prepare_response($page_callback_result);
+  $json = ajax_render($commands);
+  if (!$iframe_upload) {
+    // Standard JSON can be returned to a browser's XHR object, and to
+    // non-browser user agents.
+    print $json;
+  }
+  else {
+    // Browser IFRAMEs expect HTML. Browser extensions, such as Linkification
+    // and Skype's Browser Highlighter, convert URLs, phone numbers, etc. into
+    // links. This corrupts the JSON response. Protect the integrity of the
+    // JSON data by making it the value of a textarea.
+    // @see http://malsup.com/jquery/form/#file-upload
+    // @see http://drupal.org/node/1009382
+    print '<textarea>' . $json . '</textarea>';
+  }
+
+  // Perform end-of-request tasks.
+  ajax_footer();
+}
+
+/**
+ * Converts the return value of a page callback into an Ajax commands array.
+ *
+ * @param $page_callback_result
+ *   The result of a page callback. Can be one of:
+ *   - NULL: to indicate no content.
+ *   - An integer menu status constant: to indicate an error condition.
+ *   - A string of HTML content.
+ *   - A renderable array of content.
+ *
+ * @return
+ *   An Ajax commands array that can be passed to ajax_render().
+ */
+function ajax_prepare_response($page_callback_result) {
   $commands = array();
   if (!isset($page_callback_result)) {
     // Simply delivering an empty commands array is sufficient. This results
-    // in the AJAX request being completed, but nothing being done to the page.
+    // in the Ajax request being completed, but nothing being done to the page.
   }
   elseif (is_int($page_callback_result)) {
     switch ($page_callback_result) {
@@ -473,7 +507,7 @@ function ajax_deliver($page_callback_result) {
     }
   }
   elseif (is_array($page_callback_result) && isset($page_callback_result['#type']) && ($page_callback_result['#type'] == 'ajax')) {
-    // Complex AJAX callbacks can return a result that contains an error message
+    // Complex Ajax callbacks can return a result that contains an error message
     // or a specific set of commands to send to the browser.
     $page_callback_result += element_info('ajax');
     $error = $page_callback_result['#error'];
@@ -488,7 +522,7 @@ function ajax_deliver($page_callback_result) {
     }
   }
   else {
-    // Like normal page callbacks, simple AJAX callbacks can return HTML
+    // Like normal page callbacks, simple Ajax callbacks can return HTML
     // content, as a string or render array. This HTML is inserted in some
     // relationship to #ajax['wrapper'], as determined by which jQuery DOM
     // manipulation method is used. The method used is specified by
@@ -497,28 +531,24 @@ function ajax_deliver($page_callback_result) {
     $html = is_string($page_callback_result) ? $page_callback_result : drupal_render($page_callback_result);
     $commands[] = ajax_command_insert(NULL, $html);
     // Add the status messages inside the new content's wrapper element, so that
-    // on subsequent AJAX requests, it is treated as old content.
+    // on subsequent Ajax requests, it is treated as old content.
     $commands[] = ajax_command_prepend(NULL, theme('status_messages'));
   }
 
-  // Unlike the recommendation in http://malsup.com/jquery/form/#file-upload,
-  // we do not have to wrap the JSON string in a TEXTAREA, because
-  // drupal_json_encode() returns an HTML-safe JSON string.
-  print ajax_render($commands);
-  ajax_footer();
+  return $commands;
 }
 
 /**
- * Perform end-of-AJAX-request tasks.
+ * Perform end-of-Ajax-request tasks.
  *
- * This function is the equivalent of drupal_page_footer(), but for AJAX
+ * This function is the equivalent of drupal_page_footer(), but for Ajax
  * requests.
  *
  * @see drupal_page_footer()
  */
 function ajax_footer() {
-  // Even for AJAX requests, invoke hook_exit() implementations. There may be
-  // modules that need very fast AJAX responses, and therefore, run AJAX
+  // Even for Ajax requests, invoke hook_exit() implementations. There may be
+  // modules that need very fast Ajax responses, and therefore, run Ajax
   // requests with an early bootstrap.
   if (drupal_get_bootstrap_phase() == DRUPAL_BOOTSTRAP_FULL && (!defined('MAINTENANCE_MODE') || MAINTENANCE_MODE != 'update')) {
     module_invoke_all('exit');
@@ -551,10 +581,10 @@ function ajax_process_form($element, &$form_state) {
 }
 
 /**
- * Add AJAX information about an element to the page to communicate with JavaScript.
+ * Add Ajax information about an element to the page to communicate with JavaScript.
  *
  * If #ajax['path'] is set on an element, this additional JavaScript is added
- * to the page header to attach the AJAX behaviors. See ajax.js for more
+ * to the page header to attach the Ajax behaviors. See ajax.js for more
  * information.
  *
  * @param $element
@@ -591,9 +621,9 @@ function ajax_pre_render_element($element) {
       case 'image_button':
         // Use the mousedown instead of the click event because form
         // submission via pressing the enter key triggers a click event on
-        // submit inputs, inappropriately triggering AJAX behaviors.
+        // submit inputs, inappropriately triggering Ajax behaviors.
         $element['#ajax']['event'] = 'mousedown';
-        // Attach an additional event handler so that AJAX behaviors
+        // Attach an additional event handler so that Ajax behaviors
         // can be triggered still via keyboard input.
         $element['#ajax']['keypress'] = TRUE;
         break;
@@ -642,7 +672,7 @@ function ajax_pre_render_element($element) {
     unset($settings['path'], $settings['options']);
 
     // Add special data to $settings['submit'] so that when this element
-    // triggers an AJAX submission, Drupal's form processing can determine which
+    // triggers an Ajax submission, Drupal's form processing can determine which
     // element triggered it.
     // @see _form_element_triggered_scripted_submission()
     if (isset($settings['trigger_as'])) {
@@ -685,7 +715,7 @@ function ajax_pre_render_element($element) {
       'data' => array('ajax' => array($element['#id'] => $settings)),
     );
 
-    // Indicate that AJAX processing was successful.
+    // Indicate that Ajax processing was successful.
     $element['#ajax_processed'] = TRUE;
   }
   return $element;
@@ -696,16 +726,16 @@ function ajax_pre_render_element($element) {
  */
 
 /**
- * @defgroup ajax_commands AJAX framework commands
+ * @defgroup ajax_commands Ajax framework commands
  * @{
- * Functions to create various AJAX commands.
+ * Functions to create various Ajax commands.
  *
  * These functions can be used to create arrays for use with the
  * ajax_render() function.
  */
 
 /**
- * Creates a Drupal AJAX 'alert' command.
+ * Creates a Drupal Ajax 'alert' command.
  *
  * The 'alert' command instructs the client to display a JavaScript alert
  * dialog box.
@@ -727,7 +757,7 @@ function ajax_command_alert($text) {
 }
 
 /**
- * Creates a Drupal AJAX 'insert' command using the method in #ajax['method'].
+ * Creates a Drupal Ajax 'insert' command using the method in #ajax['method'].
  *
  * This command instructs the client to insert the given HTML using whichever
  * jQuery DOM manipulation method has been specified in the #ajax['method']
@@ -758,7 +788,7 @@ function ajax_command_insert($selector, $html, $settings = NULL) {
 }
 
 /**
- * Creates a Drupal AJAX 'insert/replaceWith' command.
+ * Creates a Drupal Ajax 'insert/replaceWith' command.
  *
  * The 'insert/replaceWith' command instructs the client to use jQuery's
  * replaceWith() method to replace each element matched matched by the given
@@ -791,7 +821,7 @@ function ajax_command_replace($selector, $html, $settings = NULL) {
 }
 
 /**
- * Creates a Drupal AJAX 'insert/html' command.
+ * Creates a Drupal Ajax 'insert/html' command.
  *
  * The 'insert/html' command instructs the client to use jQuery's html()
  * method to set the HTML content of each element matched by the given
@@ -824,7 +854,7 @@ function ajax_command_html($selector, $html, $settings = NULL) {
 }
 
 /**
- * Creates a Drupal AJAX 'insert/prepend' command.
+ * Creates a Drupal Ajax 'insert/prepend' command.
  *
  * The 'insert/prepend' command instructs the client to use jQuery's prepend()
  * method to prepend the given HTML content to the inside each element matched
@@ -857,10 +887,10 @@ function ajax_command_prepend($selector, $html, $settings = NULL) {
 }
 
 /**
- * Creates a Drupal AJAX 'insert/append' command.
+ * Creates a Drupal Ajax 'insert/append' command.
  *
  * The 'insert/append' command instructs the client to use jQuery's append()
- * method to append the given HTML content to the inside each element matched
+ * method to append the given HTML content to the inside of each element matched
  * by the given selector.
  *
  * This command is implemented by Drupal.ajax.prototype.commands.insert()
@@ -890,7 +920,7 @@ function ajax_command_append($selector, $html, $settings = NULL) {
 }
 
 /**
- * Creates a Drupal AJAX 'insert/after' command.
+ * Creates a Drupal Ajax 'insert/after' command.
  *
  * The 'insert/after' command instructs the client to use jQuery's after()
  * method to insert the given HTML content after each element matched by
@@ -923,7 +953,7 @@ function ajax_command_after($selector, $html, $settings = NULL) {
 }
 
 /**
- * Creates a Drupal AJAX 'insert/before' command.
+ * Creates a Drupal Ajax 'insert/before' command.
  *
  * The 'insert/before' command instructs the client to use jQuery's before()
  * method to insert the given HTML content before each of elements matched by
@@ -956,7 +986,7 @@ function ajax_command_before($selector, $html, $settings = NULL) {
 }
 
 /**
- * Creates a Drupal AJAX 'remove' command.
+ * Creates a Drupal Ajax 'remove' command.
  *
  * The 'remove' command instructs the client to use jQuery's remove() method
  * to remove each of elements matched by the given selector, and everything
@@ -982,7 +1012,7 @@ function ajax_command_remove($selector) {
 }
 
 /**
- * Creates a Drupal AJAX 'changed' command.
+ * Creates a Drupal Ajax 'changed' command.
  *
  * This command instructs the client to mark each of the elements matched by the
  * given selector as 'ajax-changed'.
@@ -1009,7 +1039,7 @@ function ajax_command_changed($selector, $asterisk = '') {
 }
 
 /**
- * Creates a Drupal AJAX 'css' command.
+ * Creates a Drupal Ajax 'css' command.
  *
  * The 'css' command will instruct the client to use the jQuery css() method
  * to apply the CSS arguments to elements matched by the given selector.
@@ -1037,7 +1067,7 @@ function ajax_command_css($selector, $argument) {
 }
 
 /**
- * Creates a Drupal AJAX 'settings' command.
+ * Creates a Drupal Ajax 'settings' command.
  *
  * The 'settings' command instructs the client either to use the given array as
  * the settings for ajax-loaded content or to extend Drupal.settings with the
@@ -1068,7 +1098,7 @@ function ajax_command_settings($argument, $merge = FALSE) {
 }
 
 /**
- * Creates a Drupal AJAX 'data' command.
+ * Creates a Drupal Ajax 'data' command.
  *
  * The 'data' command instructs the client to attach the name=value pair of
  * data to the selector via jQuery's data cache.
@@ -1100,7 +1130,7 @@ function ajax_command_data($selector, $name, $value) {
 }
 
 /**
- * Creates a Drupal AJAX 'invoke' command.
+ * Creates a Drupal Ajax 'invoke' command.
  *
  * The 'invoke' command will instruct the client to invoke the given jQuery
  * method with the supplied arguments on the elements matched by the given
@@ -1131,7 +1161,7 @@ function ajax_command_invoke($selector, $method, array $arguments = array()) {
 }
 
 /**
- * Creates a Drupal AJAX 'restripe' command.
+ * Creates a Drupal Ajax 'restripe' command.
  *
  * The 'restripe' command instructs the client to restripe a table. This is
  * usually used after a table has been modified by a replace or append command.
diff --git a/includes/archiver.inc b/includes/archiver.inc
index 5e6ef32..fec053b 100644
--- a/includes/archiver.inc
+++ b/includes/archiver.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/authorize.inc b/includes/authorize.inc
index a1e8a7b..3617d7d 100644
--- a/includes/authorize.inc
+++ b/includes/authorize.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -160,7 +159,7 @@ function _authorize_filetransfer_connection_settings($backend) {
  * Therefore, to properly add defaults, we need to walk through all the
  * children form elements and process those defaults recursively.
  *
- * @param &$element
+ * @param $element
  *   Reference to the Form API form element we're operating on.
  * @param $key
  *   The key for our current form element, if any.
diff --git a/includes/batch.inc b/includes/batch.inc
index 1510a62..7011abf 100644
--- a/includes/batch.inc
+++ b/includes/batch.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 
 /**
diff --git a/includes/batch.queue.inc b/includes/batch.queue.inc
index ee72146..8464836 100644
--- a/includes/batch.queue.inc
+++ b/includes/batch.queue.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 
 /**
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index fb73528..b70149c 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -9,7 +8,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '7.1');
+define('VERSION', '7.2');
 
 /**
  * Core API compatibility.
@@ -1222,185 +1221,64 @@ function drupal_unpack($obj, $field = 'data') {
 /**
  * Translates a string to the current language or to a given language.
  *
- * All human-readable text that will be displayed on the site or sent to a user
- * should be passed through the t() function. This ensures that sites can be
- * fully translated into other languages.
- *
- * Here are some examples of translating static text using t():
- * @code
- *   if (!$info || !$info['extension']) {
- *     form_set_error('picture_upload', t('The uploaded file was not an image.'));
- *   }
- *
- *   $form['submit'] = array(
- *     '#type' => 'submit',
- *     '#value' => t('Log in'),
- *   );
- * @endcode
- *
- * In addition to translating static text, t() can handle text that should not
- * be translated or that might change from time to time (such as link paths)
- * and dynamic text from variables, using special "placeholders". There are
- * three styles of placeholders:
- * - !variable: Indicates that the text should be inserted as-is. This is
- *   useful for inserting variables into things like e-mail. Example:
- *   @code
- *     $message[] = t("If you don't want to receive such e-mails, you can change your settings at !url.", array('!url' => url("user/$account->uid", array('absolute' => TRUE))));
- *   @endcode
- * - @variable: Indicates that the text should be run through check_plain(), to
- *   escape HTML characters. Use this for any output that is displayed within a
- *   Drupal page. Example:
- *   @code
- *     drupal_set_title($title = t("@name's blog", array('@name' => format_username($account))), PASS_THROUGH);
- *   @endcode
- * - %variable: Indicates that the string should be HTML-escaped and highlighted
- *   with drupal_placeholder(), which shows up as <em>emphasized</em>.
- *   @code
- *     $message = t('%name-from sent %name-to an e-mail.', array('%name-from' => format_username($user), '%name-to' => format_username($account)));
- *   @endcode
- *
- * When using t(), try to put entire paragraphs in one t() call. This makes it
- * easier for translators, as it provides context as to what each word refers
- * to (and also allows translators to adjust word order, which may not be the
- * same in all languages). HTML markup within translation strings is allowed,
- * but should be avoided if possible. The exception is embedded links: link
- * titles add context for translators and need to be translated, so they should
- * be kept in the main string, while link URLs should be generated using
- * placeholders.
- * - Incorrect HTML in t():
- *   @code
- *     $output .= t('<p>Go to the @contact-page.</p>', array('@contact-page' => l(t('contact page'), 'contact')));
- *   @endcode
- * - Correct HTML in t():
- *   @code
- *     $output .= '<p>' . t('Go to the <a href="@contact-page">contact page</a>.', array('@contact-page' => url('contact'))) . '</p>';
- *   @endcode
- *
- * Another thing that is helpful is to avoid escaping quotation marks wherever
- * possible, because it can be confusing to translation teams.
- * - Less desirable quotation mark escaping:
- *   @code
- *     $output .= t('Don\'t click me.');
- *   @endcode
- * - Better way to use quotation marks:
- *   @code
- *     $output .= t("Don't click me.");
- *   @endcode
- *
- * It is important that all translation uses the t() mechanism, because in
- * addition to actually translating the text at run-time, the t() function is
- * also used by text-extraction routines to find text that needs to be
- * translated, and build databases of text to be translated for translation
- * teams. For that reason, you must put the actual string into the t() function,
- * in most cases, and not a variable.
- * - Incorrect use of a variable in t():
- *   @code
- *     $message = 'An error occurred.';
- *     drupal_set_message(t($message), 'error');
- *     $output .= t($message);
- *   @endcode
- * - Correct translation of a variable with t():
- *   @code
- *     $message = t('An error occurred.');
- *     drupal_set_message($message, 'error');
- *     $output .= $message;
- *   @endcode
- *
- * The only case in which variables can be passed safely through t() is when
- * code-based versions of the same strings will be passed through t() (or
- * otherwise extracted) elsewhere.
- *
- * Also, you cannot use t() early in the bootstrap process, prior to the
- * DRUPAL_BOOTSTRAP_LANGUAGE phase. The language variables will not be
- * initialized yet, so the string will not be translated into the correct
- * language. Examples of places where t() cannot be used include:
- * - In a PHP define() statement.
- * - In a hook_boot() implementation.
- *
- * In some cases, modules may include strings in code that can't use t()
- * calls. For example, a module may use an external PHP application that
- * produces strings that are loaded into variables in Drupal for output.
- * In these cases, module authors may include a dummy file that passes the
- * relevant strings through t(). This approach will allow the strings to be
- * extracted.
- *
- * Sample external (non-Drupal) code:
- * @code
- *   class Time {
- *     public $yesterday = 'Yesterday';
- *     public $today = 'Today';
- *     public $tomorrow = 'Tomorrow';
- *   }
- * @endcode
- *
- * Sample dummy file:
- * @code
- *   // Dummy function included in example.potx.inc.
- *   function example_potx() {
- *     $strings = array(
- *       t('Yesterday'),
- *       t('Today'),
- *       t('Tomorrow'),
- *     );
- *     // No return value needed, since this is a dummy function.
- *   }
- * @endcode
- *
- * Having passed strings through t() in a dummy function, it is then
- * possible to pass variables through t():
- * @code
- *   $time = new Time();
- *   $output .= t($time->today);
- * @endcode
- *
- * However tempting it is, custom data from user input or other non-code
- * sources should not be passed through t(). Doing so leads to the following
- * problems and errors:
- *  - The t() system doesn't support updates to existing strings. When user
- *    data is updated, the next time it's passed through t(), a new record is
- *    created instead of an update. The database bloats over time and any
- *    existing translations are orphaned with each update.
- *  - The t() system assumes any data it receives is in English. User data may
- *    be in another language, producing translation errors.
- *  - The "Built-in interface" text group in the locale system is used to
- *    produce translations for storage in .po files. When non-code strings are
- *    passed through t(), they are added to this text group, which is rendered
- *    inaccurate since it is a mix of actual interface strings and various user
- *    input strings of uncertain origin.
- * Instead, translation of these data can be done through the locale system,
- * either directly through hook_local() or through helper functions provided by
- * contributed modules.
- *
- * Incorrect:
+ * The t() function serves two purposes. First, at run-time it translates
+ * user-visible text into the appropriate language. Second, various mechanisms
+ * that figure out what text needs to be translated work off t() -- the text
+ * inside t() calls is added to the database of strings to be translated. So,
+ * to enable a fully-translatable site, it is important that all human-readable
+ * text that will be displayed on the site or sent to a user is passed through
+ * the t() function, or a related function. See the
+ * @link http://drupal.org/node/322729 Localization API @endlink pages for
+ * more information, including recommendations on how to break up or not
+ * break up strings for translation.
+ *
+ * You should never use t() to translate variables, such as calling
+ * @code t($text); @endcode, unless the text that the variable holds has been
+ * passed through t() elsewhere (e.g., $text is one of several translated
+ * literal strings in an array). It is especially important never to call
+ * @code t($user_text); @endcode, where $user_text is some text that a user
+ * entered - doing that can lead to cross-site scripting and other security
+ * problems. However, you can use variable substitution in your string, to put
+ * variable text such as user names or link URLs into translated text. Variable
+ * substitution looks like this:
  * @code
- *   $item = item_load();
- *   $output .= check_plain(t($item['title']));
+ * $text = t("@name's blog", array('@name' => format_username($account)));
  * @endcode
+ * Basically, you can put variables like @name into your string, and t() will
+ * substitute their sanitized values at translation time (see $args below or
+ * the Localization API pages referenced above for details). Translators can
+ * then rearrange the string as necessary for the language (e.g., in Spanish,
+ * it might be "blog de @name").
  *
- * During installation, st() is used in place of t(). Code that may be called
- * during installation or during normal operation should use the get_t()
- * helper function.
+ * During the Drupal installation phase, some resources used by t() wil not be
+ * available to code that needs localization. See st() and get_t() for
+ * alternatives.
  *
  * @param $string
  *   A string containing the English string to translate.
  * @param $args
- *   An associative array of replacements to make after translation. Incidences
- *   of any key in this array are replaced with the corresponding value. Based
- *   on the first character of the key, the value is escaped and/or themed:
- *    - !variable: inserted as is
- *    - @variable: escape plain text to HTML (using check_plain())
- *    - %variable: escape text and theme as a placeholder for user-submitted
- *      content (using check_plain() + drupal_placeholder())
+ *   An associative array of replacements to make after translation.
+ *   Occurrences in $string of any key in $args are replaced with the
+ *   corresponding value, after sanitization. The sanitization function depends
+ *   on the first character of the key:
+ *   - !variable: Inserted as is. Use this for text that has already been
+ *     sanitized.
+ *   - @variable: Escaped to HTML using check_plain(). Use this for anything
+ *     displayed on a page on the site.
+ *   - %variable: Escaped as a placeholder for user-submitted content using
+ *     drupal_placeholder(), which shows up as <em>emphasized</em> text.
  * @param $options
- *   An associative array of additional options, with the following keys:
- *     - 'langcode' (defaults to the current language) The language code to
- *       translate to a language other than what is used to display the page.
- *     - 'context' (defaults to the empty context) The context the source string
- *       belongs to.
+ *   An associative array of additional options, with the following elements:
+ *   - 'langcode' (defaults to the current language): The language code to
+ *     translate to a language other than what is used to display the page.
+ *   - 'context' (defaults to the empty context): The context the source string
+ *     belongs to.
  *
  * @return
  *   The translated string.
  *
+ * @see st()
+ * @see get_t()
  * @ingroup sanitization
  */
 function t($string, array $args = array(), array $options = array()) {
@@ -1547,7 +1425,7 @@ function request_uri() {
  *   The exception that is going to be logged.
  * @param $message
  *   The message to store in the log. If empty, a text that contains all useful
- *   information about the passed in exception is used.
+ *   information about the passed-in exception is used.
  * @param $variables
  *   Array of variables to replace in the message on display. Defaults to the
  *   return value of drupal_decode_exception().
@@ -1643,8 +1521,8 @@ function watchdog($type, $message, $variables = array(), $severity = WATCHDOG_NO
  * messages without clearing them.
  *
  * @param $message
- *   The message should begin with a capital letter and always ends with a
- *   period '.'.
+ *   The message to be displayed to the user. For consistency with other
+ *   messages, it should begin with a capital letter and end with a period.
  * @param $type
  *   The type of the message. One of the following values are possible:
  *   - 'status'
@@ -2363,8 +2241,30 @@ function drupal_installation_attempted() {
 }
 
 /**
- * Return the name of the localization function. Use in code that needs to
- * run both during installation and normal operation.
+ * Returns the name of the proper localization function.
+ *
+ * get_t() exists to support localization for code that might run during
+ * the installation phase, when some elements of the system might not have
+ * loaded.
+ *
+ * This would include implementations of hook_install(), which could run
+ * during the Drupal installation phase, and might also be run during
+ * non-installation time, such as while installing the module from the the
+ * module administration page.
+ *
+ * Example useage:
+ * @code
+ *   $t = get_t();
+ *   $translated = $t('translate this');
+ * @endcode
+ *
+ * Use t() if your code will never run during the Drupal installation phase.
+ * Use st() if your code will only run during installation and never any other
+ * time. Use get_t() if your code could run in either circumstance.
+ *
+ * @see t()
+ * @see st()
+ * @ingroup sanitization
  */
 function get_t() {
   static $t;
@@ -2420,6 +2320,9 @@ function drupal_language_types() {
  * Return true if there is more than one language enabled.
  */
 function drupal_multilingual() {
+  // The "language_count" variable stores the number of enabled languages to
+  // avoid unnecessarily querying the database when building the list of
+  // enabled languages on monolingual sites.
   return variable_get('language_count', 1) > 1;
 }
 
@@ -2491,6 +2394,8 @@ function language_default($property = NULL) {
  *   base_path() returns "/drupalfolder/".
  * - http://example.com/path/alias (which is a path alias for node/306) returns
  *   "path/alias" as opposed to the internal path.
+ * - http://example.com/index.php returns an empty string (meaning: front page).
+ * - http://example.com/index.php?page=1 returns an empty string.
  *
  * @return
  *   The requested Drupal URL path.
@@ -2512,11 +2417,19 @@ function request_path() {
     $path = $_GET['q'];
   }
   elseif (isset($_SERVER['REQUEST_URI'])) {
-    // This is a request using a clean URL. Extract the path from REQUEST_URI.
+    // This request is either a clean URL, or 'index.php', or nonsense.
+    // Extract the path from REQUEST_URI.
     $request_path = strtok($_SERVER['REQUEST_URI'], '?');
     $base_path_len = strlen(rtrim(dirname($_SERVER['SCRIPT_NAME']), '\/'));
     // Unescape and strip $base_path prefix, leaving q without a leading slash.
     $path = substr(urldecode($request_path), $base_path_len + 1);
+    // If the path equals the script filename, either because 'index.php' was
+    // explicitly provided in the URL, or because the server added it to
+    // $_SERVER['REQUEST_URI'] even when it wasn't provided in the URL (some
+    // versions of Microsoft IIS do this), the front page should be served.
+    if ($path == basename($_SERVER['PHP_SELF'])) {
+      $path = '';
+    }
   }
   else {
     // This is the front page.
diff --git a/includes/cache-install.inc b/includes/cache-install.inc
index 545f1a2..d9bb0f9 100644
--- a/includes/cache-install.inc
+++ b/includes/cache-install.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -31,7 +30,7 @@ class DrupalFakeCache extends DrupalDatabaseCache implements DrupalCacheInterfac
     // If there is a database cache, attempt to clear it whenever possible. The
     // reason for doing this is that the database cache can accumulate data
     // during installation due to any full bootstraps that may occur at the
-    // same time (for example, AJAX requests triggered by the installer). If we
+    // same time (for example, Ajax requests triggered by the installer). If we
     // didn't try to clear it whenever this function is called, the data in the
     // cache would become stale; for example, the installer sometimes calls
     // variable_set(), which updates the {variable} table and then clears the
diff --git a/includes/cache.inc b/includes/cache.inc
index 2163061..8666874 100644
--- a/includes/cache.inc
+++ b/includes/cache.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Get the cache object for a cache bin.
@@ -325,10 +324,15 @@ class DrupalDatabaseCache implements DrupalCacheInterface {
     try {
       // Garbage collection necessary when enforcing a minimum cache lifetime.
       $this->garbageCollection($this->bin);
-      $query = db_select($this->bin);
-      $query->fields($this->bin, array('cid', 'data', 'created', 'expire', 'serialized'));
-      $query->condition($this->bin . '.cid', $cids, 'IN');
-      $result = $query->execute();
+
+      // When serving cached pages, the overhead of using db_select() was found
+      // to add around 30% overhead to the request. Since $this->bin is a
+      // variable, this means the call to db_query() here uses a concatenated
+      // string. This is highly discouraged under any other circumstances, and
+      // is used here only due to the performance overhead we would incur
+      // otherwise. When serving an uncached page, the overhead of using
+      // db_select() is a much smaller proportion of the request.
+      $result = db_query('SELECT cid, data, created, expire, serialized FROM {' . db_escape_table($this->bin) . '} WHERE cid IN (:cids)', array(':cids' => $cids));
       $cache = array();
       foreach ($result as $item) {
         $item = $this->prepareItem($item);
diff --git a/includes/common.inc b/includes/common.inc
index 03b0de4..5dadb4d 100644
--- a/includes/common.inc
+++ b/includes/common.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -915,7 +914,9 @@ function drupal_http_request($url, array $options = array()) {
     return $result;
   }
   // Parse response headers from the response body.
-  list($response, $result->data) = explode("\r\n\r\n", $response, 2);
+  // Be tolerant of malformed HTTP responses that separate header and body with
+  // \n\n or \r\r instead of \r\n\r\n.
+  list($response, $result->data) = preg_split("/\r\n\r\n|\n\n|\r\r/", $response, 2);
   $response = preg_split("/\r\n|\n|\r/", $response);
 
   // Parse the response status line.
@@ -1050,15 +1051,15 @@ function _fix_gpc_magic_files(&$item, $key) {
  * Fix double-escaping problems caused by "magic quotes" in some PHP installations.
  */
 function fix_gpc_magic() {
-  $fixed = &drupal_static(__FUNCTION__, FALSE);
+  static $fixed = FALSE;
   if (!$fixed && ini_get('magic_quotes_gpc')) {
     array_walk($_GET, '_fix_gpc_magic');
     array_walk($_POST, '_fix_gpc_magic');
     array_walk($_COOKIE, '_fix_gpc_magic');
     array_walk($_REQUEST, '_fix_gpc_magic');
     array_walk($_FILES, '_fix_gpc_magic_files');
-    $fixed = TRUE;
   }
+  $fixed = TRUE;
 }
 
 /**
@@ -1974,7 +1975,7 @@ function _format_date_callback(array $matches = NULL, $new_langcode = NULL) {
 /**
  * Format a username.
  *
- * By default, the passed in object's 'name' property is used if it exists, or
+ * By default, the passed-in object's 'name' property is used if it exists, or
  * else, the site-defined value for the 'anonymous' variable. However, a module
  * may override this by implementing hook_username_alter(&$name, $account).
  *
@@ -2238,7 +2239,7 @@ function drupal_http_header_attributes(array $attributes = array()) {
  *   drupal_attributes(array('title' => t('<script>steal_cookie();</script>')));
  *
  *   // The statement below demonstrates dangerous use of drupal_attributes, and
- *   // will return an onmouseout attribute with javascript code that, when used
+ *   // will return an onmouseout attribute with JavaScript code that, when used
  *   // as attribute in a tag, will cause users to be redirected to another site.
  *   //
  *   // In this case, the 'onmouseout' attribute should not be whitelisted --
@@ -2383,9 +2384,9 @@ function l($text, $path, array $options = array()) {
  * basis in hook_page_delivery_callback_alter().
  *
  * For example, the same page callback function can be used for an HTML
- * version of the page and an AJAX version of the page. The page callback
+ * version of the page and an Ajax version of the page. The page callback
  * function just needs to decide what content is to be returned and the
- * delivery callback function will send it as an HTML page or an AJAX
+ * delivery callback function will send it as an HTML page or an Ajax
  * response, as appropriate.
  *
  * In order for page callbacks to be reusable in different delivery formats,
@@ -2602,7 +2603,8 @@ function drupal_exit($destination = NULL) {
  *   A linear array.
  * @param $function
  *   A name of a function to apply to all values before output.
- * @result
+ *
+ * @return
  *   An associative array.
  */
 function drupal_map_assoc($array, $function = NULL) {
@@ -3543,7 +3545,7 @@ function drupal_load_stylesheet_content($contents, $optimize = FALSE) {
     // There are different conditions for removing leading and trailing
     // whitespace.
     // @see http://php.net/manual/en/regexp.reference.subpatterns.php
-    $contents = preg_replace_callback('<
+    $contents = preg_replace('<
       # Strip leading and trailing whitespace.
         \s*([@{};,])\s*
       # Strip only leading whitespace from:
@@ -3554,7 +3556,10 @@ function drupal_load_stylesheet_content($contents, $optimize = FALSE) {
       # - Colon: Retain :pseudo-selectors.
       | ([\(:])\s+
     >xS',
-      '_drupal_load_stylesheet_content',
+      // Only one of the three capturing groups will match, so its reference
+      // will contain the wanted value and the references for the
+      // two non-matching groups will be replaced with empty strings.
+      '$1$2$3',
       $contents
     );
     // End the file with a new line.
@@ -3569,16 +3574,6 @@ function drupal_load_stylesheet_content($contents, $optimize = FALSE) {
 }
 
 /**
- * Helper for drupal_load_stylesheet_content().
- */
-function _drupal_load_stylesheet_content($matches) {
-  // Discard the full match.
-  unset($matches[0]);
-  // Use the non-empty match.
-  return current(array_filter($matches));
-}
-
-/**
  * Loads stylesheets recursively and returns contents with corrected paths.
  *
  * This function is used for recursive loading of stylesheets and
@@ -3672,17 +3667,17 @@ function drupal_html_class($class) {
  * blocks, and other content to be output multiple times on the same page,
  * without breaking (X)HTML validation.
  *
- * For already existing ids, a counter is appended to the id string. Therefore,
+ * For already existing IDs, a counter is appended to the ID string. Therefore,
  * JavaScript and CSS code should not rely on any value that was generated by
  * this function and instead should rely on manually added CSS classes or
  * similarly reliable constructs.
  *
- * Two consecutive hyphens separate the counter from the original id. To manage
- * uniqueness across multiple AJAX requests on the same page, AJAX requests
+ * Two consecutive hyphens separate the counter from the original ID. To manage
+ * uniqueness across multiple Ajax requests on the same page, Ajax requests
  * POST an array of all IDs currently present on the page, which are used to
  * prime this function's cache upon first invocation.
  *
- * To allow reverse-parsing of ids submitted via AJAX, any multiple consecutive
+ * To allow reverse-parsing of IDs submitted via Ajax, any multiple consecutive
  * hyphens in the originally passed $id are replaced with a single hyphen.
  *
  * @param $id
@@ -3692,10 +3687,10 @@ function drupal_html_class($class) {
  *   The cleaned ID.
  */
 function drupal_html_id($id) {
-  // If this is an AJAX request, then content returned by this page request will
-  // be merged with content already on the base page. The HTML ids must be
+  // If this is an Ajax request, then content returned by this page request will
+  // be merged with content already on the base page. The HTML IDs must be
   // unique for the fully merged content. Therefore, initialize $seen_ids to
-  // take into account ids that are already in use on the base page.
+  // take into account IDs that are already in use on the base page.
   $seen_ids_init = &drupal_static(__FUNCTION__ . ':init');
   if (!isset($seen_ids_init)) {
     // Ideally, Drupal would provide an API to persist state information about
@@ -3703,7 +3698,7 @@ function drupal_html_id($id) {
     // function's $seen_ids static variable to that state information in order
     // to have it properly initialized for this page request. However, no such
     // page state API exists, so instead, ajax.js adds all of the in-use HTML
-    // ids to the POST data of AJAX submissions. Direct use of $_POST is
+    // IDs to the POST data of Ajax submissions. Direct use of $_POST is
     // normally not recommended as it could open up security risks, but because
     // the raw POST data is cast to a number before being returned by this
     // function, this usage is safe.
@@ -3750,7 +3745,7 @@ function drupal_html_id($id) {
   // The counter needs to be appended with a delimiter that does not exist in
   // the base ID. Requiring a unique delimiter helps ensure that we really do
   // return unique IDs and also helps us re-create the $seen_ids array during
-  // AJAX requests.
+  // Ajax requests.
   if (isset($seen_ids[$id])) {
     $id = $id . '--' . ++$seen_ids[$id];
   }
@@ -3768,7 +3763,7 @@ function drupal_html_id($id) {
  * page region that is output by the theme (Drupal core already handles this in
  * the standard template preprocess implementation). Standardizing the class
  * names in this way allows modules to implement certain features, such as
- * drag-and-drop or dynamic AJAX loading, in a theme-independent way.
+ * drag-and-drop or dynamic Ajax loading, in a theme-independent way.
  *
  * @param $region
  *   The name of the page region (for example, 'page_top' or 'content').
@@ -3953,12 +3948,17 @@ function drupal_add_js($data = NULL, $options = NULL) {
 
   if (isset($data)) {
     // Add jquery.js and drupal.js, as well as the basePath setting, the
-    // first time a Javascript file is added.
+    // first time a JavaScript file is added.
     if (empty($javascript)) {
+      // url() generates the prefix using hook_url_outbound_alter(). Instead of
+      // running the hook_url_outbound_alter() again here, extract the prefix
+      // from url().
+      url('', array('prefix' => &$prefix));
       $javascript = array(
         'settings' => array(
           'data' => array(
             array('basePath' => base_path()),
+            array('pathPrefix' => empty($prefix) ? '' : $prefix),
           ),
           'type' => 'setting',
           'scope' => 'header',
@@ -3996,7 +3996,7 @@ function drupal_add_js($data = NULL, $options = NULL) {
 
       default: // 'file' and 'external'
         // Local and external files must keep their name as the associative key
-        // so the same JavaScript file is not be added twice.
+        // so the same JavaScript file is not added twice.
         $javascript[$options['data']] = $options;
     }
   }
@@ -4094,13 +4094,13 @@ function drupal_get_js($scope = 'header', $javascript = NULL, $skip_alter = FALS
   // page request.
   $default_query_string = variable_get('css_js_query_string', '0');
 
-  // For inline Javascript to validate as XHTML, all Javascript containing
+  // For inline JavaScript to validate as XHTML, all JavaScript containing
   // XHTML needs to be wrapped in CDATA. To make that backwards compatible
   // with HTML 4, we need to comment out the CDATA-tag.
   $embed_prefix = "\n<!--//--><![CDATA[//><!--\n";
   $embed_suffix = "\n//--><!]]>\n";
 
-  // Since Javascript may look for arguments in the url and act on them, some
+  // Since JavaScript may look for arguments in the URL and act on them, some
   // third-party code might require the use of a different query string.
   $js_version_string = variable_get('drupal_js_version_query_string', 'v=');
 
@@ -4318,7 +4318,7 @@ function drupal_process_attached($elements, $group = JS_DEFAULT, $dependency_che
   }
 
   // Add additional types of attachments specified in the render() structure.
-  // Libraries, Javascript and CSS have been added already, as they require
+  // Libraries, JavaScript and CSS have been added already, as they require
   // special handling.
   foreach ($elements['#attached'] as $callback => $options) {
     if (function_exists($callback)) {
@@ -4785,7 +4785,7 @@ function drupal_clear_js_cache() {
 }
 
 /**
- * Converts a PHP variable into its Javascript equivalent.
+ * Converts a PHP variable into its JavaScript equivalent.
  *
  * We use HTML-safe strings, i.e. with <, > and & escaped.
  *
@@ -4881,12 +4881,12 @@ function drupal_valid_token($token, $value = '', $skip_anonymous = FALSE) {
 }
 
 function _drupal_bootstrap_full() {
-  $called = &drupal_static(__FUNCTION__);
+  static $called = FALSE;
 
   if ($called) {
     return;
   }
-  $called = 1;
+  $called = TRUE;
   require_once DRUPAL_ROOT . '/' . variable_get('path_inc', 'includes/path.inc');
   require_once DRUPAL_ROOT . '/includes/theme.inc';
   require_once DRUPAL_ROOT . '/includes/pager.inc';
@@ -5235,7 +5235,7 @@ function drupal_set_page_content($content = NULL) {
  *     browsers, '#browsers' can be set to array('IE' => 'gte IE 8').
  *
  * @return
- *   The passed in element with markup for conditional comments potentially
+ *   The passed-in element with markup for conditional comments potentially
  *   added to '#prefix' and '#suffix'.
  */
 function drupal_pre_render_conditional_comments($elements) {
@@ -5297,7 +5297,7 @@ function drupal_pre_render_conditional_comments($elements) {
  *   - #options: (optional) An array of options to pass to l().
  *
  * @return
- *   The passed in elements containing a rendered link in '#markup'.
+ *   The passed-in elements containing a rendered link in '#markup'.
  */
 function drupal_pre_render_link($element) {
   // By default, link options to pass to l() are normally set in #options.
@@ -5327,7 +5327,7 @@ function drupal_pre_render_link($element) {
     if (!isset($element['#id'])) {
       $element['#id'] = $element['#options']['attributes']['id'] = drupal_html_id('ajax-link');
     }
-    // If #ajax['path] was not specified, use the href as AJAX request URL.
+    // If #ajax['path] was not specified, use the href as Ajax request URL.
     if (!isset($element['#ajax']['path'])) {
       $element['#ajax']['path'] = $element['#href'];
       $element['#ajax']['options'] = $element['#options'];
@@ -5444,7 +5444,7 @@ function drupal_pre_render_links($element) {
  *   A structured array using the #markup key.
  *
  * @return
- *   The passed in elements, but #markup appended to #children.
+ *   The passed-in elements, but #markup appended to #children.
  */
 function drupal_pre_render_markup($elements) {
   $elements['#children'] = $elements['#markup'];
@@ -5575,9 +5575,9 @@ function drupal_render(&$elements) {
     return $cached_output;
   }
 
-  // If #markup is not empty, set #type. This allows to specify just #markup on
-  // an element without setting #type.
-  if (!empty($elements['#markup']) && !isset($elements['#type'])) {
+  // If #markup is set, ensure #type is set. This allows to specify just #markup
+  // on an element without setting #type.
+  if (isset($elements['#markup']) && !isset($elements['#type'])) {
     $elements['#type'] = 'markup';
   }
 
@@ -5694,13 +5694,17 @@ function drupal_render_children(&$element, $children_keys = NULL) {
 }
 
 /**
- * Render and print an element.
+ * Render an element.
  *
  * This function renders an element using drupal_render(). The top level
- * element is always rendered even if hide() had been previously used on it.
+ * element is shown with show() before rendering, so it will always be rendered
+ * even if hide() had been previously used on it.
  *
- * Any nested elements are only rendered if they haven't been rendered before
- * or if they have been re-enabled with show().
+ * @param $element
+ *   The element to be rendered.
+ *
+ * @return
+ *   The rendered element.
  *
  * @see drupal_render()
  * @see show()
@@ -5721,6 +5725,21 @@ function render(&$element) {
 /**
  * Hide an element from later rendering.
  *
+ * The first time render() or drupal_render() is called on an element tree,
+ * as each element in the tree is rendered, it is marked with a #printed flag
+ * and the rendered children of the element are cached. Subsequent calls to
+ * render() or drupal_render() will not traverse the child tree of this element
+ * again: they will just use the cached children. So if you want to hide an
+ * element, be sure to call hide() on the element before its parent tree is
+ * rendered for the first time, as it will have no effect on subsequent
+ * renderings of the parent tree.
+ *
+ * @param $element
+ *   The element to be hidden.
+ *
+ * @return
+ *   The element.
+ *
  * @see render()
  * @see show()
  */
@@ -5730,10 +5749,25 @@ function hide(&$element) {
 }
 
 /**
- * Show a hidden or already printed element from later rendering.
+ * Show a hidden element for later rendering.
+ *
+ * You can also use render($element), which shows the element while rendering
+ * it.
+ *
+ * The first time render() or drupal_render() is called on an element tree,
+ * as each element in the tree is rendered, it is marked with a #printed flag
+ * and the rendered children of the element are cached. Subsequent calls to
+ * render() or drupal_render() will not traverse the child tree of this element
+ * again: they will just use the cached children. So if you want to show an
+ * element, be sure to call show() on the element before its parent tree is
+ * rendered for the first time, as it will have no effect on subsequent
+ * renderings of the parent tree.
+ *
+ * @param $element
+ *   The element to be shown.
  *
- * Alternatively, render($element) could be used which automatically shows the
- * element while rendering it.
+ * @return
+ *   The element.
  *
  * @see render()
  * @see hide()
@@ -5800,8 +5834,9 @@ function drupal_render_cache_set(&$markup, $elements) {
   // be retrieved and used.
   $data['#markup'] = &$markup;
   // Persist attached data associated with this element.
-  if (isset($elements['#attached'])) {
-    $data['#attached'] = $elements['#attached'];
+  $attached = drupal_render_collect_attached($elements, TRUE);
+  if ($attached) {
+    $data['#attached'] = $attached;
   }
   $bin = isset($elements['#cache']['bin']) ? $elements['#cache']['bin'] : 'cache';
   $expire = isset($elements['#cache']['expire']) ? $elements['#cache']['expire'] : CACHE_PERMANENT;
@@ -5809,6 +5844,49 @@ function drupal_render_cache_set(&$markup, $elements) {
 }
 
 /**
+ * Collect #attached for an element and all child elements into a single array.
+ *
+ * When caching elements, it is necessary to collect all libraries, JavaScript
+ * and CSS into a single array, from both the element itself and all child
+ * elements. This allows drupal_render() to add these back to the page when the
+ * element is returned from cache.
+ *
+ * @param $elements
+ *   The element to collect #attached from.
+ * @param $return
+ *   Whether to return the attached elements and reset the internal static.
+ *
+ * @return
+ *   The #attached array for this element and its descendants.
+ */
+function drupal_render_collect_attached($elements, $return = FALSE) {
+  $attached = &drupal_static(__FUNCTION__, array());
+
+  // Collect all #attached for this element.
+  if (isset($elements['#attached'])) {
+    foreach ($elements['#attached'] as $key => $value) {
+      if (!isset($attached[$key])) {
+        $attached[$key] = array();
+      }
+      $attached[$key] = array_merge($attached[$key], $value);
+    }
+  }
+  if ($children = element_children($elements)) {
+    foreach ($children as $child) {
+      drupal_render_collect_attached($elements[$child]);
+    }
+  }
+
+  // If this was the first call to the function, return all attached elements
+  // and reset the static cache.
+  if ($return) {
+    $return = $attached;
+    $attached = array();
+    return $return;
+  }
+}
+
+/**
  * Prepare an element for caching based on a query. This smart caching strategy
  * saves Drupal from querying and rendering to HTML when the underlying query is
  * unchanged.
@@ -5830,7 +5908,7 @@ function drupal_render_cache_set(&$markup, $elements) {
  *
  * @return
  *   A renderable array with the following keys and values:
- *   - #query: The passed in $query.
+ *   - #query: The passed-in $query.
  *   - #pre_render: $function with a _pre_render suffix.
  *   - #cache: An associative array prepared for drupal_render_cache_set().
  */
@@ -6237,7 +6315,7 @@ function drupal_array_set_nested_value(array &$array, array $parents, $value, $f
  *   The array from which to get the value.
  * @param $parents
  *   An array of parent keys of the value, starting with the outermost key.
- * @param &$key_exists
+ * @param $key_exists
  *   (optional) If given, an already defined variable that is altered by
  *   reference.
  *
@@ -6651,30 +6729,27 @@ function drupal_schema_fields_sql($table, $prefix = NULL) {
 }
 
 /**
- * Saves a record to the database based upon the schema.
- *
- * Default values are filled in for missing items, and 'serial' (auto increment)
- * types are filled in with IDs.
+ * Saves (inserts or updates) a record to the database based upon the schema.
  *
  * @param $table
  *   The name of the table; this must be defined by a hook_schema()
  *   implementation.
  * @param $record
  *   An object or array representing the record to write, passed in by
- *   reference. The function will fill in defaults from the schema and add an
- *   ID value to serial fields.
+ *   reference. If inserting a new record, values not provided in $record will
+ *   be populated in $record and in the database with the default values from
+ *   the schema, as well as a single serial (auto-increment) field (if present).
+ *   If updating an existing record, only provided values are updated in the
+ *   database, and $record is not modified.
  * @param $primary_keys
- *   If this is an update, specify the primary keys' field names. If this is a
- *   new record, you must not provide this value. If there is only 1 field in
- *   the key, you may pass in a string; if there are multiple fields in the key,
- *   pass in an array.
+ *   To indicate that this is a new record to be inserted, omit this argument.
+ *   If this is an update, this argument specifies the primary keys' field
+ *   names. If there is only 1 field in the key, you may pass in a string; if
+ *   there are multiple fields in the key, pass in an array.
  *
  * @return
- *   Failure to write a record will return FALSE. Otherwise SAVED_NEW or
- *   SAVED_UPDATED is returned depending on the operation performed. The $object
- *   parameter will contain values for any serial fields defined by the $table.
- *   For example, $record->nid or $record['nid'] will be populated after
- *   inserting a new a new node.
+ *   If the record insert or update failed, returns FALSE. If it succeeded,
+ *   returns SAVED_NEW or SAVED_UPDATED, depending on the operation performed.
  */
 function drupal_write_record($table, &$record, $primary_keys = array()) {
   // Standardize $primary_keys to an array.
@@ -6815,7 +6890,7 @@ function drupal_write_record($table, &$record, $primary_keys = array()) {
  */
 
 /**
- * Parse Drupal module and theme info file format.
+ * Parses Drupal module and theme .info files.
  *
  * Info files are NOT for placing arbitrary theme and module-specific settings.
  * Use variable_get() and variable_set() for that.
@@ -6826,35 +6901,42 @@ function drupal_write_record($table, &$record, $primary_keys = array()) {
  * - dependencies: An array of shortnames of other modules this module requires.
  * - package: The name of the package of modules this module belongs to.
  *
- * @see forum.info
+ * See forum.info for an example of a module .info file.
  *
  * Information stored in a theme .info file:
- * - name: The real name of the theme for display purposes
- * - description: Brief description
+ * - name: The real name of the theme for display purposes.
+ * - description: Brief description.
  * - screenshot: Path to screenshot relative to the theme's .info file.
  * - engine: Theme engine; typically phptemplate.
- * - base: Name of a base theme, if applicable, eg: base = zen
- * - regions: Listed regions eg: region[left] = Left sidebar
- * - features: Features available eg: features[] = logo
- * - stylesheets: Theme stylesheets eg: stylesheets[all][] = my-style.css
- * - scripts: Theme scripts eg: scripts[] = my-script.css
+ * - base: Name of a base theme, if applicable; e.g., base = zen.
+ * - regions: Listed regions; e.g., region[left] = Left sidebar.
+ * - features: Features available; e.g., features[] = logo.
+ * - stylesheets: Theme stylesheets; e.g., stylesheets[all][] = my-style.css.
+ * - scripts: Theme scripts; e.g., scripts[] = my-script.js.
  *
- * @see bartik.info
+ * See bartik.info for an example of a theme .info file.
  *
  * @param $filename
  *   The file we are parsing. Accepts file with relative or absolute path.
+ *
  * @return
  *   The info array.
  *
  * @see drupal_parse_info_format()
  */
 function drupal_parse_info_file($filename) {
-  if (!file_exists($filename)) {
-    return array();
-  }
+  $info = &drupal_static(__FUNCTION__, array());
 
-  $data = file_get_contents($filename);
-  return drupal_parse_info_format($data);
+  if (!isset($info[$filename])) {
+    if (!file_exists($filename)) {
+      $info[$filename] = array();
+    }
+    else {
+      $data = file_get_contents($filename);
+      $info[$filename] = drupal_parse_info_format($data);
+    }
+  }
+  return $info[$filename];
 }
 
 /**
@@ -7319,8 +7401,7 @@ function entity_create_stub_entity($entity_type, $ids) {
 /**
  * Load entities from the database.
  *
- * This function should be used whenever you need to load more than one entity
- * from the database. The entities are loaded into memory and will not require
+ * The entities are stored in a static memory cache, and will not require
  * database access if loaded again during the same page request.
  *
  * The actual loading is done through a class that has to implement the
@@ -7415,8 +7496,15 @@ function entity_get_controller($entity_type) {
  *   The type of entity, i.e. 'node', 'user'.
  * @param $entities
  *   The entity objects which are being prepared for view, keyed by object ID.
+ * @param $langcode
+ *   (optional) A language code to be used for rendering. Defaults to the global
+ *   content language of the current request.
  */
-function entity_prepare_view($entity_type, $entities) {
+function entity_prepare_view($entity_type, $entities, $langcode = NULL) {
+  if (!isset($langcode)) {
+    $langcode = $GLOBALS['language_content']->language;
+  }
+
   // To ensure hooks are only run once per entity, check for an
   // entity_view_prepared flag and only process items without it.
   // @todo: resolve this more generally for both entity and field level hooks.
@@ -7432,7 +7520,7 @@ function entity_prepare_view($entity_type, $entities) {
   }
 
   if (!empty($prepare)) {
-    module_invoke_all('entity_prepare_view', $prepare, $entity_type);
+    module_invoke_all('entity_prepare_view', $prepare, $entity_type, $langcode);
   }
 }
 
@@ -7507,7 +7595,7 @@ function entity_label($entity_type, $entity) {
   $label = FALSE;
   $info = entity_get_info($entity_type);
   if (isset($info['label callback']) && function_exists($info['label callback'])) {
-    $label = $info['label callback']($entity);
+    $label = $info['label callback']($entity, $entity_type);
   }
   elseif (!empty($info['entity keys']['label']) && isset($entity->{$info['entity keys']['label']})) {
     $label = $entity->{$info['entity keys']['label']};
diff --git a/includes/database/database.inc b/includes/database/database.inc
index b384afe..4cc1a33 100644
--- a/includes/database/database.inc
+++ b/includes/database/database.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -321,7 +320,7 @@ abstract class DatabaseConnection extends PDO {
    *   PDO::FETCH_OBJ, PDO::FETCH_NUM, or a string representing the name of a
    *   class. If a string is specified, each record will be fetched into a new
    *   object of that class. The behavior of all other values is defined by PDO.
-   *   See http://www.php.net/PDOStatement-fetch
+   *   See http://php.net/manual/pdostatement.fetch.php
    * - return: Depending on the type of query, different return values may be
    *   meaningful. This directive instructs the system which type of return
    *   value is desired. The system will generally set the correct value
@@ -542,6 +541,63 @@ abstract class DatabaseConnection extends PDO {
   }
 
   /**
+   * Flatten an array of query comments into a single comment string.
+   *
+   * The comment string will be sanitized to avoid SQL injection attacks.
+   *
+   * @param $comments
+   *   An array of query comment strings.
+   *
+   * @return
+   *   A sanitized comment string.
+   */
+  public function makeComment($comments) {
+    if (empty($comments))
+      return '';
+
+    // Flatten the array of comments.
+    $comment = implode('; ', $comments);
+
+    // Sanitize the comment string so as to avoid SQL injection attacks.
+    return '/* ' . $this->filterComment($comment) . ' */ ';
+  }
+
+  /**
+   * Sanitize a query comment string.
+   *
+   * Ensure a query comment does not include strings such as "* /" that might
+   * terminate the comment early. This avoids SQL injection attacks via the
+   * query comment. The comment strings in this example are separated by a
+   * space to avoid PHP parse errors.
+   *
+   * For example, the comment:
+   * @code
+   * db_update('example')
+   *  ->condition('id', $id)
+   *  ->fields(array('field2' => 10))
+   *  ->comment('Exploit * / DROP TABLE node; --')
+   *  ->execute()
+   * @endcode
+   *
+   * Would result in the following SQL statement being generated:
+   * @code
+   * "/ * Exploit * / DROP TABLE node; -- * / UPDATE example SET field2=..."
+   * @endcode
+   *
+   * Unless the comment is sanitised first, the SQL server would drop the
+   * node table and ignore the rest of the SQL statement.
+   *
+   * @param $comment
+   *   A query comment string.
+   *
+   * @return
+   *   A sanitized version of the query comment string.
+   */
+  protected function filterComment($comment = '') {
+    return preg_replace('/(\/\*\s*)|(\s*\*\/)/', '', $comment);
+  }
+
+  /**
    * Executes a query string against the database.
    *
    * This method provides a central handler for the actual execution of every
diff --git a/includes/database/log.inc b/includes/database/log.inc
index f28aadb..ec27ef8 100644
--- a/includes/database/log.inc
+++ b/includes/database/log.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/mysql/database.inc b/includes/database/mysql/database.inc
index a3d7118..262cc60 100644
--- a/includes/database/mysql/database.inc
+++ b/includes/database/mysql/database.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/mysql/install.inc b/includes/database/mysql/install.inc
index 2f83b26..75f2ae3 100644
--- a/includes/database/mysql/install.inc
+++ b/includes/database/mysql/install.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/mysql/query.inc b/includes/database/mysql/query.inc
index 584a4a4..888b6a5 100644
--- a/includes/database/mysql/query.inc
+++ b/includes/database/mysql/query.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @ingroup database
@@ -43,8 +42,8 @@ class InsertQuery_mysql extends InsertQuery {
   }
 
   public function __toString() {
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     // Default fields are always placed first for consistency.
     $insert_fields = array_merge($this->defaultFields, $this->insertFields);
@@ -93,8 +92,8 @@ class TruncateQuery_mysql extends TruncateQuery {
     // not transactional, and result in an implicit COMMIT. When we are in a
     // transaction, fallback to the slower, but transactional, DELETE.
     if ($this->connection->inTransaction()) {
-      // Create a comments string to prepend to the query.
-      $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+      // Create a comment string to prepend to the query.
+      $comments = $this->connection->makeComment($this->comments);
       return $comments . 'DELETE FROM {' . $this->connection->escapeTable($this->table) . '}';
     }
     else {
diff --git a/includes/database/mysql/schema.inc b/includes/database/mysql/schema.inc
index 01933da..4e88fa1 100644
--- a/includes/database/mysql/schema.inc
+++ b/includes/database/mysql/schema.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/pgsql/database.inc b/includes/database/pgsql/database.inc
index d38b64a..98b954f 100644
--- a/includes/database/pgsql/database.inc
+++ b/includes/database/pgsql/database.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -35,6 +34,15 @@ class DatabaseConnection_pgsql extends DatabaseConnection {
     if (empty($connection_options['password'])) {
       $connection_options['password'] = NULL;
     }
+    // If the password contains a backslash it is treated as an escape character
+    // http://bugs.php.net/bug.php?id=53217
+    // so backslashes in the password need to be doubled up.
+    // The bug was reported against pdo_pgsql 1.0.2, backslashes in passwords
+    // will break on this doubling up when the bug is fixed, so check the version
+    //elseif (phpversion('pdo_pgsql') < 'version_this_was_fixed_in') {
+    else {
+      $connection_options['password'] = str_replace('\\', '\\\\', $connection_options['password']);
+    }
 
     $this->connectionOptions = $connection_options;
 
diff --git a/includes/database/pgsql/install.inc b/includes/database/pgsql/install.inc
index 0d446af..c77f4ea 100644
--- a/includes/database/pgsql/install.inc
+++ b/includes/database/pgsql/install.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/pgsql/query.inc b/includes/database/pgsql/query.inc
index c475a00..f3783a9 100644
--- a/includes/database/pgsql/query.inc
+++ b/includes/database/pgsql/query.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @ingroup database
@@ -104,8 +103,8 @@ class InsertQuery_pgsql extends InsertQuery {
   }
 
   public function __toString() {
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     // Default fields are always placed first for consistency.
     $insert_fields = array_merge($this->defaultFields, $this->insertFields);
diff --git a/includes/database/pgsql/schema.inc b/includes/database/pgsql/schema.inc
index 30f12ef..9ed8a26 100644
--- a/includes/database/pgsql/schema.inc
+++ b/includes/database/pgsql/schema.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -528,6 +527,9 @@ class DatabaseSchema_pgsql extends DatabaseSchema {
       $this->connection->query('ALTER TABLE {' . $table . '} DROP CONSTRAINT "' . $check . '"');
     }
 
+    // Remove old default.
+    $this->fieldSetNoDefault($table, $field);
+
     $this->connection->query('ALTER TABLE {' . $table . '} ALTER "' . $field . '" TYPE ' . $typecast . ' USING "' . $field . '"::' . $typecast);
 
     if (isset($spec['not null'])) {
@@ -562,6 +564,11 @@ class DatabaseSchema_pgsql extends DatabaseSchema {
       $this->connection->query('ALTER TABLE {' . $table . '} ADD CHECK ("' . $field_new . '" >= 0)');
     }
 
+    // Add default if necessary.
+    if (isset($spec['default'])) {
+      $this->fieldSetDefault($table, $field_new, $spec['default']);
+    }
+
     // Change description if necessary.
     if (!empty($spec['description'])) {
       $this->connection->query('COMMENT ON COLUMN {' . $table . '}."' . $field_new . '" IS ' . $this->prepareComment($spec['description']));
diff --git a/includes/database/pgsql/select.inc b/includes/database/pgsql/select.inc
index 98061c9..d1d8382 100644
--- a/includes/database/pgsql/select.inc
+++ b/includes/database/pgsql/select.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/prefetch.inc b/includes/database/prefetch.inc
index a81ea10..f378d35 100644
--- a/includes/database/prefetch.inc
+++ b/includes/database/prefetch.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/query.inc b/includes/database/query.inc
index de421b3..23b652f 100644
--- a/includes/database/query.inc
+++ b/includes/database/query.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @ingroup database
@@ -362,6 +361,9 @@ abstract class Query implements QueryPlaceholderInterface {
    * for easier debugging and allows you to more easily find where a query
    * with a performance problem is being generated.
    *
+   * The comment string will be sanitized to remove * / and other characters
+   * that may terminate the string early so as to avoid SQL injection attacks.
+   *
    * @param $comment
    *   The comment string to be inserted into the query.
    *
@@ -624,9 +626,8 @@ class InsertQuery extends Query {
    *   The prepared statement.
    */
   public function __toString() {
-
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     // Default fields are always placed first for consistency.
     $insert_fields = array_merge($this->defaultFields, $this->insertFields);
@@ -816,9 +817,8 @@ class DeleteQuery extends Query implements QueryConditionInterface {
    *   The prepared statement.
    */
   public function __toString() {
-
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     $query = $comments . 'DELETE FROM {' . $this->connection->escapeTable($this->table) . '} ';
 
@@ -885,8 +885,8 @@ class TruncateQuery extends Query {
    *   The prepared statement.
    */
   public function __toString() {
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     return $comments . 'TRUNCATE {' . $this->connection->escapeTable($this->table) . '} ';
   }
@@ -1112,9 +1112,8 @@ class UpdateQuery extends Query implements QueryConditionInterface {
    *   The prepared statement.
    */
   public function __toString() {
-
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     // Expressions take priority over literal fields, so we process those first
     // and remove any literal fields that conflict.
diff --git a/includes/database/schema.inc b/includes/database/schema.inc
index e57c94b..de1b2f5 100644
--- a/includes/database/schema.inc
+++ b/includes/database/schema.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/select.inc b/includes/database/select.inc
index 43f9267..716c2fc 100644
--- a/includes/database/select.inc
+++ b/includes/database/select.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @ingroup database
@@ -1440,9 +1439,8 @@ class SelectQuery extends Query implements SelectQueryInterface {
   }
 
   public function __toString() {
-
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     // SELECT
     $query = $comments . 'SELECT ';
diff --git a/includes/database/sqlite/database.inc b/includes/database/sqlite/database.inc
index 651efa2..cf3b955 100644
--- a/includes/database/sqlite/database.inc
+++ b/includes/database/sqlite/database.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/sqlite/install.inc b/includes/database/sqlite/install.inc
index a8a1241..62cbac3 100644
--- a/includes/database/sqlite/install.inc
+++ b/includes/database/sqlite/install.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/sqlite/query.inc b/includes/database/sqlite/query.inc
index 7b1af81..6b8a72f 100644
--- a/includes/database/sqlite/query.inc
+++ b/includes/database/sqlite/query.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -33,8 +32,8 @@ class InsertQuery_sqlite extends InsertQuery {
   }
 
   public function __toString() {
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     // Produce as many generic placeholders as necessary.
     $placeholders = array_fill(0, count($this->insertFields), '?');
@@ -102,7 +101,7 @@ class UpdateQuery_sqlite extends UpdateQuery {
       }
       elseif (!isset($data)) {
         // The field will be set to NULL.
-        $condition->isNull($field);
+        $condition->isNotNull($field);
       }
       else {
         $condition->condition($field, $data, '<>');
@@ -149,8 +148,8 @@ class DeleteQuery_sqlite extends DeleteQuery {
  */
 class TruncateQuery_sqlite extends TruncateQuery {
   public function __toString() {
-    // Create a comments string to prepend to the query.
-    $comments = (!empty($this->comments)) ? '/* ' . implode('; ', $this->comments) . ' */ ' : '';
+    // Create a sanitized comment string to prepend to the query.
+    $comments = $this->connection->makeComment($this->comments);
 
     return $comments . 'DELETE FROM {' . $this->connection->escapeTable($this->table) . '} ';
   }
diff --git a/includes/database/sqlite/schema.inc b/includes/database/sqlite/schema.inc
index 11ecd88..840ba6b 100644
--- a/includes/database/sqlite/schema.inc
+++ b/includes/database/sqlite/schema.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/database/sqlite/select.inc b/includes/database/sqlite/select.inc
index ee3d84d..fb926ef 100644
--- a/includes/database/sqlite/select.inc
+++ b/includes/database/sqlite/select.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/date.inc b/includes/date.inc
index 75d666b..27634f9 100644
--- a/includes/date.inc
+++ b/includes/date.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/entity.inc b/includes/entity.inc
index 5fb36e2..a3cdf74 100644
--- a/includes/entity.inc
+++ b/includes/entity.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Interface for entity controller classes.
@@ -409,7 +408,7 @@ class EntityFieldQueryException extends Exception {}
  * direct access to the collected properties in order to handle alternate
  * execution routines. We therefore use public properties for simplicity. Note
  * that code that is simply creating and running a field query should still use
- * the appropriate methods add conditions on the query.
+ * the appropriate methods to add conditions on the query.
  *
  * Storage engines are not required to support every type of query. By default,
  * an EntityFieldQueryException will be raised if an unsupported condition is
diff --git a/includes/errors.inc b/includes/errors.inc
index 235c161..3a97b6d 100644
--- a/includes/errors.inc
+++ b/includes/errors.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/file.inc b/includes/file.inc
index 4f7a4c3..6dc7f88 100644
--- a/includes/file.inc
+++ b/includes/file.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -202,9 +201,8 @@ function file_stream_wrapper_get_class($scheme) {
  * @see file_uri_target()
  */
 function file_uri_scheme($uri) {
-  $data = explode('://', $uri, 2);
-
-  return count($data) == 2 ? $data[0] : FALSE;
+  $position = strpos($uri, '://');
+  return $position ? substr($uri, 0, $position) : FALSE;
 }
 
 /**
@@ -424,7 +422,7 @@ function file_create_url($uri) {
  * Directories need to have execute permissions to be considered a directory by
  * FTP servers, etc.
  *
- * @param &$directory
+ * @param $directory
  *   A string reference containing the name of a directory path or URI. A
  *   trailing slash will be trimmed from a path.
  * @param $options
diff --git a/includes/file.mimetypes.inc b/includes/file.mimetypes.inc
index fe23ba4..cda03fb 100644
--- a/includes/file.mimetypes.inc
+++ b/includes/file.mimetypes.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/filetransfer/filetransfer.inc b/includes/filetransfer/filetransfer.inc
index cd62f1d..2083da9 100644
--- a/includes/filetransfer/filetransfer.inc
+++ b/includes/filetransfer/filetransfer.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /*
  * Base FileTransfer class.
diff --git a/includes/filetransfer/ftp.inc b/includes/filetransfer/ftp.inc
index ddb0d3e..838dc7c 100644
--- a/includes/filetransfer/ftp.inc
+++ b/includes/filetransfer/ftp.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Base class for FTP implementations.
diff --git a/includes/filetransfer/local.inc b/includes/filetransfer/local.inc
index d5744c1..b125989 100644
--- a/includes/filetransfer/local.inc
+++ b/includes/filetransfer/local.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * The local connection class for copying files as the httpd user.
diff --git a/includes/filetransfer/ssh.inc b/includes/filetransfer/ssh.inc
index 56b944c..43ec324 100644
--- a/includes/filetransfer/ssh.inc
+++ b/includes/filetransfer/ssh.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * The SSH connection class for the update module.
diff --git a/includes/form.inc b/includes/form.inc
index 2ff93e6..a337b03 100644
--- a/includes/form.inc
+++ b/includes/form.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @defgroup forms Form builder functions
@@ -128,9 +127,9 @@
  * - 'triggering_element': (read-only) The form element that triggered
  *   submission. This is the same as the deprecated
  *   $form_state['clicked_button']. It is the element that caused submission,
- *   which may or may not be a button (in the case of AJAX forms.) This is
+ *   which may or may not be a button (in the case of Ajax forms.) This is
  *   often used to distinguish between various buttons in a submit handler,
- *   and is also used in AJAX handlers.
+ *   and is also used in Ajax handlers.
  * - 'cache': The typical form workflow involves two page requests. During the
  *   first page request, a form is built and returned for the user to fill in.
  *   Then the user fills the form in and submits it, triggering a second page
@@ -139,9 +138,9 @@
  *   In some special use-cases, it is necessary or desired to persist the $form
  *   and $form_state variables from the initial page request to the one that
  *   processes the submission. A form builder function can set 'cache' to TRUE
- *   to do this. One example where this is needed is to handle AJAX submissions,
+ *   to do this. One example where this is needed is to handle Ajax submissions,
  *   so ajax_process_form() sets this for all forms that include an element with
- *   a #ajax property. (In AJAX, the handler has no way to build the form
+ *   a #ajax property. (In Ajax, the handler has no way to build the form
  *   itself, so must rely on the cached version created on each page load, so
  *   it's a classic example of this use case.) Note that the persistence of
  *   $form and $form_state across successive submissions of a multi-step form
@@ -202,7 +201,7 @@ function drupal_get_form($form_id) {
  *   can implement hook_forms(), which maps different $form_id values to the
  *   proper form constructor function. Examples may be found in node_forms(),
  *   search_forms(), and user_forms().
- * @param &$form_state
+ * @param $form_state
  *   An array which stores information about the form. This is passed as a
  *   reference so that the caller can use it to examine what in the form changed
  *   when the form submission process is complete. Furthermore, it may be used
@@ -254,7 +253,7 @@ function drupal_get_form($form_id) {
  *   - must_validate: Ordinarily, a form is only validated once but there are
  *     times when a form is resubmitted internally and should be validated
  *     again. Setting this to TRUE will force that to happen. This is most
- *     likely to occur during AHAH or AJAX operations.
+ *     likely to occur during AHAH or Ajax operations.
  *   - temporary: An array holding temporary data accessible during the current
  *     page request only. It may be used to temporary save any data that doesn't
  *     need to or shouldn't be cached during the whole form workflow, e.g. data
@@ -396,9 +395,9 @@ function form_state_defaults() {
  * function is called to generate a new $form, the next step in the form
  * workflow, to be returned for rendering.
  *
- * AJAX form submissions are almost always multi-step workflows, so that is one
+ * Ajax form submissions are almost always multi-step workflows, so that is one
  * common use-case during which form rebuilding occurs. See ajax_form_callback()
- * for more information about creating AJAX-enabled forms.
+ * for more information about creating Ajax-enabled forms.
  *
  * @param $form_id
  *   The unique string identifying the desired form. If a function
@@ -411,7 +410,7 @@ function form_state_defaults() {
  *   A keyed array containing the current state of the form.
  * @param $old_form
  *   (optional) A previously built $form. Used to retain the #build_id and
- *   #action properties in AJAX callbacks and similar partial form rebuilds. The
+ *   #action properties in Ajax callbacks and similar partial form rebuilds. The
  *   only properties copied from $old_form are the ones which both exist in
  *   $old_form and for which $form_state['rebuild_info']['copy'][PROPERTY] is
  *   TRUE. If $old_form is not passed, the entire $form is rebuilt freshly.
@@ -427,7 +426,7 @@ function form_state_defaults() {
 function drupal_rebuild_form($form_id, &$form_state, $old_form = NULL) {
   $form = drupal_retrieve_form($form_id, $form_state);
 
-  // If only parts of the form will be returned to the browser (e.g. AJAX or
+  // If only parts of the form will be returned to the browser (e.g., Ajax or
   // RIA clients), re-use the old #build_id to not require client-side code to
   // manually update the hidden 'build_id' input element.
   // Otherwise, a new #build_id is generated, to not clobber the previous
@@ -441,7 +440,7 @@ function drupal_rebuild_form($form_id, &$form_state, $old_form = NULL) {
     $form['#build_id'] = 'form-' . drupal_hash_base64(uniqid(mt_rand(), TRUE) . mt_rand());
   }
 
-  // #action defaults to request_uri(), but in case of AJAX and other partial
+  // #action defaults to request_uri(), but in case of Ajax and other partial
   // rebuilds, the form is submitted to an alternate URL, and the original
   // #action needs to be retained.
   if (isset($old_form['#action']) && !empty($form_state['rebuild_info']['copy']['#action'])) {
@@ -882,13 +881,13 @@ function drupal_process_form($form_id, &$form, &$form_state) {
     // yet complete. A new $form needs to be constructed based on the changes
     // made to $form_state during this request. Normally, a submit handler sets
     // $form_state['rebuild'] if a fully executed form requires another step.
-    // However, for forms that have not been fully executed (e.g., AJAX
+    // However, for forms that have not been fully executed (e.g., Ajax
     // submissions triggered by non-buttons), there is no submit handler to set
     // $form_state['rebuild']. It would not make sense to redisplay the
     // identical form without an error for the user to correct, so we also
     // rebuild error-free non-executed forms, regardless of
     // $form_state['rebuild'].
-    // @todo D8: Simplify this logic; considering AJAX and non-HTML front-ends,
+    // @todo D8: Simplify this logic; considering Ajax and non-HTML front-ends,
     //   along with element-level #submit properties, it makes no sense to have
     //   divergent form execution based on whether the triggering element has
     //   #executes_submit_callback set to TRUE.
@@ -1146,7 +1145,7 @@ function drupal_validate_form($form_id, &$form, &$form_state) {
  * - If $form_state['no_redirect'] is TRUE, then the callback that originally
  *   built the form explicitly disallows any redirection, regardless of the
  *   redirection value in $form_state['redirect']. For example, ajax_get_form()
- *   defines $form_state['no_redirect'] when building a form in an AJAX
+ *   defines $form_state['no_redirect'] when building a form in an Ajax
  *   callback to prevent any redirection. $form_state['no_redirect'] should NOT
  *   be altered by form builder functions or form validation/submit handlers.
  * - If $form_state['programmed'] is TRUE, the form submission was usually
@@ -1286,7 +1285,7 @@ function _form_validate(&$elements, &$form_state, $form_id = NULL) {
     // If submit handlers won't run (due to the submission having been triggered
     // by an element whose #executes_submit_callback property isn't TRUE), then
     // it's safe to suppress all validation errors, and we do so by default,
-    // which is particularly useful during an AJAX submission triggered by a
+    // which is particularly useful during an Ajax submission triggered by a
     // non-button. An element can override this default by setting the
     // #limit_validation_errors property. For button element types,
     // #limit_validation_errors defaults to FALSE (via system_element_info()),
@@ -1962,12 +1961,12 @@ function _form_builder_handle_input_element($form_id, &$element, &$form_state) {
   // form_state_values_clean(). Enforce the same input processing restrictions
   // as above.
   if ($process_input) {
-    // Detect if the element triggered the submission via AJAX.
+    // Detect if the element triggered the submission via Ajax.
     if (_form_element_triggered_scripted_submission($element, $form_state)) {
       $form_state['triggering_element'] = $element;
     }
 
-    // If the form was submitted by the browser rather than via AJAX, then it
+    // If the form was submitted by the browser rather than via Ajax, then it
     // can only have been triggered by a button, and we need to determine which
     // button within the constraints of how browsers provide this information.
     if (isset($element['#button_type'])) {
@@ -1992,7 +1991,7 @@ function _form_builder_handle_input_element($form_id, &$element, &$form_state) {
  * Helper function to handle the convoluted logic of button click detection.
  *
  * This detects button or non-button controls that trigger a form submission via
- * AJAX or some other scriptable environment. These environments can set the
+ * Ajax or some other scriptable environment. These environments can set the
  * special input key '_triggering_element_name' to identify the triggering
  * element. If the name alone doesn't identify the element uniquely, the input
  * key '_triggering_element_value' may also be set to require a match on element
@@ -2017,7 +2016,7 @@ function _form_element_triggered_scripted_submission($element, &$form_state) {
  * of the POST data, but with extra code to deal with the convoluted way in
  * which browsers submit data for image button clicks.
  *
- * This does not detect button clicks processed by AJAX (that is done in
+ * This does not detect button clicks processed by Ajax (that is done in
  * _form_element_triggered_scripted_submission()) and it does not detect form
  * submissions from Internet Explorer in response to an ENTER key pressed in a
  * textfield (form_builder() has extra code for that).
@@ -2062,7 +2061,7 @@ function _form_button_was_clicked($element, &$form_state) {
  * - form_build_id
  * - op
  *
- * @param &$form_state
+ * @param $form_state
  *   A keyed array containing the current state of the form, including
  *   submitted form values; altered by reference.
  */
@@ -2492,7 +2491,7 @@ function form_process_select($element) {
     if (($required && !isset($element['#default_value'])) || isset($element['#empty_value']) || isset($element['#empty_option'])) {
       $element += array(
         '#empty_value' => '',
-        '#empty_option' => $required ? t('- Select - ') : t('- None -'),
+        '#empty_option' => $required ? t('- Select -') : t('- None -'),
       );
       // The empty option is prepended to #options and purposively not merged
       // to prevent another option in #options mistakenly using the same value
@@ -3378,7 +3377,7 @@ function form_validate_machine_name(&$element, &$form_state) {
  * Adds fieldsets to the specified group or adds group members to this
  * fieldset.
  *
- * @param &$element
+ * @param $element
  *   An associative array containing the properties and children of the
  *   fieldset. Note that $element must be taken by reference here, so processed
  *   child elements are taken over into $form_state.
@@ -3724,7 +3723,7 @@ function theme_textarea($variables) {
 function theme_password($variables) {
   $element = $variables['element'];
   $element['#attributes']['type'] = 'password';
-  element_set_attributes($element, array('id', 'name', 'value', 'size', 'maxlength'));
+  element_set_attributes($element, array('id', 'name', 'size', 'maxlength'));
   _form_set_class($element, array('form-text'));
 
   return '<input' . drupal_attributes($element['#attributes']) . ' />';
@@ -3956,7 +3955,7 @@ function theme_form_element_label($variables) {
  *
  * Adds 'required' and 'error' classes as needed.
  *
- * @param &$element
+ * @param $element
  *   The form element.
  * @param $name
  *   Array of new class names to be added.
@@ -4016,7 +4015,9 @@ function _form_set_class(&$element, $class = array()) {
  * Note: if the batch 'title', 'init_message', 'progress_message', or
  * 'error_message' could contain any user input, it is the responsibility of
  * the code calling batch_set() to sanitize them first with a function like
- * check_plain() or filter_xss().
+ * check_plain() or filter_xss(). Furthermore, if the batch operation
+ * returns any user input in the 'results' or 'message' keys of $context,
+ * it must also sanitize them first.
  *
  * Sample batch operations:
  * @code
@@ -4039,8 +4040,8 @@ function _form_set_class(&$element, $class = array()) {
  *   //   and the batch processing can continue to the next operation.
  *
  *   $node = node_load(array('uid' => $uid, 'type' => $type));
- *   $context['results'][] = $node->nid . ' : ' . $node->title;
- *   $context['message'] = $node->title;
+ *   $context['results'][] = $node->nid . ' : ' . check_plain($node->title);
+ *   $context['message'] = check_plain($node->title);
  * }
  *
  * // More advanced example: multi-step operation - load all nodes, five by five
@@ -4059,10 +4060,10 @@ function _form_set_class(&$element, $class = array()) {
  *     ->execute();
  *   foreach ($result as $row) {
  *     $node = node_load($row->nid, NULL, TRUE);
- *     $context['results'][] = $node->nid . ' : ' . $node->title;
+ *     $context['results'][] = $node->nid . ' : ' . check_plain($node->title);
  *     $context['sandbox']['progress']++;
  *     $context['sandbox']['current_node'] = $node->nid;
- *     $context['message'] = $node->title;
+ *     $context['message'] = check_plain($node->title);
  *   }
  *   if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
  *     $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
diff --git a/includes/graph.inc b/includes/graph.inc
index 38ed6fc..416fad6 100644
--- a/includes/graph.inc
+++ b/includes/graph.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -33,7 +32,7 @@
  *   @endcode
  *
  * @return
- *   The passed in $graph with more secondary keys filled in:
+ *   The passed-in $graph with more secondary keys filled in:
  *   - 'paths': Contains a list of vertices than can be reached on a path from
  *     this vertex.
  *   - 'reverse_paths': Contains a list of vertices that has a path from them
@@ -75,15 +74,15 @@ function drupal_depth_first_search(&$graph) {
 /**
  * Helper function to perform a depth first sort.
  *
- * @param &$graph
+ * @param $graph
  *   A three dimensional associated graph array.
- * @param &$state
+ * @param $state
  *   An associative array. The key 'last_visit_order' stores a list of the
  *   vertices visited. The key components stores list of vertices belonging
  *   to the same the component.
  * @param $start
  *   An arbitrary vertex where we started traversing the graph.
- * @param &$component
+ * @param $component
  *   The component of the last vertex.
  *
  * @see drupal_depth_first_search()
diff --git a/includes/image.inc b/includes/image.inc
index 28d63be..b04943b 100644
--- a/includes/image.inc
+++ b/includes/image.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/install.core.inc b/includes/install.core.inc
index c7b4053..a74dfdf 100644
--- a/includes/install.core.inc
+++ b/includes/install.core.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/install.inc b/includes/install.inc
index 68a67bc..d22f4f9 100644
--- a/includes/install.inc
+++ b/includes/install.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Indicates that a module has not been installed yet.
@@ -199,7 +198,7 @@ function drupal_install_profile_distribution_name() {
   // At all other times, we load the profile via standard methods.
   else {
     $profile = drupal_get_profile();
-    $info = install_profile_info($profile);
+    $info = system_get_info('module', $profile);
     return $info['distribution_name'];
   }
 }
@@ -548,7 +547,7 @@ abstract class DatabaseTasks {
    *
    * @param $database
    *   An array of driver specific configuration options.
-   * 
+   *
    * @return
    *   An array of driver configuration errors, keyed by form element name.
    */
@@ -783,44 +782,12 @@ function drupal_uninstall_modules($module_list = array(), $uninstall_dependents
   }
 
   foreach ($module_list as $module) {
-    // First, retrieve all the module's menu paths from db.
-    drupal_load('module', $module);
-    $paths = module_invoke($module, 'menu');
-
     // Uninstall the module.
     module_load_install($module);
     module_invoke($module, 'uninstall');
     drupal_uninstall_schema($module);
 
     watchdog('system', '%module module uninstalled.', array('%module' => $module), WATCHDOG_INFO);
-
-    // Now remove the menu links for all paths declared by this module.
-    if (!empty($paths)) {
-      $paths = array_keys($paths);
-      // Clean out the names of load functions.
-      foreach ($paths as $index => $path) {
-        $parts = explode('/', $path, MENU_MAX_PARTS);
-        foreach ($parts as $k => $part) {
-          if (preg_match('/^%[a-z_]*$/', $part)) {
-            $parts[$k] = '%';
-          }
-        }
-        $paths[$index] = implode('/', $parts);
-      }
-
-      $result = db_select('menu_links')
-        ->fields('menu_links')
-        ->condition('router_path', $paths, 'IN')
-        ->condition('external', 0)
-        ->orderBy('depth')
-        ->execute();
-      // Remove all such items. Starting from those with the greatest depth will
-      // minimize the amount of re-parenting done by menu_link_delete().
-      foreach ($result as $item) {
-        _menu_delete_item($item, TRUE);
-      }
-    }
-
     drupal_set_installed_schema_version($module, SCHEMA_UNINSTALLED);
   }
 
@@ -1055,7 +1022,12 @@ function install_goto($path) {
  * Used during the install process, when database, theme, and localization
  * system is possibly not yet available.
  *
+ * Use t() if your code will never run during the Drupal installation phase.
+ * Use st() if your code will only run during installation and never any other
+ * time. Use get_t() if your code could run in either circumstance.
+ *
  * @see t()
+ * @see get_t()
  * @ingroup sanitization
  */
 function st($string, array $args = array(), array $options = array()) {
@@ -1199,6 +1171,10 @@ function drupal_check_module($module) {
  *   installed, to be shown throughout the installation process. Defaults to
  *   'Drupal'.
  *
+ * Note that this function does an expensive file system scan to get info file
+ * information for dependencies. If you only need information from the info
+ * file itself, use system_get_info().
+ *
  * Example of .info file:
  * @code
  *    name = Minimal
diff --git a/includes/iso.inc b/includes/iso.inc
index ed2bfdd..dabbefd 100644
--- a/includes/iso.inc
+++ b/includes/iso.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/language.inc b/includes/language.inc
index 908f013..b7057f2 100644
--- a/includes/language.inc
+++ b/includes/language.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -85,6 +84,44 @@ function language_types_disable($types) {
 }
 
 /**
+ * Updates the language type configuration.
+ */
+function language_types_set() {
+  // Ensure that we are getting the defined language negotiation information. An
+  // invocation of module_enable() or module_disable() could outdate the cached
+  // information.
+  drupal_static_reset('language_types_info');
+  drupal_static_reset('language_negotiation_info');
+
+  // Determine which language types are configurable and which not by checking
+  // whether the 'fixed' key is defined. Non-configurable (fixed) language types
+  // have their language negotiation settings stored there.
+  $defined_providers = language_negotiation_info();
+  foreach (language_types_info() as $type => $info) {
+    if (isset($info['fixed'])) {
+      $language_types[$type] = FALSE;
+      $negotiation = array();
+      foreach ($info['fixed'] as $weight => $id) {
+        if (isset($defined_providers[$id])) {
+          $negotiation[$id] = $weight;
+        }
+      }
+      language_negotiation_set($type, $negotiation);
+    }
+    else {
+      $language_types[$type] = TRUE;
+    }
+  }
+
+  // Save language types.
+  variable_set('language_types', $language_types);
+
+  // Ensure that subsequent calls of language_types_configurable() return the
+  // updated language type information.
+  drupal_static_reset('language_types_configurable');
+}
+
+/**
  * Check if a language provider is enabled.
  *
  * This has two possible behaviors:
@@ -174,6 +211,28 @@ function language_negotiation_get_switch_links($type, $path) {
   return $links;
 }
 
+/**
+ * Updates language configuration to remove any language provider that is no longer defined.
+ */
+function language_negotiation_purge() {
+  // Ensure that we are getting the defined language negotiation information. An
+  // invocation of module_enable() or module_disable() could outdate the cached
+  // information.
+  drupal_static_reset('language_negotiation_info');
+  drupal_static_reset('language_types_info');
+
+  $defined_providers = language_negotiation_info();
+  foreach (language_types_info() as $type => $type_info) {
+    $weight = 0;
+    $negotiation = array();
+    foreach (variable_get("language_negotiation_$type", array()) as $id => $provider) {
+      if (isset($defined_providers[$id])) {
+        $negotiation[$id] = $weight++;
+      }
+    }
+    language_negotiation_set($type, $negotiation);
+  }
+}
 
 /**
  * Save a list of language providers.
@@ -181,7 +240,8 @@ function language_negotiation_get_switch_links($type, $path) {
  * @param $type
  *   The language negotiation type.
  * @param $language_providers
- *   An array of language provider ids.
+ *   An array of language provider weights keyed by id.
+ *   @see language_provider_weight()
  */
 function language_negotiation_set($type, $language_providers) {
   // Save only the necessary fields.
@@ -190,7 +250,7 @@ function language_negotiation_set($type, $language_providers) {
   $negotiation = array();
   $providers_weight = array();
   $defined_providers = language_negotiation_info();
-  $default_types = language_types_configurable();
+  $default_types = language_types_configurable(FALSE);
 
   // Initialize the providers weight list.
   foreach ($language_providers as $id => $provider) {
diff --git a/includes/locale.inc b/includes/locale.inc
index d6db7c1..578b1b3 100644
--- a/includes/locale.inc
+++ b/includes/locale.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -586,159 +585,250 @@ function _locale_import_po($file, $langcode, $mode, $group = NULL) {
  */
 function _locale_import_read_po($op, $file, $mode = NULL, $lang = NULL, $group = 'default') {
 
-  $fd = fopen($file->uri, "rb"); // File will get closed by PHP on return
+  // The file will get closed by PHP on returning from this function.
+  $fd = fopen($file->uri, 'rb');
   if (!$fd) {
     _locale_import_message('The translation import failed, because the file %filename could not be read.', $file);
     return FALSE;
   }
 
-  $context = "COMMENT"; // Parser context: COMMENT, MSGID, MSGID_PLURAL, MSGSTR and MSGSTR_ARR
-  $current = array();   // Current entry being read
-  $plural = 0;          // Current plural form
-  $lineno = 0;          // Current line
+  /*
+   * The parser context. Can be:
+   *  - 'COMMENT' (#)
+   *  - 'MSGID' (msgid)
+   *  - 'MSGID_PLURAL' (msgid_plural)
+   *  - 'MSGCTXT' (msgctxt)
+   *  - 'MSGSTR' (msgstr or msgstr[])
+   *  - 'MSGSTR_ARR' (msgstr_arg)
+   */
+  $context = 'COMMENT';
+
+  // Current entry being read.
+  $current = array();
+
+  // Current plurality for 'msgstr[]'.
+  $plural = 0;
+
+  // Current line.
+  $lineno = 0;
 
   while (!feof($fd)) {
-    $line = fgets($fd, 10*1024); // A line should not be this long
+    // A line should not be longer than 10 * 1024.
+    $line = fgets($fd, 10 * 1024);
+
     if ($lineno == 0) {
       // The first line might come with a UTF-8 BOM, which should be removed.
       $line = str_replace("\xEF\xBB\xBF", '', $line);
     }
+
     $lineno++;
+
+    // Trim away the linefeed.
     $line = trim(strtr($line, array("\\\n" => "")));
 
-    if (!strncmp("#", $line, 1)) { // A comment
-      if ($context == "COMMENT") { // Already in comment context: add
-        $current["#"][] = substr($line, 1);
+    if (!strncmp('#', $line, 1)) {
+      // Lines starting with '#' are comments.
+
+      if ($context == 'COMMENT') {
+        // Already in comment token, insert the comment.
+        $current['#'][] = substr($line, 1);
       }
-      elseif (($context == "MSGSTR") || ($context == "MSGSTR_ARR")) { // End current entry, start a new one
+      elseif (($context == 'MSGSTR') || ($context == 'MSGSTR_ARR')) {
+        // We are currently in string token, close it out.
         _locale_import_one_string($op, $current, $mode, $lang, $file, $group);
-        $current = array();
-        $current["#"][] = substr($line, 1);
-        $context = "COMMENT";
+
+        // Start a new entry for the comment.
+        $current         = array();
+        $current['#'][]  = substr($line, 1);
+
+        $context = 'COMMENT';
       }
-      else { // Parse error
+      else {
+        // A comment following any other token is a syntax error.
         _locale_import_message('The translation file %filename contains an error: "msgstr" was expected but not found on line %line.', $file, $lineno);
         return FALSE;
       }
     }
-    elseif (!strncmp("msgid_plural", $line, 12)) {
-      if ($context != "MSGID") { // Must be plural form for current entry
+    elseif (!strncmp('msgid_plural', $line, 12)) {
+      // A plural form for the current message.
+
+      if ($context != 'MSGID') {
+        // A plural form cannot be added to anything else but the id directly.
         _locale_import_message('The translation file %filename contains an error: "msgid_plural" was expected but not found on line %line.', $file, $lineno);
         return FALSE;
       }
+
+      // Remove 'msgid_plural' and trim away whitespace.
       $line = trim(substr($line, 12));
+      // At this point, $line should now contain only the plural form.
+
       $quoted = _locale_import_parse_quoted($line);
       if ($quoted === FALSE) {
+        // The plural form must be wrapped in quotes.
         _locale_import_message('The translation file %filename contains a syntax error on line %line.', $file, $lineno);
         return FALSE;
       }
-      $current["msgid"] = $current["msgid"] . "\0" . $quoted;
-      $context = "MSGID_PLURAL";
+
+      // Append the plural form to the current entry.
+      $current['msgid'] .= "\0" . $quoted;
+
+      $context = 'MSGID_PLURAL';
     }
-    elseif (!strncmp("msgid", $line, 5)) {
-      if (($context == "MSGSTR") || ($context == "MSGSTR_ARR")) {   // End current entry, start a new one
+    elseif (!strncmp('msgid', $line, 5)) {
+      // Starting a new message.
+
+      if (($context == 'MSGSTR') || ($context == 'MSGSTR_ARR')) {
+        // We are currently in a message string, close it out.
         _locale_import_one_string($op, $current, $mode, $lang, $file, $group);
+
+        // Start a new context for the id.
         $current = array();
       }
-      elseif ($context == "MSGID") { // Already in this context? Parse error
+      elseif ($context == 'MSGID') {
+        // We are currently already in the context, meaning we passed an id with no data.
         _locale_import_message('The translation file %filename contains an error: "msgid" is unexpected on line %line.', $file, $lineno);
         return FALSE;
       }
+
+      // Remove 'msgid' and trim away whitespace.
       $line = trim(substr($line, 5));
+      // At this point, $line should now contain only the message id.
+
       $quoted = _locale_import_parse_quoted($line);
       if ($quoted === FALSE) {
+        // The message id must be wrapped in quotes.
         _locale_import_message('The translation file %filename contains a syntax error on line %line.', $file, $lineno);
         return FALSE;
       }
-      $current["msgid"] = $quoted;
-      $context = "MSGID";
+
+      $current['msgid'] = $quoted;
+      $context = 'MSGID';
     }
-    elseif (!strncmp("msgctxt", $line, 7)) {
-      if (($context == "MSGSTR") || ($context == "MSGSTR_ARR")) {   // End current entry, start a new one
+    elseif (!strncmp('msgctxt', $line, 7)) {
+      // Starting a new context.
+
+      if (($context == 'MSGSTR') || ($context == 'MSGSTR_ARR')) {
+        // We are currently in a message, start a new one.
         _locale_import_one_string($op, $current, $mode, $lang, $file, $group);
         $current = array();
       }
-      elseif (!empty($current["msgctxt"])) { // Already in this context? Parse error
+      elseif (!empty($current['msgctxt'])) {
+        // A context cannot apply to another context.
         _locale_import_message('The translation file %filename contains an error: "msgctxt" is unexpected on line %line.', $file, $lineno);
         return FALSE;
       }
+
+      // Remove 'msgctxt' and trim away whitespaces.
       $line = trim(substr($line, 7));
+      // At this point, $line should now contain the context.
+
       $quoted = _locale_import_parse_quoted($line);
       if ($quoted === FALSE) {
+        // The context string must be quoted.
         _locale_import_message('The translation file %filename contains a syntax error on line %line.', $file, $lineno);
         return FALSE;
       }
-      $current["msgctxt"] = $quoted;
-      $context = "MSGCTXT";
+
+      $current['msgctxt'] = $quoted;
+
+      $context = 'MSGCTXT';
     }
-    elseif (!strncmp("msgstr[", $line, 7)) {
-      if (($context != "MSGID") && ($context != "MSGCTXT") && ($context != "MSGID_PLURAL") && ($context != "MSGSTR_ARR")) { // Must come after msgid, msgxtxt, msgid_plural, or msgstr[]
+    elseif (!strncmp('msgstr[', $line, 7)) {
+      // A message string for a specific plurality.
+
+      if (($context != 'MSGID') && ($context != 'MSGCTXT') && ($context != 'MSGID_PLURAL') && ($context != 'MSGSTR_ARR')) {
+        // Message strings must come after msgid, msgxtxt, msgid_plural, or other msgstr[] entries.
         _locale_import_message('The translation file %filename contains an error: "msgstr[]" is unexpected on line %line.', $file, $lineno);
         return FALSE;
       }
-      if (strpos($line, "]") === FALSE) {
+
+      // Ensure the plurality is terminated.
+      if (strpos($line, ']') === FALSE) {
         _locale_import_message('The translation file %filename contains a syntax error on line %line.', $file, $lineno);
         return FALSE;
       }
-      $frombracket = strstr($line, "[");
-      $plural = substr($frombracket, 1, strpos($frombracket, "]") - 1);
+
+      // Extract the plurality.
+      $frombracket = strstr($line, '[');
+      $plural = substr($frombracket, 1, strpos($frombracket, ']') - 1);
+
+      // Skip to the next whitespace and trim away any further whitespace, bringing $line to the message data.
       $line = trim(strstr($line, " "));
+
       $quoted = _locale_import_parse_quoted($line);
       if ($quoted === FALSE) {
+        // The string must be quoted.
         _locale_import_message('The translation file %filename contains a syntax error on line %line.', $file, $lineno);
         return FALSE;
       }
-      $current["msgstr"][$plural] = $quoted;
-      $context = "MSGSTR_ARR";
+
+      $current['msgstr'][$plural] = $quoted;
+
+      $context = 'MSGSTR_ARR';
     }
     elseif (!strncmp("msgstr", $line, 6)) {
-      if (($context != "MSGID") && ($context != "MSGCTXT")) {   // Should come just after a msgid or msgctxt block
+      // A string for the an id or context.
+
+      if (($context != 'MSGID') && ($context != 'MSGCTXT')) {
+        // Strings are only valid within an id or context scope.
         _locale_import_message('The translation file %filename contains an error: "msgstr" is unexpected on line %line.', $file, $lineno);
         return FALSE;
       }
+
+      // Remove 'msgstr' and trim away away whitespaces.
       $line = trim(substr($line, 6));
+      // At this point, $line should now contain the message.
+
       $quoted = _locale_import_parse_quoted($line);
       if ($quoted === FALSE) {
+        // The string must be quoted.
         _locale_import_message('The translation file %filename contains a syntax error on line %line.', $file, $lineno);
         return FALSE;
       }
-      $current["msgstr"] = $quoted;
-      $context = "MSGSTR";
+
+      $current['msgstr'] = $quoted;
+
+      $context = 'MSGSTR';
     }
-    elseif ($line != "") {
+    elseif ($line != '') {
+      // Anything that is not a token may be a continuation of a previous token.
+
       $quoted = _locale_import_parse_quoted($line);
       if ($quoted === FALSE) {
+        // The string must be quoted.
         _locale_import_message('The translation file %filename contains a syntax error on line %line.', $file, $lineno);
         return FALSE;
       }
-      if (($context == "MSGID") || ($context == "MSGID_PLURAL")) {
-        $current["msgid"] .= $quoted;
+
+      // Append the string to the current context.
+      if (($context == 'MSGID') || ($context == 'MSGID_PLURAL')) {
+        $current['msgid'] .= $quoted;
       }
-      elseif ($context == "MSGCTXT") {
-        $current["msgctxt"] .= $quoted;
+      elseif ($context == 'MSGCTXT') {
+        $current['msgctxt'] .= $quoted;
       }
-      elseif ($context == "MSGSTR") {
-        $current["msgstr"] .= $quoted;
+      elseif ($context == 'MSGSTR') {
+        $current['msgstr'] .= $quoted;
       }
-      elseif ($context == "MSGSTR_ARR") {
-        $current["msgstr"][$plural] .= $quoted;
+      elseif ($context == 'MSGSTR_ARR') {
+        $current['msgstr'][$plural] .= $quoted;
       }
       else {
+        // No valid context to append to.
         _locale_import_message('The translation file %filename contains an error: there is an unexpected string on line %line.', $file, $lineno);
         return FALSE;
       }
     }
   }
 
-  // End of PO file, flush last entry.
-  if (($context == "MSGSTR") || ($context == "MSGSTR_ARR")) {
+  // End of PO file, closed out the last entry.
+  if (($context == 'MSGSTR') || ($context == 'MSGSTR_ARR')) {
     _locale_import_one_string($op, $current, $mode, $lang, $file, $group);
   }
-  elseif ($context != "COMMENT") {
+  elseif ($context != 'COMMENT') {
     _locale_import_message('The translation file %filename ended unexpectedly at line %line.', $file, $lineno);
     return FALSE;
   }
-
 }
 
 /**
diff --git a/includes/lock.inc b/includes/lock.inc
index 6dd4b93..42f1906 100644
--- a/includes/lock.inc
+++ b/includes/lock.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -188,7 +187,7 @@ function lock_may_be_available($name) {
  * lock. This will block further execution until the lock is available or the
  * specified delay in seconds is reached. This should not be used with locks
  * that are acquired very frequently, since the lock is likely to be acquired
- * again by a different request during the sleep().
+ * again by a different request while waiting.
  *
  * @param $name
  *   The name of the lock.
@@ -199,12 +198,32 @@ function lock_may_be_available($name) {
  *   TRUE if the lock holds, FALSE if it is available.
  */
 function lock_wait($name, $delay = 30) {
-  $delay = (int) $delay;
-  while ($delay--) {
+  // Pause the process for short periods between calling
+  // lock_may_be_available(). This prevents hitting the database with constant
+  // database queries while waiting, which could lead to performance issues.
+  // However, if the wait period is too long, there is the potential for a
+  // large number of processes to be blocked waiting for a lock, especially
+  // if the item being rebuilt is commonly requested. To address both of these
+  // concerns, begin waiting for 25ms, then add 25ms to the wait period each
+  // time until it reaches 500ms. After this point polling will continue every
+  // 500ms until $delay is reached.
+
+  // $delay is passed in seconds, but we will be using usleep(), which takes
+  // microseconds as a parameter. Multiply it by 1 million so that all
+  // further numbers are equivalent.
+  $delay = (int) $delay * 1000000;
+
+  // Begin sleeping at 25ms.
+  $sleep = 25000;
+  while ($delay > 0) {
     // This function should only be called by a request that failed to get a
     // lock, so we sleep first to give the parallel request a chance to finish
     // and release the lock.
-    sleep(1);
+    usleep($sleep);
+    // After each sleep, increase the value of $sleep until it reaches
+    // 500ms, to reduce the potential for a lock stampede.
+    $delay = $delay - $sleep;
+    $sleep = min(500000, $sleep + 25000, $delay);
     if (lock_may_be_available($name)) {
       // No longer need to wait.
       return FALSE;
diff --git a/includes/mail.inc b/includes/mail.inc
index 2628175..d2febed 100644
--- a/includes/mail.inc
+++ b/includes/mail.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -123,8 +122,8 @@ function drupal_mail($module, $key, $to, $language, $params = array(), $from = N
   if ($default_from) {
     // To prevent e-mail from looking like spam, the addresses in the Sender and
     // Return-Path headers should have a domain authorized to use the originating
-    // SMTP server. Errors-To is redundant, but shouldn't hurt.
-    $headers['From'] = $headers['Sender'] = $headers['Return-Path'] = $headers['Errors-To'] = $default_from;
+    // SMTP server.
+    $headers['From'] = $headers['Sender'] = $headers['Return-Path'] = $default_from;
   }
   if ($from) {
     $headers['From'] = $from;
diff --git a/includes/menu.inc b/includes/menu.inc
index 0806a31..cfd35c7 100644
--- a/includes/menu.inc
+++ b/includes/menu.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -14,7 +13,10 @@
  * The Drupal menu system drives both the navigation system from a user
  * perspective and the callback system that Drupal uses to respond to URLs
  * passed from the browser. For this reason, a good understanding of the
- * menu system is fundamental to the creation of complex modules.
+ * menu system is fundamental to the creation of complex modules. As a note,
+ * this is related to, but separate from menu.module, which allows menus
+ * (which in this context are hierarchical lists of links) to be customized from
+ * the Drupal administrative interface.
  *
  * Drupal's menu system follows a simple hierarchy defined by paths.
  * Implementations of hook_menu() define menu items and assign them to
@@ -125,7 +127,7 @@ define('MENU_IS_LOCAL_ACTION', 0x0100);
 /**
  * @defgroup menu_item_types Menu item types
  * @{
- * Definitions for various menu types.
+ * Definitions for various menu item types.
  *
  * Menu item definitions provide one of these constants, which are shortcuts for
  * combinations of @link menu_flags Menu flags @endlink.
@@ -1042,7 +1044,7 @@ function menu_tree_output($tree) {
     }
 
     // Allow menu-specific theme overrides.
-    $element['#theme'] = 'menu_link__' . $data['link']['menu_name'];
+    $element['#theme'] = 'menu_link__' . strtr($data['link']['menu_name'], '-', '_');
     $element['#attributes']['class'] = $class;
     $element['#title'] = $data['link']['title'];
     $element['#href'] = $data['link']['href'];
@@ -2064,7 +2066,7 @@ function menu_local_tasks($level = 0) {
  *   node or array('system', 'navigation') for a certain block.
  *
  * @return
- *   A list of menu router items that are local tasks for the passed in path.
+ *   A list of menu router items that are local tasks for the passed-in path.
  *
  * @see contextual_links_preprocess()
  */
@@ -2319,11 +2321,11 @@ function menu_set_active_trail($new_trail = NULL) {
       }
       list($key, $curr) = each($tree);
     }
-    // Make sure the current page is in the trail (needed for the page title),
-    // if the link's type allows it to be shown in the breadcrumb. Also exclude
-    // it if we are on the front page.
+    // Make sure the current page is in the trail to build the page title, by
+    // appending either the preferred link or the menu router item for the
+    // current page. Exclude it if we are on the front page.
     $last = end($trail);
-    if ($last['href'] != $preferred_link['href'] && ($preferred_link['type'] & MENU_VISIBLE_IN_BREADCRUMB) == MENU_VISIBLE_IN_BREADCRUMB && !drupal_is_front_page()) {
+    if ($last['href'] != $preferred_link['href'] && !drupal_is_front_page()) {
       $trail[] = $preferred_link;
     }
   }
@@ -2891,11 +2893,12 @@ function _menu_delete_item($item, $force = FALSE) {
         menu_link_save($child);
       }
     }
-    db_delete('menu_links')->condition('mlid', $item['mlid'])->execute();
 
-    // Notify modules we have deleted the item.
+    // Notify modules we are deleting the item.
     module_invoke_all('menu_link_delete', $item);
 
+    db_delete('menu_links')->condition('mlid', $item['mlid'])->execute();
+
     // Update the has_children status of the parent.
     _menu_update_parental_status($item);
     menu_cache_clear($item['menu_name']);
@@ -2904,18 +2907,26 @@ function _menu_delete_item($item, $force = FALSE) {
 }
 
 /**
- * Save a menu link.
+ * Saves a menu link.
+ *
+ * After calling this function, rebuild the menu cache using
+ * menu_cache_clear_all().
  *
  * @param $item
- *   An array representing a menu link item. The only mandatory keys are
- *   link_path and link_title. Possible keys are:
- *   - menu_name: Default is navigation
- *   - weight: Default is 0
- *   - expanded: Whether the item is expanded.
- *   - options: An array of options, see l() for more.
- *   - mlid: Set to an existing value, or 0 or NULL to insert a new link.
- *   - plid: The mlid of the parent.
- *   - router_path: The path of the relevant router item.
+ *   An associative array representing a menu link item, with elements:
+ *   - link_path: (required) The path of the menu item, which should be
+ *     normalized first by calling drupal_get_normal_path() on it.
+ *   - link_title: (required) Title to appear in menu for the link.
+ *   - menu_name: (optional) The machine name of the menu for the link.
+ *     Defaults to 'navigation'.
+ *   - weight: (optional) Integer to determine position in menu. Default is 0.
+ *   - expanded: (optional) Boolean that determines if the item is expanded.
+ *   - options: (optional) An array of options, see l() for more.
+ *   - mlid: (optional) Menu link identifier, the primary integer key for each
+ *     menu link. Can be set to an existing value, or to 0 or NULL
+ *     to insert a new link.
+ *   - plid: (optional) The mlid of the parent.
+ *   - router_path: (optional) The path of the relevant router item.
  *
  * @return
  *   The mlid of the saved menu link, or FALSE if the menu link could not be
diff --git a/includes/module.inc b/includes/module.inc
index aa061e1..779b668 100644
--- a/includes/module.inc
+++ b/includes/module.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -127,6 +126,9 @@ function system_list($type) {
   // if not fetch only the required information to fire bootstrap hooks
   // in case we are going to serve the page from cache.
   if ($type == 'bootstrap') {
+    if (isset($lists['bootstrap'])) {
+      return $lists['bootstrap'];
+    }
     if ($cached = cache_get('bootstrap_modules', 'cache_bootstrap')) {
       $bootstrap_list = $cached->data;
     }
@@ -372,7 +374,7 @@ function module_enable($module_list, $enable_dependencies = TRUE) {
 
       // Add dependencies to the list, with a placeholder weight.
       // The new modules will be processed as the while loop continues.
-      foreach ($module_data[$module]->info['dependencies'] as $dependency) {
+      foreach (array_keys($module_data[$module]->requires) as $dependency) {
         if (!isset($module_list[$dependency])) {
           $module_list[$dependency] = 0;
         }
@@ -854,7 +856,7 @@ function drupal_required_modules() {
 /**
  * Hands off alterable variables to type-specific *_alter implementations.
  *
- * This dispatch function hands off the passed in variables to type-specific
+ * This dispatch function hands off the passed-in variables to type-specific
  * hook_TYPE_alter() implementations in modules. It ensures a consistent
  * interface for all altering operations.
  *
@@ -888,14 +890,14 @@ function drupal_required_modules() {
  *   values in $type. For example, when Form API is using drupal_alter() to
  *   execute both hook_form_alter() and hook_form_FORM_ID_alter()
  *   implementations, it passes array('form', 'form_' . $form_id) for $type.
- * @param &$data
+ * @param $data
  *   The variable that will be passed to hook_TYPE_alter() implementations to be
  *   altered. The type of this variable depends on the value of the $type
  *   argument. For example, when altering a 'form', $data will be a structured
  *   array. When altering a 'profile', $data will be an object.
- * @param &$context1
+ * @param $context1
  *   (optional) An additional variable that is passed by reference.
- * @param &$context2
+ * @param $context2
  *   (optional) An additional variable that is passed by reference. If more
  *   context needs to be provided to implementations, then this should be an
  *   associative array as described above.
diff --git a/includes/pager.inc b/includes/pager.inc
index 553e279..146033f 100644
--- a/includes/pager.inc
+++ b/includes/pager.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -431,7 +430,7 @@ function theme_pager($variables) {
 /**
  * @defgroup pagerpieces Pager pieces
  * @{
- * Use these pieces to construct your own custom pagers in your theme.
+ * Theme functions for customizing pager elements.
  *
  * Note that you should NOT modify this file to customize your pager.
  */
diff --git a/includes/password.inc b/includes/password.inc
index 1c6672a..93d34f8 100644
--- a/includes/password.inc
+++ b/includes/password.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/path.inc b/includes/path.inc
index 83ebcb0..db60537 100644
--- a/includes/path.inc
+++ b/includes/path.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/registry.inc b/includes/registry.inc
index 99fbfef..3fb14fb 100644
--- a/includes/registry.inc
+++ b/includes/registry.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -98,7 +97,8 @@ function _registry_update() {
     _registry_check_code(REGISTRY_RESET_LOOKUP_CACHE);
   }
   catch (Exception $e) {
-    $transaction->rollback('registry', $e->getMessage(), array(), WATCHDOG_ERROR);
+    $transaction->rollback();
+    watchdog_exception('registry', $e);
     throw $e;
   }
 
diff --git a/includes/session.inc b/includes/session.inc
index 23af6bd..2ede2ff 100644
--- a/includes/session.inc
+++ b/includes/session.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/stream_wrappers.inc b/includes/stream_wrappers.inc
index 1f83778..7df1f9d 100644
--- a/includes/stream_wrappers.inc
+++ b/includes/stream_wrappers.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -384,7 +383,7 @@ abstract class DrupalLocalStreamWrapper implements DrupalStreamWrapperInterface
    *   The file mode ("r", "wb" etc.).
    * @param $options
    *   A bit mask of STREAM_USE_PATH and STREAM_REPORT_ERRORS.
-   * @param &$opened_path
+   * @param $opened_path
    *   A string containing the path actually opened.
    *
    * @return
diff --git a/includes/tablesort.inc b/includes/tablesort.inc
index b2b122f..121a1b9 100644
--- a/includes/tablesort.inc
+++ b/includes/tablesort.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -74,18 +73,7 @@ class TableSort extends SelectQueryExtender {
    *   The current sort direction ("asc" or "desc").
    */
   protected function getSort() {
-    if (isset($_GET['sort'])) {
-      return ($_GET['sort'] == 'desc') ? 'desc' : 'asc';
-    }
-    // User has not specified a sort. Use default if specified; otherwise use "asc".
-    else {
-      foreach ($this->header as $header) {
-        if (is_array($header) && isset($header['sort'])) {
-          return $header['sort'];
-        }
-      }
-    }
-    return 'asc';
+    return tablesort_get_sort($this->header);
   }
 
   /**
@@ -112,32 +100,7 @@ class TableSort extends SelectQueryExtender {
    *   - "sql": The name of the database field to sort on.
    */
   protected function order() {
-    $order = isset($_GET['order']) ? $_GET['order'] : '';
-    foreach ($this->header as $header) {
-      if (isset($header['data']) && $order == $header['data']) {
-        return array('name' => $header['data'], 'sql' => isset($header['field']) ? $header['field'] : '');
-      }
-
-      if (isset($header['sort']) && ($header['sort'] == 'asc' || $header['sort'] == 'desc')) {
-        $default = array('name' => $header['data'], 'sql' => isset($header['field']) ? $header['field'] : '');
-      }
-    }
-
-    if (isset($default)) {
-      return $default;
-    }
-    else {
-      // The first column specified is initial 'order by' field unless otherwise specified
-      $headers = array_values($this->header);
-      $header = $headers[0];
-      if (is_array($header)) {
-        $header += array('data' => NULL, 'field' => NULL);
-        return array('name' => $header['data'], 'sql' => $header['field']);
-      }
-      else {
-        return array('name' => $header);
-      }
-    }
+    return tablesort_get_order($this->header);
   }
 }
 
@@ -239,29 +202,27 @@ function tablesort_get_query_parameters() {
 function tablesort_get_order($headers) {
   $order = isset($_GET['order']) ? $_GET['order'] : '';
   foreach ($headers as $header) {
-    if (isset($header['data']) && $order == $header['data']) {
-      return array('name' => $header['data'], 'sql' => isset($header['field']) ? $header['field'] : '');
-    }
+    if (is_array($header)) {
+      if (isset($header['data']) && $order == $header['data']) {
+        $default = $header;
+        break;
+      }
 
-    if (isset($header['sort']) && ($header['sort'] == 'asc' || $header['sort'] == 'desc')) {
-      $default = array('name' => $header['data'], 'sql' => isset($header['field']) ? $header['field'] : '');
+      if (empty($default) && isset($header['sort']) && ($header['sort'] == 'asc' || $header['sort'] == 'desc')) {
+        $default = $header;
+      }
     }
   }
 
-  if (isset($default)) {
-    return $default;
-  }
-  else {
-    // The first column specified is the initial 'order by' field unless otherwise specified.
-    $first = current($headers);
-    if (is_array($first)) {
-      $first += array('data' => NULL, 'field' => NULL);
-      return array('name' => $first['data'], 'sql' => $first['field']);
-    }
-    else {
-      return array('name' => $first, 'sql' => '');
+  if (!isset($default)) {
+    $default = reset($headers);
+    if (!is_array($default)) {
+      $default = array('data' => $default);
     }
   }
+
+  $default += array('data' => NULL, 'field' => NULL);
+  return array('name' => $default['data'], 'sql' => $default['field']);
 }
 
 /**
@@ -274,12 +235,15 @@ function tablesort_get_order($headers) {
  */
 function tablesort_get_sort($headers) {
   if (isset($_GET['sort'])) {
-    return ($_GET['sort'] == 'desc') ? 'desc' : 'asc';
+    return (strtolower($_GET['sort']) == 'desc') ? 'desc' : 'asc';
   }
-  // User has not specified a sort. Use default if specified; otherwise use "asc".
+  // The user has not specified a sort. Use the default for the currently sorted
+  // header if specified; otherwise use "asc".
   else {
+    // Find out which header is currently being sorted.
+    $ts = tablesort_get_order($headers);
     foreach ($headers as $header) {
-      if (isset($header['sort'])) {
+      if (is_array($header) && isset($header['data']) && $header['data'] == $ts['name'] && isset($header['sort'])) {
         return $header['sort'];
       }
     }
diff --git a/includes/theme.inc b/includes/theme.inc
index c501586..3ae5000 100644
--- a/includes/theme.inc
+++ b/includes/theme.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -104,7 +103,7 @@ function drupal_theme_initialize() {
   drupal_static_reset('drupal_alter');
 
   // Provide the page with information about the theme that's used, so that a
-  // later AJAX request can be rendered using the same theme.
+  // later Ajax request can be rendered using the same theme.
   // @see ajax_base_page_theme()
   $setting['ajaxPageState'] = array(
     'theme' => $theme_key,
@@ -320,8 +319,8 @@ function drupal_theme_rebuild() {
  *   The theme registry that will eventually be cached; It is an associative
  *   array keyed by theme hooks, whose values are associative arrays describing
  *   the hook:
- *   - 'type': The passed in $type.
- *   - 'theme path': The passed in $path.
+ *   - 'type': The passed-in $type.
+ *   - 'theme path': The passed-in $path.
  *   - 'function': The name of the function generating output for this theme
  *     hook. Either defined explicitly in hook_theme() or, if neither 'function'
  *     nor 'template' is defined, then the default theme function name is used.
@@ -363,7 +362,6 @@ function drupal_theme_rebuild() {
  */
 function _theme_process_registry(&$cache, $name, $type, $theme, $path) {
   $result = array();
-  $function = $name . '_theme';
 
   // Processor functions work in two distinct phases with the process
   // functions always being executed after the preprocess functions.
@@ -372,24 +370,43 @@ function _theme_process_registry(&$cache, $name, $type, $theme, $path) {
     'process functions'    => 'process',
   );
 
+  $hook_defaults = array(
+    'variables' => TRUE,
+    'render element' => TRUE,
+    'pattern' => TRUE,
+    'base hook' => TRUE,
+  );
+
+  // Invoke the hook_theme() implementation, process what is returned, and
+  // merge it into $cache.
+  $function = $name . '_theme';
   if (function_exists($function)) {
     $result = $function($cache, $type, $theme, $path);
     foreach ($result as $hook => $info) {
+      // When a theme or engine overrides a module's theme function
+      // $result[$hook] will only contain key/value pairs for information being
+      // overridden.  Pull the rest of the information from what was defined by
+      // an earlier hook.
+
+      // Fill in the type and path of the module, theme, or engine that
+      // implements this theme function.
       $result[$hook]['type'] = $type;
       $result[$hook]['theme path'] = $path;
-      // if function and file are left out, default to standard naming
+
+      // If function and file are omitted, default to standard naming
       // conventions.
       if (!isset($info['template']) && !isset($info['function'])) {
         $result[$hook]['function'] = ($type == 'module' ? 'theme_' : $name . '_') . $hook;
       }
-      // If a path is set in the info, use what was set. Otherwise use the
-      // default path. This is mostly so system.module can declare theme
-      // functions on behalf of core .include files.
-      // All files are included to be safe. Conditionally included
-      // files can prevent them from getting registered.
+
       if (isset($cache[$hook]['includes'])) {
         $result[$hook]['includes'] = $cache[$hook]['includes'];
       }
+
+      // If the theme implementation defines a file, then also use the path
+      // that it defined. Otherwise use the default path. This allows
+      // system.module to declare theme functions on behalf of core .include
+      // files.
       if (isset($info['file'])) {
         $include_file = isset($info['path']) ? $info['path'] : $path;
         $include_file .= '/' . $info['file'];
@@ -397,14 +414,10 @@ function _theme_process_registry(&$cache, $name, $type, $theme, $path) {
         $result[$hook]['includes'][] = $include_file;
       }
 
-      // If these keys are left unspecified within overridden entries returned
-      // by hook_theme(), carry them forward from the prior entry. This is so
-      // that themes don't need to specify this information, since the module
-      // that registered the theme hook already has.
-      foreach (array('variables', 'render element', 'pattern', 'base hook') as $key) {
-        if (!isset($info[$key]) && isset($cache[$hook][$key])) {
-          $result[$hook][$key] = $cache[$hook][$key];
-        }
+      // If the default keys are not set, use the default values registered
+      // by the module.
+      if (isset($cache[$hook])) {
+        $result[$hook] += array_intersect_key($cache[$hook], $hook_defaults);
       }
 
       // The following apply only to theming hooks implemented as templates.
@@ -469,7 +482,7 @@ function _theme_process_registry(&$cache, $name, $type, $theme, $path) {
     }
 
     // Merge the newly created theme hooks into the existing cache.
-    $cache = array_merge($cache, $result);
+    $cache = $result + $cache;
   }
 
   // Let themes have variable processors even if they didn't register a template.
@@ -972,7 +985,7 @@ function drupal_find_theme_functions($cache, $prefixes) {
       // start with. The default is the name of the hook followed by '__'. An
       // 'base hook' key is added to each entry made for a found suggestion,
       // so that common functionality can be implemented for all suggestions of
-      // the same base hook. To keep things simple, deep heirarchy of
+      // the same base hook. To keep things simple, deep hierarchy of
       // suggestions is not supported: each suggestion's 'base hook' key
       // refers to a base hook, not to another suggestion, and all suggestions
       // are found using the base hook's pattern, not a pattern from an
@@ -982,7 +995,7 @@ function drupal_find_theme_functions($cache, $prefixes) {
         $matches = preg_grep('/^' . $prefix . '_' . $pattern . '/', $functions['user']);
         if ($matches) {
           foreach ($matches as $match) {
-            $new_hook = str_replace($prefix . '_', '', $match);
+            $new_hook = substr($match, strlen($prefix) + 1);
             $arg_name = isset($info['variables']) ? 'variables' : 'render element';
             $implementations[$new_hook] = array(
               'function' => $match,
@@ -1256,15 +1269,8 @@ function theme_enable($theme_list) {
   menu_rebuild();
   drupal_theme_rebuild();
 
-  // Notify locale module about new themes being enabled, so translations can
-  // be imported. This might start a batch, and only return to the redirect
-  // path after that.
-  module_invoke('locale', 'system_update', $theme_list);
-
-  // Invoke hook_themes_enabled after the themes have been enabled.
+  // Invoke hook_themes_enabled() after the themes have been enabled.
   module_invoke_all('themes_enabled', $theme_list);
-
-  return;
 }
 
 /**
@@ -1296,10 +1302,8 @@ function theme_disable($theme_list) {
   menu_rebuild();
   drupal_theme_rebuild();
 
-  // Invoke hook_themes_enabled after the themes have been enabled.
+  // Invoke hook_themes_disabled after the themes have been disabled.
   module_invoke_all('themes_disabled', $theme_list);
-
-  return;
 }
 
 /**
@@ -1756,10 +1760,10 @@ function theme_table($variables) {
  */
 function theme_tablesort_indicator($variables) {
   if ($variables['style'] == "asc") {
-    return theme('image', array('path' => 'misc/arrow-asc.png', 'alt' => t('sort ascending'), 'title' => t('sort ascending')));
+    return theme('image', array('path' => 'misc/arrow-asc.png', 'width' => 13, 'height' => 13, 'alt' => t('sort ascending'), 'title' => t('sort ascending')));
   }
   else {
-    return theme('image', array('path' => 'misc/arrow-desc.png', 'alt' => t('sort descending'), 'title' => t('sort descending')));
+    return theme('image', array('path' => 'misc/arrow-desc.png', 'width' => 13, 'height' => 13, 'alt' => t('sort descending'), 'title' => t('sort descending')));
   }
 }
 
@@ -1872,7 +1876,7 @@ function theme_more_help_link($variables) {
  */
 function theme_feed_icon($variables) {
   $text = t('Subscribe to @feed-title', array('@feed-title' => $variables['title']));
-  if ($image = theme('image', array('path' => 'misc/feed.png', 'alt' => $text))) {
+  if ($image = theme('image', array('path' => 'misc/feed.png', 'width' => 16, 'height' => 16, 'alt' => $text))) {
     return l($image, $variables['url'], array('html' => TRUE, 'attributes' => array('class' => array('feed-icon'), 'title' => $text)));
   }
 }
@@ -2042,6 +2046,9 @@ function _theme_table_cell($cell, $header = FALSE) {
  * Adds a default set of helper variables for variable processors and templates.
  * This comes in before any other preprocess function which makes it possible to
  * be used in default theme implementations (non-overridden theme functions).
+ *
+ * For more detailed information, see theme().
+ *
  */
 function template_preprocess(&$variables, $hook) {
   global $user;
@@ -2119,6 +2126,9 @@ function _template_preprocess_default_variables() {
 
 /**
  * A default process function used to alter variables as late as possible.
+ *
+ * For more detailed information, see theme().
+ *
  */
 function template_process(&$variables, $hook) {
   // Flatten out classes.
diff --git a/includes/theme.maintenance.inc b/includes/theme.maintenance.inc
index 4950d82..218a8ad 100644
--- a/includes/theme.maintenance.inc
+++ b/includes/theme.maintenance.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/token.inc b/includes/token.inc
index 57c15ea..edc8a96 100644
--- a/includes/token.inc
+++ b/includes/token.inc
@@ -1,24 +1,23 @@
 <?php
-// $Id$
 
 /**
  * @file
  * Drupal placeholder/token replacement system.
  *
- * Provides a set of extensible API functions for replacing placeholders in text
- * with meaningful values.
+ * API functions for replacing placeholders in text with meaningful values.
  *
- * For example: When configuring automated emails, an administrator enters standard
- * text for the email. Variables like the title of a node and the date the email
- * was sent can be entered as placeholders like [node:title] and [date:short].
- * When a Drupal module prepares to send the email, it can call the token_replace()
- * function, passing in the text. The token system will scan the text for placeholder
- * tokens, give other modules an opportunity to replace them with meaningful text,
- * then return the final product to the original module.
+ * For example: When configuring automated emails, an administrator enters
+ * standard text for the email. Variables like the title of a node and the date
+ * the email was sent can be entered as placeholders like [node:title] and
+ * [date:short]. When a Drupal module prepares to send the email, it can call
+ * the token_replace() function, passing in the text. The token system will
+ * scan the text for placeholder tokens, give other modules an opportunity to
+ * replace them with meaningful text, then return the final product to the
+ * original module.
  *
  * Tokens follow the form: [$type:$name], where $type is a general class of
  * tokens like 'node', 'user', or 'comment' and $name is the name of a given
- * placeholder. For example, [node:title].
+ * placeholder. For example, [node:title] or [node:created:since].
  *
  * In addition to raw text containing placeholders, modules may pass in an array
  * of objects to be used when performing the replacement. The objects should be
@@ -38,8 +37,8 @@
  * Some tokens may be chained in the form of [$type:$pointer:$name], where $type
  * is a normal token type, $pointer is a reference to another token type, and
  * $name is the name of a given placeholder. For example, [node:author:mail]. In
- * that example, 'author' is a pointer to the 'user' account that created the node,
- * and 'mail' is a placeholder available for any 'user'.
+ * that example, 'author' is a pointer to the 'user' account that created the
+ * node, and 'mail' is a placeholder available for any 'user'.
  *
  * @see token_replace()
  * @see hook_tokens()
@@ -47,7 +46,7 @@
  */
 
 /**
- * Replace all tokens in a given string with appropriate values.
+ * Replaces all tokens in a given string with appropriate values.
  *
  * @param $text
  *   A string potentially containing replaceable tokens.
@@ -55,22 +54,25 @@
  *   (optional) An array of keyed objects. For simple replacement scenarios
  *   'node', 'user', and others are common keys, with an accompanying node or
  *   user object being the value. Some token types, like 'site', do not require
- *   any explicit information from $data and can be replaced even if it is empty.
+ *   any explicit information from $data and can be replaced even if it is
+ *   empty.
  * @param $options
  *   (optional) A keyed array of settings and flags to control the token
  *   replacement process. Supported options are:
  *   - language: A language object to be used when generating locale-sensitive
  *     tokens.
  *   - callback: A callback function that will be used to post-process the array
- *     of token replacements after they are generated. For example, a module using
- *     tokens in a text-only email might provide a callback to strip HTML
+ *     of token replacements after they are generated. For example, a module
+ *     using tokens in a text-only email might provide a callback to strip HTML
  *     entities from token values before they are inserted into the final text.
  *   - clear: A boolean flag indicating that tokens should be removed from the
  *     final text if no replacement value can be generated.
  *   - sanitize: A boolean flag indicating that tokens should be sanitized for
- *     display to a web browser. Defaults to TRUE. Developers who set this option
- *     to FALSE assume responsibility for running filter_xss(), check_plain() or
- *     other appropriate scrubbing functions before displaying data to users.
+ *     display to a web browser. Defaults to TRUE. Developers who set this
+ *     option to FALSE assume responsibility for running filter_xss(),
+ *     check_plain() or other appropriate scrubbing functions before displaying
+ *     data to users.
+ *
  * @return
  *   Text with tokens replaced.
  */
@@ -96,17 +98,25 @@ function token_replace($text, array $data = array(), array $options = array()) {
 }
 
 /**
- * Build a list of all token-like patterns that appear in the text.
+ * Builds a list of all token-like patterns that appear in the text.
  *
  * @param $text
  *   The text to be scanned for possible tokens.
+ *
  * @return
  *   An associative array of discovered tokens, grouped by type.
  */
 function token_scan($text) {
-  // Matches tokens with the following pattern: [$type:$token]
-  // $type and $token may not contain white spaces.
-  preg_match_all('/\[([^\s\]:]*):([^\s\]]*)\]/', $text, $matches);
+  // Matches tokens with the following pattern: [$type:$name]
+  // $type and $name may not contain  [ ] or whitespace characters.
+  // $type may not contain : characters, but $name may.
+  preg_match_all('/
+    \[             # [ - pattern start
+    ([^\s\[\]:]*)  # match $type not containing whitespace : [ or ]
+    :              # : - separator
+    ([^\s\[\]]*)   # match $name not containing whitespace [ or ]
+    \]             # ] - pattern end
+    /x', $text, $matches);
 
   $types = $matches[1];
   $tokens = $matches[2];
@@ -123,7 +133,7 @@ function token_scan($text) {
 }
 
 /**
- * Generate replacement values for a list of tokens.
+ * Generates replacement values for a list of tokens.
  *
  * @param $type
  *   The type of token being replaced. 'node', 'user', and 'date' are common.
@@ -134,20 +144,22 @@ function token_scan($text) {
  *   (optional) An array of keyed objects. For simple replacement scenarios
  *   'node', 'user', and others are common keys, with an accompanying node or
  *   user object being the value. Some token types, like 'site', do not require
- *   any explicit information from $data and can be replaced even if it is empty.
+ *   any explicit information from $data and can be replaced even if it is
+ *   empty.
  * @param $options
  *   (optional) A keyed array of settings and flags to control the token
  *   replacement process. Supported options are:
- *   - 'language' A language object to be used when generating locale-sensitive
+ *   - language: A language object to be used when generating locale-sensitive
  *     tokens.
- *   - 'callback' A callback function that will be used to post-process the array
- *     of token replacements after they are generated. Can be used when modules
- *     require special formatting of token text, for example URL encoding or
- *     truncation to a specific length.
- *   - 'sanitize' A boolean flag indicating that tokens should be sanitized for
+ *   - callback: A callback function that will be used to post-process the
+ *     array of token replacements after they are generated. Can be used when
+ *     modules require special formatting of token text, for example URL
+ *     encoding or truncation to a specific length.
+ *   - sanitize: A boolean flag indicating that tokens should be sanitized for
  *     display to a web browser. Developers who set this option to FALSE assume
  *     responsibility for running filter_xss(), check_plain() or other
  *     appropriate scrubbing functions before displaying data to users.
+ *
  * @return
  *   An associative array of replacement values, keyed by the original 'raw'
  *   tokens that were found in the source text. For example:
@@ -173,7 +185,7 @@ function token_generate($type, array $tokens, array $data = array(), array $opti
 }
 
 /**
- * Given a list of tokens, return those that begin with a specific prefix.
+ * Given a list of tokens, returns those that begin with a specific prefix.
  *
  * Used to extract a group of 'chained' tokens (such as [node:author:name]) from
  * the full list of tokens found in text. For example:
@@ -181,7 +193,7 @@ function token_generate($type, array $tokens, array $data = array(), array $opti
  *   $data = array(
  *     'author:name' => '[node:author:name]',
  *     'title'       => '[node:title]',
- *     'created'     => '[node:author:name]',
+ *     'created'     => '[node:created]',
  *   );
  *   $results = token_find_with_prefix($data, 'author');
  *   $results == array('name' => '[node:author:name]');
@@ -194,6 +206,7 @@ function token_generate($type, array $tokens, array $data = array(), array $opti
  * @param $delimiter
  *   An optional string containing the character that separates the prefix from
  *   the rest of the token. Defaults to ':'.
+ *
  * @return
  *   An associative array of discovered tokens, with the prefix and delimiter
  *   stripped from the key.
@@ -230,6 +243,7 @@ function token_find_with_prefix(array $tokens, $prefix, $delimiter = ':') {
  *     'type' => 'user',
  *   );
  * @endcode
+ *
  * @return
  *   An associative array of token information, grouped by token type.
  */
diff --git a/includes/unicode.entities.inc b/includes/unicode.entities.inc
index 1ef3d47..3b1fbb6 100644
--- a/includes/unicode.entities.inc
+++ b/includes/unicode.entities.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/unicode.inc b/includes/unicode.inc
index 812a2f1..9dde2ca 100644
--- a/includes/unicode.inc
+++ b/includes/unicode.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Indicates an error during check for PHP unicode support.
@@ -170,7 +169,7 @@ function unicode_requirements() {
  * This is also where unsupported encodings will be converted. Callers should
  * take this into account: $data might have been changed after the call.
  *
- * @param &$data
+ * @param $data
  *   The XML data which will be parsed later.
  *
  * @return
@@ -221,7 +220,7 @@ function drupal_xml_parser_create(&$data) {
  * @param $data
  *   The data to be converted.
  * @param $encoding
- *   The encoding that the data is in
+ *   The encoding that the data is in.
  *
  * @return
  *   Converted data or FALSE.
diff --git a/includes/update.inc b/includes/update.inc
index 0019df6..1eb7a1d 100644
--- a/includes/update.inc
+++ b/includes/update.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/updater.inc b/includes/updater.inc
index b49d5d2..363c6eb 100644
--- a/includes/updater.inc
+++ b/includes/updater.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/utility.inc b/includes/utility.inc
index 8bd7890..254313f 100644
--- a/includes/utility.inc
+++ b/includes/utility.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/xmlrpc.inc b/includes/xmlrpc.inc
index 40b0d9d..92e5d14 100644
--- a/includes/xmlrpc.inc
+++ b/includes/xmlrpc.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/xmlrpcs.inc b/includes/xmlrpcs.inc
index fd5a407..70c7cda 100644
--- a/includes/xmlrpcs.inc
+++ b/includes/xmlrpcs.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -337,7 +336,7 @@ function xmlrpc_server_get_capabilities() {
 }
 
 /**
- * Returns the method signature of a function.
+ * Returns one method signature for a function.
  *
  * This is the function mapped to the XML-RPC method system.methodSignature.
  *
@@ -349,8 +348,8 @@ function xmlrpc_server_get_capabilities() {
  *   Name of method to return a method signature for.
  *
  * @return array
- *   An array of types representing the method signature of the function that
- *   $methodname maps to.
+ *   An array of arrays of types, each of the arrays representing one method
+ *   signature of the function that $methodname maps to.
  */
 function xmlrpc_server_method_signature($methodname) {
   $xmlrpc_server = xmlrpc_server_get();
@@ -365,7 +364,7 @@ function xmlrpc_server_method_signature($methodname) {
   foreach ($xmlrpc_server->signatures[$methodname] as $type) {
     $return[] = $type;
   }
-  return $return;
+  return array($return);
 }
 
 /**
diff --git a/index.php b/index.php
index f13c75a..8b83199 100644
--- a/index.php
+++ b/index.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/install.php b/install.php
index 478205e..881ca5a 100644
--- a/install.php
+++ b/install.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/misc/ajax.js b/misc/ajax.js
index b17e64a..fb03e2b 100644
--- a/misc/ajax.js
+++ b/misc/ajax.js
@@ -1,26 +1,25 @@
-// $Id$
 (function ($) {
 
 /**
- * Provides AJAX page updating via jQuery $.ajax (Asynchronous JavaScript and XML).
+ * Provides Ajax page updating via jQuery $.ajax (Asynchronous JavaScript and XML).
  *
- * AJAX is a method of making a request via Javascript while viewing an HTML
+ * Ajax is a method of making a request via JavaScript while viewing an HTML
  * page. The request returns an array of commands encoded in JSON, which is
  * then executed to make any changes that are necessary to the page.
  *
  * Drupal uses this file to enhance form elements with #ajax['path'] and
  * #ajax['wrapper'] properties. If set, this file will automatically be included
- * to provide AJAX capabilities.
+ * to provide Ajax capabilities.
  */
 
 Drupal.ajax = Drupal.ajax || {};
 
 /**
- * Attaches the AJAX behavior to each AJAX form element.
+ * Attaches the Ajax behavior to each Ajax form element.
  */
 Drupal.behaviors.AJAX = {
   attach: function (context, settings) {
-    // Load all AJAX behaviors specified in the settings.
+    // Load all Ajax behaviors specified in the settings.
     for (var base in settings.ajax) {
       if (!$('#' + base + '.ajax-processed').length) {
         var element_settings = settings.ajax[base];
@@ -37,7 +36,7 @@ Drupal.behaviors.AJAX = {
       }
     }
 
-    // Bind AJAX behaviors to all items showing the class.
+    // Bind Ajax behaviors to all items showing the class.
     $('.use-ajax:not(.ajax-processed)').addClass('ajax-processed').each(function () {
       var element_settings = {};
       // Clicked links look better with the throbber than the progress bar.
@@ -53,11 +52,11 @@ Drupal.behaviors.AJAX = {
       Drupal.ajax[base] = new Drupal.ajax(base, this, element_settings);
     });
 
-    // This class means to submit the form to the action using AJAX.
+    // This class means to submit the form to the action using Ajax.
     $('.use-ajax-submit:not(.ajax-processed)').addClass('ajax-processed').each(function () {
       var element_settings = {};
 
-      // AJAX submits specified in this manner automatically submit to the
+      // Ajax submits specified in this manner automatically submit to the
       // normal form action.
       element_settings.url = $(this.form).attr('action');
       // Form submit button clicks need to tell the form what was clicked so
@@ -75,13 +74,13 @@ Drupal.behaviors.AJAX = {
 };
 
 /**
- * AJAX object.
+ * Ajax object.
  *
- * All AJAX objects on a page are accessible through the global Drupal.ajax
+ * All Ajax objects on a page are accessible through the global Drupal.ajax
  * object and are keyed by the submit button's ID. You can access them from
  * your module's JavaScript file to override properties or functions.
  *
- * For example, if your AJAX enabled button has the ID 'edit-submit', you can
+ * For example, if your Ajax enabled button has the ID 'edit-submit', you can
  * redefine the function that is called to insert the new content like this
  * (inside a Drupal.behaviors attach block):
  * @code
@@ -134,7 +133,7 @@ Drupal.ajax = function (base, element, element_settings) {
   this.wrapper = '#' + element_settings.wrapper;
 
   // If there isn't a form, jQuery.ajax() will be used instead, allowing us to
-  // bind AJAX to links as well.
+  // bind Ajax to links as well.
   if (this.element.form) {
     this.form = $(this.element.form);
   }
@@ -179,7 +178,7 @@ Drupal.ajax = function (base, element, element_settings) {
     return ajax.eventResponse(this, event);
   });
 
-  // If necessary, enable keyboard submission so that AJAX behaviors
+  // If necessary, enable keyboard submission so that Ajax behaviors
   // can be triggered through keyboard input as well as e.g. a mousedown
   // action.
   if (element_settings.keypress) {
@@ -192,7 +191,7 @@ Drupal.ajax = function (base, element, element_settings) {
 /**
  * Handle a key press.
  *
- * The AJAX object will, if instructed, bind to a key press response. This
+ * The Ajax object will, if instructed, bind to a key press response. This
  * will test to see if the key press is valid to trigger this event and
  * if it is, trigger it for us and prevent other keypresses from triggering.
  * In this case we're handling RETURN and SPACEBAR keypresses (event codes 13
@@ -214,10 +213,10 @@ Drupal.ajax.prototype.keypressResponse = function (element, event) {
 };
 
 /**
- * Handle an event that triggers an AJAX response.
+ * Handle an event that triggers an Ajax response.
  *
- * When an event that triggers an AJAX response happens, this method will
- * perform the actual AJAX call. It is bound to the event using
+ * When an event that triggers an Ajax response happens, this method will
+ * perform the actual Ajax call. It is bound to the event using
  * bind() in the constructor, and it uses the options specified on the
  * ajax object.
  */
@@ -315,23 +314,41 @@ Drupal.ajax.prototype.beforeSubmit = function (form_values, element, options) {
 }
 
 /**
- * Prepare the AJAX request before it is sent.
+ * Prepare the Ajax request before it is sent.
  */
 Drupal.ajax.prototype.beforeSend = function (xmlhttprequest, options) {
+  // For forms without file inputs, the jQuery Form plugin serializes the form
+  // values, and then calls jQuery's $.ajax() function, which invokes this
+  // handler. In this circumstance, options.extraData is never used. For forms
+  // with file inputs, the jQuery Form plugin uses the browser's normal form
+  // submission mechanism, but captures the response in a hidden IFRAME. In this
+  // circumstance, it calls this handler first, and then appends hidden fields
+  // to the form to submit the values in options.extraData. There is no simple
+  // way to know which submission mechanism will be used, so we add to extraData
+  // regardless, and allow it to be ignored in the former case.
+  if (this.form) {
+    options.extraData = options.extraData || {};
+
+    // Let the server know when the IFRAME submission mechanism is used. The
+    // server can use this information to wrap the JSON response in a TEXTAREA,
+    // as per http://jquery.malsup.com/form/#file-upload.
+    options.extraData.ajax_iframe_upload = '1';
+
+    // The triggering element is about to be disabled (see below), but if it
+    // contains a value (e.g., a checkbox, textfield, select, etc.), ensure that
+    // value is included in the submission. As per above, submissions that use
+    // $.ajax() are already serialized prior to the element being disabled, so
+    // this is only needed for IFRAME submissions.
+    var v = $.fieldValue(this.element);
+    if (v !== null) {
+      options.extraData[this.element.name] = v;
+    }
+  }
+
   // Disable the element that received the change to prevent user interface
-  // interaction while the AJAX request is in progress. ajax.ajaxing prevents
+  // interaction while the Ajax request is in progress. ajax.ajaxing prevents
   // the element from triggering a new request, but does not prevent the user
   // from changing its value.
-  // Forms without file inputs are already serialized before this function is
-  // called. Forms with file inputs use an IFRAME to perform a POST request
-  // similar to a browser, so disabled elements are not contained in the
-  // submitted values. Therefore, we manually add the element's value to
-  // options.extraData.
-  var v = $.fieldValue(this.element);
-  if (v !== null) {
-    options.extraData = options.extraData || {};
-    options.extraData[this.element.name] = v;
-  }
   $(this.element).addClass('progress-disabled').attr('disabled', true);
 
   // Insert progressbar or throbber.
@@ -470,7 +487,7 @@ Drupal.ajax.prototype.commands = {
     // sufficiently tested whether attachBehaviors() can be successfully called
     // with a context object that includes top-level text nodes. However, to
     // give developers full control of the HTML appearing in the page, and to
-    // enable AJAX content to be inserted in places where DIV elements are not
+    // enable Ajax content to be inserted in places where DIV elements are not
     // allowed (e.g., within TABLE, TR, and SPAN parents), we check if the new
     // content satisfies the requirement of a single top-level element, and
     // only use the container DIV created above when it doesn't. For more
diff --git a/misc/authorize.js b/misc/authorize.js
index 3445d59..66b7897 100644
--- a/misc/authorize.js
+++ b/misc/authorize.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * @file
diff --git a/misc/autocomplete.js b/misc/autocomplete.js
index d66054b..5e85be4 100644
--- a/misc/autocomplete.js
+++ b/misc/autocomplete.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/batch.js b/misc/batch.js
index d0a32f2..fee71a5 100644
--- a/misc/batch.js
+++ b/misc/batch.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/collapse.js b/misc/collapse.js
index 28b3090..1a98dc0 100644
--- a/misc/collapse.js
+++ b/misc/collapse.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/drupal.js b/misc/drupal.js
index 598cec3..3cebbd2 100644
--- a/misc/drupal.js
+++ b/misc/drupal.js
@@ -1,4 +1,3 @@
-// $Id$
 
 var Drupal = Drupal || { 'settings': {}, 'behaviors': {}, 'locale': {} };
 
@@ -11,7 +10,7 @@ jQuery.noConflict();
  * Attach all registered behaviors to a page element.
  *
  * Behaviors are event-triggered actions that attach to page elements, enhancing
- * default non-Javascript UIs. Behaviors are registered in the Drupal.behaviors
+ * default non-JavaScript UIs. Behaviors are registered in the Drupal.behaviors
  * object using the method 'attach' and optionally also 'detach' as follows:
  * @code
  *    Drupal.behaviors.behaviorName = {
@@ -25,7 +24,7 @@ jQuery.noConflict();
  * @endcode
  *
  * Drupal.attachBehaviors is added below to the jQuery ready event and so
- * runs on initial page load. Developers implementing AHAH/AJAX in their
+ * runs on initial page load. Developers implementing AHAH/Ajax in their
  * solutions should also call this function after new page content has been
  * loaded, feeding in an element to be processed, in order to attach all
  * behaviors to the new content.
@@ -61,7 +60,7 @@ Drupal.attachBehaviors = function (context, settings) {
 /**
  * Detach registered behaviors from a page element.
  *
- * Developers implementing AHAH/AJAX in their solutions should call this
+ * Developers implementing AHAH/Ajax in their solutions should call this
  * function before page content is about to be removed, feeding in an element
  * to be processed, in order to allow special behaviors to detach from the
  * content.
@@ -89,7 +88,7 @@ Drupal.attachBehaviors = function (context, settings) {
  *     IFRAME elements reload their "src" when being moved within the DOM,
  *     behaviors bound to IFRAME elements (like WYSIWYG editors) may need to
  *     take some action.
- *   - serialize: When an AJAX form is submitted, this is called with the
+ *   - serialize: When an Ajax form is submitted, this is called with the
  *     form as the context. This provides every behavior within the form an
  *     opportunity to ensure that the field elements have correct content
  *     in them before the form is serialized. The canonical use-case is so
@@ -302,7 +301,7 @@ Drupal.getSelection = function (element) {
 };
 
 /**
- * Build an error message from an AJAX response.
+ * Build an error message from an Ajax response.
  */
 Drupal.ajaxError = function (xmlhttp, uri) {
   var statusCode, statusText, pathText, responseText, readyStateText, message;
diff --git a/misc/farbtastic/farbtastic.css b/misc/farbtastic/farbtastic.css
index e4c512c..25a68eb 100644
--- a/misc/farbtastic/farbtastic.css
+++ b/misc/farbtastic/farbtastic.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .farbtastic {
   position: relative;
diff --git a/misc/farbtastic/farbtastic.js b/misc/farbtastic/farbtastic.js
index 8c04078..10c9e76 100644
--- a/misc/farbtastic/farbtastic.js
+++ b/misc/farbtastic/farbtastic.js
@@ -1,4 +1,3 @@
-// $Id$
 (function(e){e.fn.farbtastic=function(f){e.farbtastic(this,f);return this};e.farbtastic=function(f,l){f=e(f).get(0);return f.farbtastic||(f.farbtastic=new e._farbtastic(f,l))};e._farbtastic=function(f,l){var a=this;e(f).html('<div class="farbtastic"><div class="color"></div><div class="wheel"></div><div class="overlay"></div><div class="h-marker marker"></div><div class="sl-marker marker"></div></div>');var k=e(".farbtastic",f);a.wheel=e(".wheel",f).get(0);a.radius=84;a.square=100;a.width=194;navigator.appVersion.match(/MSIE [0-6]\./)&&
 e("*",k).each(function(){if(this.currentStyle.backgroundImage!="none"){var b=this.currentStyle.backgroundImage;b=this.currentStyle.backgroundImage.substring(5,b.length-2);e(this).css({backgroundImage:"none",filter:"progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true, sizingMethod=crop, src='"+b+"')"})}});a.linkTo=function(b){typeof a.callback=="object"&&e(a.callback).unbind("keyup",a.updateValue);a.color=null;if(typeof b=="function")a.callback=b;else if(typeof b=="object"||typeof b=="string"){a.callback=
 e(b);a.callback.bind("keyup",a.updateValue);a.callback.get(0).value&&a.setColor(a.callback.get(0).value)}return this};a.updateValue=function(){this.value&&this.value!=a.color&&a.setColor(this.value)};a.setColor=function(b){var c=a.unpack(b);if(a.color!=b&&c){a.color=b;a.rgb=c;a.hsl=a.RGBToHSL(a.rgb);a.updateDisplay()}return this};a.setHSL=function(b){a.hsl=b;a.rgb=a.HSLToRGB(b);a.color=a.pack(a.rgb);a.updateDisplay();return this};a.widgetCoords=function(b){var c=e(a.wheel).offset();return{x:b.pageX-
diff --git a/misc/form.js b/misc/form.js
index 9190377..259b84e 100644
--- a/misc/form.js
+++ b/misc/form.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/jquery.ba-bbq.js b/misc/jquery.ba-bbq.js
index b84a232..deb9a2f 100644
--- a/misc/jquery.ba-bbq.js
+++ b/misc/jquery.ba-bbq.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery BBQ: Back Button & Query Library - v1.2.1 - 2/17/2010
diff --git a/misc/jquery.cookie.js b/misc/jquery.cookie.js
index 401f356..79f514c 100644
--- a/misc/jquery.cookie.js
+++ b/misc/jquery.cookie.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Cookie plugin 1.0
diff --git a/misc/jquery.form.js b/misc/jquery.form.js
index b0089b6..7a6f1b2 100644
--- a/misc/jquery.form.js
+++ b/misc/jquery.form.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*!
  * jQuery Form Plugin
diff --git a/misc/jquery.js b/misc/jquery.js
index 0701b71..e900c19 100644
--- a/misc/jquery.js
+++ b/misc/jquery.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*!
  * jQuery JavaScript Library v1.4.4
diff --git a/misc/jquery.once.js b/misc/jquery.once.js
index 00e811a..506fb48 100644
--- a/misc/jquery.once.js
+++ b/misc/jquery.once.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * jQuery Once Plugin v1.2
diff --git a/misc/machine-name.js b/misc/machine-name.js
index 4c1ad83..00a648a 100644
--- a/misc/machine-name.js
+++ b/misc/machine-name.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/print-rtl.css b/misc/print-rtl.css
index ee496e4..f99287a 100644
--- a/misc/print-rtl.css
+++ b/misc/print-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   direction: rtl;
diff --git a/misc/print.css b/misc/print.css
index 894f6e4..0a56ef1 100644
--- a/misc/print.css
+++ b/misc/print.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   margin: 1em;
diff --git a/misc/progress.js b/misc/progress.js
index b871b8d..822666a 100644
--- a/misc/progress.js
+++ b/misc/progress.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/states.js b/misc/states.js
index 55c1efe..ec070c9 100644
--- a/misc/states.js
+++ b/misc/states.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
@@ -363,7 +362,12 @@ states.State.prototype = {
 
   $(document).bind('state:required', function(e) {
     if (e.trigger) {
-      $(e.target).closest('.form-item, .form-submit, .form-wrapper')[e.value ? 'addClass' : 'removeClass']('form-required');
+      if (e.value) {
+        $(e.target).closest('.form-item, .form-wrapper').find('label').append('<span class="form-required">*</span>');
+      }
+      else {
+        $(e.target).closest('.form-item, .form-wrapper').find('label .form-required').remove();
+      }
     }
   });
 
diff --git a/misc/tabledrag.js b/misc/tabledrag.js
index 867f9c3..b566168 100644
--- a/misc/tabledrag.js
+++ b/misc/tabledrag.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
@@ -1080,7 +1079,7 @@ Drupal.tableDrag.prototype.row.prototype.indent = function (indentDiff) {
 
 /**
  * Find all siblings for a row, either according to its subgroup or indentation.
- * Note that the passed in row is included in the list of siblings.
+ * Note that the passed-in row is included in the list of siblings.
  *
  * @param settings
  *   The field settings we're using to identify what constitutes a sibling.
diff --git a/misc/tableheader.js b/misc/tableheader.js
index c3e2e3a..949ef52 100644
--- a/misc/tableheader.js
+++ b/misc/tableheader.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/tableselect.js b/misc/tableselect.js
index cba0c57..a50110e 100644
--- a/misc/tableselect.js
+++ b/misc/tableselect.js
@@ -1,9 +1,8 @@
-// $Id$
 (function ($) {
 
 Drupal.behaviors.tableSelect = {
   attach: function (context, settings) {
-    $('form table:has(th.select-all)', context).once('table-select', Drupal.tableSelect);
+    $('table:has(th.select-all)', context).once('table-select', Drupal.tableSelect);
   }
 };
 
diff --git a/misc/textarea.js b/misc/textarea.js
index 022d978..0ab5e71 100644
--- a/misc/textarea.js
+++ b/misc/textarea.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 Drupal.behaviors.textarea = {
diff --git a/misc/timezone.js b/misc/timezone.js
index b708875..5449730 100644
--- a/misc/timezone.js
+++ b/misc/timezone.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/misc/ui/jquery.effects.blind.min.js b/misc/ui/jquery.effects.blind.min.js
index 7b6da15..ed7c74f 100644
--- a/misc/ui/jquery.effects.blind.min.js
+++ b/misc/ui/jquery.effects.blind.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Blind 1.8.7
diff --git a/misc/ui/jquery.effects.bounce.min.js b/misc/ui/jquery.effects.bounce.min.js
index 0658478..ca63813 100644
--- a/misc/ui/jquery.effects.bounce.min.js
+++ b/misc/ui/jquery.effects.bounce.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Bounce 1.8.7
diff --git a/misc/ui/jquery.effects.clip.min.js b/misc/ui/jquery.effects.clip.min.js
index 594baf5..75966ec 100644
--- a/misc/ui/jquery.effects.clip.min.js
+++ b/misc/ui/jquery.effects.clip.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Clip 1.8.7
diff --git a/misc/ui/jquery.effects.core.min.js b/misc/ui/jquery.effects.core.min.js
index dca8c32..40c1550 100644
--- a/misc/ui/jquery.effects.core.min.js
+++ b/misc/ui/jquery.effects.core.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects 1.8.7
diff --git a/misc/ui/jquery.effects.drop.min.js b/misc/ui/jquery.effects.drop.min.js
index 0e4e33d..37a034d 100644
--- a/misc/ui/jquery.effects.drop.min.js
+++ b/misc/ui/jquery.effects.drop.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Drop 1.8.7
diff --git a/misc/ui/jquery.effects.explode.min.js b/misc/ui/jquery.effects.explode.min.js
index 0352f72..726f3d5 100644
--- a/misc/ui/jquery.effects.explode.min.js
+++ b/misc/ui/jquery.effects.explode.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Explode 1.8.7
diff --git a/misc/ui/jquery.effects.fade.min.js b/misc/ui/jquery.effects.fade.min.js
index c5da783..71127f9 100644
--- a/misc/ui/jquery.effects.fade.min.js
+++ b/misc/ui/jquery.effects.fade.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Fade 1.8.7
diff --git a/misc/ui/jquery.effects.fold.min.js b/misc/ui/jquery.effects.fold.min.js
index 53372a9..ccc6b29 100644
--- a/misc/ui/jquery.effects.fold.min.js
+++ b/misc/ui/jquery.effects.fold.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Fold 1.8.7
diff --git a/misc/ui/jquery.effects.highlight.min.js b/misc/ui/jquery.effects.highlight.min.js
index 0daa254..0ed3d89 100644
--- a/misc/ui/jquery.effects.highlight.min.js
+++ b/misc/ui/jquery.effects.highlight.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Highlight 1.8.7
diff --git a/misc/ui/jquery.effects.pulsate.min.js b/misc/ui/jquery.effects.pulsate.min.js
index 2ff338d..658d8d0 100644
--- a/misc/ui/jquery.effects.pulsate.min.js
+++ b/misc/ui/jquery.effects.pulsate.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Pulsate 1.8.7
diff --git a/misc/ui/jquery.effects.scale.min.js b/misc/ui/jquery.effects.scale.min.js
index 3ed44ef..206ef12 100644
--- a/misc/ui/jquery.effects.scale.min.js
+++ b/misc/ui/jquery.effects.scale.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Scale 1.8.7
diff --git a/misc/ui/jquery.effects.shake.min.js b/misc/ui/jquery.effects.shake.min.js
index 555d0f3..44542f3 100644
--- a/misc/ui/jquery.effects.shake.min.js
+++ b/misc/ui/jquery.effects.shake.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Shake 1.8.7
diff --git a/misc/ui/jquery.effects.slide.min.js b/misc/ui/jquery.effects.slide.min.js
index 8a153bf..94f5906 100644
--- a/misc/ui/jquery.effects.slide.min.js
+++ b/misc/ui/jquery.effects.slide.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Slide 1.8.7
diff --git a/misc/ui/jquery.effects.transfer.min.js b/misc/ui/jquery.effects.transfer.min.js
index ad681c1..0addaa8 100644
--- a/misc/ui/jquery.effects.transfer.min.js
+++ b/misc/ui/jquery.effects.transfer.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Effects Transfer 1.8.7
diff --git a/misc/ui/jquery.ui.accordion.css b/misc/ui/jquery.ui.accordion.css
index a015d7f..fcd7c55 100644
--- a/misc/ui/jquery.ui.accordion.css
+++ b/misc/ui/jquery.ui.accordion.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Accordion 1.8.7
diff --git a/misc/ui/jquery.ui.accordion.min.js b/misc/ui/jquery.ui.accordion.min.js
index ba08df0..0e0ee39 100644
--- a/misc/ui/jquery.ui.accordion.min.js
+++ b/misc/ui/jquery.ui.accordion.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Accordion 1.8.7
diff --git a/misc/ui/jquery.ui.autocomplete.css b/misc/ui/jquery.ui.autocomplete.css
index c949cab..80a5789 100644
--- a/misc/ui/jquery.ui.autocomplete.css
+++ b/misc/ui/jquery.ui.autocomplete.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Autocomplete 1.8.7
diff --git a/misc/ui/jquery.ui.autocomplete.min.js b/misc/ui/jquery.ui.autocomplete.min.js
index 8bbcaaf..9983ec7 100644
--- a/misc/ui/jquery.ui.autocomplete.min.js
+++ b/misc/ui/jquery.ui.autocomplete.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Autocomplete 1.8.7
diff --git a/misc/ui/jquery.ui.button.css b/misc/ui/jquery.ui.button.css
index 775bb59..973c314 100644
--- a/misc/ui/jquery.ui.button.css
+++ b/misc/ui/jquery.ui.button.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Button 1.8.7
diff --git a/misc/ui/jquery.ui.button.min.js b/misc/ui/jquery.ui.button.min.js
index 696d8dc..26366aa 100644
--- a/misc/ui/jquery.ui.button.min.js
+++ b/misc/ui/jquery.ui.button.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Button 1.8.7
diff --git a/misc/ui/jquery.ui.core.css b/misc/ui/jquery.ui.core.css
index 8f2c9b7..d436225 100644
--- a/misc/ui/jquery.ui.core.css
+++ b/misc/ui/jquery.ui.core.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI CSS Framework 1.8.7
diff --git a/misc/ui/jquery.ui.core.min.js b/misc/ui/jquery.ui.core.min.js
index de22e92..976e056 100644
--- a/misc/ui/jquery.ui.core.min.js
+++ b/misc/ui/jquery.ui.core.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*!
  * jQuery UI 1.8.7
diff --git a/misc/ui/jquery.ui.datepicker.css b/misc/ui/jquery.ui.datepicker.css
index 1a118fb..a904884 100644
--- a/misc/ui/jquery.ui.datepicker.css
+++ b/misc/ui/jquery.ui.datepicker.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Datepicker 1.8.7
diff --git a/misc/ui/jquery.ui.datepicker.min.js b/misc/ui/jquery.ui.datepicker.min.js
index 941b33a..11af481 100644
--- a/misc/ui/jquery.ui.datepicker.min.js
+++ b/misc/ui/jquery.ui.datepicker.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Datepicker 1.8.7
diff --git a/misc/ui/jquery.ui.dialog.css b/misc/ui/jquery.ui.dialog.css
index e66293c..156e03a 100644
--- a/misc/ui/jquery.ui.dialog.css
+++ b/misc/ui/jquery.ui.dialog.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Dialog 1.8.7
diff --git a/misc/ui/jquery.ui.dialog.min.js b/misc/ui/jquery.ui.dialog.min.js
index 656022b..d60151c 100644
--- a/misc/ui/jquery.ui.dialog.min.js
+++ b/misc/ui/jquery.ui.dialog.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Dialog 1.8.7
diff --git a/misc/ui/jquery.ui.draggable.min.js b/misc/ui/jquery.ui.draggable.min.js
index 6915ba9..59a7418 100644
--- a/misc/ui/jquery.ui.draggable.min.js
+++ b/misc/ui/jquery.ui.draggable.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Draggable 1.8.7
diff --git a/misc/ui/jquery.ui.droppable.min.js b/misc/ui/jquery.ui.droppable.min.js
index 698b28c..12efd10 100644
--- a/misc/ui/jquery.ui.droppable.min.js
+++ b/misc/ui/jquery.ui.droppable.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Droppable 1.8.7
diff --git a/misc/ui/jquery.ui.mouse.min.js b/misc/ui/jquery.ui.mouse.min.js
index 1cd6088..18057eb 100644
--- a/misc/ui/jquery.ui.mouse.min.js
+++ b/misc/ui/jquery.ui.mouse.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*!
  * jQuery UI Mouse 1.8.7
diff --git a/misc/ui/jquery.ui.position.min.js b/misc/ui/jquery.ui.position.min.js
index c45f085..2e1451e 100644
--- a/misc/ui/jquery.ui.position.min.js
+++ b/misc/ui/jquery.ui.position.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Position 1.8.7
diff --git a/misc/ui/jquery.ui.progressbar.css b/misc/ui/jquery.ui.progressbar.css
index 8f193a1..7561030 100644
--- a/misc/ui/jquery.ui.progressbar.css
+++ b/misc/ui/jquery.ui.progressbar.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Progressbar 1.8.7
diff --git a/misc/ui/jquery.ui.progressbar.min.js b/misc/ui/jquery.ui.progressbar.min.js
index 03c6bbd..7a8f0b7 100644
--- a/misc/ui/jquery.ui.progressbar.min.js
+++ b/misc/ui/jquery.ui.progressbar.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Progressbar 1.8.7
diff --git a/misc/ui/jquery.ui.resizable.css b/misc/ui/jquery.ui.resizable.css
index 6aa1e14..e0f15cc 100644
--- a/misc/ui/jquery.ui.resizable.css
+++ b/misc/ui/jquery.ui.resizable.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Resizable 1.8.7
diff --git a/misc/ui/jquery.ui.resizable.min.js b/misc/ui/jquery.ui.resizable.min.js
index 33fb618..4df6eb7 100644
--- a/misc/ui/jquery.ui.resizable.min.js
+++ b/misc/ui/jquery.ui.resizable.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Resizable 1.8.7
diff --git a/misc/ui/jquery.ui.selectable.css b/misc/ui/jquery.ui.selectable.css
index d06dfbc..1489dcf 100644
--- a/misc/ui/jquery.ui.selectable.css
+++ b/misc/ui/jquery.ui.selectable.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Selectable 1.8.7
diff --git a/misc/ui/jquery.ui.selectable.min.js b/misc/ui/jquery.ui.selectable.min.js
index 64fe9f9..e2ec516 100644
--- a/misc/ui/jquery.ui.selectable.min.js
+++ b/misc/ui/jquery.ui.selectable.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Selectable 1.8.7
diff --git a/misc/ui/jquery.ui.slider.css b/misc/ui/jquery.ui.slider.css
index 861bb49..a56a513 100644
--- a/misc/ui/jquery.ui.slider.css
+++ b/misc/ui/jquery.ui.slider.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Slider 1.8.7
diff --git a/misc/ui/jquery.ui.slider.min.js b/misc/ui/jquery.ui.slider.min.js
index 35b36a8..dc36f15 100644
--- a/misc/ui/jquery.ui.slider.min.js
+++ b/misc/ui/jquery.ui.slider.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Slider 1.8.7
diff --git a/misc/ui/jquery.ui.sortable.min.js b/misc/ui/jquery.ui.sortable.min.js
index 4e85656..2cb1eaa 100644
--- a/misc/ui/jquery.ui.sortable.min.js
+++ b/misc/ui/jquery.ui.sortable.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Sortable 1.8.7
diff --git a/misc/ui/jquery.ui.tabs.css b/misc/ui/jquery.ui.tabs.css
index 5a22a03..94420e1 100644
--- a/misc/ui/jquery.ui.tabs.css
+++ b/misc/ui/jquery.ui.tabs.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI Tabs 1.8.7
diff --git a/misc/ui/jquery.ui.tabs.min.js b/misc/ui/jquery.ui.tabs.min.js
index e6fb042..aeb42bb 100644
--- a/misc/ui/jquery.ui.tabs.min.js
+++ b/misc/ui/jquery.ui.tabs.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery UI Tabs 1.8.7
diff --git a/misc/ui/jquery.ui.theme.css b/misc/ui/jquery.ui.theme.css
index 205c9cf..1e622b4 100644
--- a/misc/ui/jquery.ui.theme.css
+++ b/misc/ui/jquery.ui.theme.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
  * jQuery UI CSS Framework 1.8.7
diff --git a/misc/ui/jquery.ui.widget.min.js b/misc/ui/jquery.ui.widget.min.js
index fd7efcb..165a272 100644
--- a/misc/ui/jquery.ui.widget.min.js
+++ b/misc/ui/jquery.ui.widget.min.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*!
  * jQuery UI Widget 1.8.7
diff --git a/misc/vertical-tabs-rtl.css b/misc/vertical-tabs-rtl.css
index 4598c90..7fb0347 100644
--- a/misc/vertical-tabs-rtl.css
+++ b/misc/vertical-tabs-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 div.vertical-tabs {
   margin-left: 0;
diff --git a/misc/vertical-tabs.css b/misc/vertical-tabs.css
index ba5db77..10e8153 100644
--- a/misc/vertical-tabs.css
+++ b/misc/vertical-tabs.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 div.vertical-tabs {
   margin: 1em 0 1em 15em; /* LTR */
diff --git a/misc/vertical-tabs.js b/misc/vertical-tabs.js
index 0c66ec6..82dcd2c 100644
--- a/misc/vertical-tabs.js
+++ b/misc/vertical-tabs.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/misc/watchdog-error.png b/misc/watchdog-error.png
index f7e60e5238ee0f613c73d556f69f7ff52be7a8bb..db05365aa51c5d77ebdf732aa642d94da8613f25 100644
GIT binary patch
delta 756
zcmV<Q0t@|z28;%fB!AOML_t(I%axPaOB+!b#pl^4(YS9U3MvM~s9@a2Jt}T-c~K!E
zxS=RQM8Tnvnt+OmphbgOG^LP#LD~nOT9B&rp->+Rni#dx)-4)+I{jua(~PF2J#ZQB
z%-rAo?)lDTm>{xPEbQ9anqhf)8H<aHn4O)4$z(E2O--@Pzkg_BV}rHXY%rV6ct1Ld
zubrLnYBc!L+KR2NE^r)&iHQm5^?LSikYT&s4p&bP?wgu$S67GI>T29nRN%U#1eb+{
zxX8=HKFvo)MtIn8&`M~)-P?<Mtrouedfe93z*|{~>(WwO6&2w^t;WyXTzt>U!bh6-
z_4PfkY;$uHZh!jl(A*5ae0n`@%F1w6T#U>7d|dbUi{H-E)A1oE2RfY&BE;cvuvV)T
z4=pY5H8vtpM*{=6EGUpbcuhw{;8dYNM@I*gN+l<N$QQ%T__*kcZ){Am=xlCIGI!8_
zFJ&^EBqhN{$7Na8Nf;TkzP^sb?rw=MuE9YB6Azgt$bVi!0zC2Y*iKDFBb|akY0T>C
zDtrwMxT~#&x2j6?<!pXl0@<3J6ppl)m<SJn+%Yk5(Y%gMK_D%&va%xP<)*wGS1b$f
zA1d0VJb4Io92*N)WF+3n<*25J2%x2<CBrtE>d%XJXh>QKg)mSD6c2Y)6pq5f@k*&g
zc6PQ?0DmnkEU+^(Gh$u>^_t>fq(!@JZIbspVPQB74Mi1MA(zWJ!6RNqqY<CUrwhu<
zQ^-D*e?sGc;^EhekPvLe#i5M+6sqC7#*0rVe~&)V4nI^Xn8*WTbTsxUD|}x3zU)xP
z3<MdVYRbt^g+jqSf_{s?J2bFMW}jzd;2X8}G;KLq$jdS9?)T*_b*zH?%*@QRJc9(l
z*g@(Te~;eKjvn%i&kO%F(;cg&h*VO}f>shtDwT@UXf)3D_I9+9(M=RYwOZ{=NlEbo
mw9J1<_Sg+=z(^B~eWG7>{A$IwwQ6nv0000<MNUMnLSTZ9pLEXv

delta 751
zcmV<L0ucR-28RZaB!A9HL_t(|+KrRhOB+!X#`ElxXxujv1r-BgqF~}O?on}z%S#j#
z!6iftLPWu#k(z*til9Y<F=|R7|AMp+KD8iK=|e#u3Yr+T($*!>=+oCTLo-a!wtjF3
zcP8_@=YHqAlIP@bIGEMdRm;-S5*8K~Ff%g)o6TmKoSbANFMrYI<|gBGI$^il@o{7X
z-@3XG&}wnm-j3~_9<VHn@$qq(&1U9bkl~Gu4S4$c@X*qN`-TSG)z-paRfXHKGF%rI
z<EpR_2edYsOdM?Z*-oh7?eE8fPKRJ)Bkt<z5U8%kZFxCvN=k60R^wMe0e<A=;WMoV
z1_qvXwzahdFMqvwY;8qIL9-eDiVED6mf~8Y!R_E6Lb}Y(#;5#zba!_{fVf;PW_^7f
zk8N!THaA186N3TQMMXSBtf`n7oXh3t?CgX>p<sCs`C{1}8xwp9j*ddCi`iL-<)Z(+
zmP&D!mIfysmthz;VWg6^wKW{~_J;Z5F&ZJ37&1kW{eP4c_>z;clbMNTIt78UBr7W`
z2sSn0zP=uTni|2Ei@7<7wLLMxA89`|6+Qxa6B6K|bpxG(Ksw3t^0JT@e`O_Z7zTmA
zbhJl#@)77XF%h2FSbUJlP)iZvL5quvmK}pZ$V*^oD7+I2p;$*04{ux?PNJjnMxlU8
zrE>G2`G5I&W_o&B$ctESDGpZpXs@FKV(msn;W#o9HDrZMCS!SzI9aV$d?lZ*G@2)n
z18V<_>WJbI(yNFFY$qk5g8byV;itxlODK1bzR(Uol}gyi18aOd4k#;>7r~cZnwW(k
z2I{7g{FKY(EDsWkyE|0aBeO4aa`2r-d!C-o=V;}Wb`SaTo+egBe&*)pI>I60Fve&!
z^7rT+?dT)VC@=i4o$gpYMWmW?CUo*YDV0iAtJS*odObSG=oSj1TCH|xWMqT@R4<qG
h&op$R%Hp3tqu+M?YQ;)-$Tt80002ovPDHLkV1lr2YybcN

diff --git a/misc/watchdog-ok.png b/misc/watchdog-ok.png
index 6ebea3e53d5fd889eb4ada215506c6e0e48b48bf..1d7baa06e2d09c704e47d4955a763066398e932c 100644
GIT binary patch
literal 375
zcmV--0f_#IP)<h;3K|Lk000e1NJLTq000sI000sQ1^@s6R?d!B0003#Nkl<ZILl*T
z7!+WIOg|9crqqz>K>VL!vGfTbPm^3j+QEh_mA=Q|!Q%xKQ6<NaY_K8AWxg<^3noBa
z!$zth#b85L$oyo;7tR2R=m9Y|sfL6=4f)SdCt3{@(FbB)QVp>L;?H11y2K{{MGSyg
zkW@oNfcOH~kg1X@poWOyQp^g(ia^YUMQ$G0kcHCc8HAZlfg&>aY@GyFyi8^V(Elt*
z;*ro8`p%Fn5Ce^7MtlZcfd}Li$qumM6*AmFd=V@*Nn$ZHhPViYgFoD$r7~|BT)0(%
z>>{Wu-!QoIcmh>P6BnrSq}t$y&63&%r0;{--QtsgvO2^kx)n0QK--_g4THGmErTPs
z8&Fo9w5VPxU5H{(zr-x4YgkE5GpxYeyd4-zKN;prorStalH39U6upYjSW+d{H2?sW
Vcv8)9RPO))002ovPDHLkV1jaCo!<Ze

literal 409
zcmV;K0cQS*P)<h;3K|Lk000e1NJLTq000pH000pP1^@s6J8eh$0004CNkl<Zc-ozk
zKTE@45Qk5+8B7IB)HHdsbjToxx;Qur;=jekMQ{)t6dXhy1xFPfDnTi9s7Q$B6X;iP
z5f$779bI%%kWR0^94{dfHED+@IdXT;d&z~Qlx;zwQw2{Pw<)LrNxrxtqQQ0q`z#2=
zGtCs|AaPq2th3<K`J~m-ax?|dS`lmm37WKFtf6@r=$y+bSOAjQ?cYK32<VCPIRxY2
zg9V4?F`7p~DOr;x=mYmGIJH707)aHjpa3dB`$f`V!MV62qjL<^j>@GZ9v5CXA>Owu
zAy`zK_@b5GrD&C)<1fi0kj#m75EUZU!2>_@%D&n}cS?|u%*T?zd8bL;MZBe^d!y;%
zEULu6-;OU0doLE%?JL}0I6g8x2!?=`DM5pQQ(t2dPl2f>^eG6;%-<jm0<rl+QZ3ij
z6ouRpUbQc-v5h93*|%y6i}N`pOtcwLQQL4cr%-$Yp|OBwC+{L*00000NkvXXu0mjf
Deb%b2

diff --git a/misc/watchdog-warning.png b/misc/watchdog-warning.png
index 5d33a512ee78ecd82a36763d4588ffa9ba45b767..d8dced8890f22165848acc20297fdb93fc2a77ff 100644
GIT binary patch
literal 318
zcmV-E0m1%>P)<h;3K|Lk000e1NJLTq000sI000sQ1^@s6R?d!B00036Nkl<ZILl*T
zpcj}vefob8rr3~E$GrcqS)uzsIy(A4MF#!($Oy(zgM7$y%^{!vf8R2K@tP%i<hcrD
z(BBt~|LaR27{n&oRbbcb1G?r3(|-p`Mlc4k*DN5>RbbaVU;<+Y3q~-8@ria7*fqO=
zuDQbm#t!C;U<~80nM0(jKnDH0!3@U^W{hBrEJn~(AVW@X^Zozt3Nsu#m@<Mfve?=g
z`uJT1cFhH56kMOd1jgv%I9&yH%_g90&ae=L*G|FVDzIygvtVEcBStXBCWqlFuxr-(
z{{MfN1p_-6GJ-KSxwZXht^ymh+VB7W{j4P6wY>&d!|Feo*ausn`;dtl0NW0KXl_Kc
QhX4Qo07*qoM6N<$f(x6B%m4rY

literal 319
zcmV-F0l@x=P)<h;3K|Lk000e1NJLTq000pH000pP1^@s6J8eh$00037Nkl<Zc-o!N
zy=uZx6u|MEBtDMX7Fu<?yGdUlFW>`o&l8j`g>-Om=ul|x;^5$5L7|1};Nalk;NZ}u
zL-*=w&J_;{N75u0esDkF@aI~2D~ci{R)xg_KHs|-ztk}Z0<1jb_Xo&nh*!R1>f!zy
zjQF|1HKm5^zW~EKgZ5lgyke46>}*sWAZ8yAxTavm);3fd2%ov;-->Zkv9S%+0>bCG
z&o%i&4r_<08zAXBQ6mP-M?M}_4pY}aGI#o^nW>Q#OD7}j*+krPji?wV6$`fz{dlaA
z6(6pku7I3<;~K8eKH|(3)FqI!Z~7rsV}`umBEHp1(f1ePZ?GcING-1->kr*=e`ss|
RHogD=002ovPDHLkV1j|ik2U}R

diff --git a/modules/README.txt b/modules/README.txt
index 621dede..8928d80 100644
--- a/modules/README.txt
+++ b/modules/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory is reserved for core module files. Custom or contributed modules
 should be placed in their own subdirectory of the sites/all/modules directory.
diff --git a/modules/aggregator/aggregator-feed-source.tpl.php b/modules/aggregator/aggregator-feed-source.tpl.php
index 46894e9..6a684bd 100644
--- a/modules/aggregator/aggregator-feed-source.tpl.php
+++ b/modules/aggregator/aggregator-feed-source.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator-item.tpl.php b/modules/aggregator/aggregator-item.tpl.php
index 854e3fa..c5dd70c 100644
--- a/modules/aggregator/aggregator-item.tpl.php
+++ b/modules/aggregator/aggregator-item.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator-rtl.css b/modules/aggregator/aggregator-rtl.css
index 508ca31..ea59ca3 100644
--- a/modules/aggregator/aggregator-rtl.css
+++ b/modules/aggregator/aggregator-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #aggregator .feed-source .feed-icon {
   float: left;
diff --git a/modules/aggregator/aggregator-summary-item.tpl.php b/modules/aggregator/aggregator-summary-item.tpl.php
index ec96b9a..1c82999 100644
--- a/modules/aggregator/aggregator-summary-item.tpl.php
+++ b/modules/aggregator/aggregator-summary-item.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator-summary-items.tpl.php b/modules/aggregator/aggregator-summary-items.tpl.php
index 3d35930..0e2133a 100644
--- a/modules/aggregator/aggregator-summary-items.tpl.php
+++ b/modules/aggregator/aggregator-summary-items.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator-wrapper.tpl.php b/modules/aggregator/aggregator-wrapper.tpl.php
index 536da18..80b9032 100644
--- a/modules/aggregator/aggregator-wrapper.tpl.php
+++ b/modules/aggregator/aggregator-wrapper.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator.admin.inc b/modules/aggregator/aggregator.admin.inc
index a2d9649..08087af 100644
--- a/modules/aggregator/aggregator.admin.inc
+++ b/modules/aggregator/aggregator.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -350,16 +349,17 @@ function aggregator_form_opml_submit($form, &$form_state) {
 /**
  * Parse an OPML file.
  *
- * Feeds are recognized as <outline> elements with the attributes
- * <em>text</em> and <em>xmlurl</em> set.
+ * Feeds are recognized as <outline> elements with the attributes "text" and
+ * "xmlurl" set.
  *
  * @param $opml
  *   The complete contents of an OPML document.
+ *
  * @return
- *   An array of feeds, each an associative array with a <em>title</em> and
- *   a <em>url</em> element, or NULL if the OPML document failed to be parsed.
- *   An empty array will be returned if the document is valid but contains
- *   no feeds, as some OPML documents do.
+ *   An array of feeds, each an associative array with a "title" and a "url"
+ *   element, or NULL if the OPML document failed to be parsed. An empty
+ *   array will be returned if the document is valid but contains no feeds, as
+ *   some OPML documents do.
  */
 function _aggregator_parse_opml($opml) {
   $feeds = array();
diff --git a/modules/aggregator/aggregator.api.php b/modules/aggregator/aggregator.api.php
index cfdac8f..f31413c 100644
--- a/modules/aggregator/aggregator.api.php
+++ b/modules/aggregator/aggregator.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator.css b/modules/aggregator/aggregator.css
index 0ee9f88..13c58ff 100644
--- a/modules/aggregator/aggregator.css
+++ b/modules/aggregator/aggregator.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #aggregator .feed-source .feed-title {
   margin-top: 0;
diff --git a/modules/aggregator/aggregator.fetcher.inc b/modules/aggregator/aggregator.fetcher.inc
index 0974a69..0f72877 100644
--- a/modules/aggregator/aggregator.fetcher.inc
+++ b/modules/aggregator/aggregator.fetcher.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator.info b/modules/aggregator/aggregator.info
index d97d68b..988111e 100644
--- a/modules/aggregator/aggregator.info
+++ b/modules/aggregator/aggregator.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Aggregator
 description = "Aggregates syndicated content (RSS, RDF, and Atom feeds)."
 package = Core
diff --git a/modules/aggregator/aggregator.install b/modules/aggregator/aggregator.install
index 6f5230d..f19d7de 100644
--- a/modules/aggregator/aggregator.install
+++ b/modules/aggregator/aggregator.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator.module b/modules/aggregator/aggregator.module
index 4d70102..1e1686a 100644
--- a/modules/aggregator/aggregator.module
+++ b/modules/aggregator/aggregator.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -27,9 +26,9 @@ function aggregator_help($path, $arg) {
       $output .= '<dt>' . t('Adding, editing, and deleting feeds') . '</dt>';
       $output .= '<dd>' . t('Administrators can add, edit, and delete feeds, and choose how often to check each feed for newly updated items on the <a href="@feededit">Feed aggregator administration page</a>.', array('@feededit' => url('admin/config/services/aggregator'))) . '</dd>';
       $output .= '<dt>' . t('OPML integration') . '</dt>';
-      $output .= '<dd>' .  t('A <a href="@aggregator-opml">machine-readable OPML file</a> of all feeds is available. OPML is an XML-based file format used to share outline-structured information such as a list of RSS feeds. Feeds can also be <a href="@import-opml">imported via an OPML file</a>.', array('@aggregator-opml' => url('aggregator/opml'), '@import-opml' => url('admin/config/services/aggregator'))) . '</dd>';
+      $output .= '<dd>' . t('A <a href="@aggregator-opml">machine-readable OPML file</a> of all feeds is available. OPML is an XML-based file format used to share outline-structured information such as a list of RSS feeds. Feeds can also be <a href="@import-opml">imported via an OPML file</a>.', array('@aggregator-opml' => url('aggregator/opml'), '@import-opml' => url('admin/config/services/aggregator'))) . '</dd>';
       $output .= '<dt>' . t('Configuring cron') . '</dt>';
-      $output .= '<dd>' .  t('A correctly configured <a href="@cron">cron maintenance task</a> is required to update feeds automatically.', array('@cron' => 'http://drupal.org/cron')) . '</dd>';
+      $output .= '<dd>' . t('A correctly configured <a href="@cron">cron maintenance task</a> is required to update feeds automatically.', array('@cron' => 'http://drupal.org/cron')) . '</dd>';
       $output .= '</dl>';
       return $output;
     case 'admin/config/services/aggregator':
@@ -195,7 +194,6 @@ function aggregator_menu() {
     'title arguments' => array(2),
     'page callback' => 'aggregator_page_category',
     'page arguments' => array(2),
-    'access callback' => 'user_access',
     'access arguments' => array('access news feeds'),
     'file' => 'aggregator.pages.inc',
   );
@@ -268,7 +266,7 @@ function aggregator_menu() {
 }
 
 /**
- * Menu callback.
+ * Title callback for aggregatory category pages.
  *
  * @return
  *   An aggregator category title.
@@ -281,7 +279,8 @@ function _aggregator_category_title($category) {
  * Find out whether there are any aggregator categories.
  *
  * @return
- *   TRUE if there is at least one category and the user has access to them, FALSE otherwise.
+ *   TRUE if there is at least one category and the user has access to them, FALSE
+ *   otherwise.
  */
 function _aggregator_has_categories() {
   return user_access('access news feeds') && db_query('SELECT COUNT(*) FROM {aggregator_category}')->fetchField();
@@ -307,7 +306,7 @@ function aggregator_permission() {
  * Queues news feeds for updates once their refresh interval has elapsed.
  */
 function aggregator_cron() {
-  $result = db_query('SELECT * FROM {aggregator_feed} WHERE queued = 0 AND checked + refresh < :time AND refresh != :never', array(
+  $result = db_query('SELECT * FROM {aggregator_feed} WHERE queued = 0 AND checked + refresh < :time AND refresh <> :never', array(
     ':time' => REQUEST_TIME,
     ':never' => AGGREGATOR_CLEAR_NEVER
   ));
@@ -344,16 +343,16 @@ function aggregator_cron_queue_info() {
  * Implements hook_block_info().
  */
 function aggregator_block_info() {
-  $block = array();
+  $blocks = array();
   $result = db_query('SELECT cid, title FROM {aggregator_category} ORDER BY title');
   foreach ($result as $category) {
-    $block['category-' . $category->cid]['info'] = t('!title category latest items', array('!title' => $category->title));
+    $blocks['category-' . $category->cid]['info'] = t('!title category latest items', array('!title' => $category->title));
   }
   $result = db_query('SELECT fid, title FROM {aggregator_feed} WHERE block <> 0 ORDER BY fid');
   foreach ($result as $feed) {
-    $block['feed-' . $feed->fid]['info'] = t('!title feed latest items', array('!title' => $feed->title));
+    $blocks['feed-' . $feed->fid]['info'] = t('!title feed latest items', array('!title' => $feed->title));
   }
-  return $block;
+  return $blocks;
 }
 
 /**
@@ -367,7 +366,7 @@ function aggregator_block_configure($delta = '') {
       '#type' => 'select',
       '#title' => t('Number of news items in block'),
       '#default_value' => $value,
-      '#options' => drupal_map_assoc(array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))
+      '#options' => drupal_map_assoc(range(2, 20)),
     );
     return $form;
   }
@@ -720,7 +719,8 @@ function aggregator_filter_xss($value) {
 /**
  * Check and sanitize aggregator configuration.
  *
- * Goes through all fetchers, parsers and processors and checks whether they are available.
+ * Goes through all fetchers, parsers and processors and checks whether they are
+ * available.
  * If one is missing resets to standard configuration.
  *
  * @return
diff --git a/modules/aggregator/aggregator.pages.inc b/modules/aggregator/aggregator.pages.inc
index 3ea5935..53ecb36 100644
--- a/modules/aggregator/aggregator.pages.inc
+++ b/modules/aggregator/aggregator.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/aggregator/aggregator.parser.inc b/modules/aggregator/aggregator.parser.inc
index 4b1ff20..cffd1c3 100644
--- a/modules/aggregator/aggregator.parser.inc
+++ b/modules/aggregator/aggregator.parser.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -125,7 +124,11 @@ function aggregator_parse_feed(&$data, $feed) {
     else {
       $item['link'] = $feed->link;
     }
-    $item['guid'] = isset($item['guid']) ? $item['guid'] : '';
+
+    // Atom feeds have an ID tag instead of a GUID tag.
+    if (!isset($item['guid'])) {
+      $item['guid'] = isset($item['id']) ? $item['id'] : '';
+    }
 
     // Atom feeds have a content and/or summary tag instead of a description tag.
     if (!empty($item['content:encoded'])) {
diff --git a/modules/aggregator/aggregator.processor.inc b/modules/aggregator/aggregator.processor.inc
index cd74c03..6eb2c66 100644
--- a/modules/aggregator/aggregator.processor.inc
+++ b/modules/aggregator/aggregator.processor.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -163,8 +162,8 @@ function aggregator_save_item($edit) {
     $result = db_query('SELECT cid FROM {aggregator_category_feed} WHERE fid = :fid', array(':fid' => $edit['fid']));
     foreach ($result as $category) {
       db_merge('aggregator_category_item')
-        ->key(array('iid' => $edit['iid']))
-        ->fields(array(
+        ->key(array(
+          'iid' => $edit['iid'],
           'cid' => $category->cid,
         ))
         ->execute();
diff --git a/modules/aggregator/aggregator.test b/modules/aggregator/aggregator.test
index abe7804..1ab12dc 100644
--- a/modules/aggregator/aggregator.test
+++ b/modules/aggregator/aggregator.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Creates tests for aggregator module.
+ * Tests for aggregator.module.
  */
 
 class AggregatorTestCase extends DrupalWebTestCase {
@@ -854,6 +853,7 @@ class FeedParserTestCase extends AggregatorTestCase {
     $this->assertText('Atom-Powered Robots Run Amok');
     $this->assertLinkByHref('http://example.org/2003/12/13/atom03');
     $this->assertText('Some text.');
+    $this->assertEqual('urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a', db_query('SELECT guid FROM {aggregator_item} WHERE link = :link', array(':link' => 'http://example.org/2003/12/13/atom03'))->fetchField(), 'Atom entry id element is parsed correctly.');
   }
 }
 
diff --git a/modules/aggregator/tests/aggregator_test.info b/modules/aggregator/tests/aggregator_test.info
index 1a66513..b8dd19d 100644
--- a/modules/aggregator/tests/aggregator_test.info
+++ b/modules/aggregator/tests/aggregator_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Aggregator module tests"
 description = "Support module for aggregator related testing."
 package = Testing
diff --git a/modules/aggregator/tests/aggregator_test.module b/modules/aggregator/tests/aggregator_test.module
index 0e67bbf..2d26a5d 100644
--- a/modules/aggregator/tests/aggregator_test.module
+++ b/modules/aggregator/tests/aggregator_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_menu().
diff --git a/modules/block/block-admin-display-form.tpl.php b/modules/block/block-admin-display-form.tpl.php
index f7c9b1c..94b6104 100644
--- a/modules/block/block-admin-display-form.tpl.php
+++ b/modules/block/block-admin-display-form.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/block/block.admin.inc b/modules/block/block.admin.inc
index 5902c20..7cf299c 100644
--- a/modules/block/block.admin.inc
+++ b/modules/block/block.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -17,7 +16,7 @@ function block_admin_demo($theme = NULL) {
 /**
  * Menu callback for admin/structure/block.
  *
- * @param $theme
+ * @param $theme
  *   The theme to display the administration page for. If not provided, defaults
  *   to the currently used theme.
  */
diff --git a/modules/block/block.api.php b/modules/block/block.api.php
index 7b2ce05..d33f594 100644
--- a/modules/block/block.api.php
+++ b/modules/block/block.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -34,7 +33,7 @@
  * it is preferable to use descriptive strings whenever possible, and only use a
  * numeric identifier if you have to (for instance if your module allows users
  * to create several similar blocks that you identify within your module code
- * with numeric IDs).
+ * with numeric IDs). The maximum length for delta values is 32 bytes.
  *
  * @return
  *   An associative array whose keys define the delta for each block and whose
@@ -77,12 +76,12 @@
  *     enabled theme, the block will be disabled.
  *   - 'visibility': (optional) Initial value for the visibility flag, which
  *     tells how to interpret the 'pages' value. Possible values are:
- *     - 0: Show on all pages except listed pages. 'pages' lists the paths where
- *       the block should not be shown.
- *     - 1: Show only on listed pages. 'pages' lists the paths where the block
- *       should be shown.
- *     - 2: Use custom PHP code to determine visibility. 'pages' gives the PHP
- *       code to use.
+ *     - BLOCK_VISIBILITY_NOTLISTED: Show on all pages except listed pages.
+ *       'pages' lists the paths where the block should not be shown.
+ *     - BLOCK_VISIBILITY_LISTED: Show only on listed pages. 'pages' lists the
+ *       paths where the block should be shown.
+ *     - BLOCK_VISIBILITY_PHP: Use custom PHP code to determine visibility.
+ *       'pages' gives the PHP code to use.
  *     Most modules do not provide an initial value for 'visibility' or 'pages',
  *     and any value provided can be modified by a user on the block
  *     configuration screen.
@@ -206,23 +205,27 @@ function hook_block_save($delta = '', $edit = array()) {
  * @see hook_block_view_MODULE_DELTA_alter()
  */
 function hook_block_view($delta = '') {
-  // This example comes from node.module. Note that you can also return a
-  // renderable array rather than rendered HTML for 'content'.
+  // This example is adapted from node.module.
   $block = array();
 
   switch ($delta) {
     case 'syndicate':
       $block['subject'] = t('Syndicate');
-      $block['content'] = theme('feed_icon', array('url' => url('rss.xml'), 'title' => t('Syndicate')));
+      $block['content'] = array(
+        '#theme' => 'feed_icon',
+        '#url' => 'rss.xml',
+        '#title' => t('Syndicate'),
+      );
       break;
 
     case 'recent':
       if (user_access('access content')) {
         $block['subject'] = t('Recent content');
         if ($nodes = node_get_recent(variable_get('node_recent_block_count', 10))) {
-          $block['content'] = theme('node_recent_block', array(
-            'nodes' => $nodes,
-          ));
+          $block['content'] = array(
+            '#theme' => 'node_recent_block',
+            '#nodes' => $nodes,
+          );
         } else {
           $block['content'] = t('No content available.');
         }
diff --git a/modules/block/block.css b/modules/block/block.css
index 51a1684..214c8a2 100644
--- a/modules/block/block.css
+++ b/modules/block/block.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #blocks tr.region-title td {
   font-weight: bold;
diff --git a/modules/block/block.info b/modules/block/block.info
index 194b6bf..f8c0f0c 100644
--- a/modules/block/block.info
+++ b/modules/block/block.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Block
 description = Controls the visual building blocks a page is constructed with. Blocks are boxes of content rendered into an area, or region, of a web page.
 package = Core
diff --git a/modules/block/block.install b/modules/block/block.install
index ef279d9..c45b076 100644
--- a/modules/block/block.install
+++ b/modules/block/block.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -229,6 +228,7 @@ function block_update_7000() {
  * {boxes} to {block_custom}.
  */
 function block_update_7002() {
+  db_drop_index('blocks', 'list');
   db_rename_table('blocks', 'block');
   db_rename_table('blocks_roles', 'block_role');
   db_rename_table('boxes', 'block_custom');
@@ -238,7 +238,6 @@ function block_update_7002() {
  * Change the weight column to normal int.
  */
 function block_update_7003() {
-  db_drop_index('block', 'list');
   db_change_field('block', 'weight', 'weight', array(
     'type' => 'int',
     'not null' => TRUE,
@@ -462,5 +461,12 @@ function block_update_7007() {
 }
 
 /**
+ * Update database to match Drupal 7 schema.
+ */
+function block_update_7008() {
+  db_drop_field('block', 'throttle');
+}
+
+/**
  * @} End of "addtogroup updates-6.x-to-7.x"
  */
diff --git a/modules/block/block.js b/modules/block/block.js
index be284bf..ce4995d 100644
--- a/modules/block/block.js
+++ b/modules/block/block.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/block/block.module b/modules/block/block.module
index db63be8..73eba33 100644
--- a/modules/block/block.module
+++ b/modules/block/block.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -258,7 +257,7 @@ function block_page_build(&$page) {
   // The theme system might not yet be initialized. We need $theme.
   drupal_theme_initialize();
 
-  // Populate all block regions
+  // Fetch a list of regions for the current theme.
   $all_regions = system_region_list($theme);
 
   $item = menu_get_item();
@@ -356,7 +355,7 @@ function _block_get_renderable_array($list = array()) {
 /**
  * Update the 'block' DB table with the blocks currently exported by modules.
  *
- * @param $theme
+ * @param $theme
  *   The theme to rehash blocks for. If not provided, defaults to the currently
  *   used theme.
  *
@@ -944,7 +943,15 @@ function template_preprocess_block(&$variables) {
 
   $variables['theme_hook_suggestions'][] = 'block__' . $variables['block']->region;
   $variables['theme_hook_suggestions'][] = 'block__' . $variables['block']->module;
-  $variables['theme_hook_suggestions'][] = 'block__' . $variables['block']->module . '__' . $variables['block']->delta;
+  // Hyphens (-) and underscores (_) play a special role in theme suggestions.
+  // Theme suggestions should only contain underscores, because within
+  // drupal_find_theme_templates(), underscores are converted to hyphens to
+  // match template file names, and then converted back to underscores to match
+  // pre-processing and other function names. So if your theme suggestion
+  // contains a hyphen, it will end up as an underscore after this conversion,
+  // and your function names won't be recognized. So, we need to convert
+  // hyphens to underscores in block deltas for the theme suggestions.
+  $variables['theme_hook_suggestions'][] = 'block__' . $variables['block']->module . '__' . strtr($variables['block']->delta, '-', '_');
 
   // Create a valid HTML ID and make sure it is unique.
   $variables['block_html_id'] = drupal_html_id('block-' . $variables['block']->module . '-' . $variables['block']->delta);
diff --git a/modules/block/block.test b/modules/block/block.test
index 67e503a..022bf38 100644
--- a/modules/block/block.test
+++ b/modules/block/block.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for the block module
+ * Tests for block.module.
  */
 
 class BlockTestCase extends DrupalWebTestCase {
@@ -415,7 +414,7 @@ class BlockAdminThemeTestCase extends DrupalWebTestCase {
   public static function getInfo() {
     return array(
       'name' => 'Admin theme block admin accessibility',
-      'description' => "Check whether the block administer page for a disabled theme acccessible if and only if it's the admin theme.",
+      'description' => "Check whether the block administer page for a disabled theme accessible if and only if it's the admin theme.",
       'group' => 'Block',
     );
   }
@@ -667,3 +666,45 @@ class BlockHTMLIdTestCase extends DrupalWebTestCase {
     $this->assertRaw('block-block-test-test-html-id', t('HTML id for test block is valid.'));
   }
 }
+
+
+/**
+ * Unit tests for template_preprocess_block().
+ */
+class BlockTemplateSuggestionsUnitTest extends DrupalUnitTestCase {
+  public static function getInfo() {
+    return array(
+      'name' => 'Block template suggestions',
+      'description' => 'Test the template_preprocess_block() function.',
+      'group' => 'Block',
+    );
+  }
+
+  /**
+   * Test if template_preprocess_block() handles the suggestions right.
+   */
+  function testBlockThemeHookSuggestions() {
+    // Define block delta with underscore to be preprocessed
+    $block1 = new stdClass();
+    $block1->module = 'block';
+    $block1->delta = 'underscore_test';
+    $block1->region = 'footer';
+    $variables1 = array();
+    $variables1['elements']['#block'] = $block1;
+    $variables1['elements']['#children'] = '';
+    template_preprocess_block($variables1);
+    $this->assertEqual($variables1['theme_hook_suggestions'], array('block__footer', 'block__block', 'block__block__underscore_test'), t('Found expected block suggestions for delta with underscore'));
+
+    // Define block delta with hyphens to be preprocessed. Hyphens should be
+    // replaced with underscores.
+    $block2 = new stdClass();
+    $block2->module = 'block';
+    $block2->delta = 'hyphen-test';
+    $block2->region = 'footer';
+    $variables2 = array();
+    $variables2['elements']['#block'] = $block2;
+    $variables2['elements']['#children'] = '';
+    template_preprocess_block($variables2);
+    $this->assertEqual($variables2['theme_hook_suggestions'], array('block__footer', 'block__block', 'block__block__hyphen_test'), t('Hyphens (-) in block delta were replaced by underscore (_)'));
+  }
+}
diff --git a/modules/block/block.tpl.php b/modules/block/block.tpl.php
index f3cf644..b194637 100644
--- a/modules/block/block.tpl.php
+++ b/modules/block/block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/block/tests/block_test.info b/modules/block/tests/block_test.info
index e394740..879f251 100644
--- a/modules/block/tests/block_test.info
+++ b/modules/block/tests/block_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Block test
 description = Provides test blocks.
 package = Testing
diff --git a/modules/block/tests/block_test.module b/modules/block/tests/block_test.module
index 57b5ad3..2abc433 100644
--- a/modules/block/tests/block_test.module
+++ b/modules/block/tests/block_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/blog/blog.info b/modules/blog/blog.info
index a2a3bee..801abfb 100644
--- a/modules/blog/blog.info
+++ b/modules/blog/blog.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Blog
 description = Enables multi-user blogs.
 package = Core
diff --git a/modules/blog/blog.install b/modules/blog/blog.install
index 898ff57..fffb14b 100644
--- a/modules/blog/blog.install
+++ b/modules/blog/blog.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -15,3 +14,10 @@ function blog_install() {
   $types = node_type_get_types();
   node_add_body_field($types['blog']);
 }
+
+/**
+ * Implements hook_uninstall().
+ */
+function blog_uninstall() {
+  variable_del('blog_block_count');
+}
diff --git a/modules/blog/blog.module b/modules/blog/blog.module
index 38a6e36..98ebe51 100644
--- a/modules/blog/blog.module
+++ b/modules/blog/blog.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/blog/blog.pages.inc b/modules/blog/blog.pages.inc
index eea45e4..3684028 100644
--- a/modules/blog/blog.pages.inc
+++ b/modules/blog/blog.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/blog/blog.test b/modules/blog/blog.test
index 521f5f0..6ff66a2 100644
--- a/modules/blog/blog.test
+++ b/modules/blog/blog.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for blog.module.
+ */
 
 class BlogTestCase extends DrupalWebTestCase {
   protected $big_user;
diff --git a/modules/book/book-all-books-block.tpl.php b/modules/book/book-all-books-block.tpl.php
index 7006307..d22ff2c 100644
--- a/modules/book/book-all-books-block.tpl.php
+++ b/modules/book/book-all-books-block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book-export-html.tpl.php b/modules/book/book-export-html.tpl.php
index 0af42a3..180f3ae 100644
--- a/modules/book/book-export-html.tpl.php
+++ b/modules/book/book-export-html.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book-navigation.tpl.php b/modules/book/book-navigation.tpl.php
index 8ec9bd7..e5883dc 100644
--- a/modules/book/book-navigation.tpl.php
+++ b/modules/book/book-navigation.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book-node-export-html.tpl.php b/modules/book/book-node-export-html.tpl.php
index e58b84c..ef6c322 100644
--- a/modules/book/book-node-export-html.tpl.php
+++ b/modules/book/book-node-export-html.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book-rtl.css b/modules/book/book-rtl.css
index 0490347..f3a84c2 100644
--- a/modules/book/book-rtl.css
+++ b/modules/book/book-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .book-navigation .menu {
   padding: 1em 3em 0 0;
diff --git a/modules/book/book.admin.inc b/modules/book/book.admin.inc
index 50ec793..7b9dea3 100644
--- a/modules/book/book.admin.inc
+++ b/modules/book/book.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book.css b/modules/book/book.css
index e84f18e..a8d2136 100644
--- a/modules/book/book.css
+++ b/modules/book/book.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .book-navigation .menu {
   border-top: 1px solid #888;
diff --git a/modules/book/book.info b/modules/book/book.info
index 14b72d0..2c7311f 100644
--- a/modules/book/book.info
+++ b/modules/book/book.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Book
 description = Allows users to create and organize related content in an outline.
 package = Core
diff --git a/modules/book/book.install b/modules/book/book.install
index 93c712b..1bd094c 100644
--- a/modules/book/book.install
+++ b/modules/book/book.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book.js b/modules/book/book.js
index c529e58..5b953f1 100644
--- a/modules/book/book.js
+++ b/modules/book/book.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/book/book.module b/modules/book/book.module
index 760eb5b..de9561f 100644
--- a/modules/book/book.module
+++ b/modules/book/book.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -280,10 +279,10 @@ function book_block_view($delta = '') {
   }
   elseif ($current_bid) {
     // Only display this block when the user is browsing a book.
-    $select = db_select('node');
-    $select->addField('node', 'title');
-    $select->condition('nid', $node->book['bid']);
-    $select->addTag('node_access');
+  $select = db_select('node', 'n')
+    ->fields('n', array('title'))
+    ->condition('nid', $node->book['bid'])
+    ->addTag('node_access');
     $title = $select->execute()->fetchField();
     // Only show the block if the user has view access for the top-level node.
     if ($title) {
@@ -419,7 +418,7 @@ function book_form_node_form_alter(&$form, &$form_state, $form_id) {
  * rebuild so that the "Parent item" options are changed to reflect the newly
  * selected book. When JavaScript is enabled, the submit button that triggers
  * this handler is hidden, and the "Book" dropdown directly triggers the
- * book_form_update() AJAX callback instead.
+ * book_form_update() Ajax callback instead.
  *
  * @see book_form_update()
  */
@@ -432,7 +431,7 @@ function book_pick_book_nojs_submit($form, &$form_state) {
  * Build the parent selection form element for the node form or outline tab.
  *
  * This function is also called when generating a new set of options during the
- * AJAX callback, so an array is returned that can be used to replace an existing
+ * Ajax callback, so an array is returned that can be used to replace an existing
  * form element.
  */
 function _book_parent_select($book_link) {
@@ -479,7 +478,7 @@ function _book_parent_select($book_link) {
  * Build the common elements of the book form for the node and outline forms.
  */
 function _book_add_form_elements(&$form, &$form_state, $node) {
-  // If the form is being processed during the AJAX callback of our book bid
+  // If the form is being processed during the Ajax callback of our book bid
   // dropdown, then $form_state will hold the value that was selected.
   if (isset($form_state['values']['book'])) {
     $node->book = $form_state['values']['book'];
@@ -563,7 +562,7 @@ function _book_add_form_elements(&$form, &$form_state, $node) {
 /**
  * Renders a new parent page select element when the book selection changes.
  *
- * This function is called via AJAX when the selected book is changed on a node
+ * This function is called via Ajax when the selected book is changed on a node
  * or book outline form.
  *
  * @return
diff --git a/modules/book/book.pages.inc b/modules/book/book.pages.inc
index 3e682ef..1617f00 100644
--- a/modules/book/book.pages.inc
+++ b/modules/book/book.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -77,9 +76,11 @@ function book_export_html($nid) {
     if (isset($node->book)) {
       $tree = book_menu_subtree_data($node->book);
       $contents = book_export_traverse($tree, 'book_node_export');
+      return theme('book_export_html', array('title' => $node->title, 'contents' => $contents, 'depth' => $node->book['depth']));
+    }
+    else {
+      drupal_not_found();
     }
-
-    return theme('book_export_html', array('title' => $node->title, 'contents' => $contents, 'depth' => $node->book['depth']));
   }
   else {
     drupal_access_denied();
diff --git a/modules/book/book.test b/modules/book/book.test
index c797b7b..cc61778 100644
--- a/modules/book/book.test
+++ b/modules/book/book.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for book.module.
+ */
 
 class BookTestCase extends DrupalWebTestCase {
   protected $book;
@@ -237,6 +241,10 @@ class BookTestCase extends DrupalWebTestCase {
     $this->drupalGet('book/export/foobar/' . $this->book->nid);
     $this->assertResponse('404', t('Unsupported export format returned "not found".'));
 
+    // Make sure we get a 404 on a not existing book node.
+    $this->drupalGet('book/export/html/123');
+    $this->assertResponse('404', t('Not existing book node returned "not found".'));
+
     // Make sure an anonymous user cannot view printer-friendly version.
     $this->drupalLogout();
 
diff --git a/modules/color/color-rtl.css b/modules/color/color-rtl.css
index 565f401..bfbcd49 100644
--- a/modules/color/color-rtl.css
+++ b/modules/color/color-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #placeholder {
   left: 0;
diff --git a/modules/color/color.css b/modules/color/color.css
index 455eb80..e513dad 100644
--- a/modules/color/color.css
+++ b/modules/color/color.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* Farbtastic placement */
 .color-form {
diff --git a/modules/color/color.info b/modules/color/color.info
index 0d6a42d..b1b862d 100644
--- a/modules/color/color.info
+++ b/modules/color/color.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Color
 description = Allows administrators to change the color scheme of compatible themes.
 package = Core
diff --git a/modules/color/color.install b/modules/color/color.install
index ff1e835..b0eb95e 100644
--- a/modules/color/color.install
+++ b/modules/color/color.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/color/color.js b/modules/color/color.js
index 0fc815b..43099ad 100644
--- a/modules/color/color.js
+++ b/modules/color/color.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 Drupal.behaviors.color = {
diff --git a/modules/color/color.module b/modules/color/color.module
index ab8fb9b..f3fafe7 100644
--- a/modules/color/color.module
+++ b/modules/color/color.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_help().
diff --git a/modules/color/color.test b/modules/color/color.test
index f59d8d7..1ddfc06 100644
--- a/modules/color/color.test
+++ b/modules/color/color.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/color/preview.js b/modules/color/preview.js
index 719b9b8..88ae95f 100644
--- a/modules/color/preview.js
+++ b/modules/color/preview.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
   Drupal.color = {
diff --git a/modules/comment/comment-node-form.js b/modules/comment/comment-node-form.js
index 3550d6e..76db240 100644
--- a/modules/comment/comment-node-form.js
+++ b/modules/comment/comment-node-form.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/comment/comment-rtl.css b/modules/comment/comment-rtl.css
index 5cef412..39c3929 100644
--- a/modules/comment/comment-rtl.css
+++ b/modules/comment/comment-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .indented {
   margin-left: 0;
diff --git a/modules/comment/comment-wrapper.tpl.php b/modules/comment/comment-wrapper.tpl.php
index e6ac95e..3293e88 100644
--- a/modules/comment/comment-wrapper.tpl.php
+++ b/modules/comment/comment-wrapper.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/comment/comment.admin.inc b/modules/comment/comment.admin.inc
index 1b050b1..4f3d350 100644
--- a/modules/comment/comment.admin.inc
+++ b/modules/comment/comment.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/comment/comment.api.php b/modules/comment/comment.api.php
index 987d046..0591265 100644
--- a/modules/comment/comment.api.php
+++ b/modules/comment/comment.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/comment/comment.css b/modules/comment/comment.css
index 4cc8f4c..4a2675a 100644
--- a/modules/comment/comment.css
+++ b/modules/comment/comment.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #comments {
   margin-top: 15px;
diff --git a/modules/comment/comment.info b/modules/comment/comment.info
index d244ddf..7cbe246 100644
--- a/modules/comment/comment.info
+++ b/modules/comment/comment.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Comment
 description = Allows users to comment on and discuss published content.
 package = Core
diff --git a/modules/comment/comment.install b/modules/comment/comment.install
index c22655f..d64b3ac 100644
--- a/modules/comment/comment.install
+++ b/modules/comment/comment.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -338,6 +337,33 @@ function comment_update_7006(&$sandbox) {
 }
 
 /**
+ * Add an index to the created column.
+ */
+function comment_update_7007() {
+  db_add_index('comment', 'comment_created', array('created'));
+}
+
+/**
+ * Update database to match Drupal 7 schema.
+ */
+function comment_update_7008() {
+  // Update default status to 1.
+  db_change_field('comment', 'status', 'status', array(
+    'type' => 'int',
+    'unsigned' => TRUE,
+    'not null' => TRUE,
+    'default' => 1,
+    'size' => 'tiny',
+  ));
+
+  // Realign indexes.
+  db_drop_index('comment', 'comment_status_pid');
+  db_add_index('comment', 'comment_status_pid', array('pid', 'status'));
+  db_drop_index('comment', 'comment_pid_status');
+  db_drop_index('comment', 'nid');
+}
+
+/**
  * @} End of "addtogroup updates-6.x-to-7.x"
  */
 
@@ -442,6 +468,7 @@ function comment_schema() {
       'comment_num_new' => array('nid', 'status', 'created', 'cid', 'thread'),
       'comment_uid' => array('uid'),
       'comment_nid_language' => array('nid', 'language'),
+      'comment_created' => array('created'),
     ),
     'primary key' => array('cid'),
     'foreign keys' => array(
diff --git a/modules/comment/comment.module b/modules/comment/comment.module
index 78d35c0..4a73755 100644
--- a/modules/comment/comment.module
+++ b/modules/comment/comment.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -495,6 +494,7 @@ function comment_permalink($cid) {
  *
  * @param integer $number
  *   (optional) The maximum number of comments to find. Defaults to 10.
+ *
  * @return
  *   An array of comment objects or an empty array if there are no recent
  *   comments visible to the current user.
@@ -502,15 +502,12 @@ function comment_permalink($cid) {
 function comment_get_recent($number = 10) {
   $query = db_select('comment', 'c');
   $query->innerJoin('node', 'n', 'n.nid = c.nid');
-  $query->innerJoin('node_comment_statistics', 'ncs', 'ncs.nid = c.nid');
   $query->addTag('node_access');
   $comments = $query
     ->fields('c')
-    ->condition('ncs.comment_count', 0, '>')
     ->condition('c.status', COMMENT_PUBLISHED)
     ->condition('n.status', NODE_PUBLISHED)
-    ->orderBy('ncs.last_comment_timestamp', 'DESC')
-    ->orderBy('c.cid', 'DESC')
+    ->orderBy('c.created', 'DESC')
     ->range(0, $number)
     ->execute()
     ->fetchAll();
@@ -989,8 +986,8 @@ function comment_build_content($comment, $node, $view_mode = 'full', $langcode =
   $comment->content = array();
 
   // Build fields content.
-  field_attach_prepare_view('comment', array($comment->cid => $comment), $view_mode);
-  entity_prepare_view('comment', array($comment->cid => $comment));
+  field_attach_prepare_view('comment', array($comment->cid => $comment), $view_mode, $langcode);
+  entity_prepare_view('comment', array($comment->cid => $comment), $langcode);
   $comment->content += field_attach_view('comment', $comment, $view_mode, $langcode);
 
   $comment->content['links'] = array(
@@ -1092,8 +1089,8 @@ function comment_links($comment, $node) {
  *   An array in the format expected by drupal_render().
  */
 function comment_view_multiple($comments, $node, $view_mode = 'full', $weight = 0, $langcode = NULL) {
-  field_attach_prepare_view('comment', $comments, $view_mode);
-  entity_prepare_view('comment', $comments);
+  field_attach_prepare_view('comment', $comments, $view_mode, $langcode);
+  entity_prepare_view('comment', $comments, $langcode);
 
   $build = array(
     '#sorted' => TRUE,
@@ -1406,15 +1403,15 @@ function comment_user_delete($account) {
 }
 
 /**
- * This is *not* a hook_access() implementation. This function is called
- * to determine whether the current user has access to a particular comment.
+ * Determines whether the current user has access to a particular comment.
  *
  * Authenticated users can edit their comments as long they have not been
- * replied to. This prevents people from changing or revising their
- * statements based on the replies to their posts.
+ * replied to. This prevents people from changing or revising their statements
+ * based on the replies to their posts.
  *
  * @param $op
- *   The operation that is to be performed on the comment. Only 'edit' is recognized now.
+ *   The operation that is to be performed on the comment. Only 'edit' is
+ *   recognized now.
  * @param $comment
  *   The comment object.
  * @return
@@ -1468,28 +1465,15 @@ function comment_save($comment) {
     module_invoke_all('entity_presave', $comment, 'comment');
 
     if ($comment->cid) {
-      // Update the comment in the database.
-      db_update('comment')
-        ->fields(array(
-          'status' => $comment->status,
-          'created' => $comment->created,
-          'changed' => $comment->changed,
-          'subject' => $comment->subject,
-          'uid' => $comment->uid,
-          'name' => $comment->name,
-          'mail' => $comment->mail,
-          'homepage' => $comment->homepage,
-          'language' => $comment->language,
-        ))
-        ->condition('cid', $comment->cid)
-        ->execute();
+
+      drupal_write_record('comment', $comment, 'cid');
 
       // Ignore slave server temporarily to give time for the
       // saved comment to be propagated to the slave.
       db_ignore_slave();
 
       // Update the {node_comment_statistics} table prior to executing hooks.
-       _comment_update_node_statistics($comment->nid);
+      _comment_update_node_statistics($comment->nid);
 
       field_attach_update('comment', $comment);
       // Allow modules to respond to the updating of a comment.
@@ -1554,23 +1538,16 @@ function comment_save($comment) {
         $comment->name = $user->name;
       }
 
-      $comment->cid = db_insert('comment')
-        ->fields(array(
-          'nid' => $comment->nid,
-          'pid' => empty($comment->pid) ? 0 : $comment->pid,
-          'uid' => $comment->uid,
-          'subject' => $comment->subject,
-          'hostname' => ip_address(),
-          'created' => $comment->created,
-          'changed' => $comment->changed,
-          'status' => $comment->status,
-          'thread' => $thread,
-          'name' => $comment->name,
-          'mail' => $comment->mail,
-          'homepage' => $comment->homepage,
-          'language' => $comment->language,
-        ))
-        ->execute();
+      // Ensure the parent id (pid) has a value set.
+      if (empty($comment->pid)) {
+        $comment->pid = 0;
+      }
+
+      // Add the values which aren't passed into the function.
+      $comment->thread = $thread;
+      $comment->hostname = ip_address();
+
+      drupal_write_record('comment', $comment);
 
       // Ignore slave server temporarily to give time for the
       // created comment to be propagated to the slave.
@@ -1929,11 +1906,9 @@ function comment_form($form, &$form_state, $comment) {
       '#default_value' => $author,
       '#maxlength' => 60,
       '#size' => 30,
+      '#description' => t('Leave blank for %anonymous.', array('%anonymous' => variable_get('anonymous', t('Anonymous')))),
+      '#autocomplete_path' => 'user/autocomplete',
     );
-    // If the comment is by a registered user, allow to autocomplete username.
-    if ($comment->registered_name != '') {
-      $form['author']['name']['#autocomplete_path'] = 'user/autocomplete';
-    }
   }
   elseif ($user->uid) {
     $form['author']['_author'] = array(
@@ -2114,18 +2089,21 @@ function comment_form_validate($form, &$form_state) {
   entity_form_field_validate('comment', $form, $form_state);
 
   if (!empty($form_state['values']['cid'])) {
+    // Verify the name in case it is being changed from being anonymous.
+    $account = user_load_by_name($form_state['values']['name']);
+    $form_state['values']['uid'] = $account ? $account->uid : 0;
+
     if ($form_state['values']['date'] && strtotime($form_state['values']['date']) === FALSE) {
       form_set_error('date', t('You have to specify a valid date.'));
     }
-    if ($form_state['values']['name'] && !$form_state['values']['is_anonymous'] && !$account = user_load_by_name($form_state['values']['name'])) {
+    if ($form_state['values']['name'] && !$form_state['values']['is_anonymous'] && !$account) {
       form_set_error('name', t('You have to specify a valid author.'));
     }
   }
-
-  // Validate anonymous comment author fields (if given).
-  if ($form_state['values']['is_anonymous']) {
-    // If the (original) author of this comment was an anonymous user, verify
-    // that no registered user with this name exists.
+  elseif ($form_state['values']['is_anonymous']) {
+    // Validate anonymous comment author fields (if given). If the (original)
+    // author of this comment was an anonymous user, verify that no registered
+    // user with this name exists.
     if ($form_state['values']['name']) {
       $query = db_select('users', 'u');
       $query->addField('u', 'uid', 'uid');
@@ -2216,7 +2194,7 @@ function comment_form_submit($form, &$form_state) {
   $comment = comment_form_submit_build_comment($form, $form_state);
   if (user_access('post comments') && (user_access('administer comments') || $node->comment == COMMENT_NODE_OPEN)) {
     // Save the anonymous user information to a cookie for reuse.
-    if (!$comment->uid) {
+    if (user_is_anonymous()) {
       user_cookie_save(array_intersect_key($form_state['values'], array_flip(array('name', 'mail', 'homepage'))));
     }
 
diff --git a/modules/comment/comment.pages.inc b/modules/comment/comment.pages.inc
index 726795a..7e88bff 100644
--- a/modules/comment/comment.pages.inc
+++ b/modules/comment/comment.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/comment/comment.test b/modules/comment/comment.test
index a76d89c..770e01d 100644
--- a/modules/comment/comment.test
+++ b/modules/comment/comment.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file 
+ * Tests for comment.module.
+ */
 
 class CommentHelperCase extends DrupalWebTestCase {
   protected $admin_user;
@@ -303,6 +307,26 @@ class CommentInterfaceTest extends CommentHelperCase {
     $this->drupalLogin($this->admin_user);
     $this->setCommentSubject(TRUE);
     $this->setCommentPreview(DRUPAL_OPTIONAL);
+
+    // Test changing the comment author to "Anonymous".
+    $this->drupalGet('comment/' . $comment->id . '/edit');
+    $comment = $this->postComment(NULL, $comment->comment, $comment->subject, array('name' => ''));
+    $comment_loaded = comment_load($comment->id);
+    $this->assertTrue(empty($comment_loaded->name) && $comment_loaded->uid == 0, t('Comment author successfully changed to anonymous.'));
+
+    // Test changing the comment author to an unverified user.
+    $random_name = $this->randomName();
+    $this->drupalGet('comment/' . $comment->id . '/edit');
+    $comment = $this->postComment(NULL, $comment->comment, $comment->subject, array('name' => $random_name));
+    $this->drupalGet('node/' . $this->node->nid);
+    $this->assertText($random_name . ' (' . t('not verified') . ')', t('Comment author successfully changed to an unverified user.'));
+
+    // Test changing the comment author to a verified user.
+    $this->drupalGet('comment/' . $comment->id . '/edit');
+    $comment = $this->postComment(NULL, $comment->comment, $comment->subject, array('name' => $this->web_user->name));
+    $comment_loaded = comment_load($comment->id);
+    $this->assertTrue($comment_loaded->name == $this->web_user->name && $comment_loaded->uid == $this->web_user->uid, t('Comment author successfully changed to a registered user.'));
+
     $this->drupalLogout();
 
     // Reply to comment #2 creating comment #3 with optional preview and no
@@ -1694,7 +1718,7 @@ class CommentTokenReplaceTestCase extends CommentHelperCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('comment' => $comment), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized comment token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized comment token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -1710,7 +1734,7 @@ class CommentTokenReplaceTestCase extends CommentHelperCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('comment' => $comment), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized comment token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized comment token %token replaced.', array('%token' => $input)));
     }
 
     // Load node so comment_count gets computed.
@@ -1723,7 +1747,7 @@ class CommentTokenReplaceTestCase extends CommentHelperCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('node' => $node), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Node comment token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Node comment token %token replaced.', array('%token' => $input)));
     }
   }
 }
diff --git a/modules/comment/comment.tokens.inc b/modules/comment/comment.tokens.inc
index 2375cfb..d62b7e2 100644
--- a/modules/comment/comment.tokens.inc
+++ b/modules/comment/comment.tokens.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/comment/comment.tpl.php b/modules/comment/comment.tpl.php
index adf93b3..a483813 100644
--- a/modules/comment/comment.tpl.php
+++ b/modules/comment/comment.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contact/contact.admin.inc b/modules/contact/contact.admin.inc
index 8ad6422..9fde037 100644
--- a/modules/contact/contact.admin.inc
+++ b/modules/contact/contact.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contact/contact.info b/modules/contact/contact.info
index adefb11..9430045 100644
--- a/modules/contact/contact.info
+++ b/modules/contact/contact.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Contact
 description = Enables the use of both personal and site-wide contact forms.
 package = Core
diff --git a/modules/contact/contact.install b/modules/contact/contact.install
index 3c4e934..6e8ec70 100644
--- a/modules/contact/contact.install
+++ b/modules/contact/contact.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contact/contact.module b/modules/contact/contact.module
index d06b90d..eaae9c6 100644
--- a/modules/contact/contact.module
+++ b/modules/contact/contact.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contact/contact.pages.inc b/modules/contact/contact.pages.inc
index 662896b..30b2825 100644
--- a/modules/contact/contact.pages.inc
+++ b/modules/contact/contact.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contact/contact.test b/modules/contact/contact.test
index 80a157b..bc44f5a 100644
--- a/modules/contact/contact.test
+++ b/modules/contact/contact.test
@@ -1,9 +1,10 @@
 <?php
-// $Id$
 
 /**
- * Test the sitewide contact form.
+ * @file 
+ * Tests for contact.module.
  */
+
 class ContactSitewideTestCase extends DrupalWebTestCase {
   public static function getInfo() {
     return array(
diff --git a/modules/contextual/contextual-rtl.css b/modules/contextual/contextual-rtl.css
index 57a4e9d..96ffef5 100644
--- a/modules/contextual/contextual-rtl.css
+++ b/modules/contextual/contextual-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 div.contextual-links-wrapper {
   left: 5px;
diff --git a/modules/contextual/contextual.api.php b/modules/contextual/contextual.api.php
index e445bbc..e8f33ee 100644
--- a/modules/contextual/contextual.api.php
+++ b/modules/contextual/contextual.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contextual/contextual.css b/modules/contextual/contextual.css
index a64e23a..e49eb37 100644
--- a/modules/contextual/contextual.css
+++ b/modules/contextual/contextual.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Contextual links regions.
diff --git a/modules/contextual/contextual.info b/modules/contextual/contextual.info
index 83839b4..ffaabaf 100644
--- a/modules/contextual/contextual.info
+++ b/modules/contextual/contextual.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Contextual links
 description = Provides contextual links to perform actions related to elements on a page.
 package = Core
diff --git a/modules/contextual/contextual.js b/modules/contextual/contextual.js
index 1314921..ee5b7a0 100644
--- a/modules/contextual/contextual.js
+++ b/modules/contextual/contextual.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 Drupal.contextualLinks = Drupal.contextualLinks || {};
diff --git a/modules/contextual/contextual.module b/modules/contextual/contextual.module
index 9e4cc2c..0d6b625 100644
--- a/modules/contextual/contextual.module
+++ b/modules/contextual/contextual.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/dashboard/dashboard-rtl.css b/modules/dashboard/dashboard-rtl.css
new file mode 100644
index 0000000..2ab5381
--- /dev/null
+++ b/modules/dashboard/dashboard-rtl.css
@@ -0,0 +1,27 @@
+/* $Id */
+
+#dashboard div.dashboard-region {
+  float: right;
+}
+#dashboard #disabled-blocks .block, #dashboard .block-placeholder {
+  float: right;
+  margin: 3px 0 3px 3px;
+  padding: 6px 8px 6px 4px;
+}
+#dashboard .canvas-content a.button {
+  margin: 0 10px 0 0;
+}
+#dashboard .ui-sortable .block h2 {
+  background-position: right -39px;
+  padding: 0 19px;
+}
+#dashboard.customize-inactive #disabled-blocks .block:hover h2 {
+  background-position: right -39px;
+}
+#dashboard.customize-inactive .dashboard-region .ui-sortable .block:hover h2 {
+  background-position: right -36px;
+}
+#dashboard div#dashboard_main {
+  margin-left: 1%;
+  margin-right: 0;
+}
diff --git a/modules/dashboard/dashboard.api.php b/modules/dashboard/dashboard.api.php
index 58d686b..00bfde5 100644
--- a/modules/dashboard/dashboard.api.php
+++ b/modules/dashboard/dashboard.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/dashboard/dashboard.css b/modules/dashboard/dashboard.css
index 8976cc2..db9243c 100644
--- a/modules/dashboard/dashboard.css
+++ b/modules/dashboard/dashboard.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #dashboard div.dashboard-region {
   float: left;
@@ -7,7 +6,7 @@
 
 #dashboard div#dashboard_main {
   width: 65%;
-  margin-right: 1%;
+  margin-right: 1%; /* LTR */
 }
 
 #dashboard div#dashboard_sidebar {
@@ -29,9 +28,9 @@
 #dashboard #disabled-blocks .block,
 #dashboard .block-placeholder {
   background: #e2e1dc;
-  padding: 6px 4px 6px 8px;
-  margin: 3px 3px 3px 0;
-  float: left;
+  padding: 6px 4px 6px 8px; /* LTR */
+  margin: 3px 3px 3px 0; /* LTR */
+  float: left; /* LTR */
   -moz-border-radius: 4px;
   -webkit-border-radius: 4px;
   border-radius: 4px;
@@ -57,7 +56,7 @@
 }
 
 #dashboard .canvas-content a.button {
-  margin: 0 0 0 10px;
+  margin: 0 0 0 10px; /* LTR */
   color: #5a5a5a;
   text-decoration: none;
 }
diff --git a/modules/dashboard/dashboard.info b/modules/dashboard/dashboard.info
index 6b07965..41f4c9d 100644
--- a/modules/dashboard/dashboard.info
+++ b/modules/dashboard/dashboard.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Dashboard
 description = Provides a dashboard page in the administrative interface for organizing administrative tasks and tracking information within your site.
 core = 7.x
diff --git a/modules/dashboard/dashboard.install b/modules/dashboard/dashboard.install
index 1a80993..5021826 100644
--- a/modules/dashboard/dashboard.install
+++ b/modules/dashboard/dashboard.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/dashboard/dashboard.js b/modules/dashboard/dashboard.js
index dc9019d..ebecbf6 100644
--- a/modules/dashboard/dashboard.js
+++ b/modules/dashboard/dashboard.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/dashboard/dashboard.module b/modules/dashboard/dashboard.module
index 1917c87..08a4cd2 100644
--- a/modules/dashboard/dashboard.module
+++ b/modules/dashboard/dashboard.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_help().
@@ -82,6 +81,9 @@ function dashboard_permission() {
   return array(
     'access dashboard' => array(
       'title' => t('View the administrative dashboard'),
+      // Note: We translate the 'Administer blocks' permission string here with
+      // a separate t() call, to make sure it gets the same translation as when
+      // it's in block_permission().
       'description' => t('Customizing the dashboard requires the !permission-name permission.', array(
         '!permission-name' => l(t('Administer blocks'), 'admin/people/permissions', array('fragment' => 'module-block')),
       )),
@@ -483,7 +485,7 @@ function dashboard_dashboard_regions() {
 }
 
 /**
- * AJAX callback to show disabled blocks in the dashboard customization mode.
+ * Ajax callback to show disabled blocks in the dashboard customization mode.
  */
 function dashboard_show_disabled() {
   global $theme_key;
@@ -504,7 +506,7 @@ function dashboard_show_disabled() {
 }
 
 /**
- * AJAX callback to display the rendered contents of a specific block.
+ * Ajax callback to display the rendered contents of a specific block.
  *
  * @param $module
  *   The block's module name.
diff --git a/modules/dashboard/dashboard.test b/modules/dashboard/dashboard.test
index 89a3932..7cb93f9 100644
--- a/modules/dashboard/dashboard.test
+++ b/modules/dashboard/dashboard.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for the dashboard module.
+ * Tests for dashboard.module.
  */
 
 class DashboardBlocksTestCase extends DrupalWebTestCase {
diff --git a/modules/dblog/dblog-rtl.css b/modules/dblog/dblog-rtl.css
index d9152df..282fe97 100644
--- a/modules/dblog/dblog-rtl.css
+++ b/modules/dblog/dblog-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .form-item-type,
 .form-item-severity {
diff --git a/modules/dblog/dblog.admin.inc b/modules/dblog/dblog.admin.inc
index 53ae7a0..947100d 100644
--- a/modules/dblog/dblog.admin.inc
+++ b/modules/dblog/dblog.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -286,7 +285,7 @@ function dblog_filter_form($form) {
     '#type' => 'fieldset',
     '#title' => t('Filter log messages'),
     '#collapsible' => TRUE,
-    '#collapsed' => empty($session),
+    '#collapsed' => empty($_SESSION['dblog_overview_filter']),
   );
   foreach ($filters as $key => $filter) {
     $form['filters']['status'][$key] = array(
diff --git a/modules/dblog/dblog.css b/modules/dblog/dblog.css
index 1b7e835..ff310e3 100644
--- a/modules/dblog/dblog.css
+++ b/modules/dblog/dblog.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .form-item-type,
 .form-item-severity {
diff --git a/modules/dblog/dblog.info b/modules/dblog/dblog.info
index 35b0148..608bdd7 100644
--- a/modules/dblog/dblog.info
+++ b/modules/dblog/dblog.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Database logging
 description = Logs and records system events to the database.
 package = Core
diff --git a/modules/dblog/dblog.install b/modules/dblog/dblog.install
index bb56903..759c7bc 100644
--- a/modules/dblog/dblog.install
+++ b/modules/dblog/dblog.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -93,6 +92,13 @@ function dblog_schema() {
 }
 
 /**
+ * Implements hook_uninstall().
+ */
+function dblog_uninstall() {
+  variable_del('dblog_row_limit');
+}
+
+/**
  * @addtogroup updates-6.x-to-7.x
  * @{
  */
diff --git a/modules/dblog/dblog.module b/modules/dblog/dblog.module
index 5908447..496a043 100644
--- a/modules/dblog/dblog.module
+++ b/modules/dblog/dblog.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -139,9 +138,12 @@ function _dblog_get_message_types() {
  * Note some values may be truncated for database column size restrictions.
  */
 function dblog_watchdog(array $log_entry) {
+  // The user object may not exist in all conditions, so 0 is substituted if needed.
+  $user_uid = isset($log_entry['user']->uid) ? $log_entry['user']->uid : 0;
+
   Database::getConnection('default', 'default')->insert('watchdog')
     ->fields(array(
-      'uid' => $log_entry['user']->uid,
+      'uid' => $user_uid,
       'type' => substr($log_entry['type'], 0, 64),
       'message' => $log_entry['message'],
       'variables' => serialize($log_entry['variables']),
diff --git a/modules/dblog/dblog.test b/modules/dblog/dblog.test
index 19cf0f4..5717455 100644
--- a/modules/dblog/dblog.test
+++ b/modules/dblog/dblog.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for dblog.module.
+ */
 
 class DBLogTestCase extends DrupalWebTestCase {
   protected $big_user;
diff --git a/modules/field/field.api.php b/modules/field/field.api.php
index bc31b8a..9c52d24 100644
--- a/modules/field/field.api.php
+++ b/modules/field/field.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @ingroup field_fieldable_type
@@ -16,7 +15,7 @@
  *
  * Fieldable entities or modules that want to have their components supported
  * should expose them using this hook. The user-defined settings (weight,
- * visibility) are automatically applied on rendered forms and displayed
+ * visible) are automatically applied on rendered forms and displayed
  * entities in a #pre_render callback added by field_attach_form() and
  * field_attach_view().
  *
@@ -758,7 +757,7 @@ function hook_field_widget_info_alter(&$info) {
 /**
  * Return the form for a single field widget.
  *
- * Field widget form elements should be based on the passed in $element, which
+ * Field widget form elements should be based on the passed-in $element, which
  * contains the base form element properties derived from the field
  * configuration.
  *
@@ -1271,7 +1270,7 @@ function hook_field_attach_delete_revision($entity_type, $entity) {
  */
 function hook_field_attach_purge($entity_type, $entity, $field, $instance) {
   // find the corresponding data in mymodule and purge it
-  if($entity_type == 'node' && $field->field_name == 'my_field_name') {
+  if ($entity_type == 'node' && $field->field_name == 'my_field_name') {
     mymodule_remove_mydata($entity->nid);
   }
 }
@@ -1319,7 +1318,7 @@ function hook_field_attach_view_alter(&$output, $context) {
  *
  * This hook is invoked after the field module has performed the operation.
  *
- * @param &$entity
+ * @param $entity
  *   The entity being prepared for translation.
  * @param $context
  *   An associative array containing:
@@ -1362,7 +1361,7 @@ function hook_field_language_alter(&$display_language, $context) {
  * This hook is invoked from field_available_languages() to allow modules to
  * alter the array of available languages for the given field.
  *
- * @param &$languages
+ * @param $languages
  *   A reference to an array of language codes to be made available.
  * @param $context
  *   An associative array containing:
@@ -2205,7 +2204,7 @@ function hook_field_display_ENTITY_TYPE_alter(&$display, $context) {
  */
 function hook_field_extra_fields_display_alter(&$displays, $context) {
   if ($context['entity_type'] == 'taxonomy_term' && $context['view_mode'] == 'full') {
-    $displays['description']['visibility'] = FALSE;
+    $displays['description']['visible'] = FALSE;
   }
 }
 
@@ -2416,7 +2415,7 @@ function hook_field_delete_instance($instance) {
  * @param $field
  *   The field record just read from the database.
  */
-function hook_field_read_field(&$field) {
+function hook_field_read_field($field) {
   // @todo Needs function body.
 }
 
diff --git a/modules/field/field.attach.inc b/modules/field/field.attach.inc
index 59c91f9..4ca15f5 100644
--- a/modules/field/field.attach.inc
+++ b/modules/field/field.attach.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -258,9 +257,9 @@ function _field_invoke($op, $entity_type, $entity, &$a = NULL, &$b = NULL, $opti
  *  - 'deleted': If TRUE, the function will operate on deleted fields
  *    as well as non-deleted fields. If unset or FALSE, only
  *    non-deleted fields are operated on.
- *  - 'language': A language code or an array of language codes keyed by field
- *    name. It will be used to narrow down to a single value the available
- *    languages to act on.
+ *  - 'language': A language code or an array of arrays of language codes keyed
+ *    by entity id and field name. It will be used to narrow down to a single
+ *    value the available languages to act on.
  *
  * @return
  *   An array of returned values keyed by entity id.
@@ -312,7 +311,8 @@ function _field_invoke_multiple($op, $entity_type, $entities, &$a = NULL, &$b =
         // Unless a language suggestion is provided we iterate on all the
         // available languages.
         $available_languages = field_available_languages($entity_type, $field);
-        $languages = _field_language_suggestion($available_languages, $options['language'], $field_name);
+        $language = !empty($options['language'][$id]) ? $options['language'][$id] : $options['language'];
+        $languages = _field_language_suggestion($available_languages, $language, $field_name);
         foreach ($languages as $langcode) {
           $grouped_items[$field_id][$langcode][$id] = isset($entity->{$field_name}[$langcode]) ? $entity->{$field_name}[$langcode] : array();
         }
@@ -348,7 +348,7 @@ function _field_invoke_multiple($op, $entity_type, $entities, &$a = NULL, &$b =
     // fields with an empty array (those are not equivalent on update).
     foreach ($grouped_entities[$field_id] as $id => $entity) {
       foreach ($grouped_items[$field_id] as $langcode => $items) {
-        if ($grouped_items[$field_id][$langcode][$id] !== array() || isset($entity->{$field_name}[$langcode])) {
+        if (isset($grouped_items[$field_id][$langcode][$id]) && ($grouped_items[$field_id][$langcode][$id] !== array() || isset($entity->{$field_name}[$langcode]))) {
           $entity->{$field_name}[$langcode] = $grouped_items[$field_id][$langcode][$id];
         }
       }
@@ -780,11 +780,11 @@ function field_attach_validate($entity_type, $entity) {
  * There are two levels of validation for fields in forms: widget
  * validation, and field validation.
  * - Widget validation steps are specific to a given widget's own form
- * structure and UI metaphors. They are executed through FAPI's
- * #element_validate property during normal form validation.
+ *   structure and UI metaphors. They are executed through FAPI's
+ *   #element_validate property during normal form validation.
  * - Field validation steps are common to a given field type, independently of
- * the specific widget being used in a given form. They are defined in the
- * field type's implementation of hook_field_validate().
+ *   the specific widget being used in a given form. They are defined in the
+ *   field type's implementation of hook_field_validate().
  *
  * This function performs field validation in the context of a form
  * submission. It converts field validation errors into form errors
@@ -878,7 +878,7 @@ function field_attach_presave($entity_type, $entity) {
 /**
  * Save field data for a new entity.
  *
- * The passed in entity must already contain its id and (if applicable)
+ * The passed-in entity must already contain its id and (if applicable)
  * revision id attributes.
  * Default values (if any) will be saved for fields not present in the
  * $entity.
@@ -1075,8 +1075,13 @@ function field_attach_delete_revision($entity_type, $entity) {
  *   An array of entities, keyed by entity id.
  * @param $view_mode
  *   View mode, e.g. 'full', 'teaser'...
+ * @param $langcode
+ *   (Optional) The language the field values are to be shown in. If no language
+ *   is provided the current language is used.
  */
-function field_attach_prepare_view($entity_type, $entities, $view_mode) {
+function field_attach_prepare_view($entity_type, $entities, $view_mode, $langcode = NULL) {
+  $options = array('language' => array());
+
   // To ensure hooks are only run once per entity, only process items without
   // the _field_view_prepared flag.
   // @todo: resolve this more generally for both entity and field level hooks.
@@ -1086,17 +1091,22 @@ function field_attach_prepare_view($entity_type, $entities, $view_mode) {
       // Add this entity to the items to be prepared.
       $prepare[$id] = $entity;
 
+      // Determine the actual language to display for each field, given the
+      // languages available in the field data.
+      $options['language'][$id] = field_language($entity_type, $entity, NULL, $langcode);
+
       // Mark this item as prepared.
       $entity->_field_view_prepared = TRUE;
     }
   }
 
+  $null = NULL;
   // First let the field types do their preparation.
-  _field_invoke_multiple('prepare_view', $entity_type, $prepare);
+  _field_invoke_multiple('prepare_view', $entity_type, $prepare, $null, $null, $options);
   // Then let the formatters do their own specific massaging.
   // field_default_prepare_view() takes care of dispatching to the correct
   // formatters according to the display settings for the view mode.
-  _field_invoke_multiple_default('prepare_view', $entity_type, $prepare, $view_mode);
+  _field_invoke_multiple_default('prepare_view', $entity_type, $prepare, $view_mode, $null, $options);
 }
 
 /**
diff --git a/modules/field/field.crud.inc b/modules/field/field.crud.inc
index eda3218..339e9c4 100644
--- a/modules/field/field.crud.inc
+++ b/modules/field/field.crud.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -422,7 +421,6 @@ function field_delete_field($field_name) {
  *   will be given the following default values:
  *   - label: the field name
  *   - description: empty string
- *   - weight: 0
  *   - required: FALSE
  *   - default_value_function: empty string
  *   - settings: each omitted setting is given the default value specified in
@@ -635,12 +633,11 @@ function _field_write_instance($instance, $update = FALSE) {
 }
 
 /**
- * Reads a single instance record directly from the database.
+ * Reads a single instance record from the database.
  *
- * Generally, you should use the field_info_instance() instead.
- *
- * This function will not return deleted instances. Use
- * field_read_instances() instead for this purpose.
+ * Generally, you should use field_info_instance() instead, as it
+ * provides caching and allows other modules the opportunity to
+ * append additional formatters, widgets, and other information.
  *
  * @param $entity_type
  *   The type of entity to which the field is bound.
diff --git a/modules/field/field.default.inc b/modules/field/field.default.inc
index f078d24..a10d138 100644
--- a/modules/field/field.default.inc
+++ b/modules/field/field.default.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -82,7 +81,7 @@ function field_default_validate($entity_type, $entity, $field, $instance, $langc
   if ($field['cardinality'] != FIELD_CARDINALITY_UNLIMITED && count($items) > $field['cardinality']) {
     $errors[$field['field_name']][$langcode][0][] = array(
       'error' => 'field_cardinality',
-      'message' => t('%name: this field cannot hold more than @count values.', array('%name' => t($instance['label']), '@count' => $field['cardinality'])),
+      'message' => t('%name: this field cannot hold more than @count values.', array('%name' => $instance['label'], '@count' => $field['cardinality'])),
     );
   }
 }
@@ -135,21 +134,25 @@ function field_default_insert($entity_type, $entity, $field, $instance, $langcod
  *   - the name of a view mode
  *   - or an array of display settings to use for display, as found in the
  *     'display' entry of $instance definitions.
-*/
+ */
 function field_default_prepare_view($entity_type, $entities, $field, $instances, $langcode, &$items, $display) {
   // Group entities, instances and items by formatter module.
   $modules = array();
   foreach ($instances as $id => $instance) {
     if (is_string($display)) {
       $view_mode = $display;
-      $display = field_get_display($instance, $view_mode, $entities[$id]);
+      $instance_display = field_get_display($instance, $view_mode, $entities[$id]);
+    }
+    else {
+      $instance_display = $display;
     }
-    if ($display['type'] !== 'hidden') {
-      $module = $display['module'];
+
+    if ($instance_display['type'] !== 'hidden') {
+      $module = $instance_display['module'];
       $modules[$module] = $module;
       $grouped_entities[$module][$id] = $entities[$id];
       $grouped_instances[$module][$id] = $instance;
-      $grouped_displays[$module][$id] = $display;
+      $grouped_displays[$module][$id] = $instance_display;
       // hook_field_formatter_prepare_view() alters $items by reference.
       $grouped_items[$module][$id] = &$items[$id];
     }
@@ -211,7 +214,7 @@ function field_default_view($entity_type, $entity, $field, $instance, $langcode,
         $info = array(
           '#theme' => 'field',
           '#weight' => $display['weight'],
-          '#title' => t($instance['label']),
+          '#title' => $instance['label'],
           '#access' => field_access('view', $field, $entity_type, $entity),
           '#label_display' => $display['label'],
           '#view_mode' => $view_mode,
diff --git a/modules/field/field.form.inc b/modules/field/field.form.inc
index 4acd1fd..845f041 100644
--- a/modules/field/field.form.inc
+++ b/modules/field/field.form.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -70,7 +69,7 @@ function field_default_form($entity_type, $entity, $field, $instance, $langcode,
           '#language' => $langcode,
           '#field_parents' => $parents,
           '#columns' => array_keys($field['columns']),
-          '#title' => check_plain(t($instance['label'])),
+          '#title' => check_plain($instance['label']),
           '#description' => field_filter_xss($instance['description']),
           // Only the first widget should be required.
           '#required' => $delta == 0 && $instance['required'],
@@ -152,8 +151,8 @@ function field_multiple_value_form($field, $instance, $langcode, $items, &$form,
       break;
   }
 
-  $title = check_plain(t($instance['label']));
-  $description = field_filter_xss(t($instance['description']));
+  $title = check_plain($instance['label']);
+  $description = field_filter_xss($instance['description']);
 
   $id_prefix = implode('-', array_merge($parents, array($field_name)));
   $wrapper_id = drupal_html_id($id_prefix . '-add-more-wrapper');
@@ -414,7 +413,7 @@ function field_add_more_js($form, $form_state) {
     return;
   }
 
-  // Add a DIV around the delta receiving the AJAX effect.
+  // Add a DIV around the delta receiving the Ajax effect.
   $delta = $element['#max_delta'];
   $element[$delta]['#prefix'] = '<div class="ajax-new-content">' . (isset($element[$delta]['#prefix']) ? $element[$delta]['#prefix'] : '');
   $element[$delta]['#suffix'] = (isset($element[$delta]['#suffix']) ? $element[$delta]['#suffix'] : '') . '</div>';
diff --git a/modules/field/field.info b/modules/field/field.info
index 3a1b20d..f8a331a 100644
--- a/modules/field/field.info
+++ b/modules/field/field.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Field
 description = Field API to add fields to entities like nodes and users.
 package = Core
diff --git a/modules/field/field.info.inc b/modules/field/field.info.inc
index 4a0248f..02707f6 100644
--- a/modules/field/field.info.inc
+++ b/modules/field/field.info.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -287,8 +286,6 @@ function _field_info_prepare_field($field) {
  *   Field instance array.
  */
 function _field_info_prepare_instance($instance, $field) {
-  $field_type = field_info_field_types($field['type']);
-
   // Make sure all expected instance settings are present.
   $instance['settings'] += field_info_instance_settings($field['type']);
 
@@ -735,7 +732,7 @@ function field_info_instance($entity_type, $field_name, $bundle_name) {
  *         'default' => array(
  *           'weight' => The weight of the component in displayed entities in
  *             this view mode,
- *           'visibility' => Whether the component is visible or hidden in
+ *           'visible' => TRUE if the component is visible, FALSE if hidden, in
  *             displayed entities in this view mode,
  *         ),
  *         'teaser' => array(
@@ -793,7 +790,7 @@ function field_info_max_weight($entity_type, $bundle, $context) {
     if ($context == 'form') {
       $weights[] = $instance['widget']['weight'];
     }
-    else {
+    elseif (isset($instance['display'][$context]['weight'])) {
       $weights[] = $instance['display'][$context]['weight'];
     }
   }
diff --git a/modules/field/field.install b/modules/field/field.install
index 02455c4..d56eb90 100644
--- a/modules/field/field.install
+++ b/modules/field/field.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -310,18 +309,27 @@ function _update_7000_field_delete_instance($field_name, $entity_type, $bundle)
 /**
  * Utility function: fetch all the field definitions from the database.
  *
+ * Warning: unlike the field_read_fields() API function, this function returns
+ * all fields by default, including deleted and inactive fields, unless
+ * specified otherwise in the $conditions parameter.
+ *
  * @param $conditions
  *   An array of conditions to limit the select query to.
+ * @param $key
+ *   The name of the field property the return array is indexed by. Using
+ *   anything else than 'id' might cause incomplete results if the $conditions
+ *   do not filter out deleted fields.
+ *
+ * @return
+ *   An array of fields matching $conditions, keyed by the property specified
+ *   by the $key parameter.
  */
-function _update_7000_field_read_fields(array $conditions = array()) {
+function _update_7000_field_read_fields(array $conditions = array(), $key = 'id') {
   $fields = array();
   $query = db_select('field_config', 'fc', array('fetch' => PDO::FETCH_ASSOC))
-    ->fields('fc')
-    ->condition('deleted', 0);
-  if (!empty($conditions)) {
-    foreach ($conditions as $column => $value) {
-      $query->condition($column, $value);
-    }
+    ->fields('fc');
+  foreach ($conditions as $column => $value) {
+    $query->condition($column, $value);
   }
   foreach ($query->execute() as $record) {
     $field = unserialize($record['data']);
@@ -338,7 +346,7 @@ function _update_7000_field_read_fields(array $conditions = array()) {
     $field['translatable'] = $record['translatable'];
     $field['deleted'] = $record['deleted'];
 
-    $fields[$field['field_name']] = $field;
+    $fields[$field[$key]] = $field;
   }
   return $fields;
 }
diff --git a/modules/field/field.module b/modules/field/field.module
index 08ee9d5..9e03c8d 100644
--- a/modules/field/field.module
+++ b/modules/field/field.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 /**
  * @file
  * Attach custom data fields to Drupal entities.
@@ -559,7 +558,7 @@ function _field_sort_items_value_helper($a, $b) {
  *         // the 'default' mode:
  *         'default' => array(
  *           'weight' => The weight of the pseudo-field,
- *           'visibility' => Whether the pseudo-field is visible or hidden,
+ *           'visible' => TRUE if the pseudo-field is visible, FALSE if hidden,
  *         ),
  *         'full' => ...
  *       ),
diff --git a/modules/field/field.multilingual.inc b/modules/field/field.multilingual.inc
index 10db954..00adf92 100644
--- a/modules/field/field.multilingual.inc
+++ b/modules/field/field.multilingual.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/field_sql_storage/field_sql_storage.info b/modules/field/modules/field_sql_storage/field_sql_storage.info
index 4d7a2e8..9313850 100644
--- a/modules/field/modules/field_sql_storage/field_sql_storage.info
+++ b/modules/field/modules/field_sql_storage/field_sql_storage.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Field SQL storage
 description = Stores field data in an SQL database.
 package = Core
diff --git a/modules/field/modules/field_sql_storage/field_sql_storage.install b/modules/field/modules/field_sql_storage/field_sql_storage.install
index 04d6859..647296e 100644
--- a/modules/field/modules/field_sql_storage/field_sql_storage.install
+++ b/modules/field/modules/field_sql_storage/field_sql_storage.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/field_sql_storage/field_sql_storage.module b/modules/field/modules/field_sql_storage/field_sql_storage.module
index 916649b..6f49167 100644
--- a/modules/field/modules/field_sql_storage/field_sql_storage.module
+++ b/modules/field/modules/field_sql_storage/field_sql_storage.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/field_sql_storage/field_sql_storage.test b/modules/field/modules/field_sql_storage/field_sql_storage.test
index 4a6f96a..f94344f 100644
--- a/modules/field/modules/field_sql_storage/field_sql_storage.test
+++ b/modules/field/modules/field_sql_storage/field_sql_storage.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Unit tests for field_sql_ storage.module
+ * Tests for field_sql_storage.module.
  *
  * Field_sql_storage.module implements the default back-end storage plugin
  * for the Field Strage API.
diff --git a/modules/field/modules/list/list.info b/modules/field/modules/list/list.info
index 250b1ba..6bcec5d 100644
--- a/modules/field/modules/list/list.info
+++ b/modules/field/modules/list/list.info
@@ -1,4 +1,3 @@
-; $Id$
 name = List
 description = Defines list field types. Use with Options to create selection lists.
 package = Core
diff --git a/modules/field/modules/list/list.install b/modules/field/modules/list/list.install
index cc7bcaf..91c7649 100644
--- a/modules/field/modules/list/list.install
+++ b/modules/field/modules/list/list.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -51,7 +50,7 @@ function list_field_schema($field) {
  */
 function list_update_7001() {
   $fields = _update_7000_field_read_fields(array('module' => 'list'));
-  foreach ($fields as $field_name => $field) {
+  foreach ($fields as $field) {
     $update = array();
 
     // Translate the old string format into the new array format.
@@ -61,7 +60,7 @@ function list_update_7001() {
       $allowed_values = _list_update_7001_extract_allowed_values($allowed_values, $position_keys);
 
       // Additionally, float keys need to be disambiguated ('.5' is '0.5').
-      if ($field['type'] == 'list_number') {
+      if ($field['type'] == 'list_number' && !empty($allowed_values)) {
         $keys = array_map(create_function('$a', 'return (string) (float) $a;'), array_keys($allowed_values));
         $allowed_values = array_combine($keys, array_values($allowed_values));
       }
@@ -116,3 +115,15 @@ function _list_update_7001_extract_allowed_values($string, $position_keys) {
 
   return $values;
 }
+
+/**
+ * Re-apply list_update_7001() for deleted fields.
+ */
+function list_update_7002() {
+  // See http://drupal.org/node/1022924: list_update_7001() intitally
+  // overlooked deleted fields, which then caused fatal errors when the fields
+  // were being purged.
+  // list_update_7001() has the required checks to ensure it is reentrant, so
+  // it can simply be executed once more..
+  list_update_7001();
+}
\ No newline at end of file
diff --git a/modules/field/modules/list/list.module b/modules/field/modules/list/list.module
index 160936c..608679b 100644
--- a/modules/field/modules/list/list.module
+++ b/modules/field/modules/list/list.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -380,7 +379,7 @@ function list_field_validate($entity_type, $entity, $field, $instance, $langcode
       if (!empty($allowed_values) && !isset($allowed_values[$item['value']])) {
         $errors[$field['field_name']][$langcode][$delta][] = array(
           'error' => 'list_illegal_value',
-          'message' => t('%name: illegal value.', array('%name' => t($instance['label']))),
+          'message' => t('%name: illegal value.', array('%name' => $instance['label'])),
         );
       }
     }
diff --git a/modules/field/modules/list/tests/list.test b/modules/field/modules/list/tests/list.test
index 0a5dd50..941d2b4 100644
--- a/modules/field/modules/list/tests/list.test
+++ b/modules/field/modules/list/tests/list.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for the 'List' field types.
+ * Tests for list.module.
  */
 
 /**
@@ -98,8 +97,8 @@ class ListFieldTestCase extends FieldTestCase {
 }
 
 /**
-* List module UI tests.
-*/
+ * List module UI tests.
+ */
 class ListFieldUITestCase extends FieldTestCase {
   public static function getInfo() {
     return array(
diff --git a/modules/field/modules/list/tests/list_test.info b/modules/field/modules/list/tests/list_test.info
index 62cc313..83ae747 100644
--- a/modules/field/modules/list/tests/list_test.info
+++ b/modules/field/modules/list/tests/list_test.info
@@ -1,4 +1,3 @@
-;$Id$
 name = "List test"
 description = "Support module for the List module tests."
 core = 7.x
diff --git a/modules/field/modules/list/tests/list_test.module b/modules/field/modules/list/tests/list_test.module
index 4fb1998..8d53404 100644
--- a/modules/field/modules/list/tests/list_test.module
+++ b/modules/field/modules/list/tests/list_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/number/number.info b/modules/field/modules/number/number.info
index ea1c365..203d85d 100644
--- a/modules/field/modules/number/number.info
+++ b/modules/field/modules/number/number.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Number
 description = Defines numeric field types.
 package = Core
diff --git a/modules/field/modules/number/number.install b/modules/field/modules/number/number.install
index d5e6b1c..02c7a30 100644
--- a/modules/field/modules/number/number.install
+++ b/modules/field/modules/number/number.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/number/number.module b/modules/field/modules/number/number.module
index 45ea954..20e3807 100644
--- a/modules/field/modules/number/number.module
+++ b/modules/field/modules/number/number.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -139,13 +138,13 @@ function number_field_validate($entity_type, $entity, $field, $instance, $langco
       if (is_numeric($instance['settings']['min']) && $item['value'] < $instance['settings']['min']) {
         $errors[$field['field_name']][$langcode][$delta][] = array(
           'error' => 'number_min',
-          'message' => t('%name: the value may be no less than %min.', array('%name' => t($instance['label']), '%min' => $instance['settings']['min'])),
+          'message' => t('%name: the value may be no less than %min.', array('%name' => $instance['label'], '%min' => $instance['settings']['min'])),
         );
       }
       if (is_numeric($instance['settings']['max']) && $item['value'] > $instance['settings']['max']) {
         $errors[$field['field_name']][$langcode][$delta][] = array(
           'error' => 'number_max',
-          'message' => t('%name: the value may be no greater than %max.', array('%name' => t($instance['label']), '%max' => $instance['settings']['max'])),
+          'message' => t('%name: the value may be no greater than %max.', array('%name' => $instance['label'], '%max' => $instance['settings']['max'])),
         );
       }
     }
@@ -368,12 +367,12 @@ function number_field_widget_validate($element, &$form_state) {
       case 'float':
       case 'decimal':
         $regexp = '@[^-0-9\\' . $field['settings']['decimal_separator'] . ']@';
-        $message = t('Only numbers and the decimal separator (@separator) allowed in %field.', array('%field' => t($instance['label']), '@separator' => $field['settings']['decimal_separator']));
+        $message = t('Only numbers and the decimal separator (@separator) allowed in %field.', array('%field' => $instance['label'], '@separator' => $field['settings']['decimal_separator']));
         break;
 
       case 'integer':
         $regexp = '@[^-0-9]@';
-        $message = t('Only numbers are allowed in %field.', array('%field' => t($instance['label'])));
+        $message = t('Only numbers are allowed in %field.', array('%field' => $instance['label']));
         break;
     }
     if ($value != preg_replace($regexp, '', $value)) {
diff --git a/modules/field/modules/number/number.test b/modules/field/modules/number/number.test
index a15b6e6..ec100f1 100644
--- a/modules/field/modules/number/number.test
+++ b/modules/field/modules/number/number.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for number field types.
+ * Tests for number.module.
  */
 
 /**
diff --git a/modules/field/modules/options/options.api.php b/modules/field/modules/options/options.api.php
index 72ee867..dfbb631 100644
--- a/modules/field/modules/options/options.api.php
+++ b/modules/field/modules/options/options.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/options/options.info b/modules/field/modules/options/options.info
index f040ae9..985a74c 100644
--- a/modules/field/modules/options/options.info
+++ b/modules/field/modules/options/options.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Options
 description = Defines selection, check box and radio button widgets for text and numeric fields.
 package = Core
diff --git a/modules/field/modules/options/options.module b/modules/field/modules/options/options.module
index abff986..385f3f4 100644
--- a/modules/field/modules/options/options.module
+++ b/modules/field/modules/options/options.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/options/options.test b/modules/field/modules/options/options.test
index 31d2617..ea58f27 100644
--- a/modules/field/modules/options/options.test
+++ b/modules/field/modules/options/options.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file 
+ * Tests for options.module.
+ */
 
 class OptionsWidgetsTestCase extends FieldTestCase {
   public static function getInfo() {
diff --git a/modules/field/modules/text/text.info b/modules/field/modules/text/text.info
index 0117dc1..976e299 100644
--- a/modules/field/modules/text/text.info
+++ b/modules/field/modules/text/text.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Text
 description = Defines simple text field types.
 package = Core
diff --git a/modules/field/modules/text/text.install b/modules/field/modules/text/text.install
index cd1d9de..b9bd25f 100644
--- a/modules/field/modules/text/text.install
+++ b/modules/field/modules/text/text.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -93,7 +92,7 @@ function text_update_7000() {
     'module' => 'text',
     'storage_type' => 'field_sql_storage',
   ));
-  foreach ($fields as $field_name => $field) {
+  foreach ($fields as $field) {
     if ($field['deleted']) {
       $table = "field_deleted_data_{$field['id']}";
       $revision_table = "field_deleted_revision_{$field['id']}";
diff --git a/modules/field/modules/text/text.js b/modules/field/modules/text/text.js
index f96075a..f3ae894 100644
--- a/modules/field/modules/text/text.js
+++ b/modules/field/modules/text/text.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/field/modules/text/text.module b/modules/field/modules/text/text.module
index 08f0622..89c605c 100644
--- a/modules/field/modules/text/text.module
+++ b/modules/field/modules/text/text.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/modules/text/text.test b/modules/field/modules/text/text.test
index ee71414..b42fed7 100644
--- a/modules/field/modules/text/text.test
+++ b/modules/field/modules/text/text.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for text.module.
+ */
 
 class TextFieldTestCase extends DrupalWebTestCase {
   protected $instance;
diff --git a/modules/field/tests/field.test b/modules/field/tests/field.test
index 05a6ede..9281273 100644
--- a/modules/field/tests/field.test
+++ b/modules/field/tests/field.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Unit test file for fields in core.
+ * Tests for field.module.
  */
 
 /**
@@ -763,6 +762,55 @@ class FieldAttachOtherTestCase extends FieldAttachTestCase {
   }
 
   /**
+   * Tests the 'multiple entity' behavior of field_attach_prepare_view().
+   */
+  function testFieldAttachPrepareViewMultiple() {
+    $entity_type = 'test_entity';
+    $langcode = LANGUAGE_NONE;
+
+    // Set the instance to be hidden.
+    $this->instance['display']['full']['type'] = 'hidden';
+    field_update_instance($this->instance);
+
+    // Set up a second instance on another bundle, with a formatter that uses
+    // hook_field_formatter_prepare_view().
+    field_test_create_bundle('test_bundle_2');
+    $formatter_setting = $this->randomName();
+    $this->instance2 = $this->instance;
+    $this->instance2['bundle'] = 'test_bundle_2';
+    $this->instance2['display']['full'] = array(
+      'type' => 'field_test_with_prepare_view',
+      'settings' => array(
+        'test_formatter_setting_additional' => $formatter_setting,
+      )
+    );
+    field_create_instance($this->instance2);
+
+    // Create one entity in each bundle.
+    $entity1_init = field_test_create_stub_entity(1, 1, 'test_bundle');
+    $values1 = $this->_generateTestFieldValues($this->field['cardinality']);
+    $entity1_init->{$this->field_name}[$langcode] = $values1;
+
+    $entity2_init = field_test_create_stub_entity(2, 2, 'test_bundle_2');
+    $values2 = $this->_generateTestFieldValues($this->field['cardinality']);
+    $entity2_init->{$this->field_name}[$langcode] = $values2;
+
+    // Run prepare_view, and check that the entities come out as expected.
+    $entity1 = clone($entity1_init);
+    $entity2 = clone($entity2_init);
+    field_attach_prepare_view($entity_type, array($entity1->ftid => $entity1, $entity2->ftid => $entity2), 'full');
+    $this->assertFalse(isset($entity1->{$this->field_name}[$langcode][0]['additional_formatter_value']), 'Entity 1 did not run through the prepare_view hook.');
+    $this->assertTrue(isset($entity2->{$this->field_name}[$langcode][0]['additional_formatter_value']), 'Entity 2 ran through the prepare_view hook.');
+
+    // Same thing, reversed order.
+    $entity1 = clone($entity1_init);
+    $entity2 = clone($entity2_init);
+    field_attach_prepare_view($entity_type, array($entity2->ftid => $entity2, $entity1->ftid => $entity1), 'full');
+    $this->assertFalse(isset($entity1->{$this->field_name}[$langcode][0]['additional_formatter_value']), 'Entity 1 did not run through the prepare_view hook.');
+    $this->assertTrue(isset($entity2->{$this->field_name}[$langcode][0]['additional_formatter_value']), 'Entity 2 ran through the prepare_view hook.');
+  }
+
+  /**
    * Test field cache.
    */
   function testFieldAttachCache() {
@@ -1448,7 +1496,7 @@ class FieldFormTestCase extends FieldTestCase {
       $field_values[$weight]['value'] = (string) $value;
       $pattern[$weight] = "<input [^>]*value=\"$value\" [^>]*";
     }
-    // Press 'add more' button through AJAX, and place the expected HTML result
+    // Press 'add more' button through Ajax, and place the expected HTML result
     // as the tested content.
     $commands = $this->drupalPostAJAX(NULL, $edit, $this->field_name . '_add_more');
     $this->content = $commands[1]['data'];
@@ -1568,109 +1616,109 @@ class FieldFormTestCase extends FieldTestCase {
    * Tests Field API form integration within a subform.
    */
   function testNestedFieldForm() {
-     // Add two instances on the 'test_bundle'
-     field_create_field($this->field_single);
-     field_create_field($this->field_unlimited);
-     $this->instance['field_name'] = 'field_single';
-     $this->instance['label'] = 'Single field';
-     field_create_instance($this->instance);
-     $this->instance['field_name'] = 'field_unlimited';
-     $this->instance['label'] = 'Unlimited field';
-     field_create_instance($this->instance);
-
-     // Create two entities.
-     $entity_1 = field_test_create_stub_entity(1, 1);
-     $entity_1->is_new = TRUE;
-     $entity_1->field_single[LANGUAGE_NONE][] = array('value' => 0);
-     $entity_1->field_unlimited[LANGUAGE_NONE][] = array('value' => 1);
-     field_test_entity_save($entity_1);
-
-     $entity_2 = field_test_create_stub_entity(2, 2);
-     $entity_2->is_new = TRUE;
-     $entity_2->field_single[LANGUAGE_NONE][] = array('value' => 10);
-     $entity_2->field_unlimited[LANGUAGE_NONE][] = array('value' => 11);
-     field_test_entity_save($entity_2);
-
-     // Display the 'combined form'.
-     $this->drupalGet('test-entity/nested/1/2');
-     $this->assertFieldByName('field_single[und][0][value]', 0, t('Entity 1: field_single value appears correctly is the form.'));
-     $this->assertFieldByName('field_unlimited[und][0][value]', 1, t('Entity 1: field_unlimited value 0 appears correctly is the form.'));
-     $this->assertFieldByName('entity_2[field_single][und][0][value]', 10, t('Entity 2: field_single value appears correctly is the form.'));
-     $this->assertFieldByName('entity_2[field_unlimited][und][0][value]', 11, t('Entity 2: field_unlimited value 0 appears correctly is the form.'));
-
-     // Submit the form and check that the entities are updated accordingly.
-     $edit = array(
-       'field_single[und][0][value]' => 1,
-       'field_unlimited[und][0][value]' => 2,
-       'field_unlimited[und][1][value]' => 3,
-       'entity_2[field_single][und][0][value]' => 11,
-       'entity_2[field_unlimited][und][0][value]' => 12,
-       'entity_2[field_unlimited][und][1][value]' => 13,
-     );
-     $this->drupalPost(NULL, $edit, t('Save'));
-     field_cache_clear();
-     $entity_1 = field_test_create_stub_entity(1);
-     $entity_2 = field_test_create_stub_entity(2);
-     $this->assertFieldValues($entity_1, 'field_single', LANGUAGE_NONE, array(1));
-     $this->assertFieldValues($entity_1, 'field_unlimited', LANGUAGE_NONE, array(2, 3));
-     $this->assertFieldValues($entity_2, 'field_single', LANGUAGE_NONE, array(11));
-     $this->assertFieldValues($entity_2, 'field_unlimited', LANGUAGE_NONE, array(12, 13));
-
-     // Submit invalid values and check that errors are reported on the
-     // correct widgets.
-     $edit = array(
-       'field_unlimited[und][1][value]' => -1,
-     );
-     $this->drupalPost('test-entity/nested/1/2', $edit, t('Save'));
-     $this->assertRaw(t('%label does not accept the value -1', array('%label' => 'Unlimited field')), t('Entity 1: the field validation error was reported.'));
-     $error_field = $this->xpath('//input[@id=:id and contains(@class, "error")]', array(':id' => 'edit-field-unlimited-und-1-value'));
-     $this->assertTrue($error_field, t('Entity 1: the error was flagged on the correct element.'));
-     $edit = array(
-       'entity_2[field_unlimited][und][1][value]' => -1,
-     );
-     $this->drupalPost('test-entity/nested/1/2', $edit, t('Save'));
-     $this->assertRaw(t('%label does not accept the value -1', array('%label' => 'Unlimited field')), t('Entity 2: the field validation error was reported.'));
-     $error_field = $this->xpath('//input[@id=:id and contains(@class, "error")]', array(':id' => 'edit-entity-2-field-unlimited-und-1-value'));
-     $this->assertTrue($error_field, t('Entity 2: the error was flagged on the correct element.'));
-
-     // Test that reordering works on both entities.
-     $edit = array(
-       'field_unlimited[und][0][_weight]' => 0,
-       'field_unlimited[und][1][_weight]' => -1,
-       'entity_2[field_unlimited][und][0][_weight]' => 0,
-       'entity_2[field_unlimited][und][1][_weight]' => -1,
-     );
-     $this->drupalPost('test-entity/nested/1/2', $edit, t('Save'));
-     field_cache_clear();
-     $this->assertFieldValues($entity_1, 'field_unlimited', LANGUAGE_NONE, array(3, 2));
-     $this->assertFieldValues($entity_2, 'field_unlimited', LANGUAGE_NONE, array(13, 12));
-
-     // Test the 'add more' buttons. Only AJAX submission is tested, because
-     // the two 'add more' buttons present in the form have the same #value,
-     // which confuses drupalPost().
-     // 'Add more' button in the first entity:
-     $this->drupalGet('test-entity/nested/1/2');
-     $this->drupalPostAJAX(NULL, array(), 'field_unlimited_add_more');
-     $this->assertFieldByName('field_unlimited[und][0][value]', 3, t('Entity 1: field_unlimited value 0 appears correctly is the form.'));
-     $this->assertFieldByName('field_unlimited[und][1][value]', 2, t('Entity 1: field_unlimited value 1 appears correctly is the form.'));
-     $this->assertFieldByName('field_unlimited[und][2][value]', '', t('Entity 1: field_unlimited value 2 appears correctly is the form.'));
-     $this->assertFieldByName('field_unlimited[und][3][value]', '', t('Entity 1: an empty widget was added for field_unlimited value 3.'));
-     // 'Add more' button in the first entity (changing field values):
-     $edit = array(
-       'entity_2[field_unlimited][und][0][value]' => 13,
-       'entity_2[field_unlimited][und][1][value]' => 14,
-       'entity_2[field_unlimited][und][2][value]' => 15,
-     );
-     $this->drupalPostAJAX(NULL, $edit, 'entity_2_field_unlimited_add_more');
-     $this->assertFieldByName('entity_2[field_unlimited][und][0][value]', 13, t('Entity 2: field_unlimited value 0 appears correctly is the form.'));
-     $this->assertFieldByName('entity_2[field_unlimited][und][1][value]', 14, t('Entity 2: field_unlimited value 1 appears correctly is the form.'));
-     $this->assertFieldByName('entity_2[field_unlimited][und][2][value]', 15, t('Entity 2: field_unlimited value 2 appears correctly is the form.'));
-     $this->assertFieldByName('entity_2[field_unlimited][und][3][value]', '', t('Entity 2: an empty widget was added for field_unlimited value 3.'));
-     // Save the form and check values are saved correclty.
-     $this->drupalPost(NULL, array(), t('Save'));
-     field_cache_clear();
-     $this->assertFieldValues($entity_1, 'field_unlimited', LANGUAGE_NONE, array(3, 2));
-     $this->assertFieldValues($entity_2, 'field_unlimited', LANGUAGE_NONE, array(13, 14, 15));
+    // Add two instances on the 'test_bundle'
+    field_create_field($this->field_single);
+    field_create_field($this->field_unlimited);
+    $this->instance['field_name'] = 'field_single';
+    $this->instance['label'] = 'Single field';
+    field_create_instance($this->instance);
+    $this->instance['field_name'] = 'field_unlimited';
+    $this->instance['label'] = 'Unlimited field';
+    field_create_instance($this->instance);
+
+    // Create two entities.
+    $entity_1 = field_test_create_stub_entity(1, 1);
+    $entity_1->is_new = TRUE;
+    $entity_1->field_single[LANGUAGE_NONE][] = array('value' => 0);
+    $entity_1->field_unlimited[LANGUAGE_NONE][] = array('value' => 1);
+    field_test_entity_save($entity_1);
+
+    $entity_2 = field_test_create_stub_entity(2, 2);
+    $entity_2->is_new = TRUE;
+    $entity_2->field_single[LANGUAGE_NONE][] = array('value' => 10);
+    $entity_2->field_unlimited[LANGUAGE_NONE][] = array('value' => 11);
+    field_test_entity_save($entity_2);
+
+    // Display the 'combined form'.
+    $this->drupalGet('test-entity/nested/1/2');
+    $this->assertFieldByName('field_single[und][0][value]', 0, t('Entity 1: field_single value appears correctly is the form.'));
+    $this->assertFieldByName('field_unlimited[und][0][value]', 1, t('Entity 1: field_unlimited value 0 appears correctly is the form.'));
+    $this->assertFieldByName('entity_2[field_single][und][0][value]', 10, t('Entity 2: field_single value appears correctly is the form.'));
+    $this->assertFieldByName('entity_2[field_unlimited][und][0][value]', 11, t('Entity 2: field_unlimited value 0 appears correctly is the form.'));
+
+    // Submit the form and check that the entities are updated accordingly.
+    $edit = array(
+      'field_single[und][0][value]' => 1,
+      'field_unlimited[und][0][value]' => 2,
+      'field_unlimited[und][1][value]' => 3,
+      'entity_2[field_single][und][0][value]' => 11,
+      'entity_2[field_unlimited][und][0][value]' => 12,
+      'entity_2[field_unlimited][und][1][value]' => 13,
+    );
+    $this->drupalPost(NULL, $edit, t('Save'));
+    field_cache_clear();
+    $entity_1 = field_test_create_stub_entity(1);
+    $entity_2 = field_test_create_stub_entity(2);
+    $this->assertFieldValues($entity_1, 'field_single', LANGUAGE_NONE, array(1));
+    $this->assertFieldValues($entity_1, 'field_unlimited', LANGUAGE_NONE, array(2, 3));
+    $this->assertFieldValues($entity_2, 'field_single', LANGUAGE_NONE, array(11));
+    $this->assertFieldValues($entity_2, 'field_unlimited', LANGUAGE_NONE, array(12, 13));
+
+    // Submit invalid values and check that errors are reported on the
+    // correct widgets.
+    $edit = array(
+      'field_unlimited[und][1][value]' => -1,
+    );
+    $this->drupalPost('test-entity/nested/1/2', $edit, t('Save'));
+    $this->assertRaw(t('%label does not accept the value -1', array('%label' => 'Unlimited field')), t('Entity 1: the field validation error was reported.'));
+    $error_field = $this->xpath('//input[@id=:id and contains(@class, "error")]', array(':id' => 'edit-field-unlimited-und-1-value'));
+    $this->assertTrue($error_field, t('Entity 1: the error was flagged on the correct element.'));
+    $edit = array(
+      'entity_2[field_unlimited][und][1][value]' => -1,
+    );
+    $this->drupalPost('test-entity/nested/1/2', $edit, t('Save'));
+    $this->assertRaw(t('%label does not accept the value -1', array('%label' => 'Unlimited field')), t('Entity 2: the field validation error was reported.'));
+    $error_field = $this->xpath('//input[@id=:id and contains(@class, "error")]', array(':id' => 'edit-entity-2-field-unlimited-und-1-value'));
+    $this->assertTrue($error_field, t('Entity 2: the error was flagged on the correct element.'));
+
+    // Test that reordering works on both entities.
+    $edit = array(
+      'field_unlimited[und][0][_weight]' => 0,
+      'field_unlimited[und][1][_weight]' => -1,
+      'entity_2[field_unlimited][und][0][_weight]' => 0,
+      'entity_2[field_unlimited][und][1][_weight]' => -1,
+    );
+    $this->drupalPost('test-entity/nested/1/2', $edit, t('Save'));
+    field_cache_clear();
+    $this->assertFieldValues($entity_1, 'field_unlimited', LANGUAGE_NONE, array(3, 2));
+    $this->assertFieldValues($entity_2, 'field_unlimited', LANGUAGE_NONE, array(13, 12));
+
+    // Test the 'add more' buttons. Only Ajax submission is tested, because
+    // the two 'add more' buttons present in the form have the same #value,
+    // which confuses drupalPost().
+    // 'Add more' button in the first entity:
+    $this->drupalGet('test-entity/nested/1/2');
+    $this->drupalPostAJAX(NULL, array(), 'field_unlimited_add_more');
+    $this->assertFieldByName('field_unlimited[und][0][value]', 3, t('Entity 1: field_unlimited value 0 appears correctly is the form.'));
+    $this->assertFieldByName('field_unlimited[und][1][value]', 2, t('Entity 1: field_unlimited value 1 appears correctly is the form.'));
+    $this->assertFieldByName('field_unlimited[und][2][value]', '', t('Entity 1: field_unlimited value 2 appears correctly is the form.'));
+    $this->assertFieldByName('field_unlimited[und][3][value]', '', t('Entity 1: an empty widget was added for field_unlimited value 3.'));
+    // 'Add more' button in the first entity (changing field values):
+    $edit = array(
+      'entity_2[field_unlimited][und][0][value]' => 13,
+      'entity_2[field_unlimited][und][1][value]' => 14,
+      'entity_2[field_unlimited][und][2][value]' => 15,
+    );
+    $this->drupalPostAJAX(NULL, $edit, 'entity_2_field_unlimited_add_more');
+    $this->assertFieldByName('entity_2[field_unlimited][und][0][value]', 13, t('Entity 2: field_unlimited value 0 appears correctly is the form.'));
+    $this->assertFieldByName('entity_2[field_unlimited][und][1][value]', 14, t('Entity 2: field_unlimited value 1 appears correctly is the form.'));
+    $this->assertFieldByName('entity_2[field_unlimited][und][2][value]', 15, t('Entity 2: field_unlimited value 2 appears correctly is the form.'));
+    $this->assertFieldByName('entity_2[field_unlimited][und][3][value]', '', t('Entity 2: an empty widget was added for field_unlimited value 3.'));
+    // Save the form and check values are saved correclty.
+    $this->drupalPost(NULL, array(), t('Save'));
+    field_cache_clear();
+    $this->assertFieldValues($entity_1, 'field_unlimited', LANGUAGE_NONE, array(3, 2));
+    $this->assertFieldValues($entity_2, 'field_unlimited', LANGUAGE_NONE, array(13, 14, 15));
   }
 }
 
@@ -1827,7 +1875,7 @@ class FieldDisplayAPITestCase extends FieldTestCase {
       $item = $this->entity->{$this->field_name}[LANGUAGE_NONE][$delta];
       $output = field_view_value('test_entity', $this->entity, $this->field_name, $item, $display);
       $this->drupalSetContent(drupal_render($output));
-      $this->assertText($setting . '|0:' .  $value['value'], t('Value @delta was displayed with expected setting.', array('@delta' => $delta)));
+      $this->assertText($setting . '|0:' . $value['value'], t('Value @delta was displayed with expected setting.', array('@delta' => $delta)));
     }
 
     // Check that prepare_view steps are invoked.
@@ -1843,7 +1891,7 @@ class FieldDisplayAPITestCase extends FieldTestCase {
       $item = $this->entity->{$this->field_name}[LANGUAGE_NONE][$delta];
       $output = field_view_value('test_entity', $this->entity, $this->field_name, $item, $display);
       $this->drupalSetContent(drupal_render($output));
-      $this->assertText($setting . '|' .  $value['value'] . '|' . ($value['value'] + 1), t('Value @delta was displayed with expected setting.', array('@delta' => $delta)));
+      $this->assertText($setting . '|' . $value['value'] . '|' . ($value['value'] + 1), t('Value @delta was displayed with expected setting.', array('@delta' => $delta)));
     }
 
     // View mode: check that display settings specified in the instance are
@@ -2642,7 +2690,7 @@ class FieldTranslationsTestCase extends FieldTestCase {
     $extra_languages = mt_rand(1, 4);
     $languages = $available_languages = field_available_languages($this->entity_type, $this->field);
     for ($i = 0; $i < $extra_languages; ++$i) {
-      $languages[] = $this->randomString(2);
+      $languages[] = $this->randomName(2);
     }
 
     // For each given language provide some random values.
@@ -2667,10 +2715,14 @@ class FieldTranslationsTestCase extends FieldTestCase {
    * Test the multilanguage logic of _field_invoke_multiple().
    */
   function testFieldInvokeMultiple() {
+    // Enable field translations for the entity.
+    field_test_entity_info_translatable('test_entity', TRUE);
+
     $values = array();
+    $options = array();
     $entities = array();
     $entity_type = 'test_entity';
-    $entity_count = mt_rand(1, 5);
+    $entity_count = mt_rand(2, 5);
     $available_languages = field_available_languages($this->entity_type, $this->field);
 
     for ($id = 1; $id <= $entity_count; ++$id) {
@@ -2681,29 +2733,55 @@ class FieldTranslationsTestCase extends FieldTestCase {
       // correctly uses the result of field_available_languages().
       $extra_languages = mt_rand(1, 4);
       for ($i = 0; $i < $extra_languages; ++$i) {
-        $languages[] = $this->randomString(2);
+        $languages[] = $this->randomName(2);
       }
 
       // For each given language provide some random values.
-      foreach ($languages as $langcode) {
-        for ($delta = 0; $delta < $this->field['cardinality']; $delta++) {
-          $values[$id][$langcode][$delta]['value'] = mt_rand(1, 127);
+      $language_count = count($languages);
+      for ($i = 0; $i < $language_count; ++$i) {
+        $langcode = $languages[$i];
+        // Avoid to populate at least one field translation to check that
+        // per-entity language suggestions work even when available field values
+        // are different for each language.
+        if ($i !== $id) {
+          for ($delta = 0; $delta < $this->field['cardinality']; $delta++) {
+            $values[$id][$langcode][$delta]['value'] = mt_rand(1, 127);
+          }
+        }
+        // Ensure that a language for which there is no field translation is
+        // used as display language to prepare per-entity language suggestions.
+        elseif (!isset($display_language)) {
+          $display_language = $langcode;
         }
       }
+
       $entity->{$this->field_name} = $values[$id];
       $entities[$id] = $entity;
+
+      // Store per-entity language suggestions.
+      $options['language'][$id] = field_language($entity_type, $entity, NULL, $display_language);
     }
 
     $grouped_results = _field_invoke_multiple('test_op_multiple', $entity_type, $entities);
     foreach ($grouped_results as $id => $results) {
       foreach ($results as $langcode => $result) {
-        $hash = hash('sha256', serialize(array($entity_type, $entities[$id], $this->field_name, $langcode, $values[$id][$langcode])));
-        // Check whether the parameters passed to _field_invoke() were correctly
-        // forwarded to the callback function.
-        $this->assertEqual($hash, $result, t('The result for entity %id/%language is correctly stored.', array('%id' => $id, '%language' => $langcode)));
+        if (isset($values[$id][$langcode])) {
+          $hash = hash('sha256', serialize(array($entity_type, $entities[$id], $this->field_name, $langcode, $values[$id][$langcode])));
+          // Check whether the parameters passed to _field_invoke() were correctly
+          // forwarded to the callback function.
+          $this->assertEqual($hash, $result, t('The result for entity %id/%language is correctly stored.', array('%id' => $id, '%language' => $langcode)));
+        }
       }
       $this->assertEqual(count($results), count($available_languages), t('No unavailable language has been processed for entity %id.', array('%id' => $id)));
     }
+
+    $null = NULL;
+    $grouped_results = _field_invoke_multiple('test_op_multiple', $entity_type, $entities, $null, $null, $options);
+    foreach ($grouped_results as $id => $results) {
+      foreach ($results as $langcode => $result) {
+        $this->assertTrue(isset($options['language'][$id]), t('The result language %language for entity %id was correctly suggested (display language: %display_language).', array('%id' => $id, '%language' => $langcode, '%display_language' => $display_language)));
+      }
+    }
   }
 
   /**
@@ -2880,7 +2958,7 @@ class FieldBulkDeleteTestCase extends FieldTestCase {
   public static function getInfo() {
     return array(
       'name' => 'Field bulk delete tests',
-      'description'=> 'Bulk delete fields and instances, and clean up afterwards.',
+      'description' => 'Bulk delete fields and instances, and clean up afterwards.',
       'group' => 'Field API',
     );
   }
@@ -3127,7 +3205,7 @@ class EntityPropertiesTestCase extends FieldTestCase {
   public static function getInfo() {
     return array(
       'name' => 'Entity properties',
-      'description'=> 'Tests entity properties.',
+      'description' => 'Tests entity properties.',
       'group' => 'Entity API',
     );
   }
diff --git a/modules/field/tests/field_test.entity.inc b/modules/field/tests/field_test.entity.inc
index 4273dd9..b7c70a6 100644
--- a/modules/field/tests/field_test.entity.inc
+++ b/modules/field/tests/field_test.entity.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/tests/field_test.field.inc b/modules/field/tests/field_test.field.inc
index d11bc2f..b8a2939 100644
--- a/modules/field/tests/field_test.field.inc
+++ b/modules/field/tests/field_test.field.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/tests/field_test.info b/modules/field/tests/field_test.info
index 15fb065..6d11706 100644
--- a/modules/field/tests/field_test.info
+++ b/modules/field/tests/field_test.info
@@ -1,4 +1,3 @@
-;$Id$
 name = "Field API Test"
 description = "Support module for the Field API tests."
 core = 7.x
diff --git a/modules/field/tests/field_test.install b/modules/field/tests/field_test.install
index 268d271..5957561 100644
--- a/modules/field/tests/field_test.install
+++ b/modules/field/tests/field_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field/tests/field_test.module b/modules/field/tests/field_test.module
index 6e068fe..9e2fef6 100644
--- a/modules/field/tests/field_test.module
+++ b/modules/field/tests/field_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -89,7 +88,9 @@ function field_test_field_test_op($entity_type, $entity, $field, $instance, $lan
 function field_test_field_test_op_multiple($entity_type, $entities, $field, $instances, $langcode, &$items) {
   $result = array();
   foreach ($entities as $id => $entity) {
-    $result[$id] = array($langcode => hash('sha256', serialize(array($entity_type, $entity, $field['field_name'], $langcode, $items[$id]))));
+    if (isset($items[$id])) {
+      $result[$id] = array($langcode => hash('sha256', serialize(array($entity_type, $entity, $field['field_name'], $langcode, $items[$id]))));
+    }
   }
   return $result;
 }
diff --git a/modules/field/tests/field_test.storage.inc b/modules/field/tests/field_test.storage.inc
index 43f1c4b..3ca322d 100644
--- a/modules/field/tests/field_test.storage.inc
+++ b/modules/field/tests/field_test.storage.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -288,7 +287,7 @@ function field_test_field_storage_query($field_id, $conditions, $count, &$cursor
           case '<=':
           case '>':
           case '>=':
-            eval('$match = $match && '. $row->{$column} . ' ' . $operator . ' '. $value);
+            eval('$match = $match && ' . $row->{$column} . ' ' . $operator . ' '. $value);
             break;
           case 'IN':
             $match = $match && in_array($row->{$column}, $value);
diff --git a/modules/field/theme/field-rtl.css b/modules/field/theme/field-rtl.css
index 814db89..5d35a86 100644
--- a/modules/field/theme/field-rtl.css
+++ b/modules/field/theme/field-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 form .field-multiple-table th.field-label {
   padding-right: 0;
diff --git a/modules/field/theme/field.css b/modules/field/theme/field.css
index 9323b8b..9eba32f 100644
--- a/modules/field/theme/field.css
+++ b/modules/field/theme/field.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* Field display */
 .field .field-label {
diff --git a/modules/field/theme/field.tpl.php b/modules/field/theme/field.tpl.php
index 8f317c9..e4cd85c 100644
--- a/modules/field/theme/field.tpl.php
+++ b/modules/field/theme/field.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file field.tpl.php
diff --git a/modules/field_ui/field_ui-rtl.css b/modules/field_ui/field_ui-rtl.css
index 3defc56..123a840 100644
--- a/modules/field_ui/field_ui-rtl.css
+++ b/modules/field_ui/field_ui-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* 'Manage fields' overview */
 table.field-ui-overview tr.add-new .label-input {
diff --git a/modules/field_ui/field_ui.admin.inc b/modules/field_ui/field_ui.admin.inc
index 6274d5a..96beb13 100644
--- a/modules/field_ui/field_ui.admin.inc
+++ b/modules/field_ui/field_ui.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -875,7 +874,7 @@ function field_ui_display_overview_form($form, &$form_state, $entity_type, $bund
       'class' => array('field-ui-overview'),
       'id' => 'field-display-overview',
     ),
-    // Add AJAX wrapper.
+    // Add Ajax wrapper.
     '#prefix' => '<div id="field-display-overview-wrapper">',
     '#suffix' => '</div>',
   );
@@ -1157,7 +1156,7 @@ function field_ui_display_overview_form($form, &$form_state, $entity_type, $bund
       'callback' => 'field_ui_display_overview_multistep_js',
       'wrapper' => 'field-display-overview-wrapper',
       'effect' => 'fade',
-      // The button stays hidden, so we hide the AJAX spinner too. Ad-hoc
+      // The button stays hidden, so we hide the Ajax spinner too. Ad-hoc
       // spinners will be added manually by the client-side script.
       'progress' => 'none',
     ),
@@ -1218,7 +1217,7 @@ function field_ui_display_overview_multistep_submit($form, &$form_state) {
 }
 
 /**
- * AJAX handler for multistep buttons on the 'Manage display' screen.
+ * Ajax handler for multistep buttons on the 'Manage display' screen.
  */
 function field_ui_display_overview_multistep_js($form, &$form_state) {
   $trigger = $form_state['triggering_element'];
@@ -1793,7 +1792,7 @@ function field_ui_field_edit_form($form, &$form_state, $instance) {
     '#default_value' => !empty($instance['description']) ? $instance['description'] : '',
     '#rows' => 5,
     '#description' => t('Instructions to present to the user below this field on the editing form.<br />Allowed HTML tags: @tags', array('@tags' => _field_filter_xss_display_allowed_tags())),
-    '#weight' => 0,
+    '#weight' => -5,
   );
 
   // Build the widget component of the instance.
diff --git a/modules/field_ui/field_ui.api.php b/modules/field_ui/field_ui.api.php
index df34469..e07a937 100644
--- a/modules/field_ui/field_ui.api.php
+++ b/modules/field_ui/field_ui.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/field_ui/field_ui.css b/modules/field_ui/field_ui.css
index 68307c3..c25d2a4 100644
--- a/modules/field_ui/field_ui.css
+++ b/modules/field_ui/field_ui.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* 'Manage fields' and 'Manage display' overviews */
 table.field-ui-overview tr.add-new .label-input {
diff --git a/modules/field_ui/field_ui.info b/modules/field_ui/field_ui.info
index 8524473..41d0999 100644
--- a/modules/field_ui/field_ui.info
+++ b/modules/field_ui/field_ui.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Field UI
 description = User interface for the Field API.
 package = Core
diff --git a/modules/field_ui/field_ui.js b/modules/field_ui/field_ui.js
index cd27bff..b63399f 100644
--- a/modules/field_ui/field_ui.js
+++ b/modules/field_ui/field_ui.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function($) {
 
@@ -167,7 +166,7 @@ Drupal.fieldUIOverview = {
         refreshRows = rowHandler.regionChange(region);
         // Update the row region.
         rowHandler.region = region;
-        // AJAX-update the rows.
+        // Ajax-update the rows.
         Drupal.fieldUIOverview.AJAXRefreshRows(refreshRows);
       }
     }
@@ -206,7 +205,7 @@ Drupal.fieldUIOverview = {
   },
 
   /**
-   * Triggers AJAX refresh of selected rows.
+   * Triggers Ajax refresh of selected rows.
    *
    * The 'format type' selects can trigger a series of changes in child rows.
    * The #ajax behavior is therefore not attached directly to the selects, but
@@ -215,7 +214,7 @@ Drupal.fieldUIOverview = {
    * @param rows
    *   A hash object, whose keys are the names of the rows to refresh (they
    *   will receive the 'ajax-new-content' effect on the server side), and
-   *   whose values are the DOM element in the row that should get an AJAX
+   *   whose values are the DOM element in the row that should get an Ajax
    *   throbber.
    */
   AJAXRefreshRows: function (rows) {
@@ -234,7 +233,7 @@ Drupal.fieldUIOverview = {
         .addClass('progress-disabled')
         .after($throbber);
 
-      // Fire the AJAX update.
+      // Fire the Ajax update.
       $('input[name=refresh_rows]').val(rowNames.join(' '));
       $('input#edit-refresh').mousedown();
 
@@ -295,7 +294,7 @@ Drupal.fieldUIDisplayOverview.field.prototype = {
    * @param region
    *   The name of the new region for the row.
    * @return
-   *   A hash object indicating which rows should be AJAX-updated as a result
+   *   A hash object indicating which rows should be Ajax-updated as a result
    *   of the change, in the format expected by
    *   Drupal.displayOverview.AJAXRefreshRows().
    */
diff --git a/modules/field_ui/field_ui.module b/modules/field_ui/field_ui.module
index 3d2ddf6..7355e87 100644
--- a/modules/field_ui/field_ui.module
+++ b/modules/field_ui/field_ui.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -24,7 +23,7 @@ function field_ui_help($path, $arg) {
       $output .= '<dt>' . t('What type of data the field will store') . '</dt>';
       $output .= '<dd>' . t('Each field can store one type of data (text, number, file, etc.). When you define a field, you choose a particular <em>field type</em>, which corresponds to the type of data you want to store. The field type cannot be changed after you have created the field.') . '</dd>';
       $output .= '<dt>' . t('How the data will be input and displayed') . '</dt>';
-      $output .= '<dd>' . t('Each field type has one or more available <em>widgets</em> associated with it; each widget provides a mechanism for data input when you are editing (text box, select list, file upload, etc.). Each field type also has one or more display options, which determine how the field is displayed to site visitors. The widget and display display options can be changed after you have created the field.') . '</dd>';
+      $output .= '<dd>' . t('Each field type has one or more available <em>widgets</em> associated with it; each widget provides a mechanism for data input when you are editing (text box, select list, file upload, etc.). Each field type also has one or more display options, which determine how the field is displayed to site visitors. The widget and display options can be changed after you have created the field.') . '</dd>';
       $output .= '<dt>' . t('How many values the field will store') . '</dt>';
       $output .= '<dd>' . t('You can store one value, a specific maximum number of values, or an unlimited number of values in each field. For example, an employee identification number field might store a single number, whereas a phone number field might store multiple phone numbers. This setting can be changed after you have created the field, but if you reduce the maximum number of values, you may lose information.') . '</dd>';
       $output .= '</dl>';
@@ -234,7 +233,7 @@ function field_ui_menu_load($field_name, $entity_type, $bundle_name, $bundle_pos
  * Menu title callback.
  */
 function field_ui_menu_title($instance) {
-  return t($instance['label']);
+  return $instance['label'];
 }
 
 /**
@@ -363,4 +362,3 @@ function field_ui_form_node_type_form_submit($form, &$form_state) {
     $form_state['redirect'] = _field_ui_bundle_admin_path('node', $form_state['values']['type']) .'/fields';
   }
 }
-
diff --git a/modules/field_ui/field_ui.test b/modules/field_ui/field_ui.test
index e67fc2b..77f79ce 100644
--- a/modules/field_ui/field_ui.test
+++ b/modules/field_ui/field_ui.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Unit test file for fields in core UI.
+ * Tests for field_ui.module.
  */
 
 /**
@@ -389,7 +388,7 @@ class FieldUIManageFieldsTestCase extends FieldUITestCase {
       'bundle' => $this->type,
       'entity_type' => 'node',
       'label' => t('Hidden field'),
-      'widget_type' => 'test_field_widget',
+      'widget' => array('type' => 'test_field_widget'),
     );
     field_create_instance($instance);
     $this->assertTrue(field_read_instance('node', $field_name, $this->type), t('An instance of the field %field was created programmatically.', array('%field' => $field_name)));
diff --git a/modules/file/file.api.php b/modules/file/file.api.php
index b5cf793..76fb986 100644
--- a/modules/file/file.api.php
+++ b/modules/file/file.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -42,7 +41,7 @@ function hook_file_download_access($field, $entity_type, $entity) {
  *
  * @see hook_file_download_access().
  *
- * @param &$grants
+ * @param $grants
  *   An array of grants gathered by hook_file_download_access(). The array is
  *   keyed by the module that defines the entity type's access control; the
  *   values are Boolean grant responses for each module.
diff --git a/modules/file/file.css b/modules/file/file.css
index 10d9a89..aed1a9d 100644
--- a/modules/file/file.css
+++ b/modules/file/file.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Managed file element styles.
diff --git a/modules/file/file.field.inc b/modules/file/file.field.inc
index c20fe77..2af3cb6 100644
--- a/modules/file/file.field.inc
+++ b/modules/file/file.field.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -203,9 +202,9 @@ function file_field_prepare_view($entity_type, $entities, $field, $instances, $l
       if (!file_field_displayed($item, $field)) {
         unset($items[$id][$delta]);
       }
-      // Ensure consecutive deltas.
-      $items[$id] = array_values($items[$id]);
     }
+    // Ensure consecutive deltas.
+    $items[$id] = array_values($items[$id]);
   }
 }
 
@@ -448,7 +447,7 @@ function file_field_widget_form(&$form, &$form_state, $field, $instance, $langco
     'description' => '',
   );
 
-  // Retrieve any values set in $form_state, as will be the case during AJAX
+  // Retrieve any values set in $form_state, as will be the case during Ajax
   // rebuilds of this form.
   if (isset($form_state['values'])) {
     $path = array_merge($element['#field_parents'], array($field['field_name'], $langcode));
@@ -568,14 +567,17 @@ function file_field_widget_upload_validators($field, $instance) {
  *   A field array.
  * @param $instance
  *   A field instance array.
+ * @param $data
+ *   An array of token objects to pass to token_replace().
  * @return
  *   A file directory URI with tokens replaced.
+ *
+ * @see token_replace()
  */
-function file_field_widget_uri($field, $instance, $account = NULL) {
+function file_field_widget_uri($field, $instance, $data = array()) {
   $destination = trim($instance['settings']['file_directory'], '/');
 
   // Replace tokens.
-  $data = array('user' => isset($account) ? $account : $GLOBALS['user']);
   $destination = token_replace($destination, $data);
 
   return $field['settings']['uri_scheme'] . '://' . $destination;
@@ -650,7 +652,7 @@ function file_field_widget_process($element, &$form_state, $form) {
     );
   }
 
-  // Adjust the AJAX settings so that on upload and remove of any individual
+  // Adjust the Ajax settings so that on upload and remove of any individual
   // file, the entire group of file fields is updated together.
   if ($field['cardinality'] != 1) {
     $parents = array_slice($element['#array_parents'], 0, -1);
@@ -681,7 +683,7 @@ function file_field_widget_process($element, &$form_state, $form) {
 /**
  * An element #process callback for a group of file_generic fields.
  *
- * Adds the weight field to each row so it can be ordered and adds a new AJAX
+ * Adds the weight field to each row so it can be ordered and adds a new Ajax
  * wrapper around the entire group so it can be replaced all at once.
  */
 function file_field_widget_process_multiple($element, &$form_state, $form) {
@@ -710,7 +712,7 @@ function file_field_widget_process_multiple($element, &$form_state, $form) {
     }
   }
 
-  // Add a new wrapper around all the elements for AJAX replacement.
+  // Add a new wrapper around all the elements for Ajax replacement.
   $element['#prefix'] = '<div id="' . $element['#id'] . '-ajax-wrapper">';
   $element['#suffix'] = '</div>';
 
@@ -770,7 +772,7 @@ function theme_file_widget($variables) {
   $element = $variables['element'];
   $output = '';
 
-  // The "form-managed-file" class is required for proper AJAX functionality.
+  // The "form-managed-file" class is required for proper Ajax functionality.
   $output .= '<div class="file-widget form-managed-file clearfix">';
   if ($element['fid']['#value'] != 0) {
     // Add the file size after the file name.
diff --git a/modules/file/file.info b/modules/file/file.info
index ac34022..eda79f9 100644
--- a/modules/file/file.info
+++ b/modules/file/file.info
@@ -1,4 +1,3 @@
-; $Id$
 name = File
 description = Defines a file field type.
 package = Core
diff --git a/modules/file/file.install b/modules/file/file.install
index c697f87..47ee4fd 100644
--- a/modules/file/file.install
+++ b/modules/file/file.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/file/file.js b/modules/file/file.js
index 15629df..1071384 100644
--- a/modules/file/file.js
+++ b/modules/file/file.js
@@ -1,11 +1,10 @@
-// $Id$
 
 /**
  * @file
  * Provides JavaScript additions to the managed file field type.
  *
  * This file provides progress bar support (if available), popup windows for
- * file previews, and disabling of other file fields during AJAX uploads (which
+ * file previews, and disabling of other file fields during Ajax uploads (which
  * prevents separate file fields from accidentally uploading files).
  */
 
@@ -90,7 +89,7 @@ Drupal.file = Drupal.file || {
   disableFields: function (event){
     var clickedButton = this;
 
-    // Only disable upload fields for AJAX buttons.
+    // Only disable upload fields for Ajax buttons.
     if (!$(clickedButton).hasClass('ajax-processed')) {
       return;
     }
@@ -105,7 +104,7 @@ Drupal.file = Drupal.file || {
     // working with. Filter out fields that are already disabled so that they
     // do not get enabled when we re-enable these fields at the end of behavior
     // processing. Re-enable in a setTimeout set to a relatively short amount
-    // of time (1 second). All the other mousedown handlers (like Drupal's AJAX
+    // of time (1 second). All the other mousedown handlers (like Drupal's Ajax
     // behaviors) are excuted before any timeout functions are called, so we
     // don't have to worry about the fields being re-enabled too soon.
     // @todo If the previous sentence is true, why not set the timeout to 0?
diff --git a/modules/file/file.module b/modules/file/file.module
index 3b6e185..3e45251 100644
--- a/modules/file/file.module
+++ b/modules/file/file.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -161,7 +160,8 @@ function file_file_download($uri, $field_type = 'file') {
     foreach ($field_references as $entity_type => $type_references) {
       foreach ($type_references as $id => $reference) {
         // Try to load $entity and $field.
-        $entity = reset(entity_load($entity_type, array($id)));
+        $entity = entity_load($entity_type, array($id));
+        $entity = reset($entity);
         $field = NULL;
         if ($entity) {
           // Load all fields for that entity.
@@ -221,7 +221,7 @@ function file_file_download($uri, $field_type = 'file') {
 }
 
 /**
- * Menu callback; Shared AJAX callback for file uploads and deletions.
+ * Menu callback; Shared Ajax callback for file uploads and deletions.
  *
  * This rebuilds the form element for a particular field item. As long as the
  * form processing is properly encapsulated in the widget element the form
@@ -265,7 +265,7 @@ function file_ajax_upload() {
     $form = $form[$parent];
   }
 
-  // Add the special AJAX class if a new file was added.
+  // Add the special Ajax class if a new file was added.
   if (isset($form['#file_upload_delta']) && $current_file_count < $form['#file_upload_delta']) {
     $form[$current_file_count]['#attributes']['class'][] = 'ajax-new-content';
   }
@@ -453,7 +453,7 @@ function file_managed_file_process($element, &$form_state, $form) {
     );
   }
 
-  // Prefix and suffix used for AJAX replacement.
+  // Prefix and suffix used for Ajax replacement.
   $element['#prefix'] = '<div id="' . $element['#id'] . '-ajax-wrapper">';
   $element['#suffix'] = '</div>';
 
diff --git a/modules/file/tests/file.test b/modules/file/tests/file.test
index bf74b8b..ea8c5c6 100644
--- a/modules/file/tests/file.test
+++ b/modules/file/tests/file.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests file uploading through the File module.
+ * Tests for file.module.
  */
 
 /**
@@ -254,7 +253,7 @@ class FileManagedFileElementTestCase extends FileFieldTestCase {
         $this->drupalPost($path . '/' . $last_fid, array(), t('Save'));
         $this->assertRaw(t('The file id is %fid.', array('%fid' => $last_fid)), t('Empty submission did not change an existing file.'));
 
-        // Now, test the Upload and Remove buttons, with and without AJAX.
+        // Now, test the Upload and Remove buttons, with and without Ajax.
         foreach (array(FALSE, TRUE) as $ajax) {
           // Upload, then Submit.
           $last_fid_prior = $this->getLastFileId();
@@ -302,7 +301,7 @@ class FileManagedFileElementTestCase extends FileFieldTestCase {
 }
 
 /**
- * Test class to test file field widget, single and multi-valued, with and without AJAX, with public and private files.
+ * Test class to test file field widget, single and multi-valued, with and without Ajax, with public and private files.
  */
 class FileFieldWidgetTestCase extends FileFieldTestCase {
   public static function getInfo() {
@@ -314,7 +313,7 @@ class FileFieldWidgetTestCase extends FileFieldTestCase {
   }
 
   /**
-   * Tests upload and remove buttons, with and without AJAX, for a single-valued File field.
+   * Tests upload and remove buttons, with and without Ajax, for a single-valued File field.
    */
   function testSingleValuedWidget() {
     // Use 'page' instead of 'article', so that the 'article' image field does
@@ -371,7 +370,7 @@ class FileFieldWidgetTestCase extends FileFieldTestCase {
   }
 
   /**
-   * Tests upload and remove buttons, with and without AJAX, for a multi-valued File field.
+   * Tests upload and remove buttons, with and without Ajax, for a multi-valued File field.
    */
   function testMultiValuedWidget() {
     // Use 'page' instead of 'article', so that the 'article' image field does
@@ -390,7 +389,7 @@ class FileFieldWidgetTestCase extends FileFieldTestCase {
       // Visit the node creation form, and upload 3 files. Since the field has
       // cardinality of 3, ensure the "Upload" button is displayed until after
       // the 3rd file, and after that, isn't displayed.
-      // @todo This is only testing a non-AJAX upload, because drupalPostAJAX()
+      // @todo This is only testing a non-Ajax upload, because drupalPostAJAX()
       //   does not yet emulate jQuery's file upload.
       $this->drupalGet("node/add/$type_name");
       for ($delta = 0; $delta < 3; $delta++) {
@@ -933,7 +932,7 @@ class FileFieldPathTestCase extends FileFieldTestCase {
 
     // Check the path when used with tokens.
     // Change the path to contain multiple token directories.
-    $field = $this->updateFileField($field_name, $type_name, array('file_directory' => '[user:uid]/[user:name]'));
+    $field = $this->updateFileField($field_name, $type_name, array('file_directory' => '[current-user:uid]/[current-user:name]'));
 
     // Upload a new file into the token subdirectories.
     $nid = $this->uploadNodeFile($test_file, $field_name, $type_name);
@@ -941,6 +940,8 @@ class FileFieldPathTestCase extends FileFieldTestCase {
     // Check that the file was uploaded into the subdirectory.
     $node = node_load($nid, NULL, TRUE);
     $node_file = (object) $node->{$field_name}[LANGUAGE_NONE][0];
+    // Do token replacement using the same user which uploaded the file, not
+    // the user running the test case.
     $data = array('user' => $this->admin_user);
     $subdirectory = token_replace('[user:uid]/[user:name]', $data);
     $this->assertPathMatch('public://' . $subdirectory . '/' . $test_file->filename, $node_file->uri, t('The file %file was uploaded to the correct path with token replacements.', array('%file' => $node_file->uri)));
@@ -1027,7 +1028,7 @@ class FileTokenReplaceTestCase extends FileFieldTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('file' => $file), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized file token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized file token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -1039,7 +1040,7 @@ class FileTokenReplaceTestCase extends FileFieldTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('file' => $file), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized file token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized file token %token replaced.', array('%token' => $input)));
     }
   }
 }
diff --git a/modules/file/tests/file_module_test.info b/modules/file/tests/file_module_test.info
index 50e2bd4..8db907b 100644
--- a/modules/file/tests/file_module_test.info
+++ b/modules/file/tests/file_module_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = File test
 description = Provides hooks for testing File module functionality.
 package = Core
diff --git a/modules/file/tests/file_module_test.module b/modules/file/tests/file_module_test.module
index 7bccb4a..ea65981 100644
--- a/modules/file/tests/file_module_test.module
+++ b/modules/file/tests/file_module_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/filter/filter.admin.inc b/modules/filter/filter.admin.inc
index 6fc1067..5a21e6e 100644
--- a/modules/filter/filter.admin.inc
+++ b/modules/filter/filter.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/filter/filter.admin.js b/modules/filter/filter.admin.js
index c9be979..3bc6233 100644
--- a/modules/filter/filter.admin.js
+++ b/modules/filter/filter.admin.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 Drupal.behaviors.filterStatus = {
diff --git a/modules/filter/filter.api.php b/modules/filter/filter.api.php
index ca01eec..6675e4a 100644
--- a/modules/filter/filter.api.php
+++ b/modules/filter/filter.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/filter/filter.css b/modules/filter/filter.css
index 5bcd1e0..f731733 100644
--- a/modules/filter/filter.css
+++ b/modules/filter/filter.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .text-format-wrapper .form-item {
   margin-bottom: 0;
diff --git a/modules/filter/filter.info b/modules/filter/filter.info
index b830bc6..0aebbf8 100644
--- a/modules/filter/filter.info
+++ b/modules/filter/filter.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Filter
 description = Filters content in preparation for display.
 package = Core
diff --git a/modules/filter/filter.install b/modules/filter/filter.install
index ef9d718..84512cd 100644
--- a/modules/filter/filter.install
+++ b/modules/filter/filter.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/filter/filter.js b/modules/filter/filter.js
index 65ef6c1..94e01c1 100644
--- a/modules/filter/filter.js
+++ b/modules/filter/filter.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/filter/filter.module b/modules/filter/filter.module
index 0c0867a..66fadcb 100644
--- a/modules/filter/filter.module
+++ b/modules/filter/filter.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -1392,7 +1391,7 @@ function _filter_url($text, $filter) {
   $domain = '(?:[A-Za-z0-9._+-]+\.)?[A-Za-z]{2,64}\b';
   $ip = '(?:[0-9]{1,3}\.){3}[0-9]{1,3}';
   $auth = '[a-zA-Z0-9:%_+*~#?&=.,/;-]+@';
-  $trail = '[a-zA-Z0-9:%_+*~#&\[\]=/;?\.,-]*[a-zA-Z0-9:%_+*~#&\[\]=/;-]';
+  $trail = '[a-zA-Z0-9:%_+*~#&\[\]=/;?!\.,-]*[a-zA-Z0-9:%_+*~#&\[\]=/;-]';
 
   // Prepare pattern for optional trailing punctuation.
   // Even these characters could have a valid meaning for the URL, such usage is
@@ -1590,11 +1589,12 @@ function _filter_autop($text) {
   // All block level tags
   $block = '(?:table|thead|tfoot|caption|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|select|form|blockquote|address|p|h[1-6]|hr)';
 
-  // Split at opening and closing PRE, SCRIPT, STYLE, OBJECT tags and comments.
-  // We don't apply any processing to the contents of these tags to avoid messing
-  // up code. We look for matched pairs and allow basic nesting. For example:
+  // Split at opening and closing PRE, SCRIPT, STYLE, OBJECT, IFRAME tags
+  // and comments. We don't apply any processing to the contents of these tags
+  // to avoid messing up code. We look for matched pairs and allow basic
+  // nesting. For example:
   // "processed <pre> ignored <script> ignored </script> ignored </pre> processed"
-  $chunks = preg_split('@(<!--.*?-->|</?(?:pre|script|style|object|!--)[^>]*>)@i', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
+  $chunks = preg_split('@(<!--.*?-->|</?(?:pre|script|style|object|iframe|!--)[^>]*>)@i', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
   // Note: PHP ensures the array consists of alternating delimiters and literals
   // and begins and ends with a literal (inserting NULL as required).
   $ignore = FALSE;
@@ -1602,9 +1602,14 @@ function _filter_autop($text) {
   $output = '';
   foreach ($chunks as $i => $chunk) {
     if ($i % 2) {
-      // Opening or closing tag?
-      $open = ($chunk[1] != '/' || $chunk[1] != '!');
       $comment = (substr($chunk, 0, 4) == '<!--');
+      if ($comment) {
+        // Nothing to do, this is a comment.
+        $output .= $chunk;
+        continue;
+      }
+      // Opening or closing tag?
+      $open = ($chunk[1] != '/');
       list($tag) = preg_split('/[ >]/', substr($chunk, 2 - $open), 2);
       if (!$ignore) {
         if ($open) {
@@ -1613,7 +1618,7 @@ function _filter_autop($text) {
         }
       }
       // Only allow a matching tag to close it.
-      elseif ((!$open && $ignoretag == $tag) || $comment) {
+      elseif (!$open && $ignoretag == $tag) {
         $ignore = FALSE;
         $ignoretag = '';
       }
diff --git a/modules/filter/filter.pages.inc b/modules/filter/filter.pages.inc
index f4737e1..dbbbe4c 100644
--- a/modules/filter/filter.pages.inc
+++ b/modules/filter/filter.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -40,7 +39,7 @@ function filter_tips_long() {
  *         ),
  *       );
  *     @endcode
- *   - long: (optional) Whether the passed in filter tips contain extended
+ *   - long: (optional) Whether the passed-in filter tips contain extended
  *     explanations, i.e. intended to be output on the path 'filter/tips'
  *     (TRUE), or are in a short format, i.e. suitable to be displayed below a
  *     form element. Defaults to FALSE.
diff --git a/modules/filter/filter.test b/modules/filter/filter.test
index b96c240..a3d1bde 100644
--- a/modules/filter/filter.test
+++ b/modules/filter/filter.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for filter.module.
+ */
 
 /**
  * Tests for text format and filter CRUD operations.
@@ -828,6 +832,25 @@ class FilterUnitTestCase extends DrupalUnitTestCase {
       '<blockquote><pre>aaa</pre></blockquote>' => array(
         "<blockquote><pre>aaa</pre></blockquote>" => TRUE,
       ),
+      "<pre>aaa\nbbb\nccc</pre>\nddd\neee" => array(
+        "<pre>aaa\nbbb\nccc</pre>" => TRUE,
+        "<p>ddd<br />\neee</p>" => TRUE,
+      ),
+      // Comments remain unchanged and subsequent lines/paragraphs are
+      // transformed normally.
+      "aaa<!--comment-->\n\nbbb\n\nccc\n\nddd<!--comment\nwith linebreak-->\n\neee\n\nfff" => array(
+        "<p>aaa</p>\n<!--comment--><p>\nbbb</p>\n<p>ccc</p>\n<p>ddd</p>" => TRUE,
+        "<!--comment\nwith linebreak--><p>\neee</p>\n<p>fff</p>" => TRUE,
+      ),
+      // Check that a comment in a PRE will result that the text after
+      // the comment, but still in PRE, is not transformed.
+      "<pre>aaa\nbbb<!-- comment -->\n\nccc</pre>\nddd" => array(
+        "<pre>aaa\nbbb<!-- comment -->\n\nccc</pre>" => TRUE,
+      ),
+      // Bug 810824, paragraphs were appearing around iframe tags.
+      "<iframe>aaa</iframe>\n\n" => array(
+        "<p><iframe>aaa</iframe></p>" => FALSE,
+      ),
     );
     $this->assertFilteredString($filter, $tests);
 
@@ -1176,10 +1199,11 @@ person@example.com or mailto:person2@example.com
         '<a href="mailto:person@example.com">person@example.com</a>' => TRUE,
         '<a href="mailto:person2@example.com">mailto:person2@example.com</a>' => TRUE,
       ),
-      // URI parts.
+      // URI parts and special characters.
       '
 http://trailingslash.com/ or www.trailingslash.com/
 http://host.com/some/path?query=foo&bar[baz]=beer#fragment or www.host.com/some/path?query=foo&bar[baz]=beer#fragment
+http://twitter.com/#!/example/status/22376963142324226
 ftp://user:pass@ftp.example.com/~home/dir1
 sftp://user@nonstandardport:222/dir
 ssh://192.168.0.100/srv/git/drupal.git
@@ -1188,6 +1212,7 @@ ssh://192.168.0.100/srv/git/drupal.git
         '<a href="http://www.trailingslash.com/">www.trailingslash.com/</a>' => TRUE,
         '<a href="http://host.com/some/path?query=foo&amp;bar[baz]=beer#fragment">http://host.com/some/path?query=foo&amp;bar[baz]=beer#fragment</a>' => TRUE,
         '<a href="http://www.host.com/some/path?query=foo&amp;bar[baz]=beer#fragment">www.host.com/some/path?query=foo&amp;bar[baz]=beer#fragment</a>' => TRUE,
+        '<a href="http://twitter.com/#!/example/status/22376963142324226">http://twitter.com/#!/example/status/22376963142324226</a>' => TRUE,
         '<a href="ftp://user:pass@ftp.example.com/~home/dir1">ftp://user:pass@ftp.example.com/~home/dir1</a>' => TRUE,
         '<a href="sftp://user@nonstandardport:222/dir">sftp://user@nonstandardport:222/dir</a>' => TRUE,
         '<a href="ssh://192.168.0.100/srv/git/drupal.git">ssh://192.168.0.100/srv/git/drupal.git</a>' => TRUE,
@@ -1457,7 +1482,7 @@ www.example.com with a newline in comments -->
         if (!$success) {
           $this->verbose('Source:<pre>' . check_plain(var_export($source, TRUE)) . '</pre>'
             . '<hr />' . 'Result:<pre>' . check_plain(var_export($result, TRUE)) . '</pre>'
-            . '<hr />' . ($is_expected ? 'Found:' : 'Not found:')
+            . '<hr />' . ($is_expected ? 'Expected:' : 'Not expected:')
             . '<pre>' . check_plain(var_export($value, TRUE)) . '</pre>'
           );
         }
diff --git a/modules/forum/forum-icon.tpl.php b/modules/forum/forum-icon.tpl.php
index 2b2cf3c..9cf2cd8 100644
--- a/modules/forum/forum-icon.tpl.php
+++ b/modules/forum/forum-icon.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -7,7 +6,7 @@
  *
  * Available variables:
  * - $new_posts: Indicates whether or not the topic contains new posts.
- * - $icon: The icon to display. May be one of 'hot', 'hot-new', 'new',
+ * - $icon_class: The icon to display. May be one of 'hot', 'hot-new', 'new',
  *   'default', 'closed', or 'sticky'.
  * - $first_new: Indicates whether this is the first topic with new posts.
  *
diff --git a/modules/forum/forum-list.tpl.php b/modules/forum/forum-list.tpl.php
index 5d8f18c..bc0935f 100644
--- a/modules/forum/forum-list.tpl.php
+++ b/modules/forum/forum-list.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forum-rtl.css b/modules/forum/forum-rtl.css
index 4f81bde..d31c9e7 100644
--- a/modules/forum/forum-rtl.css
+++ b/modules/forum/forum-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #forum tr td.forum {
   padding-left: 0.5em;
diff --git a/modules/forum/forum-submitted.tpl.php b/modules/forum/forum-submitted.tpl.php
index c025a98..d310448 100644
--- a/modules/forum/forum-submitted.tpl.php
+++ b/modules/forum/forum-submitted.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forum-topic-list.tpl.php b/modules/forum/forum-topic-list.tpl.php
index c223686..3390703 100644
--- a/modules/forum/forum-topic-list.tpl.php
+++ b/modules/forum/forum-topic-list.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forum.admin.inc b/modules/forum/forum.admin.inc
index 02f1940..1e6b365 100644
--- a/modules/forum/forum.admin.inc
+++ b/modules/forum/forum.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forum.css b/modules/forum/forum.css
index adcf7aa..3f3ed98 100644
--- a/modules/forum/forum.css
+++ b/modules/forum/forum.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #forum .description {
   font-size: 0.9em;
diff --git a/modules/forum/forum.info b/modules/forum/forum.info
index 3478e66..b18a0e5 100644
--- a/modules/forum/forum.info
+++ b/modules/forum/forum.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Forum
 description = Provides discussion forums.
 dependencies[] = taxonomy
diff --git a/modules/forum/forum.install b/modules/forum/forum.install
index a5dbc3e..60c4087 100644
--- a/modules/forum/forum.install
+++ b/modules/forum/forum.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -47,7 +46,7 @@ function forum_enable() {
   // Create the 'taxonomy_forums' field if it doesn't already exist.
   if (!field_info_field('taxonomy_forums')) {
     $field = array(
-      'field_name' => 'taxonomy_' . $vocabulary->machine_name,
+      'field_name' => 'taxonomy_forums',
       'type' => 'taxonomy_term_reference',
       'settings' => array(
         'allowed_values' => array(
@@ -60,8 +59,6 @@ function forum_enable() {
     );
     field_create_field($field);
 
-    variable_set('forum_nav_vocabulary', $vocabulary->vid);
-
     // Create a default forum so forum posts can be created.
     $edit = array(
       'name' => t('General discussion'),
@@ -74,7 +71,7 @@ function forum_enable() {
 
     // Create the instance on the bundle.
     $instance = array(
-      'field_name' => 'taxonomy_' . $vocabulary->machine_name,
+      'field_name' => 'taxonomy_forums',
       'entity_type' => 'node',
       'label' => $vocabulary->name,
       'bundle' => 'forum',
@@ -216,7 +213,7 @@ function forum_schema() {
       ),
     ),
     'indexes' => array(
-      'forum_topics' => array('tid', 'sticky', 'last_comment_timestamp'),
+      'forum_topics' => array('nid', 'tid', 'sticky', 'last_comment_timestamp'),
     ),
     'foreign keys' => array(
       'tracked_node' => array(
@@ -331,3 +328,97 @@ function forum_update_7001() {
     ->from($select)
     ->execute();
 }
+
+/**
+ * Add new index to forum_index table.
+ */
+function forum_update_7002() {
+  db_drop_index('forum_index', 'forum_topics');
+  db_add_index('forum_index', 'forum_topics', array('nid', 'tid', 'sticky', 'last_comment_timestamp'));
+}
+
+/**
+ * @addtogroup updates-7.x-extra
+ * @{
+ */
+
+/**
+ * Rename field to 'taxonomy_forums'.
+ */
+function forum_update_7003() {
+  $messages = array();
+
+  $new_field_name = 'taxonomy_forums';
+
+  // Test to see if the taxonomy_forums field exists.
+  $fields = _update_7000_field_read_fields(array('field_name' => $new_field_name));
+  if ($fields) {
+    // Since the field exists, we're done.
+    return;
+  }
+
+  // Calculate the old field name.
+  $vid = variable_get('forum_nav_vocabulary', 0);
+  $vocabulary_machine_name = db_select('taxonomy_vocabulary', 'tv')
+    ->fields('tv', array('machine_name'))
+    ->condition('vid', $vid)
+    ->execute()
+    ->fetchField();
+  $old_field_name = 'taxonomy_' . $vocabulary_machine_name;
+
+  // Read the old fields.
+  $old_fields = _update_7000_field_read_fields(array('field_name' => $old_field_name));
+  foreach ($old_fields as $old_field) {
+    if ($old_field['storage']['type'] != 'field_sql_storage') {
+      $messages[] = t('Cannot rename field %id (%old_field_name) to %new_field_name because it does not use the field_sql_storage storage type.', array(
+        '%id' => $old_field['id'],
+        '%old_field_name' => $old_field_name,
+        '%new_field_name' => $new_field_name,
+      ));
+      continue;
+    }
+
+    // Update {field_config}.
+    db_update('field_config')
+      ->fields(array('field_name' => $new_field_name))
+      ->condition('id', $old_field['id'])
+      ->execute();
+
+    // Update {field_config_instance}.
+    db_update('field_config_instance')
+      ->fields(array('field_name' => $new_field_name))
+      ->condition('field_id', $old_field['id'])
+      ->execute();
+
+    // The tables that need updating in the form 'old_name' => 'new_name'.
+    $tables = array(
+      'field_data_' . $old_field_name => 'field_data_' . $new_field_name,
+      'field_revision_' . $old_field_name => 'field_revision_' . $new_field_name,
+    );
+    foreach ($tables as $old_table => $new_table) {
+      $old_column_name = $old_field_name . '_tid';
+      $new_column_name = $new_field_name . '_tid';
+
+      // Rename the column.
+      db_drop_index($old_table, $old_column_name);
+      db_change_field($old_table, $old_column_name, $new_column_name, array(
+        'type' => 'int',
+        'unsigned' => TRUE,
+        'not null' => FALSE,
+      ));
+      db_drop_index($old_table, $new_column_name);
+      db_add_index($old_table, $new_column_name, array($new_column_name));
+
+      // Rename the table.
+      db_rename_table($old_table, $new_table);
+    }
+  }
+
+  cache_clear_all('*', 'cache_field', TRUE);
+
+  return $messages;
+}
+
+/**
+ * @} End of "addtogroup updates-7.x-extra"
+ */
diff --git a/modules/forum/forum.module b/modules/forum/forum.module
index fffd0c7..c58b5c9 100644
--- a/modules/forum/forum.module
+++ b/modules/forum/forum.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -170,12 +169,9 @@ function forum_menu_local_tasks_alter(&$data, $router_item, $root_path) {
     $tid = (isset($router_item['page_arguments'][0]) ? $router_item['page_arguments'][0]->tid : 0);
     $forum_term = forum_forum_load($tid);
     if ($forum_term) {
-      $vid = variable_get('forum_nav_vocabulary', 0);
-      $vocabulary = taxonomy_vocabulary_load($vid);
-
       $links = array();
       // Loop through all bundles for forum taxonomy vocabulary field.
-      $field = field_info_field('taxonomy_' . $vocabulary->machine_name);
+      $field = field_info_field('taxonomy_forums');
       foreach ($field['bundles']['node'] as $type) {
         if (node_access('create', $type)) {
           $links[$type] = array(
@@ -611,7 +607,7 @@ function forum_form_alter(&$form, $form_state, $form_id) {
       // ID from the URL (e.g., if we are on a page like node/add/forum/2, we
       // expect "2" to be the ID of the forum that was requested).
       $requested_forum_id = arg(3);
-      $form['taxonomy_forums'][$langcode]['#default_value'] = is_numeric($requested_forum_id) ? $requested_forum_id : NULL;
+      $form['taxonomy_forums'][$langcode]['#default_value'] = is_numeric($requested_forum_id) ? $requested_forum_id : '';
     }
   }
 }
@@ -880,7 +876,6 @@ function forum_get_topics($tid, $sortby, $forum_per_page) {
     ->addTag('node_access')
     ->orderBy('f.sticky', 'DESC')
     ->orderByHeader($forum_topic_list_header)
-    ->orderBy('f.last_comment_timestamp', 'DESC')
     ->limit($forum_per_page);
 
   $count_query = db_select('forum_index', 'f');
@@ -895,7 +890,29 @@ function forum_get_topics($tid, $sortby, $forum_per_page) {
     $nids[] = $record->nid;
   }
   if ($nids) {
-    $result = db_query("SELECT n.title, n.nid, n.type, n.sticky, n.created, n.uid, n.comment AS comment_mode, ncs.*, f.tid AS forum_tid, u.name, CASE ncs.last_comment_uid WHEN 0 THEN ncs.last_comment_name ELSE u2.name END AS last_comment_name FROM {node} n INNER JOIN {node_comment_statistics} ncs ON n.nid = ncs.nid INNER JOIN {forum} f ON n.vid = f.vid INNER JOIN {users} u ON n.uid = u.uid INNER JOIN {users} u2 ON ncs.last_comment_uid = u2.uid WHERE n.nid IN (:nids)", array(':nids' => $nids));
+    $query = db_select('node', 'n')->extend('TableSort');
+    $query->fields('n', array('title', 'nid', 'type', 'sticky', 'created', 'uid'));
+    $query->addField('n', 'comment', 'comment_mode');
+
+    $query->join('node_comment_statistics', 'ncs', 'n.nid = ncs.nid');
+    $query->fields('ncs', array('cid', 'last_comment_uid', 'last_comment_timestamp', 'comment_count'));
+
+    $query->join('forum_index', 'f', 'f.nid = ncs.nid');
+    $query->addField('f', 'tid', 'forum_tid');
+
+    $query->join('users', 'u', 'n.uid = u.uid');
+    $query->addField('u', 'name');
+
+    $query->join('users', 'u2', 'ncs.last_comment_uid = u2.uid');
+
+    $query->addExpression('CASE ncs.last_comment_uid WHEN 0 THEN ncs.last_comment_name ELSE u2.name END', 'last_comment_name');
+
+    $query
+      ->orderBy('f.sticky', 'DESC')
+      ->orderByHeader($forum_topic_list_header)
+      ->condition('n.nid', $nids);
+
+    $result = $query->execute();
   }
   else {
     $result = array();
@@ -1194,16 +1211,16 @@ function _forum_user_last_visit($nid) {
 function _forum_get_topic_order($sortby) {
   switch ($sortby) {
     case 1:
-      return array('field' => 'ncs.last_comment_timestamp', 'sort' => 'desc');
+      return array('field' => 'f.last_comment_timestamp', 'sort' => 'desc');
       break;
     case 2:
-      return array('field' => 'ncs.last_comment_timestamp', 'sort' => 'asc');
+      return array('field' => 'f.last_comment_timestamp', 'sort' => 'asc');
       break;
     case 3:
-      return array('field' => 'ncs.comment_count', 'sort' => 'desc');
+      return array('field' => 'f.comment_count', 'sort' => 'desc');
       break;
     case 4:
-      return array('field' => 'ncs.comment_count', 'sort' => 'asc');
+      return array('field' => 'f.comment_count', 'sort' => 'asc');
       break;
   }
 }
diff --git a/modules/forum/forum.pages.inc b/modules/forum/forum.pages.inc
index 02c7801..29307e7 100644
--- a/modules/forum/forum.pages.inc
+++ b/modules/forum/forum.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forum.test b/modules/forum/forum.test
index d1fe188..1dc45c6 100644
--- a/modules/forum/forum.test
+++ b/modules/forum/forum.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for forum.module.
+ */
 
 class ForumTestCase extends DrupalWebTestCase {
   protected $admin_user;
diff --git a/modules/forum/forums.tpl.php b/modules/forum/forums.tpl.php
index 2c9e2ef..55a760f 100644
--- a/modules/forum/forums.tpl.php
+++ b/modules/forum/forums.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/help/help-rtl.css b/modules/help/help-rtl.css
index 79e99c4..8e40a8c 100644
--- a/modules/help/help-rtl.css
+++ b/modules/help/help-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .help-items {
   float: right;
diff --git a/modules/help/help.admin.inc b/modules/help/help.admin.inc
index 1dec032..3db06ca 100644
--- a/modules/help/help.admin.inc
+++ b/modules/help/help.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/help/help.api.php b/modules/help/help.api.php
index 02c9b35..ff2f97c 100644
--- a/modules/help/help.api.php
+++ b/modules/help/help.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/help/help.css b/modules/help/help.css
index c8062be..9228170 100644
--- a/modules/help/help.css
+++ b/modules/help/help.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .help-items {
   float: left; /* LTR */
diff --git a/modules/help/help.info b/modules/help/help.info
index cdae549..d4c1b36 100644
--- a/modules/help/help.info
+++ b/modules/help/help.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Help
 description = Manages the display of online help.
 package = Core
diff --git a/modules/help/help.module b/modules/help/help.module
index 73ebc93..773a52d 100644
--- a/modules/help/help.module
+++ b/modules/help/help.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/help/help.test b/modules/help/help.test
index 8033c4c..73b4ded 100644
--- a/modules/help/help.test
+++ b/modules/help/help.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for help.module.
+ */
 
 class HelpTestCase extends DrupalWebTestCase {
   protected $big_user;
diff --git a/modules/image/image-rtl.css b/modules/image/image-rtl.css
index a8d2cef..2a7a855 100644
--- a/modules/image/image-rtl.css
+++ b/modules/image/image-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Image upload widget.
diff --git a/modules/image/image.admin.css b/modules/image/image.admin.css
index c279458..3115c8d 100644
--- a/modules/image/image.admin.css
+++ b/modules/image/image.admin.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Image style configuration pages.
diff --git a/modules/image/image.admin.inc b/modules/image/image.admin.inc
index 1f1121c..d72fdf4 100644
--- a/modules/image/image.admin.inc
+++ b/modules/image/image.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -227,7 +226,7 @@ function image_style_form_submit($form, &$form_state) {
 
   image_style_save($style);
   if ($form_state['values']['op'] == t('Update style')) {
-    drupal_set_message('Changes to the style have been saved.');
+    drupal_set_message(t('Changes to the style have been saved.'));
   }
   $form_state['redirect'] = 'admin/config/media/image-styles/edit/' . $style['name'];
 }
diff --git a/modules/image/image.api.php b/modules/image/image.api.php
index 298a3be..5b635ec 100644
--- a/modules/image/image.api.php
+++ b/modules/image/image.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/image/image.css b/modules/image/image.css
index a3f6114..7db307b 100644
--- a/modules/image/image.css
+++ b/modules/image/image.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Image upload widget.
diff --git a/modules/image/image.effects.inc b/modules/image/image.effects.inc
index 5171be1..122af6c 100644
--- a/modules/image/image.effects.inc
+++ b/modules/image/image.effects.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -74,7 +73,7 @@ function image_image_effect_info() {
  */
 function image_resize_effect(&$image, $data) {
   if (!image_resize($image, $data['width'], $data['height'])) {
-    watchdog('image', 'Image resize failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['height'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
+    watchdog('image', 'Image resize failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['width'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
     return FALSE;
   }
   return TRUE;
@@ -109,7 +108,7 @@ function image_scale_effect(&$image, $data) {
   $data['height'] = empty($data['height']) ? PHP_INT_MAX : $data['height'];
 
   if (!image_scale($image, $data['width'], $data['height'], $data['upscale'])) {
-    watchdog('image', 'Image scale failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['height'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
+    watchdog('image', 'Image scale failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['width'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
     return FALSE;
   }
   return TRUE;
@@ -143,7 +142,7 @@ function image_crop_effect(&$image, $data) {
   $x = image_filter_keyword($x, $image->info['width'], $data['width']);
   $y = image_filter_keyword($y, $image->info['height'], $data['height']);
   if (!image_crop($image, $x, $y, $data['width'], $data['height'])) {
-    watchdog('image', 'Image crop failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['height'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
+    watchdog('image', 'Image crop failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['width'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
     return FALSE;
   }
   return TRUE;
@@ -165,7 +164,7 @@ function image_crop_effect(&$image, $data) {
  */
 function image_scale_and_crop_effect(&$image, $data) {
   if (!image_scale_and_crop($image, $data['width'], $data['height'])) {
-    watchdog('image', 'Image scale and crop failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['height'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
+    watchdog('image', 'Image scale and crop failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['width'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
     return FALSE;
   }
   return TRUE;
@@ -184,7 +183,7 @@ function image_scale_and_crop_effect(&$image, $data) {
  */
 function image_desaturate_effect(&$image, $data) {
   if (!image_desaturate($image)) {
-    watchdog('image', 'Image desaturate failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['height'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
+    watchdog('image', 'Image desaturate failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['width'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
     return FALSE;
   }
   return TRUE;
@@ -237,7 +236,7 @@ function image_rotate_effect(&$image, $data) {
   }
 
   if (!image_rotate($image, $data['degrees'], $data['bgcolor'])) {
-    watchdog('image', 'Image rotate failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['height'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
+    watchdog('image', 'Image rotate failed using the %toolkit toolkit on %path (%mimetype, %dimensions)', array('%toolkit' => $image->toolkit, '%path' => $image->source, '%mimetype' => $image->info['mime_type'], '%dimensions' => $image->info['width'] . 'x' . $image->info['height']), WATCHDOG_ERROR);
     return FALSE;
   }
   return TRUE;
diff --git a/modules/image/image.field.inc b/modules/image/image.field.inc
index 249195d..07cc1e0 100644
--- a/modules/image/image.field.inc
+++ b/modules/image/image.field.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/image/image.info b/modules/image/image.info
index 97b947b..d7eece1 100644
--- a/modules/image/image.info
+++ b/modules/image/image.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Image
 description = Provides image manipulation tools.
 package = Core
diff --git a/modules/image/image.install b/modules/image/image.install
index ea3eee5..fbd20de 100644
--- a/modules/image/image.install
+++ b/modules/image/image.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -228,7 +227,19 @@ function image_update_7000() {
 
     db_create_table('cache_image', $schema['cache_image']);
     db_create_table('image_styles', $schema['image_styles']);
-    db_create_table('image_effect', $schema['image_effects']);
+    db_create_table('image_effects', $schema['image_effects']);
+  }
+}
+
+/**
+ * Rename possibly misnamed {image_effect} table to {image_effects}.
+ */
+function image_update_7001() {
+  // Due to a bug in earlier versions of image_update_7000() it is possible
+  // to end up with an {image_effect} table where there should be an
+  // {image_effects} table.
+  if (!db_table_exists('image_effects') && db_table_exists('image_effect')) {
+    db_rename_table('image_effect', 'image_effects');
   }
 }
 
diff --git a/modules/image/image.module b/modules/image/image.module
index 4ca0e34..d2d081c 100644
--- a/modules/image/image.module
+++ b/modules/image/image.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -189,7 +188,6 @@ function image_theme() {
         'alt' => '',
         'title' => NULL,
         'attributes' => array(),
-        'getsize' => TRUE,
       ),
     ),
 
@@ -714,7 +712,11 @@ function image_style_deliver($style, $scheme) {
 }
 
 /**
- * Create a new image based on an image style.
+ * Creates a new image derivative based on an image style.
+ *
+ * Generates an image derivative by creating the destination folder (if it does
+ * not already exist), applying all image effects defined in $style['effects'],
+ * and saving a cached version of the resulting image.
  *
  * @param $style
  *   An image style array.
@@ -722,9 +724,12 @@ function image_style_deliver($style, $scheme) {
  *   Path of the source file.
  * @param $destination
  *   Path or URI of the destination file.
+ *
  * @return
- *   TRUE if an image derivative is generated, FALSE if no image derivative
- *   is generated. NULL if the derivative is being generated.
+ *   TRUE if an image derivative was generated, or FALSE if the image derivative
+ *   could not be generated.
+ *
+ * @see image_style_load()
  */
 function image_style_create_derivative($style, $source, $destination) {
   // Get the folder for the final location of this style.
@@ -799,16 +804,18 @@ function image_style_flush($style) {
  * @see image_style_deliver()
  */
 function image_style_url($style_name, $path) {
-  $scheme = file_uri_scheme($path);
-  if ($scheme === 'private') {
-    $target = file_uri_target($path);
-    $url = url('system/files/styles/' . $style_name . '/' . $scheme . '/' . $target, array('absolute' => TRUE));
+  $uri = image_style_path($style_name, $path);
+
+  // If not using clean URLs, the image derivative callback is only available
+  // with the query string. If the file does not exist, use url() to ensure
+  // that it is included. Once the file exists it's fine to fall back to the
+  // actual file path, this avoids bootstrapping PHP once the files are built.
+  if (!variable_get('clean_url') && file_uri_scheme($uri) == 'public' && !file_exists($uri)) {
+    $directory_path = file_stream_wrapper_get_instance_by_uri($uri)->getDirectoryPath();
+    return url($directory_path . '/' . file_uri_target($uri), array('absolute' => TRUE));
   }
-  else {
-    $destination = image_style_path($style_name, $path);
-    $url = url(file_stream_wrapper_get_instance_by_scheme($scheme)->getDirectoryPath() . '/' . file_uri_target($destination), array('absolute' => TRUE));
-  }
-  return $url;
+
+  return file_create_url($uri);
 }
 
 /**
@@ -1082,23 +1089,11 @@ function image_effect_apply($image, $effect) {
  *   - title: The title text is displayed when the image is hovered in some
  *     popular browsers.
  *   - attributes: Associative array of attributes to be placed in the img tag.
- *   - getsize: If set to TRUE, the image's dimension are fetched and added as
- *     width/height attributes.
  *
  * @ingroup themeable
  */
 function theme_image_style($variables) {
-  $style_name = $variables['style_name'];
-  $path = $variables['path'];
-
-  // theme_image() can only honor the $getsize parameter with local file paths.
-  // The derivative image is not created until it has been requested so the file
-  // may not yet exist, in this case we just fallback to the URL.
-  $style_path = image_style_path($style_name, $path);
-  if (!file_exists($style_path)) {
-    $style_path = image_style_url($style_name, $path);
-  }
-  $variables['path'] = $style_path;
+  $variables['path'] = image_style_url($variables['style_name'], $variables['path']);
   return theme('image', $variables);
 }
 
diff --git a/modules/image/image.test b/modules/image/image.test
index 33c1000..00f79d8 100644
--- a/modules/image/image.test
+++ b/modules/image/image.test
@@ -1,12 +1,10 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Image module tests.
+ * Tests for image.module.
  */
 
-
 /**
  * TODO: Test the following functions.
  *
@@ -156,12 +154,27 @@ class ImageStylesPathAndUrlUnitTest extends DrupalWebTestCase {
   }
 
   /**
+   * Test image_style_url() with the "public://" scheme and unclean URLs.
+   */
+   function testImageStylUrlAndPathPublicUnclean() {
+     $this->_testImageStyleUrlAndPath('public', FALSE);
+   }
+
+  /**
+   * Test image_style_url() with the "private://" schema and unclean URLs.
+   */
+  function testImageStyleUrlAndPathPrivateUnclean() {
+    $this->_testImageStyleUrlAndPath('private', FALSE);
+  }
+
+  /**
    * Test image_style_url().
    */
-  function _testImageStyleUrlAndPath($scheme) {
+  function _testImageStyleUrlAndPath($scheme, $clean_url = TRUE) {
     // Make the default scheme neither "public" nor "private" to verify the
     // functions work for other than the default scheme.
     variable_set('file_default_scheme', 'temporary');
+    variable_set('clean_url', $clean_url);
 
     // Create the directories for the styles.
     $directory = $scheme . '://styles/' . $this->style_name;
@@ -183,6 +196,10 @@ class ImageStylesPathAndUrlUnitTest extends DrupalWebTestCase {
     $this->assertFalse(file_exists($generated_uri), t('Generated file does not exist.'));
     $generate_url = image_style_url($this->style_name, $original_uri);
 
+    if (!$clean_url) {
+      $this->assertTrue(strpos($generate_url, '?q=') !== FALSE, 'When using non-clean URLS, the system path contains the query string.');
+    }
+
     // Fetch the URL that generates the file.
     $this->drupalGet($generate_url);
     $this->assertResponse(200, t('Image was generated at the URL.'));
@@ -695,7 +712,6 @@ class ImageFieldDisplayTestCase extends ImageFieldTestCase {
     // image style callback paths.
     $this->drupalGet(image_style_url('thumbnail', $image_uri));
     $image_info['path'] = image_style_path('thumbnail', $image_uri);
-    $image_info['getsize'] = FALSE;
     $default_output = theme('image', $image_info);
     $this->drupalGet('node/' . $nid);
     $this->assertRaw($default_output, t('Image style thumbnail formatter displaying correctly on full node view.'));
diff --git a/modules/image/tests/image_module_test.info b/modules/image/tests/image_module_test.info
index 144a904..db7eacd 100644
--- a/modules/image/tests/image_module_test.info
+++ b/modules/image/tests/image_module_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Image test
 description = Provides hook implementations for testing Image module functionality.
 package = Core
diff --git a/modules/image/tests/image_module_test.module b/modules/image/tests/image_module_test.module
index 5aa9dad..038bd15 100644
--- a/modules/image/tests/image_module_test.module
+++ b/modules/image/tests/image_module_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/locale/locale.admin.inc b/modules/locale/locale.admin.inc
index 8365cd7..d8201db 100644
--- a/modules/locale/locale.admin.inc
+++ b/modules/locale/locale.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -468,6 +467,9 @@ function locale_languages_delete_form_submit($form, &$form_state) {
       ->fields(array('language' => ''))
       ->condition('language', $form_state['values']['langcode'])
       ->execute();
+    if ($languages[$form_state['values']['langcode']]->enabled) {
+      variable_set('language_count', variable_get('language_count', 1) - 1);
+    }
     module_invoke_all('multilingual_settings_changed');
     $variables = array('%locale' => $languages[$form_state['values']['langcode']]->name);
     drupal_set_message(t('The language %locale has been removed.', $variables));
@@ -539,6 +541,12 @@ function _locale_languages_configure_form_language_table(&$form, $type) {
   asort($providers_weight);
 
   foreach ($providers_weight as $id => $weight) {
+    // A language provider might be no more available if the defining module has
+    // been disabled after the last configuration saving.
+    if (!isset($language_providers[$id])) {
+      continue;
+    }
+
     $enabled = isset($enabled_providers[$id]);
     $provider = $language_providers[$id];
 
@@ -656,7 +664,6 @@ function theme_locale_languages_configure_form($variables) {
  * Submit handler for language negotiation settings.
  */
 function locale_languages_configure_form_submit($form, &$form_state) {
-  $language_types = array();
   $configurable_types = $form['#language_types'];
 
   foreach ($configurable_types as $type) {
@@ -664,7 +671,6 @@ function locale_languages_configure_form_submit($form, &$form_state) {
     $enabled_providers = $form_state['values'][$type]['enabled'];
     $enabled_providers[LANGUAGE_NEGOTIATION_DEFAULT] = TRUE;
     $providers_weight = $form_state['values'][$type]['weight'];
-    $language_types[$type] = TRUE;
 
     foreach ($providers_weight as $id => $weight) {
       if ($enabled_providers[$id]) {
@@ -678,27 +684,11 @@ function locale_languages_configure_form_submit($form, &$form_state) {
     variable_set("locale_language_providers_weight_$type", $providers_weight);
   }
 
-  // Save non-configurable language types negotiation.
-  $language_types_info = language_types_info();
-  $defined_providers = $form['#language_providers'];
-  foreach ($language_types_info as $type => $info) {
-    if (isset($info['fixed'])) {
-      $language_types[$type] = FALSE;
-      $negotiation = array();
-      foreach ($info['fixed'] as $weight => $id) {
-        if (isset($defined_providers[$id])) {
-          $negotiation[$id] = $defined_providers[$id];
-          $negotiation[$id]['weight'] = $weight;
-        }
-      }
-      language_negotiation_set($type, $negotiation);
-    }
-  }
-
-  // Save language types.
-  variable_set('language_types', $language_types);
+  // Update non-configurable language types and the related language negotiation
+  // configuration.
+  language_types_set();
 
-  $form_state['redirect'] = 'admin/config/regional/language';
+  $form_state['redirect'] = 'admin/config/regional/language/configure';
   drupal_set_message(t('Language negotiation configuration saved.'));
 }
 
diff --git a/modules/locale/locale.api.php b/modules/locale/locale.api.php
index 595447f..2808f33 100644
--- a/modules/locale/locale.api.php
+++ b/modules/locale/locale.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/locale/locale.css b/modules/locale/locale.css
index 41684e7..1d875a2 100644
--- a/modules/locale/locale.css
+++ b/modules/locale/locale.css
@@ -1,13 +1,12 @@
-/* $Id$ */
 
 .locale-untranslated {
   font-style: normal;
   text-decoration: line-through;
 }
 
-.form-item-language,
-.form-item-translation,
-.form-item-group {
+#locale-translation-filter-form .form-item-language,
+#locale-translation-filter-form .form-item-translation,
+#locale-translation-filter-form .form-item-group {
   float: left; /* LTR */
   padding-right: .8em; /* LTR */
   margin: 0.1em;
diff --git a/modules/locale/locale.datepicker.js b/modules/locale/locale.datepicker.js
index 6906fb5..81f1e17 100644
--- a/modules/locale/locale.datepicker.js
+++ b/modules/locale/locale.datepicker.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 $.datepicker.regional['drupal-locale'] = {
@@ -36,29 +35,29 @@ $.datepicker.regional['drupal-locale'] = {
   ],
   dayNames: [
     Drupal.t('Sunday'),
-    Drupal.t('Monday')
-    Drupal.t('Tuesday')
-    Drupal.t('Wednesday')
-    Drupal.t('Thursday')
-    Drupal.t('Friday')
+    Drupal.t('Monday'),
+    Drupal.t('Tuesday'),
+    Drupal.t('Wednesday'),
+    Drupal.t('Thursday'),
+    Drupal.t('Friday'),
     Drupal.t('Saturday')
   ],
   dayNamesShort: [
-    Drupal.t('Sun')
-    Drupal.t('Mon')
-    Drupal.t('Tue')
-    Drupal.t('Wed')
-    Drupal.t('Thu')
-    Drupal.t('Fri')
+    Drupal.t('Sun'),
+    Drupal.t('Mon'),
+    Drupal.t('Tue'),
+    Drupal.t('Wed'),
+    Drupal.t('Thu'),
+    Drupal.t('Fri'),
     Drupal.t('Sat')
   ],
   dayNamesMin: [
-    Drupal.t('Su')
-    Drupal.t('Mo')
-    Drupal.t('Tu')
-    Drupal.t('We')
-    Drupal.t('Th')
-    Drupal.t('Fr')
+    Drupal.t('Su'),
+    Drupal.t('Mo'),
+    Drupal.t('Tu'),
+    Drupal.t('We'),
+    Drupal.t('Th'),
+    Drupal.t('Fr'),
     Drupal.t('Sa')
   ],
   dateFormat: Drupal.t('mm/dd/yy'),
diff --git a/modules/locale/locale.info b/modules/locale/locale.info
index 79bd6c0..1d6bdcf 100644
--- a/modules/locale/locale.info
+++ b/modules/locale/locale.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Locale
 description = Adds language handling functionality and enables the translation of the user interface to languages other than English.
 package = Core
diff --git a/modules/locale/locale.install b/modules/locale/locale.install
index 2594667..80b20c4 100644
--- a/modules/locale/locale.install
+++ b/modules/locale/locale.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -127,6 +126,14 @@ function locale_update_7002() {
 }
 
 /**
+ * Update "language_count" variable.
+ */
+function locale_update_7003() {
+  $languages = language_list('enabled');
+  variable_set('language_count', count($languages[1]));
+}
+
+/**
  * @} End of "addtogroup updates-6.x-to-7.x"
  */
 
diff --git a/modules/locale/locale.module b/modules/locale/locale.module
index 5ef074e..0788461 100644
--- a/modules/locale/locale.module
+++ b/modules/locale/locale.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -60,9 +59,9 @@ function locale_help($path, $arg) {
       return '<p>' . t('This page exports the translated strings used by your site. An export file may be in Gettext Portable Object (<em>.po</em>) form, which includes both the original string and the translation (used to share translations with others), or in Gettext Portable Object Template (<em>.pot</em>) form, which includes the original strings only (used to create new translations with a Gettext translation editor).') . '</p>';
     case 'admin/config/regional/translate/translate':
       return '<p>' . t('This page allows a translator to search for specific translated and untranslated strings, and is used when creating or editing translations. (Note: For translation tasks involving many strings, it may be more convenient to <a href="@export">export</a> strings for offline editing in a desktop Gettext translation editor.) Searches may be limited to strings found within a specific text group or in a specific language.', array('@export' => url('admin/config/regional/translate/export'))) . '</p>';
-    case 'admin/structure/block/manage':
-      if ($arg[4] == 'locale' && $arg[5] == 0) {
-        return '<p>' . t('This block is only shown if <a href="@languages">at least two languages are enabled</a> and <a href="@configuration">language negotiation</a> is set to something other than <em>None</em>.', array('@languages' => url('admin/config/regional/language'), '@configuration' => url('admin/config/regional/language/configure'))) . '</p>';
+    case 'admin/structure/block/manage/%/%':
+      if ($arg[4] == 'locale' && $arg[5] == 'language') {
+        return '<p>' . t('This block is only shown if <a href="@languages">at least two languages are enabled</a> and <a href="@configuration">language negotiation</a> is set to <em>URL</em> or <em>Session</em>.', array('@languages' => url('admin/config/regional/language'), '@configuration' => url('admin/config/regional/language/configure'))) . '</p>';
       }
       break;
   }
@@ -514,6 +513,8 @@ function locale_language_types_info() {
       'description' => t('Order of language detection methods for user interface text. If a translation of user interface text is available in the detected language, it will be displayed.'),
     ),
     LANGUAGE_TYPE_CONTENT => array(
+      'name' => t('Content'),
+      'description' => t('Order of language detection methods for content. If a version of content is available in the detected language, it will be displayed.'),
       'fixed' => array(LOCALE_LANGUAGE_NEGOTIATION_INTERFACE),
     ),
     LANGUAGE_TYPE_URL => array(
@@ -594,6 +595,22 @@ function locale_language_negotiation_info() {
   return $providers;
 }
 
+/**
+ * Implements hook_modules_enabled().
+ */
+function locale_modules_enabled($modules) {
+  include_once DRUPAL_ROOT . '/includes/language.inc';
+  language_types_set();
+  language_negotiation_purge();
+}
+
+/**
+ * Implements hook_modules_disabled().
+ */
+function locale_modules_disabled($modules) {
+  locale_modules_enabled($modules);
+}
+
 // ---------------------------------------------------------------------------------
 // Locale core functionality
 
@@ -773,7 +790,24 @@ function locale_language_list($field = 'name', $all = FALSE) {
 }
 
 /**
- * Imports translations when new modules or themes are installed or enabled.
+ * Implements hook_modules_installed().
+ */
+function locale_modules_installed($modules) {
+  locale_system_update($modules);
+}
+
+/**
+ * Implements hook_themes_enabled().
+ *
+ * @todo This is technically wrong. We must not import upon enabling, but upon
+ *   initial installation. The theme system is missing an installation hook.
+ */
+function locale_themes_enabled($themes) {
+  locale_system_update($themes);
+}
+
+/**
+ * Imports translations when new modules or themes are installed.
  *
  * This function will either import translation for the component change
  * right away, or start a batch if more files need to be imported.
@@ -912,7 +946,7 @@ function locale_block_info() {
   include_once DRUPAL_ROOT . '/includes/language.inc';
   $block = array();
   $info = language_types_info();
-  foreach (language_types_configurable() as $type) {
+  foreach (language_types_configurable(FALSE) as $type) {
     $block[$type] = array(
       'info' => t('Language switcher (@type)', array('@type' => $info[$type]['name'])),
       // Not worth caching.
diff --git a/modules/locale/locale.test b/modules/locale/locale.test
index d103ade..42a6dbc 100644
--- a/modules/locale/locale.test
+++ b/modules/locale/locale.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for Locale module.
+ * Tests for locale.module.
  *
  * The test file includes:
  *  - a functional test for the language configuration forms;
@@ -18,6 +17,7 @@
  *  - a functional test for multilingual support by content type and on nodes.
  *  - a functional test for multilingual fields.
  *  - a functional test for comment language.
+ *  - a functional test fot language types/negotiation info.
  */
 
 
@@ -130,7 +130,7 @@ class LocaleConfigurationTest extends DrupalWebTestCase {
     $this->drupalGet('admin/config/regional/language');
     $this->clickLink(t('delete'));
     $this->assertText(t('Are you sure you want to delete the language'), t('"delete" link is correct.'));
-    // Delete the language.
+    // Delete an enabled language.
     $this->drupalGet('admin/config/regional/language/delete/' . $langcode);
     // First test the 'cancel' link.
     $this->clickLink(t('Cancel'));
@@ -145,6 +145,31 @@ class LocaleConfigurationTest extends DrupalWebTestCase {
     // Verify that language is no longer found.
     $this->drupalGet('admin/config/regional/language/delete/' . $langcode);
     $this->assertResponse(404, t('Language no longer found.'));
+    // Make sure the "language_count" variable has been updated correctly.
+    drupal_static_reset('language_list');
+    $enabled = language_list('enabled');
+    $this->assertEqual(variable_get('language_count', 1), count($enabled[1]), t('Language count is correct.'));
+    // Delete a disabled language.
+    // Disable an enabled language.
+    $edit = array(
+      'enabled[fr]' => FALSE,
+    );
+    $this->drupalPost($path, $edit, t('Save configuration'));
+    $this->assertNoFieldChecked('edit-enabled-fr', t('French language disabled.'));
+    // Get the count of enabled languages.
+    drupal_static_reset('language_list');
+    $enabled = language_list('enabled');
+    // Delete the disabled language.
+    $this->drupalPost('admin/config/regional/language/delete/fr', array(), t('Delete'));
+    // We need raw here because %locale will add HTML.
+    $this->assertRaw(t('The language %locale has been removed.', array('%locale' => 'French')), t('Disabled language has been removed.'));
+    $this->assertEqual($this->getUrl(), url('admin/config/regional/language', array('absolute' => TRUE)), t('Correct page redirection.'));
+    // Verify that language is no longer found.
+    $this->drupalGet('admin/config/regional/language/delete/fr');
+    $this->assertResponse(404, t('Language no longer found.'));
+    // Make sure the "language_count" variable has not changed.
+    $this->assertEqual(variable_get('language_count', 1), count($enabled[1]), t('Language count is correct.'));
+
 
     // Ensure we can't delete the English language.
     $this->drupalGet('admin/config/regional/language/delete/en');
@@ -2224,10 +2249,13 @@ class LocaleCommentLanguageFunctionalTest extends DrupalWebTestCase {
     variable_set('locale_test_content_language_type', TRUE);
 
     // Set interface language detection to user and content language detection
-    // to URL.
+    // to URL. Disable inheritance from interface language to ensure content
+    // language will fall back to the default language if no URL language can be
+    // detected.
     $edit = array(
       'language[enabled][locale-user]' => TRUE,
-      'language_content[enabled][locale-url]' => TRUE
+      'language_content[enabled][locale-url]' => TRUE,
+      'language_content[enabled][locale-interface]' => FALSE,
     );
     $this->drupalPost('admin/config/regional/language/configure', $edit, t('Save settings'));
 
@@ -2349,3 +2377,158 @@ class LocaleDateFormatsFunctionalTest extends DrupalWebTestCase {
     $this->assertText($french_date, t('French date format appears'));
   }
 }
+
+/**
+ * Functional test for language types/negotiation info.
+ */
+class LocaleLanguageNegotiationInfoFunctionalTest extends DrupalWebTestCase {
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Language negotiation info',
+      'description' => 'Tests alterations to language types/negotiation info.',
+      'group' => 'Locale',
+    );
+  }
+
+  function setUp() {
+    parent::setUp('locale');
+    require_once DRUPAL_ROOT .'/includes/language.inc';
+    $admin_user = $this->drupalCreateUser(array('administer languages', 'access administration pages', 'view the administration theme'));
+    $this->drupalLogin($admin_user);
+    $this->drupalPost('admin/config/regional/language/add', array('langcode' => 'it'), t('Add language'));
+  }
+
+  /**
+   * Tests alterations to language types/negotiation info.
+   */
+  function testInfoAlterations() {
+    // Enable language type/negotiation info alterations.
+    variable_set('locale_test_language_types', TRUE);
+    variable_set('locale_test_language_negotiation_info', TRUE);
+    $this->languageNegotiationUpdate();
+
+    // Check that fixed language types are properly configured without the need
+    // of saving the language negotiation settings.
+    $this->checkFixedLanguageTypes();
+
+    // Make the content language type configurable by updating the language
+    // negotiation settings with the proper flag enabled.
+    variable_set('locale_test_content_language_type', TRUE);
+    $this->languageNegotiationUpdate();
+    $type = LANGUAGE_TYPE_CONTENT;
+    $language_types = variable_get('language_types', drupal_language_types());
+    $this->assertTrue($language_types[$type], t('Content language type is configurable.'));
+
+    // Enable some core and custom language providers. The test language type is
+    // supposed to be configurable.
+    $test_type = 'test_language_type';
+    $provider = LOCALE_LANGUAGE_NEGOTIATION_INTERFACE;
+    $test_provider = 'test_language_provider';
+    $form_field = $type . '[enabled]['. $provider .']';
+    $edit = array(
+      $form_field => TRUE,
+      $type . '[enabled][' . $test_provider . ']' => TRUE,
+      $test_type . '[enabled][' . $test_provider . ']' => TRUE,
+    );
+    $this->drupalPost('admin/config/regional/language/configure', $edit, t('Save settings'));
+
+    // Remove the interface language provider by updating the language
+    // negotiation settings with the proper flag enabled.
+    variable_set('locale_test_language_negotiation_info_alter', TRUE);
+    $this->languageNegotiationUpdate();
+    $negotiation = variable_get("language_negotiation_$type", array());
+    $this->assertFalse(isset($negotiation[$provider]), t('Interface language provider removed from the stored settings.'));
+    $this->assertNoFieldByXPath("//input[@name=\"$form_field\"]", NULL, t('Interface language provider unavailable.'));
+
+    // Check that type-specific language providers can be assigned only to the
+    // corresponding language types.
+    foreach (language_types_configurable() as $type) {
+      $form_field = $type . '[enabled][test_language_provider_ts]';
+      if ($type == $test_type) {
+        $this->assertFieldByXPath("//input[@name=\"$form_field\"]", NULL, t('Type-specific test language provider available for %type.', array('%type' => $type)));
+      }
+      else {
+        $this->assertNoFieldByXPath("//input[@name=\"$form_field\"]", NULL, t('Type-specific test language provider unavailable for %type.', array('%type' => $type)));
+      }
+    }
+
+    // Check language negotiation results.
+    $this->drupalGet('');
+    $last = variable_get('locale_test_language_negotiation_last', array());
+    foreach (language_types() as $type) {
+      $langcode = $last[$type];
+      $value = $type == LANGUAGE_TYPE_CONTENT || strpos($type, 'test') !== FALSE ? 'it' : 'en';
+      $this->assertEqual($langcode, $value, t('The negotiated language for %type is %language', array('%type' => $type, '%language' => $langcode)));
+    }
+
+    // Disable locale_test and check that everything is set back to the original
+    // status.
+    $this->languageNegotiationUpdate('disable');
+
+    // Check that only the core language types are available.
+    foreach (language_types() as $type) {
+      $this->assertTrue(strpos($type, 'test') === FALSE, t('The %type language is still available', array('%type' => $type)));
+    }
+
+    // Check that fixed language types are properly configured, even those
+    // previously set to configurable.
+    $this->checkFixedLanguageTypes();
+
+    // Check that unavailable language providers are not present in the
+    // negotiation settings.
+    $negotiation = variable_get("language_negotiation_$type", array());
+    $this->assertFalse(isset($negotiation[$test_provider]), t('The disabled test language provider is not part of the content language negotiation settings.'));
+
+    // Check that configuration page presents the correct options and settings.
+    $this->assertNoRaw(t('Test language detection'), t('No test language type configuration available.'));
+    $this->assertNoRaw(t('This is a test language provider'), t('No test language provider available.'));
+  }
+
+  /**
+   * Update language types/negotiation information.
+   *
+   * Manually invoke locale_modules_enabled()/locale_modules_disabled() since
+   * they would not be invoked after enabling/disabling locale_test the first
+   * time.
+   */
+  private function languageNegotiationUpdate($op = 'enable') {
+    static $last_op = NULL;
+    $modules = array('locale_test');
+
+    // Enable/disable locale_test only if we did not already before.
+    if ($last_op != $op) {
+      $function = "module_{$op}";
+      $function($modules);
+      // Reset hook implementation cache.
+      module_implements(NULL, FALSE, TRUE);
+    }
+
+    drupal_static_reset('language_types_info');
+    drupal_static_reset('language_negotiation_info');
+    $function = "locale_modules_{$op}d";
+    if (function_exists($function)) {
+      $function($modules);
+    }
+
+    $this->drupalGet('admin/config/regional/language/configure');
+  }
+
+  /**
+   * Check that language negotiation for fixed types matches the stored one.
+   */
+  private function checkFixedLanguageTypes() {
+    drupal_static_reset('language_types_info');
+    foreach (language_types_info() as $type => $info) {
+      if (isset($info['fixed'])) {
+        $negotiation = variable_get("language_negotiation_$type", array());
+        $equal = count($info['fixed']) == count($negotiation);
+        while ($equal && list($id) = each($negotiation)) {
+          list(, $info_id) = each($info['fixed']);
+          $equal = $info_id == $id;
+        }
+        $this->assertTrue($equal, t('language negotiation for %type is properly set up', array('%type' => $type)));
+      }
+    }
+  }
+}
diff --git a/modules/locale/tests/locale_test.info b/modules/locale/tests/locale_test.info
index f3eb2f1..3744a9e 100644
--- a/modules/locale/tests/locale_test.info
+++ b/modules/locale/tests/locale_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Locale Test"
 description = "Support module for the locale layer tests."
 core = 7.x
diff --git a/modules/locale/tests/locale_test.module b/modules/locale/tests/locale_test.module
index 933de89..14a2588 100644
--- a/modules/locale/tests/locale_test.module
+++ b/modules/locale/tests/locale_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -29,13 +28,88 @@ function locale_test_boot() {
 }
 
 /**
+ * Implements hook_init().
+ */
+function locale_test_init() {
+  locale_test_store_language_negotiation();
+}
+
+/**
+ * Implements hook_language_types_info().
+ */
+function locale_test_language_types_info() {
+  if (variable_get('locale_test_language_types', FALSE)) {
+    return array(
+      'test_language_type' => array(
+        'name' => t('Test'),
+        'description' => t('A test language type.'),
+      ),
+      'fixed_test_language_type' => array(
+        'fixed' => array('test_language_provider'),
+      ),
+    );
+  }
+}
+
+/**
  * Implements hook_language_types_info_alter().
  */
 function locale_test_language_types_info_alter(array &$language_types) {
   if (variable_get('locale_test_content_language_type', FALSE)) {
-    $language_types[LANGUAGE_TYPE_CONTENT] = array(
-      'name' => t('Content'),
-      'description' => t('Order of language detection methods for content. If a version of content is available in the detected language, it will be displayed.'),
+    unset($language_types[LANGUAGE_TYPE_CONTENT]['fixed']);
+  }
+}
+
+/**
+ * Implements hook_language_negotiation_info().
+ */
+function locale_test_language_negotiation_info() {
+  if (variable_get('locale_test_language_negotiation_info', FALSE)) {
+    $info = array(
+      'callbacks' => array(
+        'language' => 'locale_test_language_provider',
+      ),
+      'file' => drupal_get_path('module', 'locale_test') .'/locale_test.module',
+      'weight' => -10,
+      'description' => t('This is a test language provider.'),
     );
+
+    return array(
+      'test_language_provider' => array(
+        'name' => t('Test'),
+        'types' => array(LANGUAGE_TYPE_CONTENT, 'test_language_type', 'fixed_test_language_type'),
+      ) + $info,
+      'test_language_provider_ts' => array(
+        'name' => t('Type-specific test'),
+        'types' => array('test_language_type'),
+      ) + $info,
+    );
+  }
+}
+
+/**
+ * Implements hook_language_negotiation_info_alter().
+ */
+function locale_test_language_negotiation_info_alter(array &$language_providers) {
+  if (variable_get('locale_test_language_negotiation_info_alter', FALSE)) {
+    unset($language_providers[LOCALE_LANGUAGE_NEGOTIATION_INTERFACE]);
   }
 }
+
+/**
+ * Store the last negotiated languages.
+ */
+function locale_test_store_language_negotiation() {
+  $last = array();
+  foreach (language_types() as $type) {
+    $last[$type] = $GLOBALS[$type]->language;
+  }
+  variable_set('locale_test_language_negotiation_last', $last);
+}
+
+/**
+ * Test language provider.
+ */
+function locale_test_language_provider($languages) {
+  return 'it';
+}
diff --git a/modules/menu/menu.admin.inc b/modules/menu/menu.admin.inc
index 959c349..1f3c4f7 100644
--- a/modules/menu/menu.admin.inc
+++ b/modules/menu/menu.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/menu/menu.admin.js b/modules/menu/menu.admin.js
index 681c481..15bc2e7 100644
--- a/modules/menu/menu.admin.js
+++ b/modules/menu/menu.admin.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/menu/menu.api.php b/modules/menu/menu.api.php
index 0abb1c5..3f3818e 100644
--- a/modules/menu/menu.api.php
+++ b/modules/menu/menu.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/menu/menu.css b/modules/menu/menu.css
index 9b914d0..96f861a 100644
--- a/modules/menu/menu.css
+++ b/modules/menu/menu.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .menu-operations {
   width: 100px;
diff --git a/modules/menu/menu.info b/modules/menu/menu.info
index 2d700e6..2219f69 100644
--- a/modules/menu/menu.info
+++ b/modules/menu/menu.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Menu
 description = Allows administrators to customize the site navigation menu.
 package = Core
diff --git a/modules/menu/menu.install b/modules/menu/menu.install
index 1938a75..05aed28 100644
--- a/modules/menu/menu.install
+++ b/modules/menu/menu.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/menu/menu.js b/modules/menu/menu.js
index 8da2201..40c1bfe 100644
--- a/modules/menu/menu.js
+++ b/modules/menu/menu.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/menu/menu.module b/modules/menu/menu.module
index ded4bd2..fc8f68a 100644
--- a/modules/menu/menu.module
+++ b/modules/menu/menu.module
@@ -1,9 +1,14 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Allows administrators to customize the site navigation menu.
+ * Allows administrators to customize the site's navigation menus.
+ *
+ * A menu (in this context) is a hierarchical collection of links, generally
+ * used for navigation. This is not to be confused with the
+ * @link menu Menu system @endlink of menu.inc and hook_menu(), which defines
+ * page routing requests for Drupal, and also allows the defined page routing
+ * URLs to be added to the main site navigation menu.
  */
 
 /**
@@ -20,7 +25,7 @@ function menu_help($path, $arg) {
     case 'admin/help#menu':
       $output = '';
       $output .= '<h3>' . t('About') . '</h3>';
-      $output .= '<p>' . t('The Menu module provides an interface for managing menus. A menu is a hierarchical collection of links, which can be within or external to the site, generally used for navigation. Each menu is rendered in a block that can be enabled and positioned through the <a href="@blocks"">Blocks administration page</a>. You can view and manage menus on the <a href="@menus">Menus administration page</a>. For more information, see the online handbook entry for the <a href="@menu">Menu module</a>.', array('@blocks' => url('admin/structure/block'), '@menus' => url('admin/structure/menu'), '@menu' => 'http://drupal.org/handbook/modules/menu/')) . '</p>';
+      $output .= '<p>' . t('The Menu module provides an interface for managing menus. A menu is a hierarchical collection of links, which can be within or external to the site, generally used for navigation. Each menu is rendered in a block that can be enabled and positioned through the <a href="@blocks">Blocks administration page</a>. You can view and manage menus on the <a href="@menus">Menus administration page</a>. For more information, see the online handbook entry for the <a href="@menu">Menu module</a>.', array('@blocks' => url('admin/structure/block'), '@menus' => url('admin/structure/menu'), '@menu' => 'http://drupal.org/handbook/modules/menu/')) . '</p>';
       $output .= '<h3>' . t('Uses') . '</h3>';
       $output .= '<dl>';
       $output .= '<dt>' . t('Managing menus') . '</dt>';
@@ -352,7 +357,7 @@ function menu_parent_options($menus, $item) {
 
 /**
  * Page callback.
- * Get all available menus and menu items as Javascript array.
+ * Get all the available menus and menu items as a JavaScript array.
  */
 function menu_parent_options_js() {
   $available_menus = array();
@@ -535,18 +540,23 @@ function menu_node_delete($node) {
 function menu_node_prepare($node) {
   if (empty($node->menu)) {
     // Prepare the node for the edit form so that $node->menu always exists.
-    $menu_name = variable_get('menu_parent_' . $node->type, 'main-menu:0');
+    $menu_name = strtok(variable_get('menu_parent_' . $node->type, 'main-menu:0'), ':');
     $item = array();
     if (isset($node->nid)) {
+      $mlid = FALSE;
       // Give priority to the default menu
-      $mlid = db_query_range("SELECT mlid FROM {menu_links} WHERE link_path = :path AND menu_name = :menu_name AND module = 'menu' ORDER BY mlid ASC", 0, 1, array(
-        ':path' => 'node/' . $node->nid,
-        ':menu_name' => $menu_name,
-      ))->fetchField();
-      // Check all menus if a link does not exist in the default menu.
-      if (!$mlid) {
-        $mlid = db_query_range("SELECT mlid FROM {menu_links} WHERE link_path = :path AND module = 'menu' ORDER BY mlid ASC", 0, 1, array(
+      $type_menus = variable_get('menu_options_' . $node->type, array('main-menu' => 'main-menu'));
+      if (in_array($menu_name, $type_menus)) {
+        $mlid = db_query_range("SELECT mlid FROM {menu_links} WHERE link_path = :path AND menu_name = :menu_name AND module = 'menu' ORDER BY mlid ASC", 0, 1, array(
+          ':path' => 'node/' . $node->nid,
+          ':menu_name' => $menu_name,
+        ))->fetchField();
+      }
+      // Check all allowed menus if a link does not exist in the default menu.
+      if (!$mlid && !empty($type_menus)) {
+        $mlid = db_query_range("SELECT mlid FROM {menu_links} WHERE link_path = :path AND module = 'menu' AND menu_name IN (:type_menus) ORDER BY mlid ASC", 0, 1, array(
           ':path' => 'node/' . $node->nid,
+          ':type_menus' => array_values($type_menus),
         ))->fetchField();
       }
       if ($mlid) {
diff --git a/modules/menu/menu.test b/modules/menu/menu.test
index a90fbfb..b457177 100644
--- a/modules/menu/menu.test
+++ b/modules/menu/menu.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests file for the menu module.
+ * Tests for menu.module.
  */
 
 class MenuTestCase extends DrupalWebTestCase {
@@ -380,7 +379,7 @@ class MenuTestCase extends DrupalWebTestCase {
   /**
    * Modify a menu link using the menu module UI.
    *
-   * @param array &$item Menu link passed by reference.
+   * @param array $item Menu link passed by reference.
    */
   function modifyMenuLink(&$item) {
     $item['link_title'] = $this->randomName(16);
@@ -665,5 +664,21 @@ class MenuNodeTestCase extends DrupalWebTestCase {
     // Assert that there is no link for the node.
     $this->drupalGet('');
     $this->assertNoLink($node_title);
+
+    // Add a menu link to the Management menu.
+    $item = array(
+      'link_path' => 'node/' . $node->nid,
+      'link_title' => $this->randomName(16),
+      'menu_name' => 'management',
+    );
+    menu_link_save($item);
+
+    // Assert that disabled Management menu is not shown on the node/$nid/edit page.
+    $this->drupalGet('node/' . $node->nid . '/edit');
+    $this->assertText('Provide a menu link', t('Link in not allowed menu not shown in node edit form'));
+    // Assert that the link is still in the management menu after save.
+    $this->drupalPost('node/' . $node->nid . '/edit', $edit, t('Save'));
+    $link = menu_link_load($item['mlid']);
+    $this->assertTrue($link, t('Link in not allowed menu still exists after saving node'));
   }
 }
diff --git a/modules/node/content_types.inc b/modules/node/content_types.inc
index d31becb..11ecc2c 100644
--- a/modules/node/content_types.inc
+++ b/modules/node/content_types.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -70,7 +69,7 @@ function theme_node_admin_overview($variables) {
   $type = $variables['type'];
 
   $output = check_plain($name);
-  $output .= ' <small> (Machine name: ' . check_plain($type->type) . ')</small>';
+  $output .= ' <small>' . t('(Machine name: @type)', array('@type' => $type->type)) . '</small>';
   $output .= '<div class="description">' . filter_xss_admin($type->description) . '</div>';
   return $output;
 }
diff --git a/modules/node/content_types.js b/modules/node/content_types.js
index dfbd01c..0031c32 100644
--- a/modules/node/content_types.js
+++ b/modules/node/content_types.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 Drupal.behaviors.contentTypes = {
diff --git a/modules/node/node-rtl.css b/modules/node/node-rtl.css
index 48d62ae..a5fe99e 100644
--- a/modules/node/node-rtl.css
+++ b/modules/node/node-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #node-admin-content dl.multiselect dd .form-item label {
   display: block;
diff --git a/modules/node/node.admin.inc b/modules/node/node.admin.inc
index d7efc00..a6ea1b5 100644
--- a/modules/node/node.admin.inc
+++ b/modules/node/node.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -388,9 +387,9 @@ function node_admin_nodes() {
     '#submit' => array('node_admin_nodes_submit'),
   );
 
-  // Enable language column if translation module is enabled
-  // or if we have any node with language.
-  $multilanguage = (module_exists('translation') || db_query("SELECT COUNT(*) FROM {node} WHERE language <> :language", array(':language' => LANGUAGE_NONE))->fetchField());
+  // Enable language column if translation module is enabled or if we have any
+  // node with language.
+  $multilanguage = (module_exists('translation') || db_query_range("SELECT 1 FROM {node} WHERE language <> :language", 0, 1, array(':language' => LANGUAGE_NONE))->fetchField());
 
   // Build the sortable table header.
   $header = array(
diff --git a/modules/node/node.api.php b/modules/node/node.api.php
index 2e60cea..3e8029c 100644
--- a/modules/node/node.api.php
+++ b/modules/node/node.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -38,6 +37,7 @@
  * - Creating a new node (calling node_save() on a new node):
  *   - field_attach_presave()
  *   - hook_node_presave() (all)
+ *   - hook_entity_presave() (all)
  *   - Node and revision records are written to the database
  *   - hook_insert() (node-type-specific)
  *   - field_attach_insert()
@@ -48,6 +48,7 @@
  * - Updating an existing node (calling node_save() on an existing node):
  *   - field_attach_presave()
  *   - hook_node_presave() (all)
+ *   - hook_entity_presave() (all)
  *   - Node and revision records are written to the database
  *   - hook_update() (node-type-specific)
  *   - field_attach_update()
@@ -70,6 +71,9 @@
  *   - hook_entity_prepare_view() (all)
  *   - field_attach_view()
  *   - hook_node_view() (all)
+ *   - hook_entity_view() (all)
+ *   - hook_node_view_alter() (all)
+ *   - hook_entity_view_alter() (all)
  * - Viewing multiple nodes (calling node_view_multiple() - note that the input
  *   to node_view_multiple() is a set of loaded nodes, so the Loading steps
  *   above are already done):
@@ -78,13 +82,16 @@
  *   - hook_view() (node-type-specific)
  *   - field_attach_view()
  *   - hook_node_view() (all)
+ *   - hook_entity_view() (all)
  *   - hook_node_view_alter() (all)
+ *   - hook_entity_view_alter() (all)
  * - Deleting a node (calling node_delete() or node_delete_multiple()):
  *   - Node is loaded (see Loading section above)
- *   - Node and revision information is deleted from database
  *   - hook_delete() (node-type-specific)
  *   - hook_node_delete() (all)
+ *   - hook_entity_delete() (all)
  *   - field_attach_delete()
+ *   - Node and revision information are deleted from database
  * - Deleting a node revision (calling node_revision_delete()):
  *   - Node is loaded (see Loading section above)
  *   - Revision information is deleted from database
@@ -315,7 +322,7 @@ function hook_node_access_records($node) {
  * @see hook_node_grants()
  * @see hook_node_grants_alter()
  *
- * @param &$grants
+ * @param $grants
  *   The $grants array returned by hook_node_access_records().
  * @param $node
  *   The node for which the grants were acquired.
@@ -360,7 +367,7 @@ function hook_node_access_records_alter(&$grants, $node) {
  * @see hook_node_access_records()
  * @see hook_node_access_records_alter()
  *
- * @param &$grants
+ * @param $grants
  *   The $grants array returned by hook_node_grants().
  * @param $account
  *   The user account requesting access to content.
@@ -454,9 +461,10 @@ function hook_node_operations() {
 /**
  * Respond to node deletion.
  *
- * This hook is invoked from node_delete_multiple() after the node has been
- * removed from the node table in the database, after the type-specific
- * hook_delete() has been invoked, and before field_attach_delete() is called.
+ * This hook is invoked from node_delete_multiple() after the type-specific
+ * hook_delete() has been invoked, but before hook_entity_delete and
+ * field_attach_delete() are called, and before the node is removed from the
+ * node table in the database.
  *
  * @param $node
  *   The node that is being deleted.
@@ -580,7 +588,7 @@ function hook_node_load($nodes, $types) {
  * @return
  *   NODE_ACCESS_ALLOW if the operation is to be allowed;
  *   NODE_ACCESS_DENY if the operation is to be denied;
- *   NODE_ACCESSS_IGNORE to not affect this operation at all.
+ *   NODE_ACCESS_IGNORE to not affect this operation at all.
  */
 function hook_node_access($node, $op, $account) {
   $type = is_string($node) ? $node : $node->type;
@@ -1057,8 +1065,6 @@ function hook_prepare($node) {
  * displayed automatically by the node module. This hook just needs to
  * return the node title and form editing fields specific to the node type.
  *
- * For a detailed usage example, see node_example.module.
- *
  * @param $node
  *   The node being added or edited.
  * @param $form_state
diff --git a/modules/node/node.css b/modules/node/node.css
index efd21b5..07540fa 100644
--- a/modules/node/node.css
+++ b/modules/node/node.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .node-unpublished {
   background-color: #fff4f4;
diff --git a/modules/node/node.info b/modules/node/node.info
index 9767f7e..85866e7 100644
--- a/modules/node/node.info
+++ b/modules/node/node.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Node
 description = Allows content to be submitted to the site and displayed on pages.
 package = Core
diff --git a/modules/node/node.install b/modules/node/node.install
index 4be27cb..852c111 100644
--- a/modules/node/node.install
+++ b/modules/node/node.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -396,6 +395,34 @@ function node_schema() {
     ),
   );
 
+  $schema['history'] = array(
+    'description' => 'A record of which {users} have read which {node}s.',
+    'fields' => array(
+      'uid' => array(
+        'description' => 'The {users}.uid that read the {node} nid.',
+        'type' => 'int',
+        'not null' => TRUE,
+        'default' => 0,
+      ),
+      'nid' => array(
+        'description' => 'The {node}.nid that was read.',
+        'type' => 'int',
+        'not null' => TRUE,
+        'default' => 0,
+      ),
+      'timestamp' => array(
+        'description' => 'The Unix timestamp at which the read occurred.',
+        'type' => 'int',
+        'not null' => TRUE,
+        'default' => 0,
+      ),
+    ),
+    'primary key' => array('uid', 'nid'),
+    'indexes' => array(
+      'nid' => array('nid'),
+    ),
+  );
+
   return $schema;
 }
 
@@ -442,7 +469,26 @@ function node_update_dependencies() {
  * @ingroup update-api-6.x-to-7.x
  */
 function _update_7000_node_get_types() {
-  return db_query('SELECT * FROM {node_type}')->fetchAllAssoc('type', PDO::FETCH_OBJ);
+  $node_types = db_query('SELECT * FROM {node_type}')->fetchAllAssoc('type', PDO::FETCH_OBJ);
+
+  // Create default settings for orphan nodes.
+  $all_types = db_query('SELECT DISTINCT type FROM {node}')->fetchCol();
+  $extra_types = array_diff($all_types, array_keys($node_types));
+
+  foreach ($extra_types as $type) {
+    $type_object = new stdClass;
+    $type_object->type = $type;
+
+    // In Drupal 6, whether you have a body field or not is a flag in the node
+    // type table. If it's enabled, nodes may or may not have an empty string
+    // for the bodies. As we can't detect what this setting should be in
+    // Drupal 7 without access to the Drupal 6 node type settings, we assume
+    // the default, which is to enable the body field.
+    $type_object->has_body = 1;
+    $type_object->body_label = 'Body';
+    $node_types[$type_object->type] = $type_object;
+  }
+  return $node_types;
 }
 
 /**
@@ -573,19 +619,6 @@ function node_update_7006(&$sandbox) {
     // Get node type info, specifically the body field settings.
     $node_types = _update_7000_node_get_types();
 
-    // Create default settings for orphan nodes.
-    $extra_types = db_query('SELECT DISTINCT type FROM {node} WHERE type NOT IN (:types)', array(':types' => array_keys($node_types)))->fetchCol();
-    foreach ($extra_types as $type) {
-      $type_object = new stdClass;
-      $type_object->type = $type;
-      // Always create a body. Querying node_revisions for a non-empty body
-      // would skip creating body fields for types that have a body but
-      // the nodes of that type so far had empty bodies.
-      $type_object->has_body = 1;
-      $type_object->body_label = 'Body';
-      $node_types[$type_object->type] = $type_object;
-    }
-
     // Add body field instances for existing node types.
     foreach ($node_types as $node_type) {
       if ($node_type->has_body) {
@@ -804,5 +837,28 @@ function node_update_7010() {
 }
 
 /**
+ * Update the database from Drupal 6 to match the schema.
+ */
+function node_update_7011() {
+  // Drop node moderation field.
+  db_drop_field('node', 'moderate');
+  db_drop_index('node', 'node_moderate');
+
+  // Change {node_revision}.status field to default to 1.
+  db_change_field('node_revision', 'status', 'status', array(
+    'type' => 'int',
+    'not null' => TRUE,
+    'default' => 1,
+  ));
+
+  // Change {node_type}.module field default.
+  db_change_field('node_type', 'module', 'module', array(
+    'type' => 'varchar',
+    'length' => 255,
+    'not null' => TRUE,
+  ));
+}
+
+/**
  * @} End of "addtogroup updates-6.x-to-7.x"
  */
diff --git a/modules/node/node.js b/modules/node/node.js
index 0779306..ebf68eb 100644
--- a/modules/node/node.js
+++ b/modules/node/node.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/node/node.module b/modules/node/node.module
index 399fa7e..524a57f 100644
--- a/modules/node/node.module
+++ b/modules/node/node.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -365,7 +364,7 @@ function node_mark($nid, $timestamp) {
  *   Either a string or object, containing the node type information.
  *
  * @return
- *   Node type of the passed in data.
+ *   Node type of the passed-in data.
  */
 function _node_extract_type($node) {
   return is_object($node) ? $node->type : $node;
@@ -490,7 +489,6 @@ function node_type_load($name) {
  *   Status flag indicating outcome of the operation.
  */
 function node_type_save($info) {
-  $is_existing = FALSE;
   $existing_type = !empty($info->old_type) ? $info->old_type : $info->type;
   $is_existing = (bool) db_query_range('SELECT 1 FROM {node_type} WHERE type = :type', 0, 1, array(':type' => $existing_type))->fetchField();
   $type = node_type_set_defaults($info);
@@ -570,7 +568,7 @@ function node_add_body_field($type, $label = 'Body') {
       'entity_type' => 'node',
       'bundle' => $type->type,
       'label' => $label,
-      'widget_type' => 'text_textarea_with_summary',
+      'widget' => array('type' => 'text_textarea_with_summary'),
       'settings' => array('display_summary' => TRUE),
       'display' => array(
         'default' => array(
@@ -754,17 +752,20 @@ function node_type_cache_reset() {
 }
 
 /**
- * Set the default values for a node type.
+ * Sets the default values for a node type.
  *
- * The defaults are for a type defined through hook_node_info().
- * When populating a custom node type $info should have the 'custom'
- * key set to 1.
+ * The defaults are appropriate for a type defined through hook_node_info(),
+ * since 'custom' is TRUE for types defined in the user interface, and FALSE
+ * for types defined by modules. (The 'custom' flag prevents types from being
+ * deleted through the user interface.) Also, the default for 'locked' is TRUE,
+ * which prevents users from changing the machine name of the type.
  *
  * @param $info
- *   An object or array containing values to override the defaults.
+ *   An object or array containing values to override the defaults. See
+ *   hook_node_info() for details on what the array elements mean.
  *
  * @return
- *   A node type object.
+ *   A node type object, with missing values in $info set to their defaults.
  */
 function node_type_set_defaults($info = array()) {
   $info = (array) $info;
@@ -1349,15 +1350,15 @@ function node_build_content($node, $view_mode = 'full', $langcode = NULL) {
   // The 'view' hook can be implemented to overwrite the default function
   // to display nodes.
   if (node_hook($node, 'view')) {
-    $node = node_invoke($node, 'view', $view_mode);
+    $node = node_invoke($node, 'view', $view_mode, $langcode);
   }
 
   // Build fields content.
   // In case of a multiple view, node_view_multiple() already ran the
   // 'prepare_view' step. An internal flag prevents the operation from running
   // twice.
-  field_attach_prepare_view('node', array($node->nid => $node), $view_mode);
-  entity_prepare_view('node', array($node->nid => $node));
+  field_attach_prepare_view('node', array($node->nid => $node), $view_mode, $langcode);
+  entity_prepare_view('node', array($node->nid => $node), $langcode);
   $node->content += field_attach_view('node', $node, $view_mode, $langcode);
 
   // Always display a read more link on teasers because we have no way
@@ -1411,7 +1412,7 @@ function node_show($node, $message = FALSE) {
 }
 
 /**
- * Returns whether the current page is the full page view of the passed in node.
+ * Returns whether the current page is the full page view of the passed-in node.
  *
  * @param $node
  *   A node object.
@@ -1450,10 +1451,6 @@ function template_preprocess_node(&$variables) {
   $variables['title']     = check_plain($node->title);
   $variables['page']      = $variables['view_mode'] == 'full' && node_is_page($node);
 
-  if (!empty($node->in_preview)) {
-    unset($node->content['links']);
-  }
-
   // Flatten the node object's member fields.
   $variables = array_merge((array) $node, $variables);
 
@@ -2190,7 +2187,7 @@ function node_get_recent($number = 10) {
   }
   $nids = $query
     ->fields('n', array('nid'))
-    ->orderBy('changed', 'DESC')
+    ->orderBy('n.changed', 'DESC')
     ->range(0, $number)
     ->addTag('node_access')
     ->execute()
@@ -2516,8 +2513,8 @@ function node_feed($nids = FALSE, $channel = array()) {
  *   An array in the format expected by drupal_render().
  */
 function node_view_multiple($nodes, $view_mode = 'teaser', $weight = 0, $langcode = NULL) {
-  field_attach_prepare_view('node', $nodes, $view_mode);
-  entity_prepare_view('node', $nodes);
+  field_attach_prepare_view('node', $nodes, $view_mode, $langcode);
+  entity_prepare_view('node', $nodes, $langcode);
   $build = array();
   foreach ($nodes as $node) {
     $build['nodes'][$node->nid] = node_view($node, $view_mode, $langcode);
diff --git a/modules/node/node.pages.inc b/modules/node/node.pages.inc
index fdb773d..facc7f6 100644
--- a/modules/node/node.pages.inc
+++ b/modules/node/node.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/node/node.test b/modules/node/node.test
index 3e0db86..8a871c0 100644
--- a/modules/node/node.test
+++ b/modules/node/node.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for node.module.
+ */
 
 /**
  * Test the node_load_multiple() function.
@@ -2126,7 +2130,7 @@ class NodeTokenReplaceTestCase extends DrupalWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('node' => $node), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized node token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized node token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -2138,7 +2142,7 @@ class NodeTokenReplaceTestCase extends DrupalWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('node' => $node), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized node token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized node token %token replaced.', array('%token' => $input)));
     }
   }
 }
diff --git a/modules/node/node.tokens.inc b/modules/node/node.tokens.inc
index be064ab..80dbda5 100644
--- a/modules/node/node.tokens.inc
+++ b/modules/node/node.tokens.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/node/node.tpl.php b/modules/node/node.tpl.php
index 2612896..6d0f489 100644
--- a/modules/node/node.tpl.php
+++ b/modules/node/node.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/node/tests/node_access_test.info b/modules/node/tests/node_access_test.info
index e3f041d..dc5e530 100644
--- a/modules/node/tests/node_access_test.info
+++ b/modules/node/tests/node_access_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Node module access tests"
 description = "Support module for node permission testing."
 package = Testing
diff --git a/modules/node/tests/node_access_test.module b/modules/node/tests/node_access_test.module
index 50fb169..3004e0c 100644
--- a/modules/node/tests/node_access_test.module
+++ b/modules/node/tests/node_access_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/node/tests/node_test.info b/modules/node/tests/node_test.info
index 5c17123..fa6c093 100644
--- a/modules/node/tests/node_test.info
+++ b/modules/node/tests/node_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Node module tests"
 description = "Support module for node related testing."
 package = Testing
diff --git a/modules/node/tests/node_test.module b/modules/node/tests/node_test.module
index 821f48c..b0ebc14 100644
--- a/modules/node/tests/node_test.module
+++ b/modules/node/tests/node_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/node/tests/node_test_exception.info b/modules/node/tests/node_test_exception.info
index ba1b817..1a339e0 100644
--- a/modules/node/tests/node_test_exception.info
+++ b/modules/node/tests/node_test_exception.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Node module exception tests"
 description = "Support module for node related exception testing."
 package = Testing
diff --git a/modules/node/tests/node_test_exception.module b/modules/node/tests/node_test_exception.module
index 6dfe18b..0fe9f35 100644
--- a/modules/node/tests/node_test_exception.module
+++ b/modules/node/tests/node_test_exception.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/openid/openid-rtl.css b/modules/openid/openid-rtl.css
index 59da8d9..861f6d7 100644
--- a/modules/openid/openid-rtl.css
+++ b/modules/openid/openid-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #edit-openid-identifier {
   background-position: right 50%;
diff --git a/modules/openid/openid.api.php b/modules/openid/openid.api.php
index fdb8497..11faa71 100644
--- a/modules/openid/openid.api.php
+++ b/modules/openid/openid.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/openid/openid.css b/modules/openid/openid.css
index 882be2c..48b170f 100644
--- a/modules/openid/openid.css
+++ b/modules/openid/openid.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #edit-openid-identifier {
   background-image: url("login-bg.png");
diff --git a/modules/openid/openid.inc b/modules/openid/openid.inc
index 48af766..6945f34 100644
--- a/modules/openid/openid.inc
+++ b/modules/openid/openid.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -189,32 +188,33 @@ function _openid_select_service(array $services) {
   // Extensible Resource Identifier (XRI) Resolution Version 2.0, section 4.3.3:
   // Find the service with the highest priority (lowest integer value). If there
   // is a tie, select a random one, not just the first in the XML document.
-  $selected_service = NULL;
   shuffle($services);
+  $selected_service = NULL;
+  $selected_type_priority = FALSE;
 
   // Search for an OP Identifier Element.
   foreach ($services as $service) {
     if (!empty($service['uri'])) {
+      $type_priority = FALSE;
       if (in_array('http://specs.openid.net/auth/2.0/server', $service['types'])) {
         $service['version'] = 2;
+        $type_priority = 1;
+      }
+      elseif (in_array('http://specs.openid.net/auth/2.0/signon', $service['types'])) {
+        $service['version'] = 2;
+        $type_priority = 2;
       }
       elseif (in_array(OPENID_NS_1_0, $service['types']) || in_array(OPENID_NS_1_1, $service['types'])) {
         $service['version'] = 1;
+        $type_priority = 3;
       }
-      if (isset($service['version']) && (!$selected_service || $service['priority'] < $selected_service['priority'])) {
-        $selected_service = $service;
-      }
-    }
-  }
 
-  if (!$selected_service) {
-    // Search for Claimed Identifier Element.
-    foreach ($services as $service) {
-      if (!empty($service['uri']) && in_array('http://specs.openid.net/auth/2.0/signon', $service['types'])) {
-        $service['version'] = 2;
-        if (!$selected_service || $service['priority'] < $selected_service['priority']) {
-          $selected_service = $service;
-        }
+      if ($type_priority
+          && (!$selected_service
+              || $type_priority < $selected_type_priority
+              || ($type_priority == $selected_type_priority && $service['priority'] < $selected_service['priority']))) {
+        $selected_service = $service;
+        $selected_type_priority = $type_priority;
       }
     }
   }
@@ -448,15 +448,15 @@ function _openid_dh_binary_to_long($str) {
 
   $n = 0;
   foreach ($bytes as $byte) {
-    $n = bcmul($n, pow(2, 8));
-    $n = bcadd($n, $byte);
+    $n = _openid_math_mul($n, pow(2, 8));
+    $n = _openid_math_add($n, $byte);
   }
 
   return $n;
 }
 
 function _openid_dh_long_to_binary($long) {
-  $cmp = bccomp($long, 0);
+  $cmp = _openid_math_cmp($long, 0);
   if ($cmp < 0) {
     return FALSE;
   }
@@ -467,9 +467,9 @@ function _openid_dh_long_to_binary($long) {
 
   $bytes = array();
 
-  while (bccomp($long, 0) > 0) {
-    array_unshift($bytes, bcmod($long, 256));
-    $long = bcdiv($long, pow(2, 8));
+  while (_openid_math_cmp($long, 0) > 0) {
+    array_unshift($bytes, _openid_math_mod($long, 256));
+    $long = _openid_math_div($long, pow(2, 8));
   }
 
   if ($bytes && ($bytes[0] > 127)) {
@@ -512,11 +512,11 @@ function _openid_dh_rand($stop) {
       $nbytes = strlen($rbytes);
     }
 
-    $mxrand = bcpow(256, $nbytes);
+    $mxrand = _openid_math_pow(256, $nbytes);
 
     // If we get a number less than this, then it is in the
     // duplicated range.
-    $duplicate = bcmod($mxrand, $stop);
+    $duplicate = _openid_math_mod($mxrand, $stop);
 
     if (count($duplicate_cache) > 10) {
       $duplicate_cache = array();
@@ -529,9 +529,9 @@ function _openid_dh_rand($stop) {
     $bytes = "\x00" . _openid_get_bytes($nbytes);
     $n = _openid_dh_binary_to_long($bytes);
     // Keep looping if this value is in the low duplicated range.
-  } while (bccomp($n, $duplicate) < 0);
+  } while (_openid_math_cmp($n, $duplicate) < 0);
 
-  return bcmod($n, $stop);
+  return _openid_math_mod($n, $stop);
 }
 
 function _openid_get_bytes($num_bytes) {
@@ -683,3 +683,113 @@ function openid_extract_ax_values($values, $uris) {
   return $output;
 }
 
+/**
+ * Determine the available math library GMP vs. BCMath, favouring GMP for performance.
+ */
+function _openid_get_math_library() {
+  // Not drupal_static(), because a function is not going to disappear and
+  // change the output of this under any circumstances.
+  static $library;
+
+  if (empty($library)) {
+    if (function_exists('gmp_add')) {
+      $library =  'gmp';
+    }
+    elseif (function_exists('bcadd')) {
+      $library = 'bcmath';
+    }
+  }
+
+  return $library;
+}
+
+/**
+ * Calls the add function from the available math library for OpenID.
+ */
+function _openid_math_add($x, $y) {
+  $library = _openid_get_math_library();
+  switch ($library) {
+    case 'gmp':
+      return gmp_strval(gmp_add($x, $y));
+    case 'bcmath':
+      return bcadd($x, $y);
+  }
+}
+
+/**
+ * Calls the mul function from the available math library for OpenID.
+ */
+function _openid_math_mul($x, $y) {
+  $library = _openid_get_math_library();
+  switch ($library) {
+    case 'gmp':
+      return gmp_mul($x, $y);
+    case 'bcmath':
+      return bcmul($x, $y);
+  }
+}
+
+/**
+ * Calls the div function from the available math library for OpenID.
+ */
+function _openid_math_div($x, $y) {
+  $library = _openid_get_math_library();
+  switch ($library) {
+    case 'gmp':
+      return gmp_div($x, $y);
+    case 'bcmath':
+      return bcdiv($x, $y);
+  }
+}
+
+/**
+ * Calls the cmp function from the available math library for OpenID.
+ */
+function _openid_math_cmp($x, $y) {
+  $library = _openid_get_math_library();
+  switch ($library) {
+    case 'gmp':
+      return gmp_cmp($x, $y);
+    case 'bcmath':
+      return bccomp($x, $y);
+  }
+}
+
+/**
+ * Calls the mod function from the available math library for OpenID.
+ */
+function _openid_math_mod($x, $y) {
+  $library = _openid_get_math_library();
+  switch ($library) {
+    case 'gmp':
+      return gmp_mod($x, $y);
+    case 'bcmath':
+      return bcmod($x, $y);
+  }
+}
+
+/**
+ * Calls the pow function from the available math library for OpenID.
+ */
+function _openid_math_pow($x, $y) {
+  $library = _openid_get_math_library();
+  switch ($library) {
+    case 'gmp':
+      return gmp_pow($x, $y);
+    case 'bcmath':
+      return bcpow($x, $y);
+  }
+}
+
+/**
+ * Calls the mul function from the available math library for OpenID.
+ */
+function _openid_math_powmod($x, $y, $z) {
+  $library = _openid_get_math_library();
+  switch ($library) {
+    case 'gmp':
+      return gmp_powm($x, $y, $z);
+    case 'bcmath':
+      return bcpowmod($x, $y, $z);
+  }
+}
diff --git a/modules/openid/openid.info b/modules/openid/openid.info
index 79a4f38..6a1843c 100644
--- a/modules/openid/openid.info
+++ b/modules/openid/openid.info
@@ -1,4 +1,3 @@
-; $Id$
 name = OpenID
 description = "Allows users to log into your site using OpenID."
 version = VERSION
diff --git a/modules/openid/openid.install b/modules/openid/openid.install
index 5a90568..2df39aa 100644
--- a/modules/openid/openid.install
+++ b/modules/openid/openid.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -92,20 +91,27 @@ function openid_requirements($phase) {
 
   if ($phase == 'runtime') {
     // Check for the PHP BC Math library.
-    if (!function_exists('bcadd')) {
-      $requirements['bcmath'] = array(
+    if (!function_exists('bcadd') && !function_exists('gmp_add')) {
+      $requirements['openid_math'] = array(
         'value' => t('Not installed'),
         'severity' => REQUIREMENT_ERROR,
-        'description' => t('OpenID requires the BC Math library for PHP which is missing or outdated. Check the <a href="@url">PHP BC Math Library documentation</a> for information on how to correct this.', array('@url' => 'http://www.php.net/manual/en/book.bc.php')),
+        'description' => t('OpenID suggests the use of either the <a href="@gmp">GMP Math</a> (recommended for performance) or <a href="@bc">BC Math</a> libraries to enable OpenID associations.', array('@gmp' => 'http://php.net/manual/en/book.gmp.php', '@bc' => 'http://www.php.net/manual/en/book.bc.php')),
+      );
+    }
+    elseif (!function_exists('gmp_add')) {
+      $requirements['openid_math'] = array(
+        'value' => t('Not optimized'),
+        'severity' => REQUIREMENT_WARNING,
+        'description' => t('OpenID suggests the use of the GMP Math library for PHP for optimal performance. Check the <a href="@url">GMP Math Library documentation</a> for installation instructions.', array('@url' => 'http://www.php.net/manual/en/book.gmp.php')),
       );
     }
     else {
-      $requirements['bcmath'] = array(
+      $requirements['openid_math'] = array(
         'value' => t('Installed'),
         'severity' => REQUIREMENT_OK,
       );
     }
-    $requirements['bcmath']['title'] = t('BC Math library');
+    $requirements['openid_math']['title'] = t('OpenID Math library');
   }
 
   return $requirements;
diff --git a/modules/openid/openid.js b/modules/openid/openid.js
index 4c715c1..1f20427 100644
--- a/modules/openid/openid.js
+++ b/modules/openid/openid.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 Drupal.behaviors.openid = {
diff --git a/modules/openid/openid.module b/modules/openid/openid.module
index 0ab7c70..7673de8 100644
--- a/modules/openid/openid.module
+++ b/modules/openid/openid.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -275,9 +274,9 @@ function openid_begin($claimed_id, $return_to = '', $form_values = array()) {
   // user_exteral_login later.
   $_SESSION['openid']['user_login_values'] = $form_values;
 
-  // If bcmath is present, then create an association
+  // If a supported math library is present, then create an association.
   $assoc_handle = '';
-  if (function_exists('bcadd')) {
+  if (_openid_get_math_library()) {
     $assoc_handle = openid_association($service['uri']);
   }
 
@@ -540,8 +539,8 @@ function openid_association($op_endpoint) {
     $mod = OPENID_DH_DEFAULT_MOD;
     $gen = OPENID_DH_DEFAULT_GEN;
     $r = _openid_dh_rand($mod);
-    $private = bcadd($r, 1);
-    $public = bcpowmod($gen, $private, $mod);
+    $private = _openid_math_add($r, 1);
+    $public = _openid_math_powmod($gen, $private, $mod);
 
     // If there is no existing association, then request one
     $assoc_request = openid_association_request($public);
@@ -564,7 +563,7 @@ function openid_association($op_endpoint) {
     if ($assoc_response['session_type'] == 'DH-SHA1') {
       $spub = _openid_dh_base64_to_long($assoc_response['dh_server_public']);
       $enc_mac_key = base64_decode($assoc_response['enc_mac_key']);
-      $shared = bcpowmod($spub, $private, $mod);
+      $shared = _openid_math_powmod($spub, $private, $mod);
       $assoc_response['mac_key'] = base64_encode(_openid_dh_xorsecret($shared, $enc_mac_key));
     }
     db_insert('openid_association')
diff --git a/modules/openid/openid.pages.inc b/modules/openid/openid.pages.inc
index db41e3b..6e3f096 100644
--- a/modules/openid/openid.pages.inc
+++ b/modules/openid/openid.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/openid/openid.test b/modules/openid/openid.test
index 9fe888b..202a835 100644
--- a/modules/openid/openid.test
+++ b/modules/openid/openid.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for openid.module.
+ */
 
 /**
  * Base class for OpenID tests.
diff --git a/modules/openid/tests/openid_test.info b/modules/openid/tests/openid_test.info
index 121515f..755a5ee 100644
--- a/modules/openid/tests/openid_test.info
+++ b/modules/openid/tests/openid_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = OpenID dummy provider
 description = "OpenID provider used for testing."
 package = Testing
diff --git a/modules/openid/tests/openid_test.install b/modules/openid/tests/openid_test.install
index f59c3c7..3bd4978 100644
--- a/modules/openid/tests/openid_test.install
+++ b/modules/openid/tests/openid_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/openid/tests/openid_test.module b/modules/openid/tests/openid_test.module
index 5beb5fa..bad1184 100644
--- a/modules/openid/tests/openid_test.module
+++ b/modules/openid/tests/openid_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -106,6 +105,10 @@ function openid_test_yadis_xrds() {
           <Service>
             <Type>http://example.com/this-is-ignored</Type>
           </Service>
+          <Service priority="5">
+            <Type>http://openid.net/signon/1.0</Type>
+            <URI>http://example.com/this-is-only-openid-1.0</URI>
+          </Service>
           <Service priority="10">
             <Type>http://specs.openid.net/auth/2.0/signon</Type>
             <Type>http://openid.net/srv/ax/1.0</Type>
@@ -134,7 +137,7 @@ function openid_test_yadis_xrds() {
     }
     elseif (arg(3) == 'delegate') {
       print '
-          <Service priority="5">
+          <Service priority="0">
             <Type>http://specs.openid.net/auth/2.0/signon</Type>
             <Type>http://openid.net/srv/ax/1.0</Type>
             <URI>' . url('openid-test/endpoint', array('absolute' => TRUE)) . '</URI>
@@ -228,14 +231,14 @@ function _openid_test_endpoint_associate() {
 
   // Generate private Diffie-Helmann key.
   $r = _openid_dh_rand($mod);
-  $private = bcadd($r, 1);
+  $private = _openid_math_add($r, 1);
 
   // Calculate public Diffie-Helmann key.
-  $public = bcpowmod($gen, $private, $mod);
+  $public = _openid_math_powmod($gen, $private, $mod);
 
   // Calculate shared secret based on Relying Party's public key.
   $cpub = _openid_dh_base64_to_long($_REQUEST['openid_dh_consumer_public']);
-  $shared = bcpowmod($cpub, $private, $mod);
+  $shared = _openid_math_powmod($cpub, $private, $mod);
 
   // Encrypt the MAC key using the shared secret.
   $enc_mac_key = base64_encode(_openid_dh_xorsecret($shared, base64_decode(variable_get('mac_key'))));
diff --git a/modules/overlay/overlay-child.css b/modules/overlay/overlay-child.css
index 821d00b..5a297cb 100644
--- a/modules/overlay/overlay-child.css
+++ b/modules/overlay/overlay-child.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 html.js {
   background: transparent !important;
diff --git a/modules/overlay/overlay-child.js b/modules/overlay/overlay-child.js
index 4c2666c..e78e383 100644
--- a/modules/overlay/overlay-child.js
+++ b/modules/overlay/overlay-child.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/overlay/overlay-parent.css b/modules/overlay/overlay-parent.css
index 196ca17..dad6d55 100644
--- a/modules/overlay/overlay-parent.css
+++ b/modules/overlay/overlay-parent.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 html.overlay-open,
 html.overlay-open body {
diff --git a/modules/overlay/overlay-parent.js b/modules/overlay/overlay-parent.js
index d176234..8f11df6 100644
--- a/modules/overlay/overlay-parent.js
+++ b/modules/overlay/overlay-parent.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
@@ -351,8 +350,9 @@ Drupal.overlay.isAdminLink = function (url) {
 
   // Turn the list of administrative paths into a regular expression.
   if (!this.adminPathRegExp) {
-    var adminPaths = '^(' + Drupal.settings.overlay.paths.admin.replace(/\s+/g, ')$|^(') + ')$';
-    var nonAdminPaths = '^(' + Drupal.settings.overlay.paths.non_admin.replace(/\s+/g, ')$|^(') + ')$';
+    var regExpPrefix = '^' + Drupal.settings.pathPrefix + '(';
+    var adminPaths = regExpPrefix + Drupal.settings.overlay.paths.admin.replace(/\s+/g, ')$|' + regExpPrefix) + ')$';
+    var nonAdminPaths = regExpPrefix + Drupal.settings.overlay.paths.non_admin.replace(/\s+/g, ')$|'+ regExpPrefix) + ')$';
     adminPaths = adminPaths.replace(/\*/g, '.*');
     nonAdminPaths = nonAdminPaths.replace(/\*/g, '.*');
     this.adminPathRegExp = new RegExp(adminPaths);
@@ -453,7 +453,7 @@ Drupal.overlay.eventhandlerAlterDisplacedElements = function (event) {
 Drupal.overlay.eventhandlerRestoreDisplacedElements = function (event) {
   var $displacedElements = $('.overlay-displace-top, .overlay-displace-bottom');
   try {
-    $displacedElements.css({ maxWidth: null, clip: null });
+    $displacedElements.css({ maxWidth: '', clip: '' });
   }
   // IE bug that doesn't allow unsetting style.clip (http://dev.jquery.com/ticket/6512).
   catch (err) {
@@ -678,7 +678,7 @@ Drupal.overlay.eventhandlerDispatchEvent = function (event) {
  * Make a regular admin link into a URL that will trigger the overlay to open.
  *
  * @param link
- *   A Javascript Link object (i.e. an <a> element).
+ *   A JavaScript Link object (i.e. an <a> element).
  * @param parentLocation
  *   (optional) URL to override the parent window's location with.
  *
diff --git a/modules/overlay/overlay.api.php b/modules/overlay/overlay.api.php
index dc056ca..c763d1f 100644
--- a/modules/overlay/overlay.api.php
+++ b/modules/overlay/overlay.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/overlay/overlay.info b/modules/overlay/overlay.info
index 3572fe4..5fb354d 100644
--- a/modules/overlay/overlay.info
+++ b/modules/overlay/overlay.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Overlay
 description = Displays the Drupal administration interface in an overlay.
 package = Core
diff --git a/modules/overlay/overlay.install b/modules/overlay/overlay.install
index d70fc7c..2fa7c84 100644
--- a/modules/overlay/overlay.install
+++ b/modules/overlay/overlay.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/overlay/overlay.module b/modules/overlay/overlay.module
index 7cf44b9..84b7554 100644
--- a/modules/overlay/overlay.module
+++ b/modules/overlay/overlay.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -626,7 +625,7 @@ function overlay_overlay_parent_initialize() {
     $type = str_replace('<front>', variable_get('site_frontpage', 'node'), $type);
   }
   drupal_add_js(array('overlay' => array('paths' => $paths)), 'setting');
-  // Pass along the AJAX callback for rerendering sections of the parent window.
+  // Pass along the Ajax callback for rerendering sections of the parent window.
   drupal_add_js(array('overlay' => array('ajaxCallback' => 'overlay-ajax')), 'setting');
 }
 
@@ -643,7 +642,7 @@ function overlay_overlay_child_initialize() {
   // the initial rendered content of those regions here, so that we can compare
   // it to the same content rendered in overlay_exit(), at the end of the page
   // request. This allows us to check if anything actually did change, and, if
-  // so, trigger an immediate AJAX refresh of the parent window.
+  // so, trigger an immediate Ajax refresh of the parent window.
   if (!empty($_POST) || isset($_GET['token'])) {
     foreach (overlay_supplemental_regions() as $region) {
       overlay_store_rendered_content($region, overlay_render_region($region));
@@ -945,7 +944,7 @@ function overlay_trigger_refresh() {
 /**
  * Prints the markup obtained by rendering a single region of the page.
  *
- * This function is intended to be called via AJAX.
+ * This function is intended to be called via Ajax.
  *
  * @param $region
  *   The name of the page region to render.
diff --git a/modules/overlay/overlay.tpl.php b/modules/overlay/overlay.tpl.php
index 5dfcade..54b10af 100644
--- a/modules/overlay/overlay.tpl.php
+++ b/modules/overlay/overlay.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/path/path.admin.inc b/modules/path/path.admin.inc
index 7706867..f10142b 100644
--- a/modules/path/path.admin.inc
+++ b/modules/path/path.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/path/path.api.php b/modules/path/path.api.php
index 54a5c00..d1a007a 100644
--- a/modules/path/path.api.php
+++ b/modules/path/path.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/path/path.info b/modules/path/path.info
index df26d54..8b6b67c 100644
--- a/modules/path/path.info
+++ b/modules/path/path.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Path
 description = Allows users to rename URLs.
 package = Core
diff --git a/modules/path/path.js b/modules/path/path.js
index 881724d..fcc0acc 100644
--- a/modules/path/path.js
+++ b/modules/path/path.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
 
diff --git a/modules/path/path.module b/modules/path/path.module
index 6499479..332287d 100644
--- a/modules/path/path.module
+++ b/modules/path/path.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -58,7 +57,7 @@ function path_menu() {
     'description' => "Change your site's URL paths by aliasing them.",
     'page callback' => 'path_admin_overview',
     'access arguments' => array('administer url aliases'),
-    'weight' => -10,
+    'weight' => -5,
     'file' => 'path.admin.inc',
   );
   $items['admin/config/search/path/edit/%path'] = array(
diff --git a/modules/path/path.test b/modules/path/path.test
index ad536ac..4112e5f 100644
--- a/modules/path/path.test
+++ b/modules/path/path.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for the path module
+ * Tests for path.module.
  */
 
 class PathTestCase extends DrupalWebTestCase {
diff --git a/modules/php/php.info b/modules/php/php.info
index d87b7ea..cf86362 100644
--- a/modules/php/php.info
+++ b/modules/php/php.info
@@ -1,4 +1,3 @@
-; $Id$
 name = PHP filter
 description = Allows embedded PHP code/snippets to be evaluated.
 package = Core
diff --git a/modules/php/php.install b/modules/php/php.install
index e37c56c..12944dd 100644
--- a/modules/php/php.install
+++ b/modules/php/php.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/php/php.module b/modules/php/php.module
index 08b8f7b..37bf9a1 100644
--- a/modules/php/php.module
+++ b/modules/php/php.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/php/php.test b/modules/php/php.test
index 10079d6..8ead2ac 100644
--- a/modules/php/php.test
+++ b/modules/php/php.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for php.module.
+ */
 
 /**
  * Base PHP test case class.
diff --git a/modules/poll/poll-bar--block.tpl.php b/modules/poll/poll-bar--block.tpl.php
index 6de5e77..3b91afc 100644
--- a/modules/poll/poll-bar--block.tpl.php
+++ b/modules/poll/poll-bar--block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/poll/poll-bar.tpl.php b/modules/poll/poll-bar.tpl.php
index 1907ba1..9426ff5 100644
--- a/modules/poll/poll-bar.tpl.php
+++ b/modules/poll/poll-bar.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/poll/poll-results--block.tpl.php b/modules/poll/poll-results--block.tpl.php
index a0598c4..f8387f5 100644
--- a/modules/poll/poll-results--block.tpl.php
+++ b/modules/poll/poll-results--block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 /**
  * @file
  * Default theme implementation to display the poll results in a block.
diff --git a/modules/poll/poll-results.tpl.php b/modules/poll/poll-results.tpl.php
index cf89768..5e14dec 100644
--- a/modules/poll/poll-results.tpl.php
+++ b/modules/poll/poll-results.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/poll/poll-rtl.css b/modules/poll/poll-rtl.css
index f81ef34..14d42e6 100644
--- a/modules/poll/poll-rtl.css
+++ b/modules/poll/poll-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .poll .bar .foreground {
   float: right;
diff --git a/modules/poll/poll-vote.tpl.php b/modules/poll/poll-vote.tpl.php
index 84ddaee..068ff7c 100644
--- a/modules/poll/poll-vote.tpl.php
+++ b/modules/poll/poll-vote.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/poll/poll.css b/modules/poll/poll.css
index a76cd19..8b04e38 100644
--- a/modules/poll/poll.css
+++ b/modules/poll/poll.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .poll {
   overflow: hidden;
diff --git a/modules/poll/poll.info b/modules/poll/poll.info
index 29bed4e..9297727 100644
--- a/modules/poll/poll.info
+++ b/modules/poll/poll.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Poll
 description = Allows your site to capture votes on different topics in the form of multiple choice questions.
 package = Core
diff --git a/modules/poll/poll.install b/modules/poll/poll.install
index 931fcfb..8c73cf4 100644
--- a/modules/poll/poll.install
+++ b/modules/poll/poll.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -197,3 +196,11 @@ function poll_update_7003() {
     'description' => 'The sort order of this choice among all choices for the same node.',
   ));
 }
+
+/**
+ * Update the database to match the schema.
+ */
+function poll_update_7004() {
+  // Remove field default.
+  db_change_field('poll_vote', 'chid', 'chid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE));
+}
diff --git a/modules/poll/poll.module b/modules/poll/poll.module
index 60d3645..f45b8bd 100644
--- a/modules/poll/poll.module
+++ b/modules/poll/poll.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -242,7 +241,7 @@ function poll_form($node, &$form_state) {
   $type = node_type_get_type($node);
 
   // The submit handlers to add more poll choices require that this form is
-  // cached, regardless of whether AJAX is used.
+  // cached, regardless of whether Ajax is used.
   $form_state['cache'] = TRUE;
 
   $form['title'] = array(
@@ -296,7 +295,7 @@ function poll_form($node, &$form_state) {
   }
 
   // We name our button 'poll_more' to avoid conflicts with other modules using
-  // AJAX-enabled buttons with the id 'more'.
+  // Ajax-enabled buttons with the id 'more'.
   $form['choice_wrapper']['poll_more'] = array(
     '#type' => 'submit',
     '#value' => t('More choices'),
@@ -362,7 +361,7 @@ function poll_form($node, &$form_state) {
  * return just the changed part of the form.
  */
 function poll_more_choices_submit($form, &$form_state) {
-  // If this is a AJAX POST, add 1, otherwise add 5 more choices to the form.
+  // If this is a Ajax POST, add 1, otherwise add 5 more choices to the form.
   if ($form_state['values']['poll_more']) {
     $n = $_GET['q'] == 'system/ajax' ? 1 : 5;
     $form_state['choice_count'] = count($form_state['values']['choice']) + $n;
diff --git a/modules/poll/poll.pages.inc b/modules/poll/poll.pages.inc
index c67f164..15f3ba7 100644
--- a/modules/poll/poll.pages.inc
+++ b/modules/poll/poll.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/poll/poll.test b/modules/poll/poll.test
index ba1a535..6fabf95 100644
--- a/modules/poll/poll.test
+++ b/modules/poll/poll.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for the poll module.
+ * Tests for poll.module.
  */
 
 class PollTestCase extends DrupalWebTestCase {
@@ -426,7 +425,7 @@ class PollJSAddChoice extends DrupalWebTestCase {
       'choice[new:1][chtext]' => $this->randomName(),
     );
 
-    // Press 'add choice' button through AJAX, and place the expected HTML result
+    // Press 'add choice' button through Ajax, and place the expected HTML result
     // as the tested content.
     $commands = $this->drupalPostAJAX(NULL, $edit, array('op' => t('More choices')));
     $this->content = $commands[1]['data'];
@@ -653,7 +652,7 @@ class PollTokenReplaceTestCase extends PollTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('node' => $poll), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized poll token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized poll token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -661,7 +660,7 @@ class PollTokenReplaceTestCase extends PollTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('node' => $poll), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized poll token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized poll token %token replaced.', array('%token' => $input)));
     }
   }
 }
diff --git a/modules/poll/poll.tokens.inc b/modules/poll/poll.tokens.inc
index 6d4b7f4..eda628b 100644
--- a/modules/poll/poll.tokens.inc
+++ b/modules/poll/poll.tokens.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile-block.tpl.php b/modules/profile/profile-block.tpl.php
index 6466e05..0bd8331 100644
--- a/modules/profile/profile-block.tpl.php
+++ b/modules/profile/profile-block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile-listing.tpl.php b/modules/profile/profile-listing.tpl.php
index cf8802d..d484ed2 100644
--- a/modules/profile/profile-listing.tpl.php
+++ b/modules/profile/profile-listing.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile-wrapper.tpl.php b/modules/profile/profile-wrapper.tpl.php
index 52de802..997ab98 100644
--- a/modules/profile/profile-wrapper.tpl.php
+++ b/modules/profile/profile-wrapper.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile.admin.inc b/modules/profile/profile.admin.inc
index 9c20d32..d6ac3c3 100644
--- a/modules/profile/profile.admin.inc
+++ b/modules/profile/profile.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile.css b/modules/profile/profile.css
index b64ef9c..c3132f9 100644
--- a/modules/profile/profile.css
+++ b/modules/profile/profile.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #profile-fields td.category {
   font-weight: bold;
diff --git a/modules/profile/profile.info b/modules/profile/profile.info
index c9711b2..e45f4c5 100644
--- a/modules/profile/profile.info
+++ b/modules/profile/profile.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Profile
 description = Supports configurable user profiles.
 package = Core
diff --git a/modules/profile/profile.install b/modules/profile/profile.install
index 31ac41e..5e4a17c 100644
--- a/modules/profile/profile.install
+++ b/modules/profile/profile.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile.js b/modules/profile/profile.js
index 1a268ed..f842aa0 100644
--- a/modules/profile/profile.js
+++ b/modules/profile/profile.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/profile/profile.module b/modules/profile/profile.module
index dab0f68..2374fe8 100644
--- a/modules/profile/profile.module
+++ b/modules/profile/profile.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile.pages.inc b/modules/profile/profile.pages.inc
index 039bc5d..06f9632 100644
--- a/modules/profile/profile.pages.inc
+++ b/modules/profile/profile.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile.test b/modules/profile/profile.test
index 3eb471f..83bed25 100644
--- a/modules/profile/profile.test
+++ b/modules/profile/profile.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for profile.module.
+ */
 
 /**
  * A class for common methods for testing profile fields.
diff --git a/modules/rdf/rdf.api.php b/modules/rdf/rdf.api.php
index dfad989..691f7ef 100644
--- a/modules/rdf/rdf.api.php
+++ b/modules/rdf/rdf.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/rdf/rdf.info b/modules/rdf/rdf.info
index 6a1e3a3..dd5c63b 100644
--- a/modules/rdf/rdf.info
+++ b/modules/rdf/rdf.info
@@ -1,4 +1,3 @@
-; $Id$
 name = RDF
 description = Enriches your content with metadata to let other applications (e.g. search engines, aggregators) better understand its relationships and attributes.
 package = Core
diff --git a/modules/rdf/rdf.install b/modules/rdf/rdf.install
index 0500f54..10d3f8d 100644
--- a/modules/rdf/rdf.install
+++ b/modules/rdf/rdf.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/rdf/rdf.module b/modules/rdf/rdf.module
index 2b532cd..ebecd42 100644
--- a/modules/rdf/rdf.module
+++ b/modules/rdf/rdf.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/rdf/rdf.test b/modules/rdf/rdf.test
index 0d20345..9f786ab 100644
--- a/modules/rdf/rdf.test
+++ b/modules/rdf/rdf.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for RDF functionality.
+ * Tests for rdf.module.
  */
 
 class RdfMappingHookTestCase extends DrupalWebTestCase {
diff --git a/modules/rdf/tests/rdf_test.info b/modules/rdf/tests/rdf_test.info
index e4418f4..b64e9a5 100644
--- a/modules/rdf/tests/rdf_test.info
+++ b/modules/rdf/tests/rdf_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "RDF module tests"
 description = "Support module for RDF module testing."
 package = Testing
diff --git a/modules/rdf/tests/rdf_test.install b/modules/rdf/tests/rdf_test.install
index 2498fe0..91a3392 100644
--- a/modules/rdf/tests/rdf_test.install
+++ b/modules/rdf/tests/rdf_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/rdf/tests/rdf_test.module b/modules/rdf/tests/rdf_test.module
index 0c8c3b2..c133a33 100644
--- a/modules/rdf/tests/rdf_test.module
+++ b/modules/rdf/tests/rdf_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search-block-form.tpl.php b/modules/search/search-block-form.tpl.php
index 002cc89..7844746 100644
--- a/modules/search/search-block-form.tpl.php
+++ b/modules/search/search-block-form.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search-result.tpl.php b/modules/search/search-result.tpl.php
index ee08ab3..30b321f 100644
--- a/modules/search/search-result.tpl.php
+++ b/modules/search/search-result.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search-results.tpl.php b/modules/search/search-results.tpl.php
index ec0f394..4de724b 100644
--- a/modules/search/search-results.tpl.php
+++ b/modules/search/search-results.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search-rtl.css b/modules/search/search-rtl.css
index 2c7c35c..da9e8d9 100644
--- a/modules/search/search-rtl.css
+++ b/modules/search/search-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .search-advanced .criterion {
   float: right;
diff --git a/modules/search/search.admin.inc b/modules/search/search.admin.inc
index d405809..afa02de 100644
--- a/modules/search/search.admin.inc
+++ b/modules/search/search.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -32,18 +31,12 @@ function search_reindex_confirm_submit(&$form, &$form_state) {
 function _search_get_module_names() {
 
   $search_info = search_get_info(TRUE);
-  $modules = db_select('system', 's')
-    ->fields('s', array('name', 'info'))
-    ->condition('s.status', 1)
-    ->condition('s.type', 'module')
-    ->condition('s.name', array_keys($search_info), 'IN')
-    ->orderBy('s.name')
-    ->execute();
+  $system_info = system_get_info('module');
   $names = array();
-  foreach ($modules as $item) {
-    $info = unserialize($item->info);
-    $names[$item->name] = $info['name'];
+  foreach ($search_info as $module => $info) {
+    $names[$module] = $system_info[$module]['name'];
   }
+  asort($names, SORT_STRING);
   return $names;
 }
 
@@ -115,19 +108,20 @@ function search_admin_settings($form) {
     '#type' => 'fieldset',
     '#title' => t('Active search modules ')
   );
+  $module_options = _search_get_module_names();
   $form['active']['search_active_modules'] = array(
     '#type' => 'checkboxes',
     '#title' => t('Active modules'),
     '#title_display' => 'invisible',
     '#default_value' => variable_get('search_active_modules', array('node', 'user')),
-    '#options' => _search_get_module_names(),
+    '#options' => $module_options,
     '#description' => t('Choose which search modules are active from the available modules.')
   );
   $form['active']['search_default_module'] = array(
     '#title' => t('Default search module'),
     '#type' => 'radios',
     '#default_value' => variable_get('search_default_module', 'node'),
-    '#options' => _search_get_module_names(),
+    '#options' => $module_options,
     '#description' => t('Choose which search module is the default.')
   );
   $form['#validate'][] = 'search_admin_settings_validate';
diff --git a/modules/search/search.api.php b/modules/search/search.api.php
index 87e9c5b..557a56e 100644
--- a/modules/search/search.api.php
+++ b/modules/search/search.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search.css b/modules/search/search.css
index 0801f26..ff7230f 100644
--- a/modules/search/search.css
+++ b/modules/search/search.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .search-form {
   margin-bottom: 1em;
diff --git a/modules/search/search.extender.inc b/modules/search/search.extender.inc
index 1b001f0..b7af4d0 100644
--- a/modules/search/search.extender.inc
+++ b/modules/search/search.extender.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search.info b/modules/search/search.info
index 8cbd7a5..77cab05 100644
--- a/modules/search/search.info
+++ b/modules/search/search.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Search
 description = Enables site-wide keyword searching.
 package = Core
diff --git a/modules/search/search.install b/modules/search/search.install
index de87008..f0113b3 100644
--- a/modules/search/search.install
+++ b/modules/search/search.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search.module b/modules/search/search.module
index 51db869..518272a 100644
--- a/modules/search/search.module
+++ b/modules/search/search.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -1005,7 +1004,6 @@ function search_form($form, &$form_state, $action = '', $keys = '', $module = NU
  *
  * @ingroup forms
  * @see search_box_form_submit()
- * @see search-theme-form.tpl.php
  * @see search-block-form.tpl.php
  */
 function search_box($form, &$form_state, $form_id) {
diff --git a/modules/search/search.pages.inc b/modules/search/search.pages.inc
index f796f6d..833ea8b 100644
--- a/modules/search/search.pages.inc
+++ b/modules/search/search.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search.test b/modules/search/search.test
index 589aa55..4d37133 100644
--- a/modules/search/search.test
+++ b/modules/search/search.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for search.module.
+ */
 
 // The search index can contain different types of content. Typically the type is 'node'.
 // Here we test with _test_ and _test2_ as the type.
diff --git a/modules/search/tests/search_embedded_form.info b/modules/search/tests/search_embedded_form.info
index f0752a2..02e4c1f 100644
--- a/modules/search/tests/search_embedded_form.info
+++ b/modules/search/tests/search_embedded_form.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Search embedded form"
 description = "Support module for search module testing of embedded forms."
 package = Testing
diff --git a/modules/search/tests/search_embedded_form.module b/modules/search/tests/search_embedded_form.module
index d80fa17..c0058f7 100644
--- a/modules/search/tests/search_embedded_form.module
+++ b/modules/search/tests/search_embedded_form.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/tests/search_extra_type.info b/modules/search/tests/search_extra_type.info
index e87a065..5c3293c 100644
--- a/modules/search/tests/search_extra_type.info
+++ b/modules/search/tests/search_extra_type.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Test search type"
 description = "Support module for search module testing."
 package = Testing
diff --git a/modules/search/tests/search_extra_type.module b/modules/search/tests/search_extra_type.module
index 8dcab4f..80c050c 100644
--- a/modules/search/tests/search_extra_type.module
+++ b/modules/search/tests/search_extra_type.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/shortcut/shortcut-rtl.css b/modules/shortcut/shortcut-rtl.css
new file mode 100644
index 0000000..4a37927
--- /dev/null
+++ b/modules/shortcut/shortcut-rtl.css
@@ -0,0 +1,47 @@
+
+div#toolbar a#edit-shortcuts {
+  position: absolute;
+  left: 0;
+  top: 0;
+  padding: 5px 5px 5px 10px;
+}
+div#toolbar div.toolbar-shortcuts ul {
+  float: none;
+  margin-right: 5px;
+  margin-left: 10em;
+}
+div#toolbar div.toolbar-shortcuts ul li a {
+  margin-left: 5px;
+  margin-right: 0;
+  padding: 0 5px;
+}
+div#toolbar div.toolbar-shortcuts span.icon {
+  float: right;
+}
+div.add-or-remove-shortcuts a span.icon {
+  float: right;
+  margin-right: 8px;
+  margin-left: 0;
+}
+div.add-or-remove-shortcuts a span.text {
+  float: right;
+  padding-right: 10px;
+  padding-left: 0;
+}
+div.add-or-remove-shortcuts a:hover span.text {
+  -moz-border-radius: 5px 0 0 5px;
+  -webkit-border-top-left-radius: 5px;
+  -webkit-border-bottom-left-radius: 5px;
+  border-radius: 5px 0 0 5px;
+  padding-left: 6px;
+}
+#shortcut-set-switch .form-item-new {
+  padding-right: 17px;
+  padding-left: 0;
+}
+div.add-shortcut a:hover span.icon {
+  background-position: 0 -24px;
+}
+div.remove-shortcut a:hover span.icon {
+  background-position: -12px -24px;
+}
diff --git a/modules/shortcut/shortcut.admin.css b/modules/shortcut/shortcut.admin.css
index 3670da0..8ca03be 100644
--- a/modules/shortcut/shortcut.admin.css
+++ b/modules/shortcut/shortcut.admin.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .shortcut-slot-hidden {
   display: none;
diff --git a/modules/shortcut/shortcut.admin.inc b/modules/shortcut/shortcut.admin.inc
index dc9632d..9735d37 100644
--- a/modules/shortcut/shortcut.admin.inc
+++ b/modules/shortcut/shortcut.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/shortcut/shortcut.admin.js b/modules/shortcut/shortcut.admin.js
index e1c1675..5e71e6f 100644
--- a/modules/shortcut/shortcut.admin.js
+++ b/modules/shortcut/shortcut.admin.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/shortcut/shortcut.api.php b/modules/shortcut/shortcut.api.php
index afdc747..717a7c9 100644
--- a/modules/shortcut/shortcut.api.php
+++ b/modules/shortcut/shortcut.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/shortcut/shortcut.css b/modules/shortcut/shortcut.css
index a0d8204..3afcb94 100644
--- a/modules/shortcut/shortcut.css
+++ b/modules/shortcut/shortcut.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 div#toolbar a#edit-shortcuts {
   float: right;
   padding: 5px 10px 5px 5px;
@@ -16,13 +15,13 @@ div#toolbar div.toolbar-shortcuts ul {
   padding: 5px 0 2px 0;
   height: 28px;
   line-height: 24px;
-  float: left;
-  margin-left:5px;
+  float: left; /* LTR */
+  margin-left:5px; /* LTR */
 }
 
 div#toolbar div.toolbar-shortcuts ul li a {
   padding: 0 5px 0 5px;
-  margin-right: 5px;
+  margin-right: 5px; /* LTR */
   -moz-border-radius: 5px;
   -webkit-border-radius: 5px;
   border-radius: 5px;
@@ -40,11 +39,11 @@ div#toolbar div.toolbar-shortcuts ul li a.active {
 }
 
 div#toolbar div.toolbar-shortcuts span.icon {
-  float: left;
+  float: left; /* LTR */
   background: #444;
   width: 30px;
   height: 30px;
-  margin-right: 5px;
+  margin-right: 5px; /* LTR */
   -moz-border-radius: 5px;
   -webkit-border-radius: 5px;
   border-radius: 5px;
@@ -88,14 +87,12 @@ div.add-or-remove-shortcuts a:hover span.text {
   color: #fff;
   background-color: #5f605b;
   display: block;
-  padding-right: 6px;
+  padding-right: 6px; /* LTR */
   cursor: pointer;
-  -moz-border-radius-bottomright: 5px;
-  -moz-border-radius-topright: 5px;
-  -webkit-border-bottom-right-radius: 5px;
-  -webkit-border-top-right-radius: 5px;
-  border-bottom-right-radius: 5px;
-  border-top-right-radius: 5px;
+  -moz-border-radius: 0 5px 5px 0; /* LTR */
+  -webkit-border-top-right-radius: 5px; /* LTR */
+  -webkit-border-bottom-right-radius: 5px; /* LTR */
+  border-radius: 0 5px 5px 0; /* LTR */
 }
 
 #shortcut-set-switch .form-type-radios {
@@ -105,5 +102,5 @@ div.add-or-remove-shortcuts a:hover span.text {
 
 #shortcut-set-switch .form-item-new {
   padding-top: 0;
-  padding-left: 17px;
+  padding-left: 17px; /* LTR */
 }
diff --git a/modules/shortcut/shortcut.info b/modules/shortcut/shortcut.info
index bea9d5a..8132b3c 100644
--- a/modules/shortcut/shortcut.info
+++ b/modules/shortcut/shortcut.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Shortcut
 description = Allows users to manage customizable lists of shortcut links.
 package = Core
diff --git a/modules/shortcut/shortcut.install b/modules/shortcut/shortcut.install
index ae23d50..209a907 100644
--- a/modules/shortcut/shortcut.install
+++ b/modules/shortcut/shortcut.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/shortcut/shortcut.module b/modules/shortcut/shortcut.module
index 348c6f7..d2ac72b 100644
--- a/modules/shortcut/shortcut.module
+++ b/modules/shortcut/shortcut.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/shortcut/shortcut.png b/modules/shortcut/shortcut.png
index 1d9567398e8a9825153bb464db6440b8a7bb1244..2924557bfaab7bee329231c8bd3d821a32b9e031 100644
GIT binary patch
delta 520
zcmV+j0{8u}1Fi&+7aAl80{{R3q!9`n00004XF*Lt006O$eEU(8ks%#_`T6<(|NsC0
z|NsC0|NsC0|No_>quJWn;o;!d*w**>_uJdr+1c2orJ{a*eusyLPEJm2Y-}4F8%Rh<
zy}i9fMMV-45_oucw6wIz$;qXqr5G3(qobg3acsA@w=FF#v9YoH`}^bL;$viA6%`dr
zOG^U-17BcU|Ns90000Mne88>%000eiQchC<2GVSA8^HO)&&K)lHf5uQ0003kNkl<Z
zD9>GzS&oA+5JcP95JDy!+4qGIcF6rtH+E+%m#03^gO*y=PY{ui(PR=yLF98dew;7O
zu^5Lwi(voZYyyEyvd}OL`jJa!PA(~a+d&&MbK00jo&Id{X(q^jIQT)P#H~saw<;lZ
zvxAdj=A4wSdu8mlrmkasRFJpN!|oo0KI;=zGz_s4|JnE{%SBfAz0cOq{MCEx{8TkE
zy2`*+hOTDdYKBTmWE?D!(NzkrQgpQjS8H%(>N<9QDsv$4pP$wAtHg2N*V&>h`Cme&
z{xvU-&E@>i{}M7|)z#)(WFH7*%5qz`kj$Jy(yX<Ecg)Or$5b{}LpMUECA=V0>Q*JG
zTb0oIWCu6J%(*FDciS;vO<l+OsOr8uJli}7JvJJqt6_+g@c9=w)ot0@v|Et?0000<
KMNUMnLSTX+Lj#Tg

delta 375
zcmV--0f_#t1h4~;7YY~%0{{R3*Qw3Qkue>SNELryU|VBkU;F#}<KyC^qo8ncY!ww1
z0|Nuw+u8sC0NL8ux3{-NMMV-461}~>czAfRv9W%Bex;?NrKP1yOH0|=*hol7;o;!d
z*w(bPwD<V;Y;0_Yhldy#7%eR=8yg!=PEN_m$)%;EDQUR10000DbW%=J00z=*ZyUh*
z!})*4&+}?Im5l%Z0KZ8@K~#8NUC>94!!Qs;(PmJvY$`|RoYVbJXR<MZO4AGC0R?dJ
ziAX3v2z({zpS|gBz9^6DsW-New}x*c1)9{_!WjE>%GrWV;j<t1p|b^>CRJnjnleD+
zFhf%`d=)ucut{I~VX2)h*d*kNS>2^T6M0{<+dp3KkMz)-LHovpTKqHjNz-$l#4&p4
zb1Gsqw8|1Rw#uPZj;&f~)nbwqjl&g<t!ijhW2-H++Cr-=K@WYhB1ZRp4quxA{R7@q
VD6gR>Wpn@l002ovPDHLkV1n73u(|*M

diff --git a/modules/shortcut/shortcut.test b/modules/shortcut/shortcut.test
index 3c5a4f3..e37e1e5 100644
--- a/modules/shortcut/shortcut.test
+++ b/modules/shortcut/shortcut.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for the shortcut module.
+ * Tests for shortcut.module.
  */
 
 /**
diff --git a/modules/simpletest/drupal_web_test_case.php b/modules/simpletest/drupal_web_test_case.php
index fa9917d..b60c682 100644
--- a/modules/simpletest/drupal_web_test_case.php
+++ b/modules/simpletest/drupal_web_test_case.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Global variable that holds information about the tests being run.
@@ -1152,7 +1151,7 @@ class DrupalWebTestCase extends DrupalTestCase {
    * If a user is already logged in, then the current user is logged out before
    * logging in the specified user.
    *
-   * Please note that neither the global $user nor the passed in user object is
+   * Please note that neither the global $user nor the passed-in user object is
    * populated with data of the logged in user. If you need full access to the
    * user object after logging in, it must be updated manually. If you also need
    * access to the plain-text password of the user (set by drupalCreateUser()),
@@ -1769,17 +1768,17 @@ class DrupalWebTestCase extends DrupalTestCase {
    *   button with the value t('Delete'), and execute different code depending
    *   on which one is clicked.
    *
-   *   This function can also be called to emulate an AJAX submission. In this
+   *   This function can also be called to emulate an Ajax submission. In this
    *   case, this value needs to be an array with the following keys:
-   *   - path: A path to submit the form values to for AJAX-specific processing,
+   *   - path: A path to submit the form values to for Ajax-specific processing,
    *     which is likely different than the $path parameter used for retrieving
    *     the initial form. Defaults to 'system/ajax'.
    *   - triggering_element: If the value for the 'path' key is 'system/ajax' or
-   *     another generic AJAX processing path, this needs to be set to the name
+   *     another generic Ajax processing path, this needs to be set to the name
    *     of the element. If the name doesn't identify the element uniquely, then
    *     this should instead be an array with a single key/value pair,
    *     corresponding to the element name and value. The callback for the
-   *     generic AJAX processing path uses this to find the #ajax information
+   *     generic Ajax processing path uses this to find the #ajax information
    *     for the element, including which specific callback to use for
    *     processing the request.
    *
@@ -1829,7 +1828,7 @@ class DrupalWebTestCase extends DrupalTestCase {
         $action = isset($form['action']) ? $this->getAbsoluteUrl((string) $form['action']) : $this->getUrl();
         if ($ajax) {
           $action = $this->getAbsoluteUrl(!empty($submit['path']) ? $submit['path'] : 'system/ajax');
-          // AJAX callbacks verify the triggering element if necessary, so while
+          // Ajax callbacks verify the triggering element if necessary, so while
           // we may eventually want extra code that verifies it in the
           // handleForm() function, it's not currently a requirement.
           $submit_matches = TRUE;
@@ -1886,12 +1885,45 @@ class DrupalWebTestCase extends DrupalTestCase {
   }
 
   /**
-   * Execute an AJAX submission.
+   * Execute an Ajax submission.
    *
    * This executes a POST as ajax.js does. It uses the returned JSON data, an
    * array of commands, to update $this->content using equivalent DOM
    * manipulation as is used by ajax.js. It also returns the array of commands.
    *
+   * @param $path
+   *   Location of the form containing the Ajax enabled element to test. Can be
+   *   either a Drupal path or an absolute path or NULL to use the current page.
+   * @param $edit
+   *   Field data in an associative array. Changes the current input fields
+   *   (where possible) to the values indicated.
+   * @param $triggering_element
+   *   The name of the form element that is responsible for triggering the Ajax
+   *   functionality to test. May be a string or, if the triggering element is
+   *   a button, an associative array where the key is the name of the button
+   *   and the value is the button label. i.e.) array('op' => t('Refresh')).
+   * @param $ajax_path
+   *   (optional) Override the path set by the Ajax settings of the triggering
+   *   element. In the absence of both the triggering element's Ajax path and
+   *   $ajax_path 'system/ajax' will be used.
+   * @param $options
+   *   (optional) Options to be forwarded to url().
+   * @param $headers
+   *   (optional) An array containing additional HTTP request headers, each
+   *   formatted as "name: value". Forwarded to drupalPost().
+   * @param $form_html_id
+   *   (optional) HTML ID of the form to be submitted, use when there is more
+   *   than one identical form on the same page and the value of the triggering
+   *   element is not enough to identify the form. Note this is not the Drupal
+   *   ID of the form but rather the HTML ID of the form.
+   * @param $ajax_settings
+   *   (optional) An array of Ajax settings which if specified will be used in
+   *   place of the Ajax settings of the triggering element.
+   *
+   * @return
+   *   An array of Ajax commands.
+   *
+   * @see drupalPost()
    * @see ajax.js
    */
   protected function drupalPostAJAX($path, $edit, $triggering_element, $ajax_path = NULL, array $options = array(), array $headers = array(), $form_html_id = NULL, $ajax_settings = NULL) {
@@ -1903,7 +1935,7 @@ class DrupalWebTestCase extends DrupalTestCase {
     $content = $this->content;
     $drupal_settings = $this->drupalSettings;
 
-    // Get the AJAX settings bound to the triggering element.
+    // Get the Ajax settings bound to the triggering element.
     if (!isset($ajax_settings)) {
       if (is_array($triggering_element)) {
         $xpath = '//*[@name="' . key($triggering_element) . '" and @value="' . current($triggering_element) . '"]';
@@ -1932,7 +1964,7 @@ class DrupalWebTestCase extends DrupalTestCase {
     }
 
     // Unless a particular path is specified, use the one specified by the
-    // AJAX settings, or else 'system/ajax'.
+    // Ajax settings, or else 'system/ajax'.
     if (!isset($ajax_path)) {
       $ajax_path = isset($ajax_settings['url']) ? $ajax_settings['url'] : 'system/ajax';
     }
diff --git a/modules/simpletest/files/README.txt b/modules/simpletest/files/README.txt
index 1ada14e..c8f39ad 100644
--- a/modules/simpletest/files/README.txt
+++ b/modules/simpletest/files/README.txt
@@ -1,4 +1,3 @@
-$Id$
 
 These files are use in some tests that upload files or other operations were
 a file is useful. These files are copied to the files directory as specified
diff --git a/modules/simpletest/files/css_test_files/css_input_without_import.css b/modules/simpletest/files/css_test_files/css_input_without_import.css
index 49eb1ee..620360a 100644
--- a/modules/simpletest/files/css_test_files/css_input_without_import.css
+++ b/modules/simpletest/files/css_test_files/css_input_without_import.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file Basic css that does not use import
diff --git a/modules/simpletest/files/css_test_files/css_input_without_import.css.unoptimized.css b/modules/simpletest/files/css_test_files/css_input_without_import.css.unoptimized.css
index 49eb1ee..620360a 100644
--- a/modules/simpletest/files/css_test_files/css_input_without_import.css.unoptimized.css
+++ b/modules/simpletest/files/css_test_files/css_input_without_import.css.unoptimized.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file Basic css that does not use import
diff --git a/modules/simpletest/simpletest.api.php b/modules/simpletest/simpletest.api.php
index c3507c9..04c080b 100644
--- a/modules/simpletest/simpletest.api.php
+++ b/modules/simpletest/simpletest.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/simpletest.css b/modules/simpletest/simpletest.css
index b37ef48..0cf9aaa 100644
--- a/modules/simpletest/simpletest.css
+++ b/modules/simpletest/simpletest.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* Test Table */
 #simpletest-form-table th.select-all {
diff --git a/modules/simpletest/simpletest.info b/modules/simpletest/simpletest.info
index 732c707..26647b7 100644
--- a/modules/simpletest/simpletest.info
+++ b/modules/simpletest/simpletest.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Testing
 description = Provides a framework for unit and functional testing.
 package = Core
@@ -33,6 +32,7 @@ files[] = tests/path.test
 files[] = tests/registry.test
 files[] = tests/schema.test
 files[] = tests/session.test
+files[] = tests/tablesort.test
 files[] = tests/theme.test
 files[] = tests/unicode.test
 files[] = tests/update.test
@@ -40,6 +40,7 @@ files[] = tests/xmlrpc.test
 files[] = tests/upgrade/upgrade.test
 files[] = tests/upgrade/upgrade.comment.test
 files[] = tests/upgrade/upgrade.filter.test
+files[] = tests/upgrade/upgrade.forum.test
 files[] = tests/upgrade/upgrade.node.test
 files[] = tests/upgrade/upgrade.taxonomy.test
 files[] = tests/upgrade/upgrade.upload.test
diff --git a/modules/simpletest/simpletest.install b/modules/simpletest/simpletest.install
index 3da8bcd..0f017e7 100644
--- a/modules/simpletest/simpletest.install
+++ b/modules/simpletest/simpletest.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -46,7 +45,7 @@ function simpletest_requirements($phase) {
   );
   if (!$has_domdocument) {
     $requirements['php_domdocument']['severity'] = REQUIREMENT_ERROR;
-    $requirements['php_domdocument']['description'] =t('The testing framework requires the DOMDocument class to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', array('@link-phpinfo' => url('admin/reports/status/php')));
+    $requirements['php_domdocument']['description'] = $t('The testing framework requires the DOMDocument class to be available. Check the configure command at the <a href="@link-phpinfo">PHP info page</a>.', array('@link-phpinfo' => url('admin/reports/status/php')));
   }
 
   // SimpleTest currently needs 2 cURL options which are incompatible with
@@ -58,7 +57,7 @@ function simpletest_requirements($phase) {
   );
   if ($open_basedir) {
     $requirements['php_open_basedir']['severity'] = REQUIREMENT_ERROR;
-    $requirements['php_open_basedir']['description'] = t('The testing framework requires the PHP <a href="@open_basedir-url">open_basedir</a> restriction to be disabled. Check your webserver configuration or contact your web host.', array('@open_basedir-url' => 'http://php.net/manual/en/ini.core.php#ini.open-basedir'));
+    $requirements['php_open_basedir']['description'] = $t('The testing framework requires the PHP <a href="@open_basedir-url">open_basedir</a> restriction to be disabled. Check your webserver configuration or contact your web host.', array('@open_basedir-url' => 'http://php.net/manual/en/ini.core.php#ini.open-basedir'));
   }
 
   // Check the current memory limit. If it is set too low, SimpleTest will fail
@@ -66,7 +65,7 @@ function simpletest_requirements($phase) {
   $memory_limit = ini_get('memory_limit');
   if ($memory_limit && $memory_limit != -1 && parse_size($memory_limit) < parse_size(SIMPLETEST_MINIMUM_PHP_MEMORY_LIMIT)) {
     $requirements['php_memory_limit']['severity'] = REQUIREMENT_ERROR;
-    $requirements['php_memory_limit']['description'] = t('The testing framework requires the PHP memory limit to be at least %memory_minimum_limit. The current value is %memory_limit. <a href="@url">Follow these steps to continue</a>.', array('%memory_limit' => $memory_limit, '%memory_minimum_limit' => SIMPLETEST_MINIMUM_PHP_MEMORY_LIMIT, '@url' => 'http://drupal.org/node/207036'));
+    $requirements['php_memory_limit']['description'] = $t('The testing framework requires the PHP memory limit to be at least %memory_minimum_limit. The current value is %memory_limit. <a href="@url">Follow these steps to continue</a>.', array('%memory_limit' => $memory_limit, '%memory_minimum_limit' => SIMPLETEST_MINIMUM_PHP_MEMORY_LIMIT, '@url' => 'http://drupal.org/node/207036'));
   }
 
   return $requirements;
diff --git a/modules/simpletest/simpletest.js b/modules/simpletest/simpletest.js
index dc11cfc..c33ef98 100644
--- a/modules/simpletest/simpletest.js
+++ b/modules/simpletest/simpletest.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/simpletest/simpletest.module b/modules/simpletest/simpletest.module
index b897c0e..b992fd2 100644
--- a/modules/simpletest/simpletest.module
+++ b/modules/simpletest/simpletest.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/simpletest.pages.inc b/modules/simpletest/simpletest.pages.inc
index 983a12d..31d0b2c 100644
--- a/modules/simpletest/simpletest.pages.inc
+++ b/modules/simpletest/simpletest.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -83,8 +82,8 @@ function theme_simpletest_test_table($variables) {
   // Define the images used to expand/collapse the test groups.
   $js = array(
     'images' => array(
-      theme('image', array('path' => 'misc/menu-collapsed.png', 'alt' => t('Expand'), 'title' => t('Expand'))) . ' <a href="#" class="simpletest-collapse">(' . t('Expand') . ')</a>',
-      theme('image', array('path' => 'misc/menu-expanded.png', 'alt' => t('Collapse'), 'title' => t('Collapse'))) . ' <a href="#" class="simpletest-collapse">(' . t('Collapse') . ')</a>',
+      theme('image', array('path' => 'misc/menu-collapsed.png', 'width' => 7, 'height' => 7, 'alt' => t('Expand'), 'title' => t('Expand'))) . ' <a href="#" class="simpletest-collapse">(' . t('Expand') . ')</a>',
+      theme('image', array('path' => 'misc/menu-expanded.png', 'width' => 7, 'height' => 7, 'alt' => t('Collapse'), 'title' => t('Collapse'))) . ' <a href="#" class="simpletest-collapse">(' . t('Collapse') . ')</a>',
     ),
   );
 
@@ -427,10 +426,10 @@ function simpletest_result_status_image($status) {
 
   if (!isset($map)) {
     $map = array(
-      'pass' => theme('image', array('path' => 'misc/watchdog-ok.png', 'alt' => t('Pass'))),
-      'fail' => theme('image', array('path' => 'misc/watchdog-error.png', 'alt' => t('Fail'))),
-      'exception' => theme('image', array('path' => 'misc/watchdog-warning.png', 'alt' => t('Exception'))),
-      'debug' => theme('image', array('path' => 'misc/watchdog-warning.png', 'alt' => t('Debug'))),
+      'pass' => theme('image', array('path' => 'misc/watchdog-ok.png', 'width' => 18, 'height' => 18, 'alt' => t('Pass'))),
+      'fail' => theme('image', array('path' => 'misc/watchdog-error.png', 'width' => 18, 'height' => 18, 'alt' => t('Fail'))),
+      'exception' => theme('image', array('path' => 'misc/watchdog-warning.png', 'width' => 18, 'height' => 18, 'alt' => t('Exception'))),
+      'debug' => theme('image', array('path' => 'misc/watchdog-warning.png', 'width' => 18, 'height' => 18, 'alt' => t('Debug'))),
     );
   }
   if (isset($map[$status])) {
diff --git a/modules/simpletest/simpletest.test b/modules/simpletest/simpletest.test
index 469d2c1..f516364 100644
--- a/modules/simpletest/simpletest.test
+++ b/modules/simpletest/simpletest.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for simpletest.module.
+ */
 
 class SimpleTestFunctionalTest extends DrupalWebTestCase {
   /**
diff --git a/modules/simpletest/tests/actions.test b/modules/simpletest/tests/actions.test
index 8e0220d..23587f0 100644
--- a/modules/simpletest/tests/actions.test
+++ b/modules/simpletest/tests/actions.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 class ActionsConfigurationTestCase extends DrupalWebTestCase {
   public static function getInfo() {
diff --git a/modules/simpletest/tests/actions_loop_test.info b/modules/simpletest/tests/actions_loop_test.info
index ca33145..4350d3d 100644
--- a/modules/simpletest/tests/actions_loop_test.info
+++ b/modules/simpletest/tests/actions_loop_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Actions loop test
 description = Support module for action loop testing.
 package = Testing
diff --git a/modules/simpletest/tests/actions_loop_test.install b/modules/simpletest/tests/actions_loop_test.install
index b0cd667..b22fd85 100644
--- a/modules/simpletest/tests/actions_loop_test.install
+++ b/modules/simpletest/tests/actions_loop_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_install().
diff --git a/modules/simpletest/tests/actions_loop_test.module b/modules/simpletest/tests/actions_loop_test.module
index 9c966c3..7776490 100644
--- a/modules/simpletest/tests/actions_loop_test.module
+++ b/modules/simpletest/tests/actions_loop_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_trigger_info().
diff --git a/modules/simpletest/tests/ajax.test b/modules/simpletest/tests/ajax.test
index 2a24693..9579792 100644
--- a/modules/simpletest/tests/ajax.test
+++ b/modules/simpletest/tests/ajax.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 class AJAXTestCase extends DrupalWebTestCase {
   function setUp() {
@@ -11,9 +10,9 @@ class AJAXTestCase extends DrupalWebTestCase {
   }
 
   /**
-   * Assert that a command with the required properties exists within the array of AJAX commands returned by the server.
+   * Assert that a command with the required properties exists within the array of Ajax commands returned by the server.
    *
-   * The AJAX framework, via the ajax_deliver() and ajax_render() functions,
+   * The Ajax framework, via the ajax_deliver() and ajax_render() functions,
    * returns an array of commands. This array sometimes includes commands
    * automatically provided by the framework in addition to commands returned by
    * a particular page callback. During testing, we're usually interested that a
@@ -28,7 +27,7 @@ class AJAXTestCase extends DrupalWebTestCase {
    * additional settings that aren't part of $needle.
    *
    * @param $haystack
-   *   An array of AJAX commands returned by the server.
+   *   An array of Ajax commands returned by the server.
    * @param $needle
    *   Array of info we're expecting in one of those commands.
    * @param $message
@@ -56,7 +55,7 @@ class AJAXTestCase extends DrupalWebTestCase {
 }
 
 /**
- * Tests primary AJAX framework functions.
+ * Tests primary Ajax framework functions.
  */
 class AJAXFrameworkTestCase extends AJAXTestCase {
   protected $profile = 'testing';
@@ -87,7 +86,7 @@ class AJAXFrameworkTestCase extends AJAXTestCase {
     );
     $this->assertCommand($commands, $expected, t('ajax_render() loads settings added with drupal_add_js().'));
 
-    // Verify that AJAX settings are loaded for #type 'link'.
+    // Verify that Ajax settings are loaded for #type 'link'.
     $this->drupalGet('ajax-test/link');
     $settings = $this->drupalGetSettings();
     $this->assertEqual($settings['ajax']['ajax-link']['url'], url('filter/tips'));
@@ -120,7 +119,7 @@ class AJAXFrameworkTestCase extends AJAXTestCase {
 }
 
 /**
- * Tests AJAX framework commands.
+ * Tests Ajax framework commands.
  */
 class AJAXCommandsTestCase extends AJAXTestCase {
   public static function getInfo() {
@@ -132,7 +131,7 @@ class AJAXCommandsTestCase extends AJAXTestCase {
   }
 
   /**
-   * Test the various AJAX Commands.
+   * Test the various Ajax Commands.
    */
   function testAJAXCommands() {
     $form_path = 'ajax_forms_test_ajax_commands_form';
@@ -324,7 +323,7 @@ class AJAXFormValuesTestCase extends AJAXTestCase {
 }
 
 /**
- * Tests that AJAX-enabled forms work when multiple instances of the same form are on a page.
+ * Tests that Ajax-enabled forms work when multiple instances of the same form are on a page.
  */
 class AJAXMultiFormTestCase extends AJAXTestCase {
   public static function getInfo() {
@@ -338,7 +337,7 @@ class AJAXMultiFormTestCase extends AJAXTestCase {
   function setUp() {
     parent::setUp(array('form_test'));
 
-    // Create a multi-valued field for 'page' nodes to use for AJAX testing.
+    // Create a multi-valued field for 'page' nodes to use for Ajax testing.
     $field_name = 'field_ajax_test';
     $field = array(
       'field_name' => $field_name,
@@ -363,7 +362,7 @@ class AJAXMultiFormTestCase extends AJAXTestCase {
    */
   function testMultiForm() {
     // HTML IDs for elements within the field are potentially modified with
-    // each AJAX submission, but these variables are stable and help target the
+    // each Ajax submission, but these variables are stable and help target the
     // desired elements.
     $field_name = 'field_ajax_test';
     $field_xpaths = array(
@@ -399,7 +398,7 @@ class AJAXMultiFormTestCase extends AJAXTestCase {
 }
 
 /**
- * Miscellaneous AJAX tests using ajax_test module.
+ * Miscellaneous Ajax tests using ajax_test module.
  */
 class AJAXElementValidation extends AJAXTestCase {
   public static function getInfo() {
@@ -411,12 +410,12 @@ class AJAXElementValidation extends AJAXTestCase {
   }
 
   /**
-   * Try to post an AJAX change to a form that has a validated element.
+   * Try to post an Ajax change to a form that has a validated element.
    *
-   * The drivertext field is AJAX-enabled. An additional field is not, but
+   * The drivertext field is Ajax-enabled. An additional field is not, but
    * is set to be a required field. In this test the required field is not
    * filled in, and we want to see if the activation of the "drivertext"
-   * AJAX-enabled field fails due to the required field being empty.
+   * Ajax-enabled field fails due to the required field being empty.
    */
   function testAJAXElementValidation() {
     $web_user = $this->drupalCreateUser();
diff --git a/modules/simpletest/tests/ajax_forms_test.info b/modules/simpletest/tests/ajax_forms_test.info
index d682bfa..c1d7dd4 100644
--- a/modules/simpletest/tests/ajax_forms_test.info
+++ b/modules/simpletest/tests/ajax_forms_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "AJAX form test mock module"
 description = "Test for AJAX form calls."
 core = 7.x
diff --git a/modules/simpletest/tests/ajax_forms_test.module b/modules/simpletest/tests/ajax_forms_test.module
index 21784df..d38cbbb 100644
--- a/modules/simpletest/tests/ajax_forms_test.module
+++ b/modules/simpletest/tests/ajax_forms_test.module
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Simpletest mock module for AJAX forms testing.
+ * Simpletest mock module for Ajax forms testing.
  */
 
 /**
@@ -67,7 +66,7 @@ function ajax_forms_test_simple_form($form, &$form_state) {
 }
 
 /**
- * AJAX callback triggered by select.
+ * Ajax callback triggered by select.
  */
 function ajax_forms_test_simple_form_select_callback($form, $form_state) {
   $commands = array();
@@ -77,7 +76,7 @@ function ajax_forms_test_simple_form_select_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback triggered by checkbox.
+ * Ajax callback triggered by checkbox.
  */
 function ajax_forms_test_simple_form_checkbox_callback($form, $form_state) {
   $commands = array();
@@ -88,7 +87,7 @@ function ajax_forms_test_simple_form_checkbox_callback($form, $form_state) {
 
 
 /**
- * Form to display the AJAX Commands.
+ * Form to display the Ajax Commands.
  * @param $form
  * @param $form_state
  * @return unknown_type
@@ -154,7 +153,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
     ),
   );
 
-  // Shows the AJAX 'css' command.
+  // Shows the Ajax 'css' command.
   $form['css_command_example'] = array(
     '#value' => t("Set the the '#box' div to be blue."),
     '#type' => 'submit',
@@ -165,7 +164,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
   );
 
 
-  // Shows the AJAX 'data' command. But there is no use of this information,
+  // Shows the Ajax 'data' command. But there is no use of this information,
   // as this would require a javascript client to use the data.
   $form['data_command_example'] = array(
     '#value' => t("AJAX data command: Issue command."),
@@ -176,7 +175,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
     '#suffix' => '<div id="data_div">Data attached to this div.</div>',
   );
 
-  // Shows the AJAX 'invoke' command.
+  // Shows the Ajax 'invoke' command.
   $form['invoke_command_example'] = array(
     '#value' => t("AJAX invoke command: Invoke addClass() method."),
     '#type' => 'submit',
@@ -186,7 +185,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
     '#suffix' => '<div id="invoke_div">Original contents</div>',
   );
 
-  // Shows the AJAX 'html' command.
+  // Shows the Ajax 'html' command.
   $form['html_command_example'] = array(
     '#value' => t("AJAX html: Replace the HTML in a selector."),
     '#type' => 'submit',
@@ -196,7 +195,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
     '#suffix' => '<div id="html_div">Original contents</div>',
   );
 
-  // Shows the AJAX 'insert' command.
+  // Shows the Ajax 'insert' command.
   $form['insert_command_example'] = array(
     '#value' => t("AJAX insert: Let client insert based on #ajax['method']."),
     '#type' => 'submit',
@@ -207,7 +206,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
     '#suffix' => '<div id="insert_div">Original contents</div>',
   );
 
-  // Shows the AJAX 'prepend' command.
+  // Shows the Ajax 'prepend' command.
   $form['prepend_command_example'] = array(
     '#value' => t("AJAX 'prepend': Click to prepend something"),
     '#type' => 'submit',
@@ -217,7 +216,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
     '#suffix' => '<div id="prepend_div">Something will be prepended to this div. </div>',
   );
 
-  // Shows the AJAX 'remove' command.
+  // Shows the Ajax 'remove' command.
   $form['remove_command_example'] = array(
     '#value' => t("AJAX 'remove': Click to remove text"),
     '#type' => 'submit',
@@ -227,7 +226,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
     '#suffix' => '<div id="remove_div"><div id="remove_text">text to be removed</div></div>',
   );
 
-  // Shows the AJAX 'restripe' command.
+  // Shows the Ajax 'restripe' command.
   $form['restripe_command_example'] = array(
     '#type' => 'submit',
     '#value' => t("AJAX 'restripe' command"),
@@ -242,7 +241,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
                   </div>',
   );
 
-  // Demonstrates the AJAX 'settings' command. The 'settings' command has
+  // Demonstrates the Ajax 'settings' command. The 'settings' command has
   // nothing visual to "show", but it can be tested via SimpleTest and via
   // Firebug.
   $form['settings_command_example'] = array(
@@ -262,7 +261,7 @@ function ajax_forms_test_ajax_commands_form($form, &$form_state) {
 }
 
 /**
- * AJAX callback for 'after'.
+ * Ajax callback for 'after'.
  */
 function ajax_forms_test_advanced_commands_after_callback($form, $form_state) {
   $selector = '#after_div';
@@ -273,7 +272,7 @@ function ajax_forms_test_advanced_commands_after_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'alert'.
+ * Ajax callback for 'alert'.
  */
 function ajax_forms_test_advanced_commands_alert_callback($form, $form_state) {
   $commands = array();
@@ -282,7 +281,7 @@ function ajax_forms_test_advanced_commands_alert_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'append'.
+ * Ajax callback for 'append'.
  */
 function ajax_forms_test_advanced_commands_append_callback($form, $form_state) {
   $selector = '#append_div';
@@ -292,7 +291,7 @@ function ajax_forms_test_advanced_commands_append_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'before'.
+ * Ajax callback for 'before'.
  */
 function ajax_forms_test_advanced_commands_before_callback($form, $form_state) {
   $selector = '#before_div';
@@ -303,14 +302,14 @@ function ajax_forms_test_advanced_commands_before_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'changed'.
+ * Ajax callback for 'changed'.
  */
 function ajax_forms_test_advanced_commands_changed_callback($form, $form_state) {
   $commands[] = ajax_command_changed('#changed_div');
   return array('#type' => 'ajax', '#commands' => $commands);
 }
 /**
- * AJAX callback for 'changed' with asterisk marking inner div.
+ * Ajax callback for 'changed' with asterisk marking inner div.
  */
 function ajax_forms_test_advanced_commands_changed_asterisk_callback($form, $form_state) {
   $commands = array();
@@ -319,7 +318,7 @@ function ajax_forms_test_advanced_commands_changed_asterisk_callback($form, $for
 }
 
 /**
- * AJAX callback for 'css'.
+ * Ajax callback for 'css'.
  */
 function ajax_forms_test_advanced_commands_css_callback($form, $form_state) {
   $selector = '#css_div';
@@ -331,7 +330,7 @@ function ajax_forms_test_advanced_commands_css_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'data'.
+ * Ajax callback for 'data'.
  */
 function ajax_forms_test_advanced_commands_data_callback($form, $form_state) {
   $selector = '#data_div';
@@ -342,7 +341,7 @@ function ajax_forms_test_advanced_commands_data_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'invoke'.
+ * Ajax callback for 'invoke'.
  */
 function ajax_forms_test_advanced_commands_invoke_callback($form, $form_state) {
   $commands = array();
@@ -351,7 +350,7 @@ function ajax_forms_test_advanced_commands_invoke_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'html'.
+ * Ajax callback for 'html'.
  */
 function ajax_forms_test_advanced_commands_html_callback($form, $form_state) {
   $commands = array();
@@ -360,7 +359,7 @@ function ajax_forms_test_advanced_commands_html_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'insert'.
+ * Ajax callback for 'insert'.
  */
 function ajax_forms_test_advanced_commands_insert_callback($form, $form_state) {
   $commands = array();
@@ -369,7 +368,7 @@ function ajax_forms_test_advanced_commands_insert_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'prepend'.
+ * Ajax callback for 'prepend'.
  */
 function ajax_forms_test_advanced_commands_prepend_callback($form, $form_state) {
   $commands = array();
@@ -378,7 +377,7 @@ function ajax_forms_test_advanced_commands_prepend_callback($form, $form_state)
 }
 
 /**
- * AJAX callback for 'remove'.
+ * Ajax callback for 'remove'.
  */
 function ajax_forms_test_advanced_commands_remove_callback($form, $form_state) {
   $commands = array();
@@ -387,7 +386,7 @@ function ajax_forms_test_advanced_commands_remove_callback($form, $form_state) {
 }
 
 /**
- * AJAX callback for 'restripe'.
+ * Ajax callback for 'restripe'.
  */
 function ajax_forms_test_advanced_commands_restripe_callback($form, $form_state) {
   $commands = array();
@@ -396,7 +395,7 @@ function ajax_forms_test_advanced_commands_restripe_callback($form, $form_state)
 }
 
 /**
- * AJAX callback for 'settings'.
+ * Ajax callback for 'settings'.
  */
 function ajax_forms_test_advanced_commands_settings_callback($form, $form_state) {
   $commands = array();
@@ -407,12 +406,12 @@ function ajax_forms_test_advanced_commands_settings_callback($form, $form_state)
 
 /**
  * This form and its related submit and callback functions demonstrate
- * not validating another form element when a single AJAX element is triggered.
+ * not validating another form element when a single Ajax element is triggered.
  *
- * The "drivertext" element is an AJAX-enabled textfield, free-form.
+ * The "drivertext" element is an Ajax-enabled textfield, free-form.
  * The "required_field" element is a textfield marked required.
  *
- * The correct behavior is that the AJAX-enabled drivertext element should
+ * The correct behavior is that the Ajax-enabled drivertext element should
  * be able to trigger without causing validation of the "required_field".
  */
 function ajax_forms_test_validation_form($form, &$form_state) {
@@ -451,7 +450,7 @@ function ajax_forms_test_validation_form_submit($form, $form_state) {
 }
 
 /**
- * AJAX callback for the 'drivertext' element of the validation form.
+ * Ajax callback for the 'drivertext' element of the validation form.
  */
 function ajax_forms_test_validation_form_callback($form, $form_state) {
   drupal_set_message("ajax_forms_test_validation_form_callback invoked");
diff --git a/modules/simpletest/tests/ajax_test.info b/modules/simpletest/tests/ajax_test.info
index aeaadbb..1f56482 100644
--- a/modules/simpletest/tests/ajax_test.info
+++ b/modules/simpletest/tests/ajax_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = AJAX Test
 description = Support module for AJAX framework tests.
 package = Testing
diff --git a/modules/simpletest/tests/ajax_test.module b/modules/simpletest/tests/ajax_test.module
index 70f87f5..4148a08 100644
--- a/modules/simpletest/tests/ajax_test.module
+++ b/modules/simpletest/tests/ajax_test.module
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Helper module for AJAX framework tests.
+ * Helper module for Ajax framework tests.
  */
 
 /**
@@ -45,7 +44,7 @@ function ajax_test_render() {
 }
 
 /**
- * Menu callback; Returns AJAX element with #error property set.
+ * Menu callback; Returns Ajax element with #error property set.
  */
 function ajax_test_error() {
   $message = '';
diff --git a/modules/simpletest/tests/batch.test b/modules/simpletest/tests/batch.test
index b7bfc9b..d1c0e0b 100644
--- a/modules/simpletest/tests/batch.test
+++ b/modules/simpletest/tests/batch.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/batch_test.callbacks.inc b/modules/simpletest/tests/batch_test.callbacks.inc
index 8e03c0b..75e6655 100644
--- a/modules/simpletest/tests/batch_test.callbacks.inc
+++ b/modules/simpletest/tests/batch_test.callbacks.inc
@@ -1,6 +1,5 @@
 <?php
 
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/batch_test.info b/modules/simpletest/tests/batch_test.info
index 301df51..f354097 100644
--- a/modules/simpletest/tests/batch_test.info
+++ b/modules/simpletest/tests/batch_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Batch API test"
 description = "Support module for Batch API tests."
 package = Testing
diff --git a/modules/simpletest/tests/batch_test.module b/modules/simpletest/tests/batch_test.module
index e1afa04..1200e76 100644
--- a/modules/simpletest/tests/batch_test.module
+++ b/modules/simpletest/tests/batch_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/bootstrap.test b/modules/simpletest/tests/bootstrap.test
index 333f34b..14c16a9 100644
--- a/modules/simpletest/tests/bootstrap.test
+++ b/modules/simpletest/tests/bootstrap.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 class BootstrapIPAddressTestCase extends DrupalWebTestCase {
 
diff --git a/modules/simpletest/tests/cache.test b/modules/simpletest/tests/cache.test
index 0fc9fe2..43d1fa1 100644
--- a/modules/simpletest/tests/cache.test
+++ b/modules/simpletest/tests/cache.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 class CacheTestCase extends DrupalWebTestCase {
   protected $default_bin = 'cache';
diff --git a/modules/simpletest/tests/common.test b/modules/simpletest/tests/common.test
index ca29e11..d618ddb 100644
--- a/modules/simpletest/tests/common.test
+++ b/modules/simpletest/tests/common.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -1171,6 +1170,8 @@ class JavaScriptTestCase extends DrupalWebTestCase {
     $this->assertTrue(array_key_exists('misc/drupal.js', $javascript), t('Drupal.js is added when file is added.'));
     $this->assertTrue(array_key_exists('misc/collapse.js', $javascript), t('JavaScript files are correctly added.'));
     $this->assertEqual(base_path(), $javascript['settings']['data'][0]['basePath'], t('Base path JavaScript setting is correctly set.'));
+    url('', array('prefix' => &$prefix));
+    $this->assertEqual(empty($prefix) ? '' : $prefix, $javascript['settings']['data'][1]['pathPrefix'], t('Path prefix JavaScript setting is correctly set.'));
   }
 
   /**
@@ -1178,8 +1179,8 @@ class JavaScriptTestCase extends DrupalWebTestCase {
    */
   function testAddSetting() {
     $javascript = drupal_add_js(array('drupal' => 'rocks', 'dries' => 280342800), 'setting');
-    $this->assertEqual(280342800, $javascript['settings']['data'][1]['dries'], t('JavaScript setting is set correctly.'));
-    $this->assertEqual('rocks', $javascript['settings']['data'][1]['drupal'], t('The other JavaScript setting is set correctly.'));
+    $this->assertEqual(280342800, $javascript['settings']['data'][2]['dries'], t('JavaScript setting is set correctly.'));
+    $this->assertEqual('rocks', $javascript['settings']['data'][2]['drupal'], t('The other JavaScript setting is set correctly.'));
   }
 
   /**
@@ -1209,6 +1210,7 @@ class JavaScriptTestCase extends DrupalWebTestCase {
     $javascript = drupal_get_js('header');
     $this->assertTrue(strpos($javascript, 'basePath') > 0, t('Rendered JavaScript header returns basePath setting.'));
     $this->assertTrue(strpos($javascript, 'misc/jquery.js') > 0, t('Rendered JavaScript header includes jQuery.'));
+    $this->assertTrue(strpos($javascript, 'pathPrefix') > 0, t('Rendered JavaScript header returns pathPrefix setting.'));
 
     // Test whether drupal_add_js can be used to override a previous setting.
     $this->assertTrue(strpos($javascript, 'commonTestShouldAppear') > 0, t('Rendered JavaScript header returns custom setting.'));
@@ -1522,6 +1524,56 @@ class DrupalRenderTestCase extends DrupalWebTestCase {
   }
 
   /**
+   * Test #attached functionality in children elements.
+   */
+  function testDrupalRenderChildrenAttached() {
+    // The cache system is turned off for POST requests.
+    $request_method = $_SERVER['REQUEST_METHOD'];
+    $_SERVER['REQUEST_METHOD'] = 'GET';
+
+    // Create an element with a child and subchild.  Each element loads a
+    // different JavaScript file using #attached.
+    $parent_js = drupal_get_path('module', 'user') . '/user.js';
+    $child_js = drupal_get_path('module', 'forum') . '/forum.js';
+    $subchild_js = drupal_get_path('module', 'book') . '/book.js';
+    $element = array(
+      '#type' => 'fieldset',
+      '#cache' => array(
+        'keys' => array('simpletest', 'drupal_render', 'children_attached'),
+      ),
+      '#attached' => array('js' => array($parent_js)),
+      '#title' => 'Parent',
+    );
+    $element['child'] = array(
+      '#type' => 'fieldset',
+      '#attached' => array('js' => array($child_js)),
+      '#title' => 'Child',
+    );
+    $element['child']['subchild'] = array(
+      '#attached' => array('js' => array($subchild_js)),
+      '#markup' => 'Subchild',
+    );
+
+    // Render the element and verify the presence of #attached JavaScript.
+    drupal_render($element);
+    $scripts = drupal_get_js();
+    $this->assertTrue(strpos($scripts, $parent_js), t('The element #attached JavaScript was included.'));
+    $this->assertTrue(strpos($scripts, $child_js), t('The child #attached JavaScript was included.'));
+    $this->assertTrue(strpos($scripts, $subchild_js), t('The subchild #attached JavaScript was included.'));
+
+    // Load the element from cache and verify the presence of the #attached
+    // JavaScript.
+    drupal_static_reset('drupal_add_js');
+    $this->assertTrue(drupal_render_cache_get($element), t('The element was retrieved from cache.'));
+    $scripts = drupal_get_js();
+    $this->assertTrue(strpos($scripts, $parent_js), t('The element #attached JavaScript was included when loading from cache.'));
+    $this->assertTrue(strpos($scripts, $child_js), t('The child #attached JavaScript was included when loading from cache.'));
+    $this->assertTrue(strpos($scripts, $subchild_js), t('The subchild #attached JavaScript was included when loading from cache.'));
+
+    $_SERVER['REQUEST_METHOD'] = $request_method;
+  }
+
+  /**
    * Test passing arguments to the theme function.
    */
   function testDrupalRenderThemeArguments() {
diff --git a/modules/simpletest/tests/common_test.css b/modules/simpletest/tests/common_test.css
index 023eae6..b86cead 100644
--- a/modules/simpletest/tests/common_test.css
+++ b/modules/simpletest/tests/common_test.css
@@ -1,3 +1,2 @@
-/* $Id$ */
 
 /* This file is for testing CSS file inclusion, no contents are necessary. */
diff --git a/modules/simpletest/tests/common_test.info b/modules/simpletest/tests/common_test.info
index cc16c25..aced983 100644
--- a/modules/simpletest/tests/common_test.info
+++ b/modules/simpletest/tests/common_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Common Test"
 description = "Support module for Common tests."
 package = Testing
diff --git a/modules/simpletest/tests/common_test.module b/modules/simpletest/tests/common_test.module
index 449da4a..9b61788 100644
--- a/modules/simpletest/tests/common_test.module
+++ b/modules/simpletest/tests/common_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/common_test.print.css b/modules/simpletest/tests/common_test.print.css
index 023eae6..b86cead 100644
--- a/modules/simpletest/tests/common_test.print.css
+++ b/modules/simpletest/tests/common_test.print.css
@@ -1,3 +1,2 @@
-/* $Id$ */
 
 /* This file is for testing CSS file inclusion, no contents are necessary. */
diff --git a/modules/simpletest/tests/common_test_info.txt b/modules/simpletest/tests/common_test_info.txt
index 8ff8bd5..ae217b9 100644
--- a/modules/simpletest/tests/common_test_info.txt
+++ b/modules/simpletest/tests/common_test_info.txt
@@ -1,4 +1,3 @@
-; $Id$
 ; Test parsing with a simple string.
 simple_string = A simple string
 
diff --git a/modules/simpletest/tests/database_test.info b/modules/simpletest/tests/database_test.info
index e357b30..7141235 100644
--- a/modules/simpletest/tests/database_test.info
+++ b/modules/simpletest/tests/database_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Database Test"
 description = "Support module for Database layer tests."
 core = 7.x
diff --git a/modules/simpletest/tests/database_test.install b/modules/simpletest/tests/database_test.install
index 709ff89..4dce2b1 100644
--- a/modules/simpletest/tests/database_test.install
+++ b/modules/simpletest/tests/database_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/database_test.module b/modules/simpletest/tests/database_test.module
index 2b68440..6fac319 100644
--- a/modules/simpletest/tests/database_test.module
+++ b/modules/simpletest/tests/database_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_query_alter().
diff --git a/modules/simpletest/tests/database_test.test b/modules/simpletest/tests/database_test.test
index 243dbba..c22d1fc 100644
--- a/modules/simpletest/tests/database_test.test
+++ b/modules/simpletest/tests/database_test.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Dummy class for fetching into a class.
@@ -720,6 +719,21 @@ class DatabaseUpdateTestCase extends DatabaseTestCase {
   }
 
   /**
+   * Confirm updating to NULL.
+   */
+  function testSimpleNullUpdate() {
+    $this->ensureSampleDataNull();
+    $num_updated = db_update('test_null')
+      ->fields(array('age' => NULL))
+      ->condition('name', 'Kermit')
+      ->execute();
+    $this->assertIdentical($num_updated, 1, t('Updated 1 record.'));
+
+    $saved_age = db_query('SELECT age FROM {test_null} WHERE name = :name', array(':name' => 'Kermit'))->fetchField();
+    $this->assertNull($saved_age, t('Updated name successfully.'));
+  }
+
+  /**
    * Confirm that we can update a multiple records successfully.
    */
   function testMultiUpdate() {
@@ -1311,6 +1325,27 @@ class DatabaseSelectTestCase extends DatabaseTestCase {
   }
 
   /**
+   * Test query COMMENT system against vulnerabilities.
+   */
+  function testVulnerableComment() {
+    $query = db_select('test')->comment('Testing query comments */ SELECT nid FROM {node}; --');
+    $name_field = $query->addField('test', 'name');
+    $age_field = $query->addField('test', 'age', 'age');
+    $result = $query->execute();
+
+    $num_records = 0;
+    foreach ($result as $record) {
+      $num_records++;
+    }
+
+    $query = (string)$query;
+    $expected = "/* Testing query comments SELECT nid FROM {node}; -- */ SELECT test.name AS name, test.age AS age\nFROM \n{test} test";
+
+    $this->assertEqual($num_records, 4, t('Returned the correct number of rows.'));
+    $this->assertEqual($query, $expected, t('The flattened query contains the sanitised comment string.'));
+  }
+
+  /**
    * Test basic conditionals on SELECT statements.
    */
   function testSimpleSelectConditional() {
@@ -1687,6 +1722,9 @@ class DatabaseSelectSubqueryTestCase extends DatabaseTestCase {
 
   /**
    * Test EXISTS subquery conditionals on SELECT statements.
+   *
+   * We essentially select all rows from the {test} table that have matching
+   * rows in the {test_people} table based on the shared name column.
    */
   function testExistsSubquerySelect() {
     // Put George into {test_people}.
@@ -1703,7 +1741,7 @@ class DatabaseSelectSubqueryTestCase extends DatabaseTestCase {
     // Subquery to {test_people}.
     $subquery = db_select('test_people', 'tp')
       ->fields('tp', array('name'))
-      ->condition('name', 'George');
+      ->where('tp.name = t.name');
     $query->exists($subquery);
     $result = $query->execute();
 
@@ -1714,6 +1752,9 @@ class DatabaseSelectSubqueryTestCase extends DatabaseTestCase {
 
   /**
    * Test NOT EXISTS subquery conditionals on SELECT statements.
+   *
+   * We essentially select all rows from the {test} table that don't have
+   * matching rows in the {test_people} table based on the shared name column.
    */
   function testNotExistsSubquerySelect() {
     // Put George into {test_people}.
@@ -1731,13 +1772,12 @@ class DatabaseSelectSubqueryTestCase extends DatabaseTestCase {
     // Subquery to {test_people}.
     $subquery = db_select('test_people', 'tp')
       ->fields('tp', array('name'))
-      ->condition('name', 'George');
+      ->where('tp.name = t.name');
     $query->notExists($subquery);
-    $result = $query->execute();
 
-    // Ensure that we got the right record.
-    $record = $result->fetch();
-    $this->assertFalse($record, t('NOT EXISTS query returned no results.'));
+    // Ensure that we got the right number of records.
+    $people = $query->execute()->fetchCol();
+    $this->assertEqual(count($people), 3, t('NOT EXISTS query returned the correct results.'));
   }
 }
 
diff --git a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index d367ad9..085c335 100644
--- a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Drupal system listing compatible test"
 description = "Support module for testing the drupal_system_listing function."
 package = Testing
diff --git a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module
index 13bb990..b3d9bbc 100644
--- a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module
+++ b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index a86bbca..8e5875e 100644
--- a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Drupal system listing incompatible test"
 description = "Support module for testing the drupal_system_listing function."
 package = Testing
diff --git a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module
index 13bb990..b3d9bbc 100644
--- a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module
+++ b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/modules/simpletest/tests/entity_cache_test.info b/modules/simpletest/tests/entity_cache_test.info
index 01c6d5d..405cefa 100644
--- a/modules/simpletest/tests/entity_cache_test.info
+++ b/modules/simpletest/tests/entity_cache_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Entity cache test"
 description = "Support module for testing entity cache."
 package = Testing
diff --git a/modules/simpletest/tests/entity_cache_test.module b/modules/simpletest/tests/entity_cache_test.module
index b1daf68..5ae9ecc 100644
--- a/modules/simpletest/tests/entity_cache_test.module
+++ b/modules/simpletest/tests/entity_cache_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/entity_cache_test_dependency.info b/modules/simpletest/tests/entity_cache_test_dependency.info
index 7e9cdc7..f0dc7b6 100644
--- a/modules/simpletest/tests/entity_cache_test_dependency.info
+++ b/modules/simpletest/tests/entity_cache_test_dependency.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Entity cache test dependency"
 description = "Support dependency module for testing entity cache."
 package = Testing
diff --git a/modules/simpletest/tests/entity_cache_test_dependency.module b/modules/simpletest/tests/entity_cache_test_dependency.module
index 1f9c1c3..73a1149 100644
--- a/modules/simpletest/tests/entity_cache_test_dependency.module
+++ b/modules/simpletest/tests/entity_cache_test_dependency.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/entity_crud_hook_test.info b/modules/simpletest/tests/entity_crud_hook_test.info
index 5cc2ad9..b37114d 100644
--- a/modules/simpletest/tests/entity_crud_hook_test.info
+++ b/modules/simpletest/tests/entity_crud_hook_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Entity CRUD Hooks Test"
 description = "Support module for CRUD hook tests."
 core = 7.x
diff --git a/modules/simpletest/tests/entity_crud_hook_test.module b/modules/simpletest/tests/entity_crud_hook_test.module
index 12252d1..873a162 100644
--- a/modules/simpletest/tests/entity_crud_hook_test.module
+++ b/modules/simpletest/tests/entity_crud_hook_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 //
 // Presave hooks
diff --git a/modules/simpletest/tests/entity_crud_hook_test.test b/modules/simpletest/tests/entity_crud_hook_test.test
index 17b9f23..3f18fc8 100644
--- a/modules/simpletest/tests/entity_crud_hook_test.test
+++ b/modules/simpletest/tests/entity_crud_hook_test.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Test invocation of hooks when inserting, loading, updating or deleting an
diff --git a/modules/simpletest/tests/entity_query.test b/modules/simpletest/tests/entity_query.test
index 4a319d7..d28d5a3 100644
--- a/modules/simpletest/tests/entity_query.test
+++ b/modules/simpletest/tests/entity_query.test
@@ -1,6 +1,5 @@
 <?php
 
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/error.test b/modules/simpletest/tests/error.test
index fdaab2b..b1ec4b3 100644
--- a/modules/simpletest/tests/error.test
+++ b/modules/simpletest/tests/error.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Tests Drupal error and exception handlers.
@@ -25,21 +24,18 @@ class DrupalErrorHandlerUnitTest extends DrupalWebTestCase {
       '%type' => 'Notice',
       '!message' => 'Undefined variable: bananas',
       '%function' => 'error_test_generate_warnings()',
-      '%line' => 44,
       '%file' => drupal_realpath('modules/simpletest/tests/error_test.module'),
     );
     $error_warning = array(
       '%type' => 'Warning',
       '!message' => 'Division by zero',
       '%function' => 'error_test_generate_warnings()',
-      '%line' => 46,
       '%file' => drupal_realpath('modules/simpletest/tests/error_test.module'),
     );
     $error_user_notice = array(
       '%type' => 'User warning',
       '!message' => 'Drupal is awesome',
       '%function' => 'error_test_generate_warnings()',
-      '%line' => 48,
       '%file' => drupal_realpath('modules/simpletest/tests/error_test.module'),
     );
 
@@ -97,7 +93,7 @@ class DrupalErrorHandlerUnitTest extends DrupalWebTestCase {
     // varies from database to database. Check that the SQL string is displayed.
     $this->assertText($error_pdo_exception['%type'], t('Found %type in error page.', $error_pdo_exception));
     $this->assertText($error_pdo_exception['!message'], t('Found !message in error page.', $error_pdo_exception));
-    $error_details = t('in %function (line %line of %file)', $error_pdo_exception);
+    $error_details = t('in %function (line ', $error_pdo_exception);
     $this->assertRaw($error_details, t("Found '!message' in error page.", array('!message' => $error_details)));
   }
 
@@ -105,16 +101,16 @@ class DrupalErrorHandlerUnitTest extends DrupalWebTestCase {
    * Helper function: assert that the error message is found.
    */
   function assertErrorMessage(array $error) {
-    $message = t('%type: !message in %function (line %line of %file).', $error);
-    $this->assertRaw($message, t('Error !message found.', array('!message' => $message)));
+    $message = t('%type: !message in %function (line ', $error);
+    $this->assertRaw($message, t('Found error message: !message.', array('!message' => $message)));
   }
 
   /**
    * Helper function: assert that the error message is not found.
    */
   function assertNoErrorMessage(array $error) {
-    $message = t('%type: !message in %function (line %line of %file).', $error);
-    $this->assertNoRaw($message, t('Error !message not found.', array('!message' => $message)));
+    $message = t('%type: !message in %function (line ', $error);
+    $this->assertNoRaw($message, t('Did not find error message: !message.', array('!message' => $message)));
   }
 }
 
diff --git a/modules/simpletest/tests/error_test.info b/modules/simpletest/tests/error_test.info
index 0486297..1764ae3 100644
--- a/modules/simpletest/tests/error_test.info
+++ b/modules/simpletest/tests/error_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Error test"
 description = "Support module for error and exception testing."
 package = Testing
diff --git a/modules/simpletest/tests/error_test.module b/modules/simpletest/tests/error_test.module
index 1e08304..d062cb0 100644
--- a/modules/simpletest/tests/error_test.module
+++ b/modules/simpletest/tests/error_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_menu().
diff --git a/modules/simpletest/tests/file.test b/modules/simpletest/tests/file.test
index c9577c6..dc12b1b 100644
--- a/modules/simpletest/tests/file.test
+++ b/modules/simpletest/tests/file.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  *  @file
diff --git a/modules/simpletest/tests/file_test.info b/modules/simpletest/tests/file_test.info
index 69f9c17..4edfcea 100644
--- a/modules/simpletest/tests/file_test.info
+++ b/modules/simpletest/tests/file_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "File test"
 description = "Support module for file handling tests."
 package = Testing
diff --git a/modules/simpletest/tests/file_test.module b/modules/simpletest/tests/file_test.module
index b509805..2865a1f 100644
--- a/modules/simpletest/tests/file_test.module
+++ b/modules/simpletest/tests/file_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/filetransfer.test b/modules/simpletest/tests/filetransfer.test
index 2e7b02f..905d23c 100644
--- a/modules/simpletest/tests/filetransfer.test
+++ b/modules/simpletest/tests/filetransfer.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 
 class FileTranferTest extends DrupalWebTestCase {
diff --git a/modules/simpletest/tests/filter_test.info b/modules/simpletest/tests/filter_test.info
index db1ce6d..4b887ca 100644
--- a/modules/simpletest/tests/filter_test.info
+++ b/modules/simpletest/tests/filter_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Filter test module
 description = Tests filter hooks and functions.
 package = Testing
diff --git a/modules/simpletest/tests/filter_test.module b/modules/simpletest/tests/filter_test.module
index fa38616..2cebc70 100644
--- a/modules/simpletest/tests/filter_test.module
+++ b/modules/simpletest/tests/filter_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/form.test b/modules/simpletest/tests/form.test
index a73ac16..e7ae9de 100644
--- a/modules/simpletest/tests/form.test
+++ b/modules/simpletest/tests/form.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -1132,13 +1131,13 @@ class FormsRebuildTestCase extends DrupalWebTestCase {
   }
 
   /**
-   * Tests that a form's action is retained after an AJAX submission.
+   * Tests that a form's action is retained after an Ajax submission.
    *
-   * The 'action' attribute of a form should not change after an AJAX submission
-   * followed by a non-AJAX submission, which triggers a validation error.
+   * The 'action' attribute of a form should not change after an Ajax submission
+   * followed by a non-Ajax submission, which triggers a validation error.
    */
   function testPreserveFormActionAfterAJAX() {
-    // Create a multi-valued field for 'page' nodes to use for AJAX testing.
+    // Create a multi-valued field for 'page' nodes to use for Ajax testing.
     $field_name = 'field_ajax_test';
     $field = array(
       'field_name' => $field_name,
@@ -1157,14 +1156,14 @@ class FormsRebuildTestCase extends DrupalWebTestCase {
     $this->web_user = $this->drupalCreateUser(array('create page content'));
     $this->drupalLogin($this->web_user);
 
-    // Get the form for adding a 'page' node. Submit an "add another item" AJAX
+    // Get the form for adding a 'page' node. Submit an "add another item" Ajax
     // submission and verify it worked by ensuring the updated page has two text
     // field items in the field for which we just added an item.
     $this->drupalGet('node/add/page');
     $this->drupalPostAJAX(NULL, array(), array('field_ajax_test_add_more' => t('Add another item')), 'system/ajax', array(), array(), 'page-node-form');
     $this->assert(count($this->xpath('//div[contains(@class, "field-name-field-ajax-test")]//input[@type="text"]')) == 2, t('AJAX submission succeeded.'));
 
-    // Submit the form with the non-AJAX "Save" button, leaving the title field
+    // Submit the form with the non-Ajax "Save" button, leaving the title field
     // blank to trigger a validation error, and ensure that a validation error
     // occurred, because this test is for testing what happens when a form is
     // re-rendered without being re-built, which is what happens when there's
diff --git a/modules/simpletest/tests/form_test.file.inc b/modules/simpletest/tests/form_test.file.inc
index 808863e..f9197ea 100644
--- a/modules/simpletest/tests/form_test.file.inc
+++ b/modules/simpletest/tests/form_test.file.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -11,7 +10,7 @@
  * hook_menu().
  */
 function form_test_load_include_menu($form, &$form_state) {
-  // Submit the form via AJAX. That way the FAPI has to care about including
+  // Submit the form via Ajax. That way the FAPI has to care about including
   // the file specified in hook_menu().
   $ajax_wrapper_id = drupal_html_id('form-test-load-include-menu-ajax-wrapper');
   $form['ajax_wrapper'] = array(
@@ -43,7 +42,7 @@ function form_test_load_include_submit($form, $form_state) {
 function form_test_load_include_menu_ajax($form) {
   // We don't need to return anything, since #ajax['method'] is 'append', which
   // does not remove the original #ajax['wrapper'] element, and status messages
-  // are automatically added by the AJAX framework as long as there's a wrapper
+  // are automatically added by the Ajax framework as long as there's a wrapper
   // element to add them to.
   return '';
 }
diff --git a/modules/simpletest/tests/form_test.info b/modules/simpletest/tests/form_test.info
index 16845f0..ac1d864 100644
--- a/modules/simpletest/tests/form_test.info
+++ b/modules/simpletest/tests/form_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "FormAPI Test"
 description = "Support module for Form API tests."
 package = Testing
diff --git a/modules/simpletest/tests/form_test.module b/modules/simpletest/tests/form_test.module
index f908c21..00be7d2 100644
--- a/modules/simpletest/tests/form_test.module
+++ b/modules/simpletest/tests/form_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/graph.test b/modules/simpletest/tests/graph.test
index 36d91bf..c190161 100644
--- a/modules/simpletest/tests/graph.test
+++ b/modules/simpletest/tests/graph.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/http.php b/modules/simpletest/tests/http.php
index 0c5f1eb..a22938d 100644
--- a/modules/simpletest/tests/http.php
+++ b/modules/simpletest/tests/http.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/https.php b/modules/simpletest/tests/https.php
index ba618c1..b5ffab6 100644
--- a/modules/simpletest/tests/https.php
+++ b/modules/simpletest/tests/https.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/image.test b/modules/simpletest/tests/image.test
index b8c88e0..60599be 100644
--- a/modules/simpletest/tests/image.test
+++ b/modules/simpletest/tests/image.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/image_test.info b/modules/simpletest/tests/image_test.info
index ded6157..a9ef05a 100644
--- a/modules/simpletest/tests/image_test.info
+++ b/modules/simpletest/tests/image_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Image test"
 description = "Support module for image toolkit tests."
 package = Testing
diff --git a/modules/simpletest/tests/image_test.module b/modules/simpletest/tests/image_test.module
index 75c1b23..de640f0 100644
--- a/modules/simpletest/tests/image_test.module
+++ b/modules/simpletest/tests/image_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/lock.test b/modules/simpletest/tests/lock.test
index d9fc53f..0b423ff 100644
--- a/modules/simpletest/tests/lock.test
+++ b/modules/simpletest/tests/lock.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Tests for the lock system.
diff --git a/modules/simpletest/tests/mail.test b/modules/simpletest/tests/mail.test
index 48b61c3..8a7b152 100644
--- a/modules/simpletest/tests/mail.test
+++ b/modules/simpletest/tests/mail.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Test the Drupal mailing system.
diff --git a/modules/simpletest/tests/menu.test b/modules/simpletest/tests/menu.test
index c25240e..5642fce 100644
--- a/modules/simpletest/tests/menu.test
+++ b/modules/simpletest/tests/menu.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -35,6 +34,18 @@ class MenuRouterTestCase extends DrupalWebTestCase {
   }
 
   /**
+   * Tests page title of MENU_CALLBACKs.
+   */
+  function testTitleMenuCallback() {
+    // Verify that the menu router item title is not visible.
+    $this->drupalGet('');
+    $this->assertNoText(t('Menu Callback Title'));
+    // Verify that the menu router item title is output as page title.
+    $this->drupalGet('menu_callback_title');
+    $this->assertText(t('Menu Callback Title'));
+  }
+
+  /**
    * Test the theme callback when it is set to use an administrative theme.
    */
   function testThemeCallbackAdministrative() {
@@ -846,6 +857,64 @@ class MenuTreeDataTestCase extends DrupalUnitTestCase {
 }
 
 /**
+ * Menu tree output related tests.
+ */
+class MenuTreeOutputTestCase extends DrupalWebTestCase {
+  /**
+   * Dummy link structure acceptable for menu_tree_output().
+   */
+  var $tree_data = array(
+    '1'=> array(
+      'link' => array( 'menu_name' => 'main-menu', 'mlid' => 1, 'hidden'=>0, 'has_children' => 1, 'title' => 'Item 1', 'in_active_trail' => 1, 'access'=>1, 'href' => 'a', 'localized_options' => array('attributes' => array('title' =>'')) ),
+      'below' => array(
+        '2' => array('link' => array( 'menu_name' => 'main-menu', 'mlid' => 2, 'hidden'=>0, 'has_children' => 1, 'title' => 'Item 2', 'in_active_trail' => 1, 'access'=>1, 'href' => 'a/b', 'localized_options' => array('attributes' => array('title' =>'')) ),
+          'below' => array(
+            '3' => array('link' => array( 'menu_name' => 'main-menu', 'mlid' => 3, 'hidden'=>0, 'has_children' => 0, 'title' => 'Item 3', 'in_active_trail' => 0, 'access'=>1, 'href' => 'a/b/c', 'localized_options' => array('attributes' => array('title' =>'')) ),
+              'below' => array() ),
+            '4' => array('link' => array( 'menu_name' => 'main-menu', 'mlid' => 4, 'hidden'=>0, 'has_children' => 0, 'title' => 'Item 4', 'in_active_trail' => 0, 'access'=>1, 'href' => 'a/b/d', 'localized_options' => array('attributes' => array('title' =>'')) ),
+              'below' => array() )
+            )
+          )
+        )
+      ),
+    '5' => array('link' => array( 'menu_name' => 'main-menu', 'mlid' => 5, 'hidden'=>1, 'has_children' => 0, 'title' => 'Item 5', 'in_active_trail' => 0, 'access'=>1, 'href' => 'e', 'localized_options' => array('attributes' => array('title' =>'')) ), 'below' => array( ) ),
+    '6' => array('link' => array( 'menu_name' => 'main-menu', 'mlid' => 6, 'hidden'=>0, 'has_children' => 0, 'title' => 'Item 6', 'in_active_trail' => 0, 'access'=>0, 'href' => 'f', 'localized_options' => array('attributes' => array('title' =>'')) ), 'below' => array( ) ),
+    '7' => array('link' => array( 'menu_name' => 'main-menu', 'mlid' => 7, 'hidden'=>0, 'has_children' => 0, 'title' => 'Item 7', 'in_active_trail' => 0, 'access'=>1, 'href' => 'g', 'localized_options' => array('attributes' => array('title' =>'')) ), 'below' => array( ) )
+  );
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Menu tree output',
+      'description' => 'Tests menu tree output functions.',
+      'group' => 'Menu',
+    );
+  }
+  
+  function setUp() {
+    parent::setUp();
+  }
+
+  /**
+   * Validate the generation of a proper menu tree output.
+   */
+  function testMenuTreeData() {
+    $output = menu_tree_output($this->tree_data);
+
+    // Validate that the - in main-menu is changed into an underscore
+    $this->assertEqual( $output['1']['#theme'], 'menu_link__main_menu', t('Hyphen is changed to a dash on menu_link'));
+    $this->assertEqual( $output['#theme_wrappers'][0], 'menu_tree__main_menu', t('Hyphen is changed to a dash on menu_tree wrapper'));
+    // Looking for child items in the data
+    $this->assertEqual( $output['1']['#below']['2']['#href'], 'a/b', t('Checking the href on a child item'));
+    $this->assertTrue( in_array('active-trail',$output['1']['#below']['2']['#attributes']['class']) , t('Checking the active trail class'));
+    // Validate that the hidden and no access items are missing
+    $this->assertFalse( isset($output['5']), t('Hidden item should be missing'));
+    $this->assertFalse( isset($output['6']), t('False access should be missing'));
+    // Item 7 is after a couple hidden items. Just to make sure that 5 and 6 are skipped and 7 still included
+    $this->assertTrue( isset($output['7']), t('Item after hidden items is present'));
+  }
+}
+
+/**
  * Menu breadcrumbs related tests.
  */
 class MenuBreadcrumbTestCase extends DrupalWebTestCase {
diff --git a/modules/simpletest/tests/menu_test.info b/modules/simpletest/tests/menu_test.info
index a9f5191..c1c39c1 100644
--- a/modules/simpletest/tests/menu_test.info
+++ b/modules/simpletest/tests/menu_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Hook menu tests"
 description = "Support module for menu hook testing."
 package = Testing
diff --git a/modules/simpletest/tests/menu_test.module b/modules/simpletest/tests/menu_test.module
index 65d5fda..3046a04 100644
--- a/modules/simpletest/tests/menu_test.module
+++ b/modules/simpletest/tests/menu_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -16,6 +15,13 @@ function menu_test_menu() {
     'page callback' => 'node_save',
     'menu_name' => menu_test_menu_name(),
   );
+  // This item is of type MENU_CALLBACK with no parents to test title.
+  $items['menu_callback_title'] = array(
+    'title' => 'Menu Callback Title',
+    'page callback' => 'menu_test_callback',
+    'type' => MENU_CALLBACK,
+    'access arguments' => array('access content'),
+  );
   // Use FALSE as 'title callback' to bypass t().
   $items['menu_no_title_callback'] = array(
     'title' => 'A title with @placeholder',
diff --git a/modules/simpletest/tests/module.test b/modules/simpletest/tests/module.test
index 711a739..f55c08a 100644
--- a/modules/simpletest/tests/module.test
+++ b/modules/simpletest/tests/module.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -212,6 +211,27 @@ class ModuleUnitTest extends DrupalWebTestCase {
     $uninstalled_modules = variable_get('test_module_uninstall_order', array());
     $this->assertTrue(in_array('comment', $uninstalled_modules), t('Comment module is in the list of uninstalled modules.'));
     $this->assertFalse(in_array($profile, $uninstalled_modules), t('The installation profile is not in the list of uninstalled modules.'));
+
+    // Enable forum module again, which should enable both the poll module and
+    // php module. But, this time do it with poll module declaring a dependency
+    // on a specific version of php module in its info file. Make sure that
+    // module_enable() still works.
+    variable_set('dependency_test', 'version dependency');
+    drupal_static_reset('system_rebuild_module_data');
+    $result = module_enable(array('forum'));
+    $this->assertTrue($result, t('module_enable() returns the correct value.'));
+    // Verify that the fake dependency chain was installed.
+    $this->assertTrue(module_exists('poll') && module_exists('php'), t('Dependency chain was installed by module_enable().'));
+    // Verify that the original module was installed.
+    $this->assertTrue(module_exists('forum'), t('Module installation with version dependencies succeeded.'));
+    // Finally, verify that the modules were enabled in the correct order.
+    $enable_order = variable_get('test_module_enable_order', array());
+    $php_position = array_search('php', $enable_order);
+    $poll_position = array_search('poll', $enable_order);
+    $forum_position = array_search('forum', $enable_order);
+    $php_before_poll = $php_position !== FALSE && $poll_position !== FALSE && $php_position < $poll_position;
+    $poll_before_forum = $poll_position !== FALSE && $forum_position !== FALSE && $poll_position < $forum_position;
+    $this->assertTrue($php_before_poll && $poll_before_forum, t('Modules were enabled in the correct order by module_enable().'));
   }
 }
 
diff --git a/modules/simpletest/tests/module_test.file.inc b/modules/simpletest/tests/module_test.file.inc
index 72210d7..c0d3ec4 100644
--- a/modules/simpletest/tests/module_test.file.inc
+++ b/modules/simpletest/tests/module_test.file.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/module_test.info b/modules/simpletest/tests/module_test.info
index 8d0c4e8..0a0f3c0 100644
--- a/modules/simpletest/tests/module_test.info
+++ b/modules/simpletest/tests/module_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Module test"
 description = "Support module for module system testing."
 package = Testing
diff --git a/modules/simpletest/tests/module_test.install b/modules/simpletest/tests/module_test.install
index 5f8e76b..4cc09df 100644
--- a/modules/simpletest/tests/module_test.install
+++ b/modules/simpletest/tests/module_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/module_test.module b/modules/simpletest/tests/module_test.module
index d3f46e2..d781350 100644
--- a/modules/simpletest/tests/module_test.module
+++ b/modules/simpletest/tests/module_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_permission().
@@ -36,6 +35,20 @@ function module_test_system_info_alter(&$info, $file, $type) {
       $info['dependencies'][] = 'php';
     }
   }
+  elseif (variable_get('dependency_test', FALSE) == 'version dependency') {
+    if ($file->name == 'forum') {
+      // Make the forum module depend on poll.
+      $info['dependencies'][] = 'poll';
+    }
+    elseif ($file->name == 'poll') {
+      // Make poll depend on a specific version of php module.
+      $info['dependencies'][] = 'php (1.x)';
+    }
+    elseif ($file->name == 'php') {
+      // Set php module to a version compatible with the above.
+      $info['version'] = '7.x-1.0';
+    }
+  }
   if ($file->name == 'seven' && $type == 'theme') {
     $info['regions']['test_region'] = t('Test region');
   }
diff --git a/modules/simpletest/tests/password.test b/modules/simpletest/tests/password.test
index 20e77f2..e100c2e 100644
--- a/modules/simpletest/tests/password.test
+++ b/modules/simpletest/tests/password.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/path.test b/modules/simpletest/tests/path.test
index 7368cd1..0c8ecda 100644
--- a/modules/simpletest/tests/path.test
+++ b/modules/simpletest/tests/path.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/registry.test b/modules/simpletest/tests/registry.test
index 48829bd..bcd8d4e 100644
--- a/modules/simpletest/tests/registry.test
+++ b/modules/simpletest/tests/registry.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 class RegistryParseFileTestCase extends DrupalWebTestCase {
   public static function getInfo() {
diff --git a/modules/simpletest/tests/requirements1_test.info b/modules/simpletest/tests/requirements1_test.info
index 0a1cf3a..ef39535 100644
--- a/modules/simpletest/tests/requirements1_test.info
+++ b/modules/simpletest/tests/requirements1_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Requirements 1 Test
 description = "Tests that a module is not installed when it fails hook_requirements('install')."
 package = Core
diff --git a/modules/simpletest/tests/requirements1_test.install b/modules/simpletest/tests/requirements1_test.install
index 28b7fb6..651d911 100644
--- a/modules/simpletest/tests/requirements1_test.install
+++ b/modules/simpletest/tests/requirements1_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_requirements().
diff --git a/modules/simpletest/tests/requirements1_test.module b/modules/simpletest/tests/requirements1_test.module
index 20bfc0a..e52266b 100644
--- a/modules/simpletest/tests/requirements1_test.module
+++ b/modules/simpletest/tests/requirements1_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/requirements2_test.info b/modules/simpletest/tests/requirements2_test.info
index bcf613c..0cf8647 100644
--- a/modules/simpletest/tests/requirements2_test.info
+++ b/modules/simpletest/tests/requirements2_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Requirements 2 Test
 description = "Tests that a module is not installed when the one it depends on fails hook_requirements('install)."
 dependencies[] = requirements1_test
diff --git a/modules/simpletest/tests/requirements2_test.module b/modules/simpletest/tests/requirements2_test.module
index 03eb94d..a4f4305 100644
--- a/modules/simpletest/tests/requirements2_test.module
+++ b/modules/simpletest/tests/requirements2_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/schema.test b/modules/simpletest/tests/schema.test
index 1dfa445..8945117 100644
--- a/modules/simpletest/tests/schema.test
+++ b/modules/simpletest/tests/schema.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/session.test b/modules/simpletest/tests/session.test
index a42adcf..bc72e5c 100644
--- a/modules/simpletest/tests/session.test
+++ b/modules/simpletest/tests/session.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/session_test.info b/modules/simpletest/tests/session_test.info
index 2ae4b82..3272156 100644
--- a/modules/simpletest/tests/session_test.info
+++ b/modules/simpletest/tests/session_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Session test"
 description = "Support module for session data testing."
 package = Testing
diff --git a/modules/simpletest/tests/session_test.module b/modules/simpletest/tests/session_test.module
index 61aa3ae..689ff09 100644
--- a/modules/simpletest/tests/session_test.module
+++ b/modules/simpletest/tests/session_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_menu().
diff --git a/modules/simpletest/tests/system.base.css b/modules/simpletest/tests/system.base.css
index 6ac23b1..c14ae9b 100644
--- a/modules/simpletest/tests/system.base.css
+++ b/modules/simpletest/tests/system.base.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * This file is for testing CSS file override in
diff --git a/modules/simpletest/tests/system_dependencies_test.info b/modules/simpletest/tests/system_dependencies_test.info
index 55d8971..5b4bd10 100644
--- a/modules/simpletest/tests/system_dependencies_test.info
+++ b/modules/simpletest/tests/system_dependencies_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "System dependency test"
 description = "Support module for testing system dependencies."
 package = Testing
diff --git a/modules/simpletest/tests/system_dependencies_test.module b/modules/simpletest/tests/system_dependencies_test.module
index 13bb990..b3d9bbc 100644
--- a/modules/simpletest/tests/system_dependencies_test.module
+++ b/modules/simpletest/tests/system_dependencies_test.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/modules/simpletest/tests/system_test.info b/modules/simpletest/tests/system_test.info
index f70a1a7..c4ad536 100644
--- a/modules/simpletest/tests/system_test.info
+++ b/modules/simpletest/tests/system_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = System test
 description = Support module for system testing.
 package = Testing
diff --git a/modules/simpletest/tests/system_test.module b/modules/simpletest/tests/system_test.module
index 4d7042e..76841fb 100644
--- a/modules/simpletest/tests/system_test.module
+++ b/modules/simpletest/tests/system_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_menu().
diff --git a/modules/simpletest/tests/tablesort.test b/modules/simpletest/tests/tablesort.test
new file mode 100644
index 0000000..9c068f8
--- /dev/null
+++ b/modules/simpletest/tests/tablesort.test
@@ -0,0 +1,166 @@
+<?php
+
+/**
+ * @file
+ * Various tablesort tests.
+ */
+
+/**
+ * Test unicode handling features implemented in unicode.inc.
+ */
+class TableSortTest extends DrupalUnitTestCase {
+
+  /**
+   * Storage for initial value of $_GET.
+   *
+   * @var array
+   */
+  protected $GET = array();
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Tablesort',
+      'description' => 'Tests table sorting.',
+      'group' => 'System',
+    );
+  }
+
+  function setUp() {
+    // Save the original $_GET to be restored later.
+    $this->GET = $_GET;
+
+    parent::setUp();
+  }
+
+  function tearDown() {
+    // Revert $_GET.
+    $_GET = $this->GET;
+
+    parent::tearDown();
+  }
+
+  /**
+   * Test tablesort_init().
+   */
+  function testTableSortInit() {
+
+    // Test simple table headers.
+
+    $headers = array('foo', 'bar', 'baz');
+    // Reset $_GET to prevent parameters from Simpletest and Batch API ending
+    // up in $ts['query'].
+    $_GET = array('q' => 'jahwohl');
+    $expected_ts = array(
+      'name' => 'foo',
+      'sql' => '',
+      'sort' => 'asc',
+      'query' => array(),
+    );
+    $ts = tablesort_init($headers);
+    $this->verbose(strtr('$ts: <pre>!ts</pre>', array('!ts' => check_plain(var_export($ts, TRUE)))));
+    $this->assertEqual($ts, $expected_ts, t('Simple table headers sorted correctly.'));
+
+    // Test with simple table headers plus $_GET parameters that should _not_
+    // override the default.
+
+    $_GET = array(
+      'q' => 'jahwohl',
+      // This should not override the table order because only complex
+      // headers are overridable.
+      'order' => 'bar',
+    );
+    $ts = tablesort_init($headers);
+    $this->verbose(strtr('$ts: <pre>!ts</pre>', array('!ts' => check_plain(var_export($ts, TRUE)))));
+    $this->assertEqual($ts, $expected_ts, t('Simple table headers plus non-overriding $_GET parameters sorted correctly.'));
+
+    // Test with simple table headers plus $_GET parameters that _should_
+    // override the default.
+
+    $_GET = array(
+      'q' => 'jahwohl',
+      'sort' => 'DESC',
+      // Add an unrelated parameter to ensure that tablesort will include
+      // it in the links that it creates.
+      'alpha' => 'beta',
+    );
+    $expected_ts['sort'] = 'desc';
+    $expected_ts['query'] = array('alpha' => 'beta');
+    $ts = tablesort_init($headers);
+    $this->verbose(strtr('$ts: <pre>!ts</pre>', array('!ts' => check_plain(var_export($ts, TRUE)))));
+    $this->assertEqual($ts, $expected_ts, t('Simple table headers plus $_GET parameters sorted correctly.'));
+
+    // Test complex table headers.
+
+    $headers = array(
+      'foo',
+      array(
+        'data' => '1',
+        'field' => 'one',
+        'sort' => 'asc',
+        'colspan' => 1,
+      ),
+      array(
+        'data' => '2',
+        'field' => 'two',
+        'sort' => 'desc',
+      ),
+    );
+    // Reset $_GET from previous assertion.
+    $_GET = array(
+      'q' => 'jahwohl',
+      'order' => '2',
+    );
+    $ts = tablesort_init($headers);
+    $expected_ts = array(
+      'name' => '2',
+      'sql' => 'two',
+      'sort' => 'desc',
+      'query' => array(),
+    );
+    $this->verbose(strtr('$ts: <pre>!ts</pre>', array('!ts' => check_plain(var_export($ts, TRUE)))));
+    $this->assertEqual($ts, $expected_ts, t('Complex table headers sorted correctly.'));
+
+    // Test complex table headers plus $_GET parameters that should _not_
+    // override the default.
+
+    $_GET = array(
+      'q' => 'jahwohl',
+      // This should not override the table order because this header does not
+      // exist.
+      'order' => 'bar',
+    );
+    $ts = tablesort_init($headers);
+    $expected_ts = array(
+      'name' => '1',
+      'sql' => 'one',
+      'sort' => 'asc',
+      'query' => array(),
+    );
+    $this->verbose(strtr('$ts: <pre>!ts</pre>', array('!ts' => check_plain(var_export($ts, TRUE)))));
+    $this->assertEqual($ts, $expected_ts, t('Complex table headers plus non-overriding $_GET parameters sorted correctly.'));
+    unset($_GET['sort'], $_GET['order'], $_GET['alpha']);
+
+    // Test complex table headers plus $_GET parameters that _should_
+    // override the default.
+
+    $_GET = array(
+      'q' => 'jahwohl',
+      'order' => '1',
+      'sort' => 'ASC',
+      // Add an unrelated parameter to ensure that tablesort will include
+      // it in the links that it creates.
+      'alpha' => 'beta',
+    );
+    $expected_ts = array(
+      'name' => '1',
+      'sql' => 'one',
+      'sort' => 'asc',
+      'query' => array('alpha' => 'beta'),
+    );
+    $ts = tablesort_init($headers);
+    $this->verbose(strtr('$ts: <pre>!ts</pre>', array('!ts' => check_plain(var_export($ts, TRUE)))));
+    $this->assertEqual($ts, $expected_ts, t('Complex table headers plus $_GET parameters sorted correctly.'));
+    unset($_GET['sort'], $_GET['order'], $_GET['alpha']);
+
+  }
+}
diff --git a/modules/simpletest/tests/taxonomy_test.info b/modules/simpletest/tests/taxonomy_test.info
index eaa9c04..e5bb4f1 100644
--- a/modules/simpletest/tests/taxonomy_test.info
+++ b/modules/simpletest/tests/taxonomy_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Taxonomy test module"
 description = "Tests functions and hooks not used in core".
 package = Testing
diff --git a/modules/simpletest/tests/taxonomy_test.install b/modules/simpletest/tests/taxonomy_test.install
index 420be1b..d5c94da 100644
--- a/modules/simpletest/tests/taxonomy_test.install
+++ b/modules/simpletest/tests/taxonomy_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/taxonomy_test.module b/modules/simpletest/tests/taxonomy_test.module
index d524fb8..aae13a2 100644
--- a/modules/simpletest/tests/taxonomy_test.module
+++ b/modules/simpletest/tests/taxonomy_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/theme.test b/modules/simpletest/tests/theme.test
index d7d734b..d0ad77d 100644
--- a/modules/simpletest/tests/theme.test
+++ b/modules/simpletest/tests/theme.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/theme_test.info b/modules/simpletest/tests/theme_test.info
index d3b8a7e..72cd23b 100644
--- a/modules/simpletest/tests/theme_test.info
+++ b/modules/simpletest/tests/theme_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Theme test"
 description = "Support module for theme system testing."
 package = Testing
diff --git a/modules/simpletest/tests/theme_test.module b/modules/simpletest/tests/theme_test.module
index ff525ec..160d192 100644
--- a/modules/simpletest/tests/theme_test.module
+++ b/modules/simpletest/tests/theme_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_menu().
diff --git a/modules/simpletest/tests/unicode.test b/modules/simpletest/tests/unicode.test
index 6e39d11..47a4938 100644
--- a/modules/simpletest/tests/unicode.test
+++ b/modules/simpletest/tests/unicode.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/update.test b/modules/simpletest/tests/update.test
index c4d3828..966efff 100644
--- a/modules/simpletest/tests/update.test
+++ b/modules/simpletest/tests/update.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/update_test_1.info b/modules/simpletest/tests/update_test_1.info
index a55878e..d9764ee 100644
--- a/modules/simpletest/tests/update_test_1.info
+++ b/modules/simpletest/tests/update_test_1.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Update test"
 description = "Support module for update testing."
 package = Testing
diff --git a/modules/simpletest/tests/update_test_1.install b/modules/simpletest/tests/update_test_1.install
index ac69a35..f4a86c7 100644
--- a/modules/simpletest/tests/update_test_1.install
+++ b/modules/simpletest/tests/update_test_1.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/update_test_1.module b/modules/simpletest/tests/update_test_1.module
index 13bb990..b3d9bbc 100644
--- a/modules/simpletest/tests/update_test_1.module
+++ b/modules/simpletest/tests/update_test_1.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/modules/simpletest/tests/update_test_2.info b/modules/simpletest/tests/update_test_2.info
index a55878e..d9764ee 100644
--- a/modules/simpletest/tests/update_test_2.info
+++ b/modules/simpletest/tests/update_test_2.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Update test"
 description = "Support module for update testing."
 package = Testing
diff --git a/modules/simpletest/tests/update_test_2.install b/modules/simpletest/tests/update_test_2.install
index e12b77b..9c076ff 100644
--- a/modules/simpletest/tests/update_test_2.install
+++ b/modules/simpletest/tests/update_test_2.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/update_test_2.module b/modules/simpletest/tests/update_test_2.module
index 13bb990..b3d9bbc 100644
--- a/modules/simpletest/tests/update_test_2.module
+++ b/modules/simpletest/tests/update_test_2.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/modules/simpletest/tests/update_test_3.info b/modules/simpletest/tests/update_test_3.info
index a55878e..d9764ee 100644
--- a/modules/simpletest/tests/update_test_3.info
+++ b/modules/simpletest/tests/update_test_3.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Update test"
 description = "Support module for update testing."
 package = Testing
diff --git a/modules/simpletest/tests/update_test_3.install b/modules/simpletest/tests/update_test_3.install
index 1954123..c3f6b75 100644
--- a/modules/simpletest/tests/update_test_3.install
+++ b/modules/simpletest/tests/update_test_3.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/update_test_3.module b/modules/simpletest/tests/update_test_3.module
index 13bb990..b3d9bbc 100644
--- a/modules/simpletest/tests/update_test_3.module
+++ b/modules/simpletest/tests/update_test_3.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/modules/simpletest/tests/upgrade/drupal-6.bare.database.php b/modules/simpletest/tests/upgrade/drupal-6.bare.database.php
index 7e78e1b..40c7562 100644
--- a/modules/simpletest/tests/upgrade/drupal-6.bare.database.php
+++ b/modules/simpletest/tests/upgrade/drupal-6.bare.database.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -7902,7 +7901,7 @@ db_insert('users')->fields(array(
   'access' => '0',
   'login' => '0',
   'status' => '0',
-  'timezone' => NULL,
+  'timezone' => '-21600',
   'language' => '',
   'picture' => '',
   'init' => '',
@@ -7923,7 +7922,7 @@ db_insert('users')->fields(array(
   'access' => '1277671612',
   'login' => '1277671612',
   'status' => '1',
-  'timezone' => NULL,
+  'timezone' => '-21600',
   'language' => '',
   'picture' => '',
   'init' => 'admin@example.com',
diff --git a/modules/simpletest/tests/upgrade/drupal-6.filled.database.php b/modules/simpletest/tests/upgrade/drupal-6.filled.database.php
index 7afa044..a916281 100644
--- a/modules/simpletest/tests/upgrade/drupal-6.filled.database.php
+++ b/modules/simpletest/tests/upgrade/drupal-6.filled.database.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/upgrade/drupal-6.forum.database.php b/modules/simpletest/tests/upgrade/drupal-6.forum.database.php
new file mode 100644
index 0000000..07dfcb3
--- /dev/null
+++ b/modules/simpletest/tests/upgrade/drupal-6.forum.database.php
@@ -0,0 +1,261 @@
+<?php
+// $Id$
+
+/**
+ * Database additions for forum tests.
+ */
+
+db_create_table('forum', array(
+  'fields' => array(
+    'nid' => array(
+      'type' => 'int',
+      'unsigned' => TRUE,
+      'not null' => TRUE,
+      'default' => 0,
+    ),
+    'vid' => array(
+      'type' => 'int',
+      'unsigned' => TRUE,
+      'not null' => TRUE,
+      'default' => 0,
+    ),
+    'tid' => array(
+      'type' => 'int',
+      'unsigned' => TRUE,
+      'not null' => TRUE,
+      'default' => 0,
+    ),
+  ),
+  'indexes' => array(
+    'nid' => array(
+      'nid',
+    ),
+    'tid' => array(
+      'tid',
+    ),
+  ),
+  'primary key' => array(
+    'vid',
+  ),
+  'module' => 'forum',
+  'name' => 'forum',
+));
+db_insert('forum')->fields(array(
+  'nid',
+  'vid',
+  'tid',
+))
+->values(array(
+  'nid' => '51',
+  'vid' => '61',
+  'tid' => '81',
+))
+->execute();
+
+db_insert('node')->fields(array(
+  'nid',
+  'vid',
+  'type',
+  'language',
+  'title',
+  'uid',
+  'status',
+  'created',
+  'changed',
+  'comment',
+  'promote',
+  'moderate',
+  'sticky',
+  'tnid',
+  'translate',
+))
+->values(array(
+  'nid' => '51',
+  'vid' => '61',
+  'type' => 'forum',
+  'language' => '',
+  'title' => 'Apples',
+  'uid' => '1',
+  'status' => '1',
+  'created' => '1298363952',
+  'changed' => '1298363952',
+  'comment' => '2',
+  'promote' => '0',
+  'moderate' => '0',
+  'sticky' => '0',
+  'tnid' => '0',
+  'translate' => '0',
+))
+->execute();
+
+db_insert('node_revisions')->fields(array(
+  'nid',
+  'vid',
+  'uid',
+  'title',
+  'body',
+  'teaser',
+  'log',
+  'timestamp',
+  'format',
+))
+->values(array(
+  'nid' => '51',
+  'vid' => '61',
+  'uid' => '1',
+  'title' => 'Apples',
+  'body' => 'A fruit.',
+  'teaser' => 'A fruit.',
+  'log' => '',
+  'timestamp' => '1298363952',
+  'format' => '1',
+))
+->execute();
+
+db_insert('node_comment_statistics')->fields(array(
+  'nid',
+  'last_comment_timestamp',
+  'last_comment_name',
+  'last_comment_uid',
+  'comment_count',
+))
+->values(array(
+  'nid' => '51',
+  'last_comment_timestamp' => '1298363952',
+  'last_comment_name' => NULL,
+  'last_comment_uid' => '1',
+  'comment_count' => '0',
+))
+->execute();
+
+db_insert('node_type')->fields(array(
+  'type',
+  'name',
+  'module',
+  'description',
+  'help',
+  'has_title',
+  'title_label',
+  'has_body',
+  'body_label',
+  'min_word_count',
+  'custom',
+  'modified',
+  'locked',
+  'orig_type',
+))
+->values(array(
+  'type' => 'forum',
+  'name' => 'Forum topic',
+  'module' => 'forum',
+  'description' => 'A <em>forum topic</em> is the initial post to a new discussion thread within a forum.',
+  'help' => '',
+  'has_title' => '1',
+  'title_label' => 'Subject',
+  'has_body' => '1',
+  'body_label' => 'Body',
+  'min_word_count' => '0',
+  'custom' => '0',
+  'modified' => '0',
+  'locked' => '1',
+  'orig_type' => 'forum',
+))
+->execute();
+
+db_update('system')->fields(array(
+  'schema_version' => '6000',
+  'status' => '1',
+))
+->condition('filename', 'modules/forum/forum.module')
+->execute();
+
+db_insert('term_data')->fields(array(
+  'tid',
+  'vid',
+  'name',
+  'description',
+  'weight',
+))
+->values(array(
+  'tid' => '81',
+  'vid' => '101',
+  'name' => 'Fruits',
+  'description' => 'Fruits.',
+  'weight' => '0',
+))
+->execute();
+
+db_insert('term_hierarchy')->fields(array(
+  'tid',
+  'parent',
+))
+->values(array(
+  'tid' => '81',
+  'parent' => '0',
+))
+->execute();
+
+db_insert('term_node')->fields(array(
+  'nid',
+  'vid',
+  'tid',
+))
+->values(array(
+  'nid' => '51',
+  'vid' => '61',
+  'tid' => '81',
+))
+->execute();
+
+db_insert('variable')->fields(array(
+  'name',
+  'value',
+))
+->values(array(
+  'name' => 'forum_nav_vocabulary',
+  'value' => 's:3:"101";',
+))
+->values(array(
+  'name' => 'forum_containers',
+  'value' => 'a:1:{i:0;s:3:"101";}',
+))
+->execute();
+
+db_insert('vocabulary')->fields(array(
+  'vid',
+  'name',
+  'description',
+  'help',
+  'relations',
+  'hierarchy',
+  'multiple',
+  'required',
+  'tags',
+  'module',
+  'weight',
+))
+->values(array(
+  'vid' => '101',
+  'name' => 'Upgrade test for forums',
+  'description' => 'Vocabulary used for Forums. The name is changed from the default "Forums" so that the upgrade path may be tested.',
+  'help' => '',
+  'relations' => '1',
+  'hierarchy' => '1',
+  'multiple' => '0',
+  'required' => '0',
+  'tags' => '0',
+  'module' => 'forum',
+  'weight' => '-10',
+))
+->execute();
+
+db_insert('vocabulary_node_types')->fields(array(
+  'vid',
+  'type',
+))
+->values(array(
+  'vid' => '101',
+  'type' => 'forum',
+))
+->execute();
+
diff --git a/modules/simpletest/tests/upgrade/drupal-6.locale.database.php b/modules/simpletest/tests/upgrade/drupal-6.locale.database.php
index d4ea09f..c8af671 100644
--- a/modules/simpletest/tests/upgrade/drupal-6.locale.database.php
+++ b/modules/simpletest/tests/upgrade/drupal-6.locale.database.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Database additions for locale tests.
diff --git a/modules/simpletest/tests/upgrade/drupal-6.upload.database.php b/modules/simpletest/tests/upgrade/drupal-6.upload.database.php
index 94733ed..493483f 100644
--- a/modules/simpletest/tests/upgrade/drupal-6.upload.database.php
+++ b/modules/simpletest/tests/upgrade/drupal-6.upload.database.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 db_insert('files')->fields(array(
   'fid',
diff --git a/modules/simpletest/tests/upgrade/upgrade.comment.test b/modules/simpletest/tests/upgrade/upgrade.comment.test
index db89942..5fcf0b4 100644
--- a/modules/simpletest/tests/upgrade/upgrade.comment.test
+++ b/modules/simpletest/tests/upgrade/upgrade.comment.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Upgrade test for comment.module.
diff --git a/modules/simpletest/tests/upgrade/upgrade.filter.test b/modules/simpletest/tests/upgrade/upgrade.filter.test
index 732e757..86248b7 100644
--- a/modules/simpletest/tests/upgrade/upgrade.filter.test
+++ b/modules/simpletest/tests/upgrade/upgrade.filter.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Upgrade test for filter format identifiers.
diff --git a/modules/simpletest/tests/upgrade/upgrade.forum.test b/modules/simpletest/tests/upgrade/upgrade.forum.test
new file mode 100644
index 0000000..827988d
--- /dev/null
+++ b/modules/simpletest/tests/upgrade/upgrade.forum.test
@@ -0,0 +1,61 @@
+<?php
+// $Id$
+
+/**
+ * Upgrade test for forum.module.
+ */
+class ForumUpgradePathTestCase extends UpgradePathTestCase {
+  public static function getInfo() {
+    return array(
+      'name'  => 'Forum upgrade path',
+      'description'  => 'Upgrade path tests for the Forum module.',
+      'group' => 'Upgrade path',
+    );
+  }
+
+  public function setUp() {
+    // Path to the database dump files.
+    $this->databaseDumpFiles = array(
+      drupal_get_path('module', 'simpletest') . '/tests/upgrade/drupal-6.filled.database.php',
+      drupal_get_path('module', 'simpletest') . '/tests/upgrade/drupal-6.forum.database.php',
+    );
+    parent::setUp();
+
+    $this->uninstallModulesExcept(array('comment', 'forum', 'taxonomy'));
+  }
+
+  /**
+   * Test a successful upgrade (no negotiation).
+   */
+  public function testForumUpgrade() {
+    $this->assertTrue($this->performUpgrade(), t('The upgrade was completed successfully.'));
+
+    // Work around http://drupal.org/node/931512
+    $this->drupalPost('admin/structure/types/manage/forum/fields', array(), t('Save'));
+
+    // The D6 database forum vocabulary contains the term "Fruits" with id 81.
+    $tid = 81;
+    $this->drupalGet("forum/$tid");
+
+    // There is one forum topic in Fruits, with the title "Apples".
+    $this->clickLink('Apples');
+    $this->clickLink('Edit');
+
+    // Add a forum topic "Bananas" to the "Fruits" forum.
+    $edit = array(
+      'title' => $title = 'Bananas',
+      'body[' . LANGUAGE_NONE . '][0][value]' => $body = 'It is another fruit.',
+    );
+    $this->drupalPost("node/add/forum/$tid", $edit, t('Save'));
+    $type = t('Forum topic');
+    $this->assertRaw(t('@type %title has been created.', array('@type' => $type, '%title' => $title)), t('Forum topic was created'));
+
+    // Retrieve node object, ensure that the topic was created and in the proper forum.
+    $node = $this->drupalGetNodeByTitle($title);
+    $this->assertTrue($node != NULL, t('Node @title was loaded', array('@title' => $title)));
+    $this->assertEqual($node->taxonomy_forums[LANGUAGE_NONE][0]['tid'], $tid, 'Saved forum topic was in the expected forum');
+
+    $this->drupalGet("forum/$tid");
+    $this->assertText('Bananas');
+    }
+}
diff --git a/modules/simpletest/tests/upgrade/upgrade.locale.test b/modules/simpletest/tests/upgrade/upgrade.locale.test
index 66ea14e..aec559d 100644
--- a/modules/simpletest/tests/upgrade/upgrade.locale.test
+++ b/modules/simpletest/tests/upgrade/upgrade.locale.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Upgrade test for locale.module.
diff --git a/modules/simpletest/tests/upgrade/upgrade.node.test b/modules/simpletest/tests/upgrade/upgrade.node.test
index d2366b7..163dbef 100644
--- a/modules/simpletest/tests/upgrade/upgrade.node.test
+++ b/modules/simpletest/tests/upgrade/upgrade.node.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Upgrade test for node bodies.
diff --git a/modules/simpletest/tests/upgrade/upgrade.poll.test b/modules/simpletest/tests/upgrade/upgrade.poll.test
index 12aff8b..9bbbf90 100644
--- a/modules/simpletest/tests/upgrade/upgrade.poll.test
+++ b/modules/simpletest/tests/upgrade/upgrade.poll.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Upgrade test for poll.module.
diff --git a/modules/simpletest/tests/upgrade/upgrade.taxonomy.test b/modules/simpletest/tests/upgrade/upgrade.taxonomy.test
index 92db17e..dadb98e 100644
--- a/modules/simpletest/tests/upgrade/upgrade.taxonomy.test
+++ b/modules/simpletest/tests/upgrade/upgrade.taxonomy.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Test taxonomy upgrades.
diff --git a/modules/simpletest/tests/upgrade/upgrade.test b/modules/simpletest/tests/upgrade/upgrade.test
index 263baff..8a3da81 100644
--- a/modules/simpletest/tests/upgrade/upgrade.test
+++ b/modules/simpletest/tests/upgrade/upgrade.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Perform end-to-end tests of the upgrade path.
diff --git a/modules/simpletest/tests/upgrade/upgrade.upload.test b/modules/simpletest/tests/upgrade/upgrade.upload.test
index a0402a3..e3e1dc2 100644
--- a/modules/simpletest/tests/upgrade/upgrade.upload.test
+++ b/modules/simpletest/tests/upgrade/upgrade.upload.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Upgrade test for comment.module.
diff --git a/modules/simpletest/tests/url_alter_test.info b/modules/simpletest/tests/url_alter_test.info
index 0d1deb2..a8e9474 100644
--- a/modules/simpletest/tests/url_alter_test.info
+++ b/modules/simpletest/tests/url_alter_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Url_alter tests
 description = A support modules for url_alter hook testing.
 core = 7.x
diff --git a/modules/simpletest/tests/url_alter_test.install b/modules/simpletest/tests/url_alter_test.install
index 89454f3..6e09ab5 100644
--- a/modules/simpletest/tests/url_alter_test.install
+++ b/modules/simpletest/tests/url_alter_test.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Impelement hook_install().
diff --git a/modules/simpletest/tests/url_alter_test.module b/modules/simpletest/tests/url_alter_test.module
index da6cd63..e229ab9 100644
--- a/modules/simpletest/tests/url_alter_test.module
+++ b/modules/simpletest/tests/url_alter_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/simpletest/tests/xmlrpc.test b/modules/simpletest/tests/xmlrpc.test
index 5069fe2..1b5bff3 100644
--- a/modules/simpletest/tests/xmlrpc.test
+++ b/modules/simpletest/tests/xmlrpc.test
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Perform basic XML-RPC tests that do not require addition callbacks.
@@ -43,6 +42,16 @@ class XMLRPCBasicTestCase extends DrupalWebTestCase {
   }
 
   /**
+   * Ensure that system.methodSignature returns an array of signatures.
+   */
+  protected function testMethodSignature() {
+    $url = url(NULL, array('absolute' => TRUE)) . 'xmlrpc.php';
+    $signature = xmlrpc($url, array('system.methodSignature' => array('system.listMethods')));
+    $this->assert(is_array($signature) && !empty($signature) && is_array($signature[0]),
+      t('system.methodSignature returns an array of signature arrays.'));
+  }
+
+  /**
    * Ensure that XML-RPC correctly handles invalid messages when parsing.
    */
   protected function testInvalidMessageParsing() {
diff --git a/modules/simpletest/tests/xmlrpc_test.info b/modules/simpletest/tests/xmlrpc_test.info
index 773015d..bddfc95 100644
--- a/modules/simpletest/tests/xmlrpc_test.info
+++ b/modules/simpletest/tests/xmlrpc_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "XML-RPC Test"
 description = "Support module for XML-RPC tests according to the validator1 specification."
 package = Testing
diff --git a/modules/simpletest/tests/xmlrpc_test.module b/modules/simpletest/tests/xmlrpc_test.module
index f52afe3..db8f113 100644
--- a/modules/simpletest/tests/xmlrpc_test.module
+++ b/modules/simpletest/tests/xmlrpc_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 function xmlrpc_test_arrayOfStructsTest($array) {
   $sum = 0;
diff --git a/modules/statistics/statistics.admin.inc b/modules/statistics/statistics.admin.inc
index c5cbbb9..6606b8b 100644
--- a/modules/statistics/statistics.admin.inc
+++ b/modules/statistics/statistics.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/statistics/statistics.info b/modules/statistics/statistics.info
index 4075e6e..d3d1f54 100644
--- a/modules/statistics/statistics.info
+++ b/modules/statistics/statistics.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Statistics
 description = Logs access statistics for your site.
 package = Core
diff --git a/modules/statistics/statistics.install b/modules/statistics/statistics.install
index b0b016b..d5855a7 100644
--- a/modules/statistics/statistics.install
+++ b/modules/statistics/statistics.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/statistics/statistics.module b/modules/statistics/statistics.module
index 39f7e5a..6b7be8a 100644
--- a/modules/statistics/statistics.module
+++ b/modules/statistics/statistics.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/statistics/statistics.pages.inc b/modules/statistics/statistics.pages.inc
index 545dc13..bb31f98 100644
--- a/modules/statistics/statistics.pages.inc
+++ b/modules/statistics/statistics.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/statistics/statistics.test b/modules/statistics/statistics.test
index 98f35b4..126828f 100644
--- a/modules/statistics/statistics.test
+++ b/modules/statistics/statistics.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for statistics.module.
+ */
 
 /**
  * Sets up a base class for the Statistics module.
@@ -434,7 +438,7 @@ class StatisticsTokenReplaceTestCase extends StatisticsTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('node' => $node), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Statistics token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Statistics token %token replaced.', array('%token' => $input)));
     }
   }
 }
diff --git a/modules/statistics/statistics.tokens.inc b/modules/statistics/statistics.tokens.inc
index 1eb5b5d..c2c8fc3 100644
--- a/modules/statistics/statistics.tokens.inc
+++ b/modules/statistics/statistics.tokens.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/syslog/syslog.info b/modules/syslog/syslog.info
index 01a5b88..e0ef55c 100644
--- a/modules/syslog/syslog.info
+++ b/modules/syslog/syslog.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Syslog
 description = Logs and records system events to syslog.
 package = Core
diff --git a/modules/syslog/syslog.install b/modules/syslog/syslog.install
index feebb63..12ff4fb 100644
--- a/modules/syslog/syslog.install
+++ b/modules/syslog/syslog.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/syslog/syslog.module b/modules/syslog/syslog.module
index e887ce2..c4ee382 100644
--- a/modules/syslog/syslog.module
+++ b/modules/syslog/syslog.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/syslog/syslog.test b/modules/syslog/syslog.test
index 4f0950d..691fb7d 100644
--- a/modules/syslog/syslog.test
+++ b/modules/syslog/syslog.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for syslog.module.
+ */
 
 class SyslogTestCase extends DrupalWebTestCase {
   public static function getInfo() {
diff --git a/modules/system/html.tpl.php b/modules/system/html.tpl.php
index 8d560b1..0e01277 100644
--- a/modules/system/html.tpl.php
+++ b/modules/system/html.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/image.gd.inc b/modules/system/image.gd.inc
index b10595f..a3f76d4 100644
--- a/modules/system/image.gd.inc
+++ b/modules/system/image.gd.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/maintenance-page.tpl.php b/modules/system/maintenance-page.tpl.php
index f0aec34..31de3bb 100644
--- a/modules/system/maintenance-page.tpl.php
+++ b/modules/system/maintenance-page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/page.tpl.php b/modules/system/page.tpl.php
index 704ec5c..8ffe82a 100644
--- a/modules/system/page.tpl.php
+++ b/modules/system/page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/region.tpl.php b/modules/system/region.tpl.php
index 1980c22..b29e24f 100644
--- a/modules/system/region.tpl.php
+++ b/modules/system/region.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/system.admin-rtl.css b/modules/system/system.admin-rtl.css
index 959613c..362a406 100644
--- a/modules/system/system.admin-rtl.css
+++ b/modules/system/system.admin-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.admin.css b/modules/system/system.admin.css
index adcc369..43340b5 100644
--- a/modules/system/system.admin.css
+++ b/modules/system/system.admin.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.admin.inc b/modules/system/system.admin.inc
index 3be8ea1..9e7d69d 100644
--- a/modules/system/system.admin.inc
+++ b/modules/system/system.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -55,6 +54,7 @@ function system_admin_config_page() {
 
 /**
  * Provide a single block from the administration menu as a page.
+ *
  * This function is often a destination for these blocks.
  * For example, 'admin/structure/types' needs to have a destination to be valid
  * in the Drupal menu system, but too much information there might be
@@ -158,7 +158,6 @@ function system_themes_page() {
           'alt' => t('Screenshot for !theme theme', array('!theme' => $theme->info['name'])),
           'title' => t('Screenshot for !theme theme', array('!theme' => $theme->info['name'])),
           'attributes' => array('class' => array('screenshot')),
-          'getsize' => FALSE,
         );
         break;
       }
@@ -350,6 +349,14 @@ function system_theme_default() {
       }
       // Set the default theme.
       variable_set('theme_default', $theme);
+
+      // Rebuild the menu. This duplicates the menu_rebuild() in theme_enable().
+      // However, modules must know the current default theme in order to use
+      // this information in hook_menu() or hook_menu_alter() implementations,
+      // and doing the variable_set() before the theme_enable() could result
+      // in a race condition where the theme is default but not enabled.
+      menu_rebuild();
+
       // The status message depends on whether an admin theme is currently in use:
       // a value of 0 means the admin theme is set to be the default theme.
       $admin_theme = variable_get('admin_theme', 0);
@@ -1030,7 +1037,7 @@ function system_modules_confirm_form($modules, $storage) {
       '@module' => $name,
       '@depends' => implode(', ', $info['depends']),
     );
-    $items[] = format_plural(count($info['depends']), 'The @module module is missing, so the following module will be disabled: @depends.', 'The @module module is missing, so the following module will be disabled: @depends.', $t_argument);
+    $items[] = format_plural(count($info['depends']), 'The @module module is missing, so the following module will be disabled: @depends.', 'The @module module is missing, so the following modules will be disabled: @depends.', $t_argument);
   }
 
   $form['text'] = array('#markup' => theme('item_list', array('items' => $items)));
@@ -1182,11 +1189,6 @@ function system_modules_submit($form, &$form_state) {
   }
 
   $form_state['redirect'] = 'admin/modules';
-
-  // Notify locale module about module changes, so translations can be
-  // imported. This might start a batch, and only return to the redirect
-  // path after that.
-  module_invoke('locale', 'system_update', $actions['install']);
 }
 
 /**
diff --git a/modules/system/system.api.php b/modules/system/system.api.php
index fcc3a37..c7db6f1 100644
--- a/modules/system/system.api.php
+++ b/modules/system/system.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -76,6 +75,7 @@ function hook_hook_info_alter(&$hooks) {
  *     Leave blank to use the DrupalDefaultEntityController implementation.
  *   - base table: (used by DrupalDefaultEntityController) The name of the
  *     entity type's base table.
+ *   - revision table: The name of the entity type's revision table (if any).
  *   - static cache: (used by DrupalDefaultEntityController) FALSE to disable
  *     static caching of entities during a page request. Defaults to TRUE.
  *   - field cache: (used by Field API loading and saving of field data) FALSE
@@ -87,17 +87,18 @@ function hook_hook_info_alter(&$hooks) {
  *   - uri callback: A function taking an entity as argument and returning the
  *     uri elements of the entity, e.g. 'path' and 'options'. The actual entity
  *     uri can be constructed by passing these elements to url().
- *   - label callback: (optional) A function taking an entity as argument and
- *     returning the label of the entity. The entity label is the main string
- *     associated with an entity; for example, the title of a node or the
- *     subject of a comment. If there is an entity object property that defines
- *     the label, use the 'label' element of the 'entity keys' return
- *     value component to provide this information (see below). If more complex
- *     logic is needed to determine the label of an entity, you can instead
- *     specify a callback function here, which will be called to determine the
- *     entity label. See also the entity_label() function, which implements this
- *     logic.
- *   - fieldable: Set to TRUE if you want your entity type to be fieldable.
+ *   - label callback: (optional) A function taking an entity and an entity type
+ *     as arguments and returning the label of the entity. The entity label is
+ *     the main string associated with an entity; for example, the title of a
+ *     node or the subject of a comment. If there is an entity object property
+ *     that defines the label, use the 'label' element of the 'entity keys'
+ *     return value component to provide this information (see below). If more
+ *     complex logic is needed to determine the label of an entity, you can
+ *     instead specify a callback function here, which will be called to
+ *     determine the entity label. See also the entity_label() function, which
+ *     implements this logic.
+ *   - fieldable: Set to TRUE if you want your entity type to accept fields
+ *     being attached to it.
  *   - translation: An associative array of modules registered as field
  *     translation handlers. Array keys are the module names, array values
  *     can be any data structure the module uses to provide field translation.
@@ -123,12 +124,15 @@ function hook_hook_info_alter(&$hooks) {
  *       build the label, a 'label callback' should be defined instead (see
  *       the 'label callback' section above for details).
  *   - bundle keys: An array describing how the Field API can extract the
- *     information it needs from the bundle objects for this type (e.g
- *     $vocabulary objects for terms; not applicable for nodes). This entry can
- *     be omitted if this type's bundles do not exist as standalone objects.
- *     Elements:
- *     - bundle: The name of the property that contains the name of the bundle
- *       object.
+ *     information it needs from the bundle objects for this type. This entry
+ *     is required if the 'path' provided in the 'bundles'/'admin' section
+ *     identifies the bundle using a named menu placeholder whose loader
+ *     callback returns an object (e.g., $vocabulary for taxonomy terms, or
+ *     $node_type for nodes). If the path does not include the bundle, or the
+ *     bundle is just a string rather than an automatically loaded object, then
+ *     this can be omitted. Elements:
+ *     - bundle: The name of the property of the bundle object that contains
+ *       the name of the bundle object.
  *   - bundles: An array describing all bundles for this object type. Keys are
  *     bundles machine names, as found in the objects' 'bundle' property
  *     (defined in the 'entity keys' entry above). Elements:
@@ -142,9 +146,9 @@ function hook_hook_info_alter(&$hooks) {
  *       Elements:
  *       - path: the path of the bundle's main administration page, as defined
  *         in hook_menu(). If the path includes a placeholder for the bundle,
- *         the 'bundle argument', 'bundle helper' and 'real path' keys below
- *         are required.
- *       - bundle argument: The position of the placeholder in 'path', if any.
+ *         the 'bundle argument' and 'real path' keys below are required.
+ *       - bundle argument: The position of the bundle placeholder in 'path', if
+ *         any.
  *       - real path: The actual path (no placeholder) of the bundle's main
  *         administration page. This will be used to generate links.
  *       - access callback: As in hook_menu(). 'user_access' will be assumed if
@@ -498,8 +502,10 @@ function hook_admin_paths_alter(&$paths) {
  *   The entities keyed by entity ID.
  * @param $type
  *   The type of entities being loaded (i.e. node, user, comment).
+ * @param $langcode
+ *   The language to display the entity in.
  */
-function hook_entity_prepare_view($entities, $type) {
+function hook_entity_prepare_view($entities, $type, $langcode) {
   // Load a specific node into the user object for later theming.
   if ($type == 'user') {
     $nodes = mymodule_get_user_nodes(array_keys($entities));
@@ -512,8 +518,6 @@ function hook_entity_prepare_view($entities, $type) {
 /**
  * Perform periodic actions.
  *
- * This hook will only be called if cron.php is run (e.g. by crontab).
- *
  * Modules that require some commands to be executed periodically can
  * implement hook_cron(). The engine will then call the hook whenever a cron
  * run happens, as defined by the administrator. Typical tasks managed by
@@ -649,7 +653,7 @@ function hook_element_info() {
  * A module may implement this hook in order to alter the element type defaults
  * defined by a module.
  *
- * @param &$type
+ * @param $type
  *   All element type defaults as collected by hook_element_info().
  *
  * @see hook_element_info()
@@ -821,7 +825,7 @@ function hook_css_alter(&$css) {
 }
 
 /**
- * Alter the commands that are sent to the user through the AJAX framework.
+ * Alter the commands that are sent to the user through the Ajax framework.
  *
  * @param $commands
  *   An array of all commands that will be sent to the user.
@@ -871,7 +875,7 @@ function hook_page_build(&$page) {
  *
  * This hook is invoked by menu_get_item() and allows for run-time alteration of router
  * information (page_callback, title, and so on) before it is translated and checked for
- * access. The passed in $router_item is statically cached for the current request, so this
+ * access. The passed-in $router_item is statically cached for the current request, so this
  * hook is only invoked once for any router item that is retrieved via menu_get_item().
  *
  * Usually, modules will only want to inspect the router item and conditionally
@@ -922,6 +926,7 @@ function hook_menu_get_item_alter(&$router_item, $path, $original_map) {
  *     $items['abc/def'] = array(
  *       'page callback' => 'mymodule_abc_view',
  *     );
+ *     return $items;
  *   }
  *
  *   function mymodule_abc_view($ghi = 0, $jkl = '') {
@@ -950,6 +955,7 @@ function hook_menu_get_item_alter(&$router_item, $path, $original_map) {
  *       'page callback' => 'mymodule_abc_view',
  *       'page arguments' => array(1, 'foo'),
  *     );
+ *     return $items;
  *   }
  * @endcode
  * When path 'abc/def' is requested, the page callback function will get 'def'
@@ -1836,7 +1842,7 @@ function hook_mail_alter(&$message) {
  * hook in order to reorder the implementing modules, which are otherwise
  * ordered by the module's system weight.
  *
- * @param &$implementations
+ * @param $implementations
  *   An array keyed by the module's name. The value of each item corresponds
  *   to a $group, which is usually FALSE, unless the implementation is in a
  *   file named $module.$group.inc.
@@ -1863,7 +1869,7 @@ function hook_module_implements_alter(&$implementations, $hook) {
  * add to or alter the data generated by reading the .info file with
  * drupal_parse_info_file().
  *
- * @param &$info
+ * @param $info
  *   The .info file contents, passed by reference so that it can be altered.
  * @param $file
  *   Full information about the module or theme, including $file->name, and
@@ -1904,9 +1910,19 @@ function hook_system_info_alter(&$info, $file, $type) {
  *     have inherent security risks across a variety of potential use cases
  *     (for example, the "administer filters" and "bypass node access"
  *     permissions provided by Drupal core). When set to TRUE, a standard
- *     warning message defined in user_admin_permissions() will be associated
- *     with the permission and displayed with it on the permission
- *     administration page. Defaults to FALSE.
+ *     warning message defined in user_admin_permissions() and output via
+ *     theme_user_permission_description() will be associated with the
+ *     permission and displayed with it on the permission administration page.
+ *     Defaults to FALSE.
+ *   - warning: (optional) A translated warning message to display for this
+ *     permission on the permission administration page. This warning overrides
+ *     the automatic warning generated by 'restrict access' being set to TRUE.
+ *     This should rarely be used, since it is important for all permissions to
+ *     have a clear, consistent security warning that is the same across the
+ *     site. Use the 'description' key instead to provide any information that
+ *     is specific to the permission you are defining.
+ *
+ * @see theme_user_permission_description()
  */
 function hook_permission() {
   return array(
@@ -2353,7 +2369,7 @@ function hook_flush_caches() {
  * enable hooks are invoked.
  *
  * @param $modules
- *   An array of the installed modules.
+ *   An array of the modules that were installed.
  *
  * @see module_enable()
  * @see hook_modules_enabled()
@@ -2375,7 +2391,7 @@ function hook_modules_installed($modules) {
  * invoked.
  *
  * @param $modules
- *   An array of the enabled modules.
+ *   An array of the modules that were enabled.
  *
  * @see hook_enable()
  * @see hook_modules_installed()
@@ -2396,7 +2412,7 @@ function hook_modules_enabled($modules) {
  * is only called on the module actually being disabled.
  *
  * @param $modules
- *   An array of the disabled modules.
+ *   An array of the modules that were disabled.
  *
  * @see hook_disable()
  * @see hook_modules_uninstalled()
@@ -2414,11 +2430,11 @@ function hook_modules_disabled($modules) {
  * modules a chance to perform actions when a module is uninstalled, whereas
  * hook_uninstall() is only called on the module actually being uninstalled.
  *
- * It is recommended that you implement this module if your module
- * stores data that may have been set by other modules.
+ * It is recommended that you implement this hook if your module stores
+ * data that may have been set by other modules.
  *
  * @param $modules
- *   An array of the uninstalled modules.
+ *   An array of the modules that were uninstalled.
  *
  * @see hook_uninstall()
  * @see hook_modules_disabled()
@@ -2547,7 +2563,7 @@ function hook_file_load($files) {
  *
  * @see file_validate()
  */
-function hook_file_validate(&$file) {
+function hook_file_validate($file) {
   $errors = array();
 
   if (empty($file->filename)) {
@@ -2747,9 +2763,10 @@ function hook_file_url_alter(&$uri) {
 /**
  * Check installation requirements and do status reporting.
  *
- * This hook has two closely related uses, determined by the $phase argument:
- * checking installation requirements ($phase == 'install')
- * and status reporting ($phase == 'runtime').
+ * This hook has three closely related uses, determined by the $phase argument:
+ * - Checking installation requirements ($phase == 'install').
+ * - Checking update requirements ($phase == 'update').
+ * - Status reporting ($phase == 'runtime').
  *
  * Note that this hook, like all others dealing with installation and updates,
  * must reside in a module_name.install file, or it will not properly abort
@@ -3502,11 +3519,11 @@ function hook_install_tasks() {
 /**
  * Change the page the user is sent to by drupal_goto().
  *
- * @param &$path
+ * @param $path
  *   A Drupal path or a full URL.
- * @param &$options
+ * @param $options
  *   An associative array of additional URL options to pass to url().
- * @param &$http_response_code
+ * @param $http_response_code
  *   The HTTP status code to use for the redirection. See drupal_goto() for more
  *   information.
  */
@@ -3889,7 +3906,7 @@ function hook_date_formats_alter(&$formats) {
 function hook_page_delivery_callback_alter(&$callback) {
   // jQuery sets a HTTP_X_REQUESTED_WITH header of 'XMLHttpRequest'.
   // If a page would normally be delivered as an html page, and it is called
-  // from jQuery, deliver it instead as an AJAX response.
+  // from jQuery, deliver it instead as an Ajax response.
   if (isset($_SERVER['HTTP_X_REQUESTED_WITH']) && $_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest' && $callback == 'drupal_deliver_html_page') {
     $callback = 'ajax_deliver';
   }
@@ -3975,7 +3992,7 @@ function hook_url_outbound_alter(&$path, &$options, $original_path) {
  * displayed. Can be used to ensure user privacy in situations where
  * $account->name is too revealing.
  *
- * @param &$name
+ * @param $name
  *   The string that format_username() will return.
  *
  * @param $account
diff --git a/modules/system/system.archiver.inc b/modules/system/system.archiver.inc
index 5a09728..c37f07d 100644
--- a/modules/system/system.archiver.inc
+++ b/modules/system/system.archiver.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/system.base-rtl.css b/modules/system/system.base-rtl.css
index 16b92de..9099c9d 100644
--- a/modules/system/system.base-rtl.css
+++ b/modules/system/system.base-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.base.css b/modules/system/system.base.css
index 088cda8..a6748de 100644
--- a/modules/system/system.base.css
+++ b/modules/system/system.base.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.cron.js b/modules/system/system.cron.js
index 01809b0..af17dab 100644
--- a/modules/system/system.cron.js
+++ b/modules/system/system.cron.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/system/system.info b/modules/system/system.info
index 7ce48ed..28abf66 100644
--- a/modules/system/system.info
+++ b/modules/system/system.info
@@ -1,4 +1,3 @@
-; $Id$
 name = System
 description = Handles general site configuration for administrators.
 package = Core
diff --git a/modules/system/system.install b/modules/system/system.install
index eb6d017..e067444 100644
--- a/modules/system/system.install
+++ b/modules/system/system.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -33,7 +32,7 @@ function system_requirements($phase) {
     // is not running the default install profile.
     $profile = drupal_get_profile();
     if ($profile != 'standard') {
-      $info = install_profile_info($profile);
+      $info = system_get_info('module', $profile);
       $requirements['install_profile'] = array(
         'title' => $t('Install profile'),
         'value' => $t('%profile_name (%profile-%version)', array(
@@ -953,33 +952,6 @@ function system_schema() {
     ),
   );
 
-  $schema['history'] = array(
-    'description' => 'A record of which {users} have read which {node}s.',
-    'fields' => array(
-      'uid' => array(
-        'description' => 'The {users}.uid that read the {node} nid.',
-        'type' => 'int',
-        'not null' => TRUE,
-        'default' => 0,
-      ),
-      'nid' => array(
-        'description' => 'The {node}.nid that was read.',
-        'type' => 'int',
-        'not null' => TRUE,
-        'default' => 0,
-      ),
-      'timestamp' => array(
-        'description' => 'The Unix timestamp at which the read occurred.',
-        'type' => 'int',
-        'not null' => TRUE,
-        'default' => 0,
-      ),
-    ),
-    'primary key' => array('uid', 'nid'),
-    'indexes' => array(
-      'nid' => array('nid'),
-    ),
-  );
   $schema['menu_router'] = array(
     'description' => 'Maps paths to various callbacks (access, page and title)',
     'fields' => array(
@@ -1555,7 +1527,7 @@ function system_schema() {
         'default' => '',
       ),
       'type' => array(
-        'description' => 'The type of the item, either module, theme, theme_engine, or profile.',
+        'description' => 'The type of the item, either module, theme, or theme_engine.',
         'type' => 'varchar',
         'length' => 12,
         'not null' => TRUE,
@@ -2973,6 +2945,27 @@ function system_update_7069() {
 }
 
 /**
+ * Remove the obsolete 'drupal_badge_color' and 'drupal_badge_size' variables.
+ */
+function system_update_7070() {
+  variable_del('drupal_badge_color');
+  variable_del('drupal_badge_size');
+}
+
+/**
+ * Add index missed during upgrade, and fix field default.
+ */
+function system_update_7071() {
+  db_drop_index('date_format_type', 'title');
+  db_add_index('date_format_type', 'title', array('title'));
+  db_change_field('registry', 'filename', 'filename', array(
+    'type' => 'varchar',
+    'length' => 255,
+    'not null' => TRUE,
+  ));
+}
+
+/**
  * @} End of "defgroup updates-6.x-to-7.x"
  * The next series of updates should start at 8000.
  */
diff --git a/modules/system/system.js b/modules/system/system.js
index 3cee79f..5446d28 100644
--- a/modules/system/system.js
+++ b/modules/system/system.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
@@ -114,19 +113,6 @@ Drupal.behaviors.dateTime = {
   }
 };
 
-/**
- * Show the powered by Drupal image preview
- */
-Drupal.behaviors.poweredByPreview = {
-  attach: function (context, settings) {
-    $('#edit-color, #edit-size').change(function () {
-      var path = settings.basePath + 'misc/' + $('#edit-color').val() + '-' + $('#edit-size').val() + '.png';
-      $('img.powered-by-preview').attr('src', path);
-    });
-  }
-};
-
-
  /**
  * Show/hide settings for page caching depending on whether page caching is
  * enabled or not.
diff --git a/modules/system/system.mail.inc b/modules/system/system.mail.inc
index 181c3c4..ef50642 100644
--- a/modules/system/system.mail.inc
+++ b/modules/system/system.mail.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/system.maintenance.css b/modules/system/system.maintenance.css
index a4a64c1..5543c2d 100644
--- a/modules/system/system.maintenance.css
+++ b/modules/system/system.maintenance.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Update styles
diff --git a/modules/system/system.menus-rtl.css b/modules/system/system.menus-rtl.css
index 8c27ccb..be85245 100644
--- a/modules/system/system.menus-rtl.css
+++ b/modules/system/system.menus-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.menus.css b/modules/system/system.menus.css
index ec9003b..514b029 100644
--- a/modules/system/system.menus.css
+++ b/modules/system/system.menus.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.messages-rtl.css b/modules/system/system.messages-rtl.css
new file mode 100644
index 0000000..445417b
--- /dev/null
+++ b/modules/system/system.messages-rtl.css
@@ -0,0 +1,13 @@
+
+/**
+ * @file
+ * RTL Styles for system messages.
+ */
+
+div.messages {
+  background-position: 99% 8px;
+  padding: 10px 50px 10px 10px;
+}
+div.messages ul {
+  margin: 0 1em 0 0;
+}
diff --git a/modules/system/system.messages.css b/modules/system/system.messages.css
index 46338f4..ffd4e8e 100644
--- a/modules/system/system.messages.css
+++ b/modules/system/system.messages.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.module b/modules/system/system.module
index b5dfc54..5af9ad4 100644
--- a/modules/system/system.module
+++ b/modules/system/system.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -295,10 +294,10 @@ function system_element_info() {
     '#theme' => 'page',
     '#theme_wrappers' => array('html'),
   );
-  // By default, we don't want AJAX commands being rendered in the context of an
+  // By default, we don't want Ajax commands being rendered in the context of an
   // HTML page, so we don't provide defaults for #theme or #theme_wrappers.
   // However, modules can set these properties (for example, to provide an HTML
-  // debugging page that displays rather than executes AJAX commands).
+  // debugging page that displays rather than executes Ajax commands).
   $types['ajax'] = array(
     '#header' => TRUE,
     '#commands' => array(),
@@ -1079,7 +1078,7 @@ function _system_batch_theme() {
  * Implements hook_library().
  */
 function system_library() {
-  // Drupal's AJAX framework.
+  // Drupal's Ajax framework.
   $libraries['drupal.ajax'] = array(
     'title' => 'Drupal AJAX',
     'website' => 'http://api.drupal.org/api/drupal/includes--ajax.inc/group/ajax/7',
@@ -2387,9 +2386,14 @@ function _system_rebuild_module_data() {
     drupal_alter('system_info', $modules[$key]->info, $modules[$key], $type);
   }
 
-  // The install profile is required, if it's a valid module.
   if (isset($modules[$profile])) {
+    // The install profile is required, if it's a valid module.
     $modules[$profile]->info['required'] = TRUE;
+    // Add a default distribution name if the profile did not provide one. This
+    // matches the default value used in install_profile_info().
+    if (!isset($modules[$profile]->info['distribution_name'])) {
+      $modules[$profile]->info['distribution_name'] = 'Drupal';
+    }
   }
 
   return $modules;
@@ -2677,7 +2681,7 @@ function system_region_list($theme_key, $show = REGIONS_ALL) {
   // If requested, suppress hidden regions. See block_admin_display_form().
   foreach ($info['regions'] as $name => $label) {
     if ($show == REGIONS_ALL || !isset($info['regions_hidden']) || !in_array($name, $info['regions_hidden'])) {
-      $list[$name] = $label;
+      $list[$name] = t($label);
     }
   }
 
@@ -3451,7 +3455,7 @@ function system_page_alter(&$page) {
  */
 function system_run_automated_cron() {
   // If the site is not fully installed, suppress the automated cron run.
-  // Otherwise it could be triggered prematurely by AJAX requests during
+  // Otherwise it could be triggered prematurely by Ajax requests during
   // installation.
   if (($threshold = variable_get('cron_safe_threshold', DRUPAL_CRON_DEFAULT_THRESHOLD)) > 0 && variable_get('install_task') == 'done') {
     $cron_last = variable_get('cron_last', NULL);
diff --git a/modules/system/system.queue.inc b/modules/system/system.queue.inc
index b6cf96e..806015c 100644
--- a/modules/system/system.queue.inc
+++ b/modules/system/system.queue.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/system.test b/modules/system/system.test
index 549df44..be4e366 100644
--- a/modules/system/system.test
+++ b/modules/system/system.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for system.module.
+ */
 
 /**
  * Helper class for module test cases.
@@ -1355,7 +1359,7 @@ class SystemThemeFunctionalTest extends DrupalWebTestCase {
   function setUp() {
     parent::setUp();
 
-    $this->admin_user = $this->drupalCreateUser(array('access administration pages', 'view the administration theme', 'administer themes', 'bypass node access'));
+    $this->admin_user = $this->drupalCreateUser(array('access administration pages', 'view the administration theme', 'administer themes', 'bypass node access', 'administer blocks'));
     $this->drupalLogin($this->admin_user);
     $this->node = $this->drupalCreateNode();
   }
@@ -1439,6 +1443,26 @@ class SystemThemeFunctionalTest extends DrupalWebTestCase {
     $this->drupalGet('node/add');
     $this->assertRaw('themes/bartik', t('Site default theme used on the add content page.'));
   }
+
+  /**
+   * Test switching the default theme.
+   */
+  function testSwitchDefaultTheme() {
+    // Enable "stark" and set it as the default theme.
+    theme_enable(array('stark'));
+    $this->drupalGet('admin/appearance');
+    $this->clickLink(t('Set default'), 1);
+    $this->assertTrue(variable_get('theme_default', '') == 'stark', t('Site default theme switched successfully.'));
+
+    // Test the default theme on the secondary links (blocks admin page).
+    $this->drupalGet('admin/structure/block');
+    $this->assertText('Stark(' . t('active tab') . ')', t('Default local task on blocks admin page is the default theme.'));
+    // Switch back to Bartik and test again to test that the menu cache is cleared.
+    $this->drupalGet('admin/appearance');
+    $this->clickLink(t('Set default'), 0);
+    $this->drupalGet('admin/structure/block');
+    $this->assertText('Bartik(' . t('active tab') . ')', t('Default local task on blocks admin page has changed.'));
+  }
 }
 
 
@@ -1571,13 +1595,13 @@ class TokenReplaceTestCase extends DrupalWebTestCase {
 
     // Test that the clear parameter cleans out non-existent tokens.
     $result = token_replace($source, array('node' => $node), array('language' => $language, 'clear' => TRUE));
-    $result = $this->assertFalse(strcmp($target, $result), 'Valid tokens replaced while invalid tokens cleared out.');
+    $result = $this->assertEqual($target, $result, 'Valid tokens replaced while invalid tokens cleared out.');
 
     // Test without using the clear parameter (non-existant token untouched).
     $target .= '[user:name]';
     $target .= '[bogus:token]';
     $result = token_replace($source, array('node' => $node), array('language' => $language));
-    $this->assertFalse(strcmp($target, $result), 'Valid tokens replaced while invalid tokens ignored.');
+    $this->assertEqual($target, $result, 'Valid tokens replaced while invalid tokens ignored.');
 
     // Check that the results of token_generate are sanitized properly. This does NOT
     // test the cleanliness of every token -- just that the $sanitize flag is being
@@ -1585,10 +1609,39 @@ class TokenReplaceTestCase extends DrupalWebTestCase {
     // token, [node:title].
     $raw_tokens = array('title' => '[node:title]');
     $generated = token_generate('node', $raw_tokens, array('node' => $node));
-    $this->assertFalse(strcmp($generated['[node:title]'], check_plain($node->title)), t('Token sanitized.'));
+    $this->assertEqual($generated['[node:title]'], check_plain($node->title), t('Token sanitized.'));
 
     $generated = token_generate('node', $raw_tokens, array('node' => $node), array('sanitize' => FALSE));
-    $this->assertFalse(strcmp($generated['[node:title]'], $node->title), t('Unsanitized token generated properly.'));
+    $this->assertEqual($generated['[node:title]'], $node->title, t('Unsanitized token generated properly.'));
+  }
+
+  /**
+   * Test whether token-replacement works in various contexts.
+   */
+  function testSystemTokenRecognition() {
+    global $language;
+
+    // Generate prefixes and suffixes for the token context.
+    $tests = array(
+      array('prefix' => 'this is the ', 'suffix' => ' site'),
+      array('prefix' => 'this is the', 'suffix' => 'site'),
+      array('prefix' => '[', 'suffix' => ']'),
+      array('prefix' => '', 'suffix' => ']]]'),
+      array('prefix' => '[[[', 'suffix' => ''),
+      array('prefix' => ':[:', 'suffix' => '--]'),
+      array('prefix' => '-[-', 'suffix' => ':]:'),
+      array('prefix' => '[:', 'suffix' => ']'),
+      array('prefix' => '[site:', 'suffix' => ':name]'),
+      array('prefix' => '[site:', 'suffix' => ']'),
+    );
+
+    // Check if the token is recognized in each of the contexts.
+    foreach ($tests as $test) {
+      $input = $test['prefix'] . '[site:name]' . $test['suffix'];
+      $expected = $test['prefix'] . 'Drupal' . $test['suffix'];
+      $output = token_replace($input, array(), array('language' => $language));
+      $this->assertTrue($output == $expected, t('Token recognized in string %string', array('%string' => $input)));
+    }
   }
 
   /**
@@ -1620,7 +1673,7 @@ class TokenReplaceTestCase extends DrupalWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array(), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized system site information token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized system site information token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -1629,7 +1682,7 @@ class TokenReplaceTestCase extends DrupalWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array(), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized system site information token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized system site information token %token replaced.', array('%token' => $input)));
     }
   }
 
@@ -1656,7 +1709,7 @@ class TokenReplaceTestCase extends DrupalWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('date' => $date), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Date token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Date token %token replaced.', array('%token' => $input)));
     }
   }
 }
@@ -2145,3 +2198,37 @@ class SystemAuthorizeCase extends DrupalWebTestCase {
     $this->assertText('System Test Username');
   }
 }
+
+/**
+ * Test the handling of requests containing 'index.php'.
+ */
+class SystemIndexPhpTest extends DrupalWebTestCase {
+  public static function getInfo() {
+    return array(
+      'name' => 'Index.php handling',
+      'description' => "Test the handling of requests containing 'index.php'.",
+      'group' => 'System',
+    );
+  }
+
+  function setUp() {
+    parent::setUp();
+  }
+
+  /**
+   * Test index.php handling.
+   */
+  function testIndexPhpHandling() {
+    $index_php = $GLOBALS['base_url'] . '/index.php';
+
+    $this->drupalGet($index_php, array('external' => TRUE));
+    $this->assertResponse(200, t('Make sure index.php returns a valid page.'));
+
+    $this->drupalGet($index_php, array('external' => TRUE, 'query' => array('q' => 'user')));
+    $this->assertResponse(200, t('Make sure index.php?q=user returns a valid page.'));
+
+    $this->drupalGet($index_php .'/user', array('external' => TRUE));
+    $this->assertResponse(404, t("Make sure index.php/user returns a 'page not found'."));
+  }
+}
+
diff --git a/modules/system/system.theme-rtl.css b/modules/system/system.theme-rtl.css
index 1dd7e6d..0cd7fa6 100644
--- a/modules/system/system.theme-rtl.css
+++ b/modules/system/system.theme-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.theme.css b/modules/system/system.theme.css
index eb37db2..73cebee 100644
--- a/modules/system/system.theme.css
+++ b/modules/system/system.theme.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/modules/system/system.tokens.inc b/modules/system/system.tokens.inc
index 6ce9971..27d7dfd 100644
--- a/modules/system/system.tokens.inc
+++ b/modules/system/system.tokens.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/system.updater.inc b/modules/system/system.updater.inc
index 92a1529..0df1ad9 100644
--- a/modules/system/system.updater.inc
+++ b/modules/system/system.updater.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/system/theme.api.php b/modules/system/theme.api.php
index 2284a7c..7fee81c 100644
--- a/modules/system/theme.api.php
+++ b/modules/system/theme.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @defgroup themeable Default theme implementations
@@ -100,6 +99,8 @@ function hook_form_system_theme_settings_alter(&$form, &$form_state) {
  * It is called for all invocations of theme(), to allow modules to add to
  * or override variables for all theme hooks.
  *
+ * For more detailed information, see theme().
+ *
  * @param $variables
  *   The variables array (modify in place).
  * @param $hook
@@ -146,6 +147,8 @@ function hook_preprocess(&$variables, $hook) {
  * hook. It should only be used if a module needs to override or add to the
  * theme preprocessing for a theme hook it didn't define.
  *
+ * For more detailed information, see theme().
+ *
  * @param $variables
  *   The variables array (modify in place).
  */
@@ -162,6 +165,8 @@ function hook_preprocess_HOOK(&$variables) {
  * It is called for all invocations of theme(), to allow modules to add to
  * or override variables for all theme hooks.
  *
+ * For more detailed information, see theme().
+ *
  * @param $variables
  *   The variables array (modify in place).
  * @param $hook
@@ -188,6 +193,8 @@ function hook_process(&$variables, $hook) {
  * hook. It should only be used if a module needs to override or add to the
  * theme processing for a theme hook it didn't define.
  *
+ * For more detailed information, see theme().
+ *
  * @param $variables
  *   The variables array (modify in place).
  */
diff --git a/modules/taxonomy/taxonomy-term.tpl.php b/modules/taxonomy/taxonomy-term.tpl.php
index f48452c..b515a9b 100644
--- a/modules/taxonomy/taxonomy-term.tpl.php
+++ b/modules/taxonomy/taxonomy-term.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/taxonomy/taxonomy.admin.inc b/modules/taxonomy/taxonomy.admin.inc
index 63729fb..d83f5d3 100644
--- a/modules/taxonomy/taxonomy.admin.inc
+++ b/modules/taxonomy/taxonomy.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -100,10 +99,11 @@ function theme_taxonomy_overview_vocabularies($variables) {
 }
 
 /**
- * Display form for adding and editing vocabularies.
+ * Form builder for the vocabulary editing form.
  *
  * @ingroup forms
  * @see taxonomy_form_vocabulary_submit()
+ * @see taxonomy_form_vocabulary_validate()
  */
 function taxonomy_form_vocabulary($form, &$form_state, $edit = array()) {
   // During initial form build, add the entity to the form state for use
@@ -147,7 +147,7 @@ function taxonomy_form_vocabulary($form, &$form_state, $edit = array()) {
   $form['machine_name'] = array(
     '#type' => 'machine_name',
     '#default_value' => $vocabulary->machine_name,
-    '#maxlength' => 21,
+    '#maxlength' => 255,
     '#machine_name' => array(
       'exists' => 'taxonomy_vocabulary_machine_name_load',
     ),
@@ -175,11 +175,38 @@ function taxonomy_form_vocabulary($form, &$form_state, $edit = array()) {
     $form['vid'] = array('#type' => 'value', '#value' => $vocabulary->vid);
     $form['module'] = array('#type' => 'value', '#value' => $vocabulary->module);
   }
+  $form['#validate'][] = 'taxonomy_form_vocabulary_validate';
+
   return $form;
 }
 
 /**
- * Accept the form submission for a vocabulary and save the results.
+ * Form validation handler for taxonomy_form_vocabulary().
+ *
+ * Makes sure that the machine name of the vocabulary is not in the
+ * disallowed list (names that conflict with menu items, such as 'list'
+ * and 'add').
+ *
+ * @see taxonomy_form_vocabulary()
+ * @see taxonomy_form_vocabulary_submit()
+ */
+function taxonomy_form_vocabulary_validate($form, &$form_state) {
+  // During the deletion there is no 'machine_name' key
+  if (isset($form_state['values']['machine_name'])) {
+    // Do not allow machine names to conflict with taxonomy path arguments.
+    $machine_name = $form_state['values']['machine_name'];
+    $disallowed = array('add', 'list');
+    if (in_array($machine_name, $disallowed)) {
+      form_set_error('machine_name', t('The machine-readable name cannot be "add" or "list".'));
+    }
+  }
+}
+
+/**
+ * Form submission handler for taxonomy_form_vocabulary().
+ *
+ * @see taxonomy_form_vocabulary()
+ * @see taxonomy_form_vocabulary_validate()
  */
 function taxonomy_form_vocabulary_submit($form, &$form_state) {
   if ($form_state['clicked_button']['#value'] == t('Delete')) {
diff --git a/modules/taxonomy/taxonomy.api.php b/modules/taxonomy/taxonomy.api.php
index 1527e48..cb778c9 100644
--- a/modules/taxonomy/taxonomy.api.php
+++ b/modules/taxonomy/taxonomy.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/taxonomy/taxonomy.css b/modules/taxonomy/taxonomy.css
index 5fdd2b0..36cd641 100644
--- a/modules/taxonomy/taxonomy.css
+++ b/modules/taxonomy/taxonomy.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 tr.taxonomy-term-preview {
   background-color: #EEE;
diff --git a/modules/taxonomy/taxonomy.info b/modules/taxonomy/taxonomy.info
index 88e51e3..44d4ebc 100644
--- a/modules/taxonomy/taxonomy.info
+++ b/modules/taxonomy/taxonomy.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Taxonomy
 description = Enables the categorization of content.
 package = Core
diff --git a/modules/taxonomy/taxonomy.install b/modules/taxonomy/taxonomy.install
index 73c115a..f28ffed 100644
--- a/modules/taxonomy/taxonomy.install
+++ b/modules/taxonomy/taxonomy.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -567,8 +566,12 @@ function taxonomy_update_7005(&$sandbox) {
   // of term references stored so far for the current revision, which
   // provides the delta value for each term reference data insert. The
   // deltas are reset for each new revision.
-
-  $field_info = _update_7000_field_read_fields();
+  
+  $conditions = array(
+    'type' => 'taxonomy_term_reference',
+    'deleted' => 0,
+  );
+  $field_info = _update_7000_field_read_fields($conditions, 'field_name');
 
   // This is a multi-pass update. On the first call we need to initialize some
   // variables.
diff --git a/modules/taxonomy/taxonomy.js b/modules/taxonomy/taxonomy.js
index 6a304f6..cc9cdf7 100644
--- a/modules/taxonomy/taxonomy.js
+++ b/modules/taxonomy/taxonomy.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/taxonomy/taxonomy.module b/modules/taxonomy/taxonomy.module
index 9a1228a..50d2fd6 100644
--- a/modules/taxonomy/taxonomy.module
+++ b/modules/taxonomy/taxonomy.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -683,8 +682,8 @@ function taxonomy_term_view($term, $view_mode = 'full', $langcode = NULL) {
     $langcode = $GLOBALS['language_content']->language;
   }
 
-  field_attach_prepare_view('taxonomy_term', array($term->tid => $term), $view_mode);
-  entity_prepare_view('taxonomy_term', array($term->tid => $term));
+  field_attach_prepare_view('taxonomy_term', array($term->tid => $term), $view_mode, $langcode);
+  entity_prepare_view('taxonomy_term', array($term->tid => $term), $langcode);
 
   $build = array(
     '#theme' => 'taxonomy_term',
@@ -695,12 +694,15 @@ function taxonomy_term_view($term, $view_mode = 'full', $langcode = NULL) {
 
   $build += field_attach_view('taxonomy_term', $term, $view_mode, $langcode);
 
-  $build['description'] = array(
-    '#markup' => check_markup($term->description, $term->format, '', TRUE),
-    '#weight' => 0,
-    '#prefix' => '<div class="taxonomy-term-description">',
-    '#suffix' => '</div>',
-  );
+  // Add term description if the term has one.
+  if (!empty($term->description)) {
+    $build['description'] = array(
+      '#markup' => check_markup($term->description, $term->format, '', TRUE),
+      '#weight' => 0,
+      '#prefix' => '<div class="taxonomy-term-description">',
+      '#suffix' => '</div>',
+    );
+  }
 
   $build['#attached']['css'][] = drupal_get_path('module', 'taxonomy') . '/taxonomy.css';
 
@@ -728,6 +730,7 @@ function template_preprocess_taxonomy_term(&$variables) {
   $variables = array_merge((array) $term, $variables);
 
   // Helpful $content variable for templates.
+  $variables['content'] = array();
   foreach (element_children($variables['elements']) as $key) {
     $variables['content'][$key] = $variables['elements'][$key];
   }
@@ -747,7 +750,7 @@ function template_preprocess_taxonomy_term(&$variables) {
 }
 
 /**
- * Returns whether the current page is the page of the passed in term.
+ * Returns whether the current page is the page of the passed-in term.
  *
  * @param $term
  *   A term object.
@@ -1313,7 +1316,7 @@ function taxonomy_field_validate($entity_type, $entity, $field, $instance, $lang
       if (!$validate) {
         $errors[$field['field_name']][$langcode][$delta][] = array(
           'error' => 'taxonomy_term_reference_illegal_value',
-          'message' => t('%name: illegal value.', array('%name' => t($instance['label']))),
+          'message' => t('%name: illegal value.', array('%name' => $instance['label'])),
         );
       }
     }
@@ -1467,11 +1470,12 @@ function taxonomy_field_formatter_prepare_view($entity_type, $entities, $field,
  *
  * @param $term
  *   A term object.
+ *
  * @return
  *   The term name to be used as the page title.
  */
 function taxonomy_term_title($term) {
-  return check_plain($term->name);
+  return $term->name;
 }
 
 /**
diff --git a/modules/taxonomy/taxonomy.pages.inc b/modules/taxonomy/taxonomy.pages.inc
index baa9776..3aed290 100644
--- a/modules/taxonomy/taxonomy.pages.inc
+++ b/modules/taxonomy/taxonomy.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -32,14 +31,12 @@ function taxonomy_term_page($term) {
   drupal_add_feed('taxonomy/term/' . $term->tid . '/feed', 'RSS - ' . $term->name);
 
   $build = array();
-  // Add term heading if the term has a description
-  if (!empty($term->description)) {
-    $build['term_heading'] = array(
-      '#prefix' => '<div class="term-listing-heading">',
-      '#suffix' => '</div>',
-      'term' => taxonomy_term_view($term, 'full'),
-    );
-  }
+
+  $build['term_heading'] = array(
+    '#prefix' => '<div class="term-listing-heading">',
+    '#suffix' => '</div>',
+    'term' => taxonomy_term_view($term, 'full'),
+  );
 
   if ($nids = taxonomy_select_nodes($term->tid, TRUE, variable_get('default_nodes_main', 10))) {
     $nodes = node_load_multiple($nids);
diff --git a/modules/taxonomy/taxonomy.test b/modules/taxonomy/taxonomy.test
index 0664c52..1fd47f5 100644
--- a/modules/taxonomy/taxonomy.test
+++ b/modules/taxonomy/taxonomy.test
@@ -1,9 +1,8 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Tests for Taxonomy module.
+ * Tests for taxonomy.module.
  */
 
 /**
@@ -649,12 +648,12 @@ class TaxonomyTermTestCase extends TaxonomyWebTestCase {
     $this->assertText($edit['description[value]'], t('The randomly generated term description is present.'));
 
     // Did this page request display a 'term-listing-heading'?
-    $this->assertPattern('|class="term-listing-heading"|', 'Term page displayed the term description element.');
+    $this->assertPattern('|class="taxonomy-term-description"|', 'Term page displayed the term description element.');
     // Check that it does NOT show a description when description is blank.
     $term->description = '';
     taxonomy_term_save($term);
     $this->drupalGet('taxonomy/term/' . $term->tid);
-    $this->assertNoPattern('|class="term-listing-heading"|', 'Term page did not display the term description when description was blank.');
+    $this->assertNoPattern('|class="taxonomy-term-description"|', 'Term page did not display the term description when description was blank.');
 
     // Check that the term feed page is working.
     $this->drupalGet('taxonomy/term/' . $term->tid . '/feed');
@@ -1108,7 +1107,7 @@ class TaxonomyTokenReplaceTestCase extends TaxonomyWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('term' => $term1), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized taxonomy term token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized taxonomy term token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test sanitized tokens for term2.
@@ -1128,7 +1127,7 @@ class TaxonomyTokenReplaceTestCase extends TaxonomyWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('term' => $term2), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized taxonomy term token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized taxonomy term token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -1139,7 +1138,7 @@ class TaxonomyTokenReplaceTestCase extends TaxonomyWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('term' => $term2), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized taxonomy term token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized taxonomy term token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test sanitized tokens.
@@ -1155,7 +1154,7 @@ class TaxonomyTokenReplaceTestCase extends TaxonomyWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('vocabulary' => $this->vocabulary), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized taxonomy vocabulary token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized taxonomy vocabulary token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -1164,7 +1163,7 @@ class TaxonomyTokenReplaceTestCase extends TaxonomyWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('vocabulary' => $this->vocabulary), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized taxonomy vocabulary token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized taxonomy vocabulary token %token replaced.', array('%token' => $input)));
     }
   }
 }
diff --git a/modules/taxonomy/taxonomy.tokens.inc b/modules/taxonomy/taxonomy.tokens.inc
index 225d3e5..f8ae457 100644
--- a/modules/taxonomy/taxonomy.tokens.inc
+++ b/modules/taxonomy/taxonomy.tokens.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/toolbar/toolbar-rtl.css b/modules/toolbar/toolbar-rtl.css
new file mode 100644
index 0000000..acbc98f
--- /dev/null
+++ b/modules/toolbar/toolbar-rtl.css
@@ -0,0 +1,41 @@
+
+#toolbar,
+#toolbar * {
+  text-align: right;
+}
+#toolbar ul li {
+  float: right;
+}
+#toolbar ul li a {
+  display: inline-block;
+  float: none;
+  zoom: 1;
+}
+#toolbar div.toolbar-menu {
+  padding: 5px 50px 5px 50px;
+}
+#toolbar-user {
+  float: left;
+}
+#toolbar ul#toolbar-user li {
+  float: none;
+  display: inline;
+}
+#toolbar-menu {
+  float: none;
+}
+#toolbar-home {
+  float: right;
+}
+#toolbar ul li.home a {
+  position: absolute;
+  right: 10px;
+}
+#toolbar div.toolbar-menu a.toggle {
+  left: 10px;
+  right: auto;
+}
+* html #toolbar {
+  left: 0;
+  padding-left: 0;
+}
diff --git a/modules/toolbar/toolbar.css b/modules/toolbar/toolbar.css
index d03454e..cbf3c14 100644
--- a/modules/toolbar/toolbar.css
+++ b/modules/toolbar/toolbar.css
@@ -1,9 +1,7 @@
-/* $Id$ */
 
 body.toolbar {
   padding-top: 2.2em;
 }
-
 body.toolbar-drawer {
   padding-top: 5.3em;
 }
@@ -14,15 +12,15 @@ body.toolbar-drawer {
  */
 #toolbar,
 #toolbar * {
-  margin: 0;
-  padding: 0;
   border: 0;
-  outline: 0;
   font-size: 100%;
-  vertical-align: baseline;
   line-height: inherit;
-  text-align: left;
   list-style: none;
+  margin: 0;
+  outline: 0;
+  padding: 0;
+  text-align: left; /* LTR */
+  vertical-align: baseline;
 }
 
 /**
@@ -32,37 +30,34 @@ body.toolbar-drawer {
  * across different themes, while still allowing browsers to resize the text.
  */
 #toolbar {
-  font: normal small "Lucida Grande", Verdana, sans-serif;
   background: #666;
   color: #ccc;
-  position: fixed;
-  top: 0;
+  font: normal small "Lucida Grande", Verdana, sans-serif;
   left: 0;
-  right: 0;
   margin: 0 -20px;
   padding: 0 20px;
-  z-index: 600;
+  position: fixed;
+  right: 0;
+  top: 0;
   -moz-box-shadow: 0 3px 20px #000;
   -webkit-box-shadow: 0 3px 20px #000;
   box-shadow: 0 3px 20px #000;
   filter: progid:DXImageTransform.Microsoft.Shadow(color=#000000, direction='180', strength='10');
   -ms-filter: "progid:DXImageTransform.Microsoft.Shadow(color=#000000, direction='180', strength='10')";
+  z-index: 600;
 }
-
 #toolbar div.collapsed {
   display: none;
   visibility: hidden;
 }
-
 #toolbar a {
   color: #fff;
   font-size: .846em;
   text-decoration: none;
 }
-
 #toolbar ul li,
 #toolbar ul li a {
-  float: left;
+  float: left; /* LTR */
 }
 
 /**
@@ -71,72 +66,64 @@ body.toolbar-drawer {
 #toolbar div.toolbar-menu {
   background: #000;
   line-height: 20px;
-  padding: 5px 50px 5px 10px;
+  padding: 5px 50px 5px 10px; /* LTR */
   position: relative;
 }
-
 #toolbar-home a span {
-  vertical-align: text-bottom;
-  width: 11px;
-  height: 14px;
-  display: block;
   background: url(toolbar.png) no-repeat 0 -45px;
-  text-indent: -9999px;
+  display: block;
+  height: 14px;
   margin: 3px 0px;
+  text-indent: -9999px;
+  vertical-align: text-bottom;
+  width: 11px;
 }
-
 #toolbar-user {
-  float: right;
+  float: right; /* LTR */
 }
-
 #toolbar-menu {
-  float: left;
+  float: left; /* LTR */
 }
-
 #toolbar div.toolbar-menu a.toggle {
-  position: absolute;
-  right: 10px;
+  background: url(toolbar.png) 0 -20px no-repeat;
   bottom: 0;
   cursor: pointer;
-  background: url(toolbar.png) 0 -20px no-repeat;
-  text-indent: -9999px;
+  height: 25px;
   overflow: hidden;
+  position: absolute;
+  right: 10px; /* LTR */
+  text-indent: -9999px;
   width: 25px;
-  height: 25px;
 }
 #toolbar div.toolbar-menu a.toggle:focus,
 #toolbar div.toolbar-menu a.toggle:hover {
-background-position:  -50px -20px;
+  background-position:  -50px -20px;
 }
-
 #toolbar div.toolbar-menu a.toggle-active {
   background-position:  -25px -20px;
 }
 #toolbar div.toolbar-menu a.toggle-active.toggle:focus,
 #toolbar div.toolbar-menu a.toggle-active.toggle:hover {
-background-position:  -75px -20px;
+  background-position:  -75px -20px;
 }
-
 #toolbar div.toolbar-menu ul li a {
+  padding: 0 10px;
   -moz-border-radius: 10px;
   -webkit-border-radius: 10px;
   border-radius: 10px;
-  padding: 0 10px;
 }
-
 #toolbar div.toolbar-menu ul li a:focus,
 #toolbar div.toolbar-menu ul li a:hover,
 #toolbar div.toolbar-menu ul li a:active,
 #toolbar div.toolbar-menu ul li a.active:focus {
   background: #444;
 }
-
 #toolbar div.toolbar-menu ul li a.active:hover,
 #toolbar div.toolbar-menu ul li a.active:active,
 #toolbar div.toolbar-menu ul li a.active,
 #toolbar div.toolbar-menu ul li.active-trail a {
-  text-shadow: #333 0 1px 0;
   background: url(toolbar.png) 0 0 repeat-x;
+  text-shadow: #333 0 1px 0;
 }
 
 /**
@@ -154,10 +141,10 @@ background-position:  -75px -20px;
  * it with position:absolute; toolbar needs its z-index to stay above overlay.
  */
 * html #toolbar {
-  position: absolute;
+  left: -20px;
   margin: 0;
   padding-right: 0;
-  left: -20px;
+  position: absolute;
   right: 0;
   width: 100%;
 }
diff --git a/modules/toolbar/toolbar.info b/modules/toolbar/toolbar.info
index 3178279..2c5abbb 100644
--- a/modules/toolbar/toolbar.info
+++ b/modules/toolbar/toolbar.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Toolbar
 description = Provides a toolbar that shows the top-level administration menu items and links from other modules.
 core = 7.x
diff --git a/modules/toolbar/toolbar.js b/modules/toolbar/toolbar.js
index 3dd215e..5b61634 100644
--- a/modules/toolbar/toolbar.js
+++ b/modules/toolbar/toolbar.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 Drupal.toolbar = Drupal.toolbar || {};
diff --git a/modules/toolbar/toolbar.module b/modules/toolbar/toolbar.module
index a05bbe2..61ae648 100644
--- a/modules/toolbar/toolbar.module
+++ b/modules/toolbar/toolbar.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -96,7 +95,7 @@ function theme_toolbar_toggle($variables) {
     $toggle_text = t('Hide shortcuts');
     $variables['attributes']['class'][] = 'toggle-active';
   }
-  return '<a href="' . url('toolbar/toggle', array('query' => drupal_get_destination())) . '" title="' . $toggle_text . '"' .  drupal_attributes($variables['attributes']) . '>' . $toggle_text . '</a>';
+  return l($toggle_text, 'toolbar/toggle', array('query' => drupal_get_destination(), 'attributes' => array('title' => $toggle_text) + $variables['attributes']));
 }
 
 /**
diff --git a/modules/toolbar/toolbar.tpl.php b/modules/toolbar/toolbar.tpl.php
index d38aae6..1df0cf0 100644
--- a/modules/toolbar/toolbar.tpl.php
+++ b/modules/toolbar/toolbar.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/tracker/tracker.css b/modules/tracker/tracker.css
index 0fadc53..d3531c4 100644
--- a/modules/tracker/tracker.css
+++ b/modules/tracker/tracker.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .page-tracker td.replies {
   text-align: center;
diff --git a/modules/tracker/tracker.info b/modules/tracker/tracker.info
index 095efcb..1d7c65b 100644
--- a/modules/tracker/tracker.info
+++ b/modules/tracker/tracker.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Tracker
 description = Enables tracking of recent content for users.
 dependencies[] = comment
diff --git a/modules/tracker/tracker.install b/modules/tracker/tracker.install
index 4ec1281..244f537 100644
--- a/modules/tracker/tracker.install
+++ b/modules/tracker/tracker.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_uninstall().
diff --git a/modules/tracker/tracker.module b/modules/tracker/tracker.module
index ab5e19a..227cf72 100644
--- a/modules/tracker/tracker.module
+++ b/modules/tracker/tracker.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/tracker/tracker.pages.inc b/modules/tracker/tracker.pages.inc
index c8f7dd4..7b1e946 100644
--- a/modules/tracker/tracker.pages.inc
+++ b/modules/tracker/tracker.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/tracker/tracker.test b/modules/tracker/tracker.test
index f3f742e..3cc227e 100644
--- a/modules/tracker/tracker.test
+++ b/modules/tracker/tracker.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for tracker.module.
+ */
 
 class TrackerTest extends DrupalWebTestCase {
   protected $user;
diff --git a/modules/translation/tests/translation_test.info b/modules/translation/tests/translation_test.info
index 0b9856f..ee1d7ec 100644
--- a/modules/translation/tests/translation_test.info
+++ b/modules/translation/tests/translation_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Content Translation Test"
 description = "Support module for the content translation tests."
 core = 7.x
diff --git a/modules/translation/tests/translation_test.module b/modules/translation/tests/translation_test.module
index 2bb860d..e3bb4b5 100644
--- a/modules/translation/tests/translation_test.module
+++ b/modules/translation/tests/translation_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/translation/translation.info b/modules/translation/translation.info
index de3a316..6c652a1 100644
--- a/modules/translation/translation.info
+++ b/modules/translation/translation.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Content translation
 description = Allows content to be translated into different languages.
 dependencies[] = locale
diff --git a/modules/translation/translation.module b/modules/translation/translation.module
index 2fb710e..697929f 100644
--- a/modules/translation/translation.module
+++ b/modules/translation/translation.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -114,15 +113,14 @@ function translation_form_node_type_form_alter(&$form, &$form_state) {
   // Add translation option to content type form.
   $form['workflow']['language_content_type']['#options'][TRANSLATION_ENABLED] = t('Enabled, with translation');
   // Description based on text from locale.module.
-  $form['workflow']['language_content_type']['#description'] = t('Enable multilingual support for this content type. If enabled, a language selection field will be added to the editing form, allowing you to select from one of the <a href="!languages">enabled languages</a>. You can also turn on translation for this content type, which lets you have content translated to any of the enabled languages. If disabled, new posts are saved with the default language. Existing content will not be affected by changing this option.', array('!languages' => url('admin/config/regional/language')));
+  $form['workflow']['language_content_type']['#description'] = t('Enable multilingual support for this content type. If enabled, a language selection field will be added to the editing form, allowing you to select from one of the <a href="!languages">enabled languages</a>. You can also turn on translation for this content type, which lets you have content translated to any of the installed languages. If disabled, new posts are saved with the default language. Existing content will not be affected by changing this option.', array('!languages' => url('admin/config/regional/language')));
 }
 
 /**
- * Implements hook_form_alter().
+ * Implements hook_form_BASE_FORM_ID_alter().
  *
- * - Add translation option to content type form.
- * - Alters language fields on node forms when a translation
- *   is about to be created.
+ * This function alters language fields on node edit forms when a translation is
+ * about to be created.
  */
 function translation_form_node_form_alter(&$form, &$form_state) {
   if (translation_supported_type($form['#node']->type)) {
@@ -135,7 +133,7 @@ function translation_form_node_form_alter(&$form, &$form_state) {
     // might need to distinguish between enabled and disabled languages, hence
     // we divide them in two option groups.
     if ($translator_widget) {
-      $options = array();
+      $options = array($groups[1] => array(LANGUAGE_NONE => t('Language neutral')));
       $language_list = locale_language_list('name', TRUE);
       foreach (array(1, 0) as $status) {
         $group = $groups[$status];
@@ -504,8 +502,23 @@ function translation_path_get_translations($path) {
  */
 function translation_language_switch_links_alter(array &$links, $type, $path) {
   $language_type = variable_get('translation_language_type', LANGUAGE_TYPE_INTERFACE);
-  if ($type == $language_type && preg_match("!^node/(\d+)(/.+|)!", $path, $matches) && ($node = node_load((int) $matches[1]))) {
-    $translations = $node->tnid ? translation_node_get_translations($node->tnid) : array($node->language => $node);
+
+  if ($type == $language_type && preg_match("!^node/(\d+)(/.+|)!", $path, $matches)) {
+    $node = node_load((int) $matches[1]);
+
+    if (empty($node->tnid)) {
+      // If the node cannot be found nothing needs to be done. If it does not
+      // have translations it might be a language neutral node, in which case we
+      // must leave the language switch links unaltered. This is true also for
+      // nodes not having translation support enabled.
+      if (empty($node) || $node->language == LANGUAGE_NONE || !translation_supported_type($node->type)) {
+        return;
+      }
+      $translations = array($node->language => $node);
+    }
+    else {
+      $translations = translation_node_get_translations($node->tnid);
+    }
 
     foreach ($links as $langcode => $link) {
       if (isset($translations[$langcode]) && $translations[$langcode]->status) {
diff --git a/modules/translation/translation.pages.inc b/modules/translation/translation.pages.inc
index c70d938..7e4f0af 100644
--- a/modules/translation/translation.pages.inc
+++ b/modules/translation/translation.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -38,12 +37,12 @@ function translation_node_overview($node) {
       $translation_node = node_load($translations[$langcode]->nid);
       $path = 'node/' . $translation_node->nid;
       $links = language_negotiation_get_switch_links($type, $path);
-      $title = empty($links->links[$langcode]) ? l($translation_node->title, $path) : l($translation_node->title, $links->links[$langcode]['href'], $links->links[$langcode]);
+      $title = empty($links->links[$langcode]['href']) ? l($translation_node->title, $path) : l($translation_node->title, $links->links[$langcode]['href'], $links->links[$langcode]);
       if (node_access('update', $translation_node)) {
         $text = t('edit');
         $path = 'node/' . $translation_node->nid . '/edit';
         $links = language_negotiation_get_switch_links($type, $path);
-        $options[] = empty($links->links[$langcode]) ? l($text, $path) : l($text, $links->links[$langcode]['href'], $links->links[$langcode]);
+        $options[] = empty($links->links[$langcode]['href']) ? l($text, $path) : l($text, $links->links[$langcode]['href'], $links->links[$langcode]);
       }
       $status = $translation_node->status ? t('Published') : t('Not published');
       $status .= $translation_node->translate ? ' - <span class="marker">' . t('outdated') . '</span>' : '';
@@ -59,7 +58,7 @@ function translation_node_overview($node) {
         $path = 'node/add/' . str_replace('_', '-', $node->type);
         $links = language_negotiation_get_switch_links($type, $path);
         $query = array('query' => array('translation' => $node->nid, 'target' => $langcode));
-        $options[] = empty($links->links[$langcode]) ? l($text, $path, $query) : l($text, $links->links[$langcode]['href'], array_merge_recursive($links->links[$langcode], $query));
+        $options[] = empty($links->links[$langcode]['href']) ? l($text, $path, $query) : l($text, $links->links[$langcode]['href'], array_merge_recursive($links->links[$langcode], $query));
       }
       $status = t('Not translated');
     }
diff --git a/modules/translation/translation.test b/modules/translation/translation.test
index 701e3dc..54b53d9 100644
--- a/modules/translation/translation.test
+++ b/modules/translation/translation.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for translation.module
+ */
 
 class TranslationTestCase extends DrupalWebTestCase {
   protected $book;
@@ -16,7 +20,7 @@ class TranslationTestCase extends DrupalWebTestCase {
     parent::setUp('locale', 'translation', 'translation_test');
 
     // Setup users.
-    $this->admin_user = $this->drupalCreateUser(array('bypass node access', 'administer nodes', 'administer languages', 'administer content types', 'administer blocks', 'access administration pages'));
+    $this->admin_user = $this->drupalCreateUser(array('bypass node access', 'administer nodes', 'administer languages', 'administer content types', 'administer blocks', 'access administration pages', 'translate content'));
     $this->translator = $this->drupalCreateUser(array('create page content', 'edit own page content', 'translate content'));
 
     $this->drupalLogin($this->admin_user);
@@ -63,6 +67,14 @@ class TranslationTestCase extends DrupalWebTestCase {
     $node_body =  $this->randomName();
     $node = $this->createPage($node_title, $node_body, 'en');
 
+    // Unpublish the original node to check that this has no impact on the
+    // translation overview page, publish it again afterwards.
+    $this->drupalLogin($this->admin_user);
+    $this->drupalPost('node/' . $node->nid . '/edit', array('status' => FALSE), t('Save'));
+    $this->drupalGet('node/' . $node->nid . '/translate');
+    $this->drupalPost('node/' . $node->nid . '/edit', array('status' => NODE_PUBLISHED), t('Save'));
+    $this->drupalLogin($this->translator);
+
     // Check that the "add translation" link uses a localized path.
     $languages = language_list();
     $this->drupalGet('node/' . $node->nid . '/translate');
@@ -121,6 +133,13 @@ class TranslationTestCase extends DrupalWebTestCase {
     $translation_it = $this->createTranslation($node, $this->randomName(), $this->randomName(), 'it');
     $this->assertRaw($translation_it->body['it'][0]['value'], t('Content created in Italian (disabled).'));
 
+    // Confirm that language neutral is an option for translators when there are
+    // disabled languages.
+    $this->drupalGet('node/add/page');
+    $this->assertFieldByXPath('//select[@name="language"]//option', LANGUAGE_NONE, t('Language neutral is available in language selection with disabled languages.'));
+    $node2 = $this->createPage($this->randomName(), $this->randomName(), LANGUAGE_NONE);
+    $this->assertRaw($node2->body[LANGUAGE_NONE][0]['value'], t('Language neutral content created with disabled languages available.'));
+
     // Leave just one language enabled and check that the translation overview
     // page is still accessible.
     $this->drupalLogin($this->admin_user);
@@ -200,6 +219,38 @@ class TranslationTestCase extends DrupalWebTestCase {
     $this->assertLanguageSwitchLinks($node, $node, TRUE, $type);
     $this->assertLanguageSwitchLinks($node, $translation_es, TRUE, $type);
     $this->assertLanguageSwitchLinks($node, $translation_it, TRUE, $type);
+
+    // Create a language neutral node and check that the language switcher is
+    // left untouched.
+    $node2 = $this->createPage($this->randomName(), $this->randomName(), LANGUAGE_NONE);
+    $node2_en = (object) array('nid' => $node2->nid, 'language' => 'en');
+    $node2_es = (object) array('nid' => $node2->nid, 'language' => 'es');
+    $node2_it = (object) array('nid' => $node2->nid, 'language' => 'it');
+    $this->assertLanguageSwitchLinks($node2_en, $node2_en, TRUE, $type);
+    $this->assertLanguageSwitchLinks($node2_en, $node2_es, TRUE, $type);
+    $this->assertLanguageSwitchLinks($node2_en, $node2_it, TRUE, $type);
+
+    // Disable translation support to check that the language switcher is left
+    // untouched only for new nodes.
+    $this->drupalLogin($this->admin_user);
+    $edit = array('language_content_type' => 0);
+    $this->drupalPost('admin/structure/types/manage/page', $edit, t('Save content type'));
+    $this->drupalLogin($this->translator);
+
+    // Existing translations trigger alterations even if translation support is
+    // disabled.
+    $this->assertLanguageSwitchLinks($node, $node, TRUE, $type);
+    $this->assertLanguageSwitchLinks($node, $translation_es, TRUE, $type);
+    $this->assertLanguageSwitchLinks($node, $translation_it, TRUE, $type);
+
+    // Check that new nodes with a language assigned do not trigger language
+    // switcher alterations when translation support is disabled.
+    $node = $this->createPage($this->randomName(), $this->randomName());
+    $node_es = (object) array('nid' => $node->nid, 'language' => 'es');
+    $node_it = (object) array('nid' => $node->nid, 'language' => 'it');
+    $this->assertLanguageSwitchLinks($node, $node, TRUE, $type);
+    $this->assertLanguageSwitchLinks($node, $node_es, TRUE, $type);
+    $this->assertLanguageSwitchLinks($node, $node_it, TRUE, $type);
   }
 
   /**
@@ -264,12 +315,14 @@ class TranslationTestCase extends DrupalWebTestCase {
    * @param
    *   $language Language code.
    */
-  function createPage($title, $body, $language) {
+  function createPage($title, $body, $language = NULL) {
     $edit = array();
     $langcode = LANGUAGE_NONE;
     $edit["title"] = $title;
     $edit["body[$langcode][0][value]"] = $body;
-    $edit['language'] = $language;
+    if (!empty($language)) {
+      $edit['language'] = $language;
+    }
     $this->drupalPost('node/add/page', $edit, t('Save'));
     $this->assertRaw(t('Basic page %title has been created.', array('%title' => $title)), t('Basic page created.'));
 
diff --git a/modules/trigger/tests/trigger_test.info b/modules/trigger/tests/trigger_test.info
index 39de978..bd94331 100644
--- a/modules/trigger/tests/trigger_test.info
+++ b/modules/trigger/tests/trigger_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Trigger Test"
 description = "Support module for Trigger tests."
 package = Testing
diff --git a/modules/trigger/tests/trigger_test.module b/modules/trigger/tests/trigger_test.module
index 0642872..0e3f3f8 100644
--- a/modules/trigger/tests/trigger_test.module
+++ b/modules/trigger/tests/trigger_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/trigger/trigger.admin.inc b/modules/trigger/trigger.admin.inc
index 639570a..7509eb3 100644
--- a/modules/trigger/trigger.admin.inc
+++ b/modules/trigger/trigger.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/trigger/trigger.api.php b/modules/trigger/trigger.api.php
index 2e3329c..839c1d4 100644
--- a/modules/trigger/trigger.api.php
+++ b/modules/trigger/trigger.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/trigger/trigger.info b/modules/trigger/trigger.info
index 4361965..76102a2 100644
--- a/modules/trigger/trigger.info
+++ b/modules/trigger/trigger.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Trigger
 description = Enables actions to be fired on certain system events, such as when new content is created.
 package = Core
diff --git a/modules/trigger/trigger.install b/modules/trigger/trigger.install
index 309ad57..9a172a2 100644
--- a/modules/trigger/trigger.install
+++ b/modules/trigger/trigger.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/trigger/trigger.module b/modules/trigger/trigger.module
index 19ce670..6c1f58f 100644
--- a/modules/trigger/trigger.module
+++ b/modules/trigger/trigger.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/trigger/trigger.test b/modules/trigger/trigger.test
index a9fbffe..9a9a4ba 100644
--- a/modules/trigger/trigger.test
+++ b/modules/trigger/trigger.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for trigger.module.
+ */
 
 /**
  * Provides common helper methods.
diff --git a/modules/update/tests/aaa_update_test.info b/modules/update/tests/aaa_update_test.info
index 23d7f71..a283720 100644
--- a/modules/update/tests/aaa_update_test.info
+++ b/modules/update/tests/aaa_update_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = AAA Update test
 description = Support module for update module testing.
 package = Testing
diff --git a/modules/update/tests/aaa_update_test.module b/modules/update/tests/aaa_update_test.module
index da4699c..4d67b8e 100644
--- a/modules/update/tests/aaa_update_test.module
+++ b/modules/update/tests/aaa_update_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/tests/bbb_update_test.info b/modules/update/tests/bbb_update_test.info
index 0d77d1e..75084ae 100644
--- a/modules/update/tests/bbb_update_test.info
+++ b/modules/update/tests/bbb_update_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = BBB Update test
 description = Support module for update module testing.
 package = Testing
diff --git a/modules/update/tests/bbb_update_test.module b/modules/update/tests/bbb_update_test.module
index da4699c..4d67b8e 100644
--- a/modules/update/tests/bbb_update_test.module
+++ b/modules/update/tests/bbb_update_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/tests/ccc_update_test.info b/modules/update/tests/ccc_update_test.info
index 890f843..0bd4cde 100644
--- a/modules/update/tests/ccc_update_test.info
+++ b/modules/update/tests/ccc_update_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = CCC Update test
 description = Support module for update module testing.
 package = Testing
diff --git a/modules/update/tests/ccc_update_test.module b/modules/update/tests/ccc_update_test.module
index da4699c..4d67b8e 100644
--- a/modules/update/tests/ccc_update_test.module
+++ b/modules/update/tests/ccc_update_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/tests/update_test.info b/modules/update/tests/update_test.info
index cd02c4b..f68dc9d 100644
--- a/modules/update/tests/update_test.info
+++ b/modules/update/tests/update_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Update test
 description = Support module for update module testing.
 package = Testing
diff --git a/modules/update/tests/update_test.module b/modules/update/tests/update_test.module
index fb7d3ab..4e32d33 100644
--- a/modules/update/tests/update_test.module
+++ b/modules/update/tests/update_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_menu().
diff --git a/modules/update/update-rtl.css b/modules/update/update-rtl.css
index a19c85f..5fc83d1 100644
--- a/modules/update/update-rtl.css
+++ b/modules/update/update-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .update .project {
   padding-right: .25em;
diff --git a/modules/update/update.api.php b/modules/update/update.api.php
index ef78cbf..87f95ca 100644
--- a/modules/update/update.api.php
+++ b/modules/update/update.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.authorize.inc b/modules/update/update.authorize.inc
index 978fee4..c9b76dd 100644
--- a/modules/update/update.authorize.inc
+++ b/modules/update/update.authorize.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -102,7 +101,7 @@ function update_authorize_run_install($filetransfer, $project, $updater_name, $l
  *   already been downloaded and extracted into.
  * @param FileTransfer $filetransfer
  *   The FileTransfer object to use for performing this operation.
- * @param array &$context
+ * @param array $context
  *   Reference to an array used for BatchAPI storage.
  */
 function update_authorize_batch_copy_project($project, $updater_name, $local_url, $filetransfer, &$context) {
diff --git a/modules/update/update.compare.inc b/modules/update/update.compare.inc
index a4dc6ce..2ccd97c 100644
--- a/modules/update/update.compare.inc
+++ b/modules/update/update.compare.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.css b/modules/update/update.css
index b390050..d30dfb6 100644
--- a/modules/update/update.css
+++ b/modules/update/update.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .update .project {
   font-weight: bold;
diff --git a/modules/update/update.fetch.inc b/modules/update/update.fetch.inc
index b3041cb..ff69cbb 100644
--- a/modules/update/update.fetch.inc
+++ b/modules/update/update.fetch.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.info b/modules/update/update.info
index 85944e5..250cae1 100644
--- a/modules/update/update.info
+++ b/modules/update/update.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Update manager
 description = Checks for available updates, and can securely install or update modules and themes via a web interface.
 version = VERSION
diff --git a/modules/update/update.install b/modules/update/update.install
index 95688e9..70fb6c3 100644
--- a/modules/update/update.install
+++ b/modules/update/update.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.manager.inc b/modules/update/update.manager.inc
index 4f55b1b..35b2929 100644
--- a/modules/update/update.manager.inc
+++ b/modules/update/update.manager.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -644,8 +643,11 @@ function update_manager_install_form_submit($form, &$form_state) {
     form_set_error($field, t('Provided archive contains no files.'));
     return;
   }
-  // Unfortunately, we can only use the directory name for this. :(
-  $project = drupal_substr($files[0], 0, -1);
+
+  // Unfortunately, we can only use the directory name to determine the project
+  // name. Some archivers list the first file as the directory (i.e., MODULE/)
+  // and others list an actual file (i.e., MODULE/README.TXT).
+  $project = strtok($files[0], '/\\');
 
   $archive_errors = update_manager_archive_verify($project, $local_cache, $directory);
   if (!empty($archive_errors)) {
@@ -729,26 +731,6 @@ function update_manager_install_form_submit($form, &$form_state) {
  */
 
 /**
- * Return the directory where update archive files should be extracted.
- *
- * If the directory does not already exist, attempt to create it.
- *
- * @return
- *   The full path to the temporary directory where update file archives
- *   should be extracted.
- */
-function _update_manager_extract_directory() {
-  $directory = &drupal_static(__FUNCTION__, '');
-  if (empty($directory)) {
-    $directory = 'temporary://update-extraction';
-    if (!file_exists($directory)) {
-      mkdir($directory);
-    }
-  }
-  return $directory;
-}
-
-/**
  * Unpack a downloaded archive file.
  *
  * @param string $project
@@ -771,8 +753,12 @@ function update_manager_archive_extract($file, $directory) {
   // old files mixed with the new files (e.g. in cases where files were removed
   // from a later release).
   $files = $archiver->listContents();
-  // Unfortunately, we can only use the directory name for this. :(
-  $project = drupal_substr($files[0], 0, -1);
+
+  // Unfortunately, we can only use the directory name to determine the project
+  // name. Some archivers list the first file as the directory (i.e., MODULE/)
+  // and others list an actual file (i.e., MODULE/README.TXT).
+  $project = strtok($files[0], '/\\');
+
   $extract_location = $directory . '/' . $project;
   if (file_exists($extract_location)) {
     file_unmanaged_delete_recursive($extract_location);
@@ -823,13 +809,9 @@ function update_manager_file_get($url) {
   }
 
   // Check the cache and download the file if needed.
-  $cache_directory = 'temporary://update-cache';
+  $cache_directory = _update_manager_cache_directory();
   $local = $cache_directory . '/' . basename($parsed_url['path']);
 
-  if (!file_exists($cache_directory)) {
-    mkdir($cache_directory);
-  }
-
   if (!file_exists($local) || update_delete_file_if_stale($local)) {
     return system_retrieve_file($url, $local, FALSE, FILE_EXISTS_REPLACE);
   }
@@ -849,7 +831,7 @@ function update_manager_file_get($url) {
  *   The short name of the project to download.
  * @param string $url
  *   The URL to download a specific project release archive file.
- * @param array &$context
+ * @param array $context
  *   Reference to an array used for BatchAPI storage.
  *
  * @see update_manager_download_page()
diff --git a/modules/update/update.module b/modules/update/update.module
index c5551e2..a66cfa5 100644
--- a/modules/update/update.module
+++ b/modules/update/update.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -858,13 +857,70 @@ function update_flush_caches() {
  */
 
 /**
+ * Return a short unique identifier for this Drupal installation.
+ *
+ * @return
+ *   An eight character string uniquely identifying this Drupal installation.
+ */
+function _update_manager_unique_identifier() {
+  $id = &drupal_static(__FUNCTION__, '');
+  if (empty($id)) {
+    $id = substr(hash('sha256', drupal_get_hash_salt()), 0, 8);
+  }
+  return $id;
+}
+
+/**
+ * Return the directory where update archive files should be extracted.
+ *
+ * @param $create
+ *   If TRUE, attempt to create the directory if it does not already exist.
+ *
+ * @return
+ *   The full path to the temporary directory where update file archives
+ *   should be extracted.
+ */
+function _update_manager_extract_directory($create = TRUE) {
+  $directory = &drupal_static(__FUNCTION__, '');
+  if (empty($directory)) {
+    $directory = 'temporary://update-extraction-' . _update_manager_unique_identifier();
+    if ($create && !file_exists($directory)) {
+      mkdir($directory);
+    }
+  }
+  return $directory;
+}
+
+/**
+ * Return the directory where update archive files should be cached.
+ *
+ * @param $create
+ *   If TRUE, attempt to create the directory if it does not already exist.
+ *
+ * @return
+ *   The full path to the temporary directory where update file archives
+ *   should be cached.
+ */
+function _update_manager_cache_directory($create = TRUE) {
+  $directory = &drupal_static(__FUNCTION__, '');
+  if (empty($directory)) {
+    $directory = 'temporary://update-cache-' . _update_manager_unique_identifier();
+    if ($create && !file_exists($directory)) {
+      mkdir($directory);
+    }
+  }
+  return $directory;
+}
+
+/**
  * Clear the temporary files and directories based on file age from disk.
  */
 function update_clear_update_disk_cache() {
-  // List of update module cache directories.
+  // List of update module cache directories. Do not create the directories if
+  // they do not exist.
   $directories = array(
-    'temporary://update-cache',
-    'temporary://update-extraction',
+    _update_manager_cache_directory(FALSE),
+    _update_manager_extract_directory(FALSE),
   );
 
   // Search for files and directories in base folder only without recursion.
diff --git a/modules/update/update.report.inc b/modules/update/update.report.inc
index ca33cf1..3f5933a 100644
--- a/modules/update/update.report.inc
+++ b/modules/update/update.report.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -58,25 +57,25 @@ function theme_update_report($variables) {
     switch ($project['status']) {
       case UPDATE_CURRENT:
         $class = 'ok';
-        $icon = theme('image', array('path' => 'misc/watchdog-ok.png', 'alt' => t('ok'), 'title' => t('ok')));
+        $icon = theme('image', array('path' => 'misc/watchdog-ok.png', 'width' => 18, 'height' => 18, 'alt' => t('ok'), 'title' => t('ok')));
         break;
       case UPDATE_UNKNOWN:
       case UPDATE_FETCH_PENDING:
       case UPDATE_NOT_FETCHED:
         $class = 'unknown';
-        $icon = theme('image', array('path' => 'misc/watchdog-warning.png', 'alt' => t('warning'), 'title' => t('warning')));
+        $icon = theme('image', array('path' => 'misc/watchdog-warning.png', 'width' => 18, 'height' => 18, 'alt' => t('warning'), 'title' => t('warning')));
         break;
       case UPDATE_NOT_SECURE:
       case UPDATE_REVOKED:
       case UPDATE_NOT_SUPPORTED:
         $class = 'error';
-        $icon = theme('image', array('path' => 'misc/watchdog-error.png', 'alt' => t('error'), 'title' => t('error')));
+        $icon = theme('image', array('path' => 'misc/watchdog-error.png', 'width' => 18, 'height' => 18, 'alt' => t('error'), 'title' => t('error')));
         break;
       case UPDATE_NOT_CHECKED:
       case UPDATE_NOT_CURRENT:
       default:
         $class = 'warning';
-        $icon = theme('image', array('path' => 'misc/watchdog-warning.png', 'alt' => t('warning'), 'title' => t('warning')));
+        $icon = theme('image', array('path' => 'misc/watchdog-warning.png', 'width' => 18, 'height' => 18, 'alt' => t('warning'), 'title' => t('warning')));
         break;
     }
 
diff --git a/modules/update/update.settings.inc b/modules/update/update.settings.inc
index 0c32345..60ac3ca 100644
--- a/modules/update/update.settings.inc
+++ b/modules/update/update.settings.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.test b/modules/update/update.test
index a1252dc..6f9ef08 100644
--- a/modules/update/update.test
+++ b/modules/update/update.test
@@ -1,8 +1,9 @@
 <?php
-// $Id$
 
 /**
  * @file
+ * Tests for update.module.
+ *
  * This file contains tests for the update module. The overarching methodology
  * of these tests is we need to compare a given state of installed modules and
  * themes (e.g. version, project grouping, timestamps, etc) vs. a current
diff --git a/modules/user/tests/user_form_test.info b/modules/user/tests/user_form_test.info
index 07f92dc..39d6c57 100644
--- a/modules/user/tests/user_form_test.info
+++ b/modules/user/tests/user_form_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "User module form tests"
 description = "Support module for user form testing."
 package = Testing
diff --git a/modules/user/tests/user_form_test.module b/modules/user/tests/user_form_test.module
index e0a7d27..4e907f3 100644
--- a/modules/user/tests/user_form_test.module
+++ b/modules/user/tests/user_form_test.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/user/user-picture.tpl.php b/modules/user/user-picture.tpl.php
index 328f9c1..a33d266 100644
--- a/modules/user/user-picture.tpl.php
+++ b/modules/user/user-picture.tpl.php
@@ -1,14 +1,13 @@
 <?php
-// $Id$
 
 /**
  * @file
- * Default theme implementation to present an picture configured for the
+ * Default theme implementation to present a picture configured for the
  * user's account.
  *
  * Available variables:
  * - $user_picture: Image set by the user or the site's default. Will be linked
- *   depending on the viewer's permission to view the users profile page.
+ *   depending on the viewer's permission to view the user's profile page.
  * - $account: Array of account information. Potentially unsafe. Be sure to
  *   check_plain() before use.
  *
diff --git a/modules/user/user-profile-category.tpl.php b/modules/user/user-profile-category.tpl.php
index 4ad038b..0de7d5d 100644
--- a/modules/user/user-profile-category.tpl.php
+++ b/modules/user/user-profile-category.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/user/user-profile-item.tpl.php b/modules/user/user-profile-item.tpl.php
index 2f72368..042d43a 100644
--- a/modules/user/user-profile-item.tpl.php
+++ b/modules/user/user-profile-item.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/user/user-profile.tpl.php b/modules/user/user-profile.tpl.php
index 5d06827..50e6111 100644
--- a/modules/user/user-profile.tpl.php
+++ b/modules/user/user-profile.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/user/user-rtl.css b/modules/user/user-rtl.css
index bd75b40..5a1442c 100644
--- a/modules/user/user-rtl.css
+++ b/modules/user/user-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #permissions td.permission {
   padding-left: 0;
@@ -8,19 +7,18 @@
 /**
  * Password strength indicator.
  */
-input.password-field {
-  margin-left: 10px;
-  margin-right: 0;
+.password-strength {
+  float: left;
 }
-input.password-confirm {
-  margin-left: 10px;
-  margin-right: 0;
+.password-strength-text {
+  float: left;
 }
-.password-strength-title {
-  float: right;
+div.password-confirm {
+  float: left;
 }
+.confirm-parent,
 .password-parent {
-  float: right;
+  clear: right;
 }
 
 /* Generated by user.module but used by profile.module: */
diff --git a/modules/user/user.admin.inc b/modules/user/user.admin.inc
index effc964..0596bde 100644
--- a/modules/user/user.admin.inc
+++ b/modules/user/user.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/user/user.api.php b/modules/user/user.api.php
index 17618e1..069a9f8 100644
--- a/modules/user/user.api.php
+++ b/modules/user/user.api.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -25,18 +24,17 @@
  * @see profile_user_load()
  */
 function hook_user_load($users) {
-  $result = db_query('SELECT * FROM {my_table} WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
+  $result = db_query('SELECT uid, foo FROM {my_table} WHERE uid IN (:uids)', array(':uids' => array_keys($users)));
   foreach ($result as $record) {
-    $users[$record->uid]->foo = $result->foo;
+    $users[$record->uid]->foo = $record->foo;
   }
 }
 
 /**
  * Respond to user deletion.
  *
- * This hook is invoked from user_delete_multiple() after the account has been
- * removed from the user tables in the database, and before
- * field_attach_delete() is called.
+ * This hook is invoked from user_delete_multiple() before field_attach_delete()
+ * is called and before users are actually removed from the database.
  *
  * Modules should additionally implement hook_user_cancel() to process stored
  * user data for other account cancellation methods.
@@ -128,7 +126,7 @@ function hook_user_cancel($edit, $account, $method) {
  *   a method. If #access is defined, the method cannot be configured as default
  *   method.
  *
- * @param &$methods
+ * @param $methods
  *   An array containing user account cancellation methods, keyed by method id.
  *
  * @see user_cancel_methods()
@@ -215,7 +213,7 @@ function hook_user_categories() {
  * user account object is loaded, modules may add to $edit['data'] in order
  * to have their data serialized on save.
  *
- * @param &$edit
+ * @param $edit
  *   The array of form values submitted by the user.
  * @param $account
  *   The user object on which the operation is performed.
@@ -238,7 +236,7 @@ function hook_user_presave(&$edit, $account, $category) {
  * The module should save its custom additions to the user object into the
  * database.
  *
- * @param &$edit
+ * @param $edit
  *   The array of form values submitted by the user.
  * @param $account
  *   The user object on which the operation is being performed.
@@ -263,7 +261,7 @@ function hook_user_insert(&$edit, $account, $category) {
  * Modules may use this hook to update their user data in a custom storage
  * after a user account has been updated.
  *
- * @param &$edit
+ * @param $edit
  *   The array of form values submitted by the user.
  * @param $account
  *   The user object on which the operation is performed.
@@ -285,7 +283,7 @@ function hook_user_update(&$edit, $account, $category) {
 /**
  * The user just logged in.
  *
- * @param &$edit
+ * @param $edit
  *   The array of form values submitted by the user.
  * @param $account
  *   The user object on which the operation was just performed.
@@ -369,6 +367,25 @@ function hook_user_view_alter(&$build) {
 }
 
 /**
+ * Inform other modules that a user role is about to be saved.
+ *
+ * Modules implementing this hook can act on the user role object before
+ * it has been saved to the database.
+ *
+ * @param $role
+ *   A user role object.
+ *
+ * @see hook_user_role_insert()
+ * @see hook_user_role_update()
+ */
+function hook_user_role_presave($role) {
+  // Set a UUID for the user role if it doesn't already exist
+  if (empty($role->uuid)) {
+    $role->uuid = uuid_uuid();
+  }
+}
+
+/**
  * Inform other modules that a user role has been added.
  *
  * Modules implementing this hook can act on the user role object when saved to
diff --git a/modules/user/user.css b/modules/user/user.css
index f246b93..d6ed7c3 100644
--- a/modules/user/user.css
+++ b/modules/user/user.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #permissions td.module {
   font-weight: bold;
@@ -58,8 +57,10 @@ input.password-field {
   margin-bottom: 0.4em;
 }
 div.password-confirm {
-  display: inline;
-  padding-left: 1em;
+  float: right;  /* LTR */
+  margin-top: 1.5em;
+  visibility: hidden;
+  width: 17em;
 }
 div.form-item div.password-suggestions {
   padding: 0.2em 0.5em;
@@ -70,19 +71,11 @@ div.form-item div.password-suggestions {
 div.password-suggestions ul {
   margin-bottom: 0;
 }
+.confirm-parent,
 .password-parent {
+  clear: left; /* LTR */
   margin: 0;
-  width: 34.3em;
-}
-
-/**
- * Password confirmation checker.
- */
-.confirm-parent {
-  margin: 0;
-}
-div.password-confirm {
-  visibility: hidden;
+  width: 36.3em;
 }
 
 /* Generated by user.module but used by profile.module: */
diff --git a/modules/user/user.info b/modules/user/user.info
index f692ae2..1154f53 100644
--- a/modules/user/user.info
+++ b/modules/user/user.info
@@ -1,4 +1,3 @@
-; $Id$
 name = User
 description = Manages the user registration and login system.
 package = Core
diff --git a/modules/user/user.install b/modules/user/user.install
index 1884f4f..df94ad5 100644
--- a/modules/user/user.install
+++ b/modules/user/user.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -855,5 +854,18 @@ function user_update_7015() {
 }
 
 /**
+ * Update the database to match the schema.
+ */
+function user_update_7016() {
+  // Add field default.
+  db_change_field('users', 'uid', 'uid', array(
+    'type' => 'int',
+    'unsigned' => TRUE,
+    'not null' => TRUE,
+    'default' => 0,
+  ));
+}
+
+/**
  * @} End of "addtogroup updates-6.x-to-7.x"
  */
diff --git a/modules/user/user.js b/modules/user/user.js
index 1430262..44c00f3 100644
--- a/modules/user/user.js
+++ b/modules/user/user.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
@@ -17,7 +16,7 @@ Drupal.behaviors.password = {
       innerWrapper.addClass('password-parent');
 
       // Add the password confirmation layer.
-      $('input.password-confirm', outerWrapper).after('<div class="password-confirm">' + translate['confirmTitle'] + ' <span></span></div>').parent().addClass('confirm-parent');
+      $('input.password-confirm', outerWrapper).parent().prepend('<div class="password-confirm">' + translate['confirmTitle'] + ' <span></span></div>').addClass('confirm-parent');
       var confirmInput = $('input.password-confirm', outerWrapper);
       var confirmResult = $('div.password-confirm', outerWrapper);
       var confirmChild = $('span', confirmResult);
diff --git a/modules/user/user.module b/modules/user/user.module
index b7ebfdd..90d313b 100644
--- a/modules/user/user.module
+++ b/modules/user/user.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -326,9 +325,10 @@ class UserController extends DrupalDefaultEntityController {
  * user. So to avoid confusion and to avoid clobbering the global $user object,
  * it is a good idea to assign the result of this function to a different local
  * variable, generally $account. If you actually do want to act as the user you
- * are loading, it is essential to call @code session_save_session(FALSE);
- * @endcode first. See @link http://drupal.org/node/218104 Safely impersonating
- * another user @endlink for more information.
+ * are loading, it is essential to call drupal_save_session(FALSE); first.
+ * See
+ * @link http://drupal.org/node/218104 Safely impersonating another user @endlink
+ * for more information.
  *
  * @param $uid
  *   Integer specifying the user ID to load.
@@ -404,8 +404,6 @@ function user_load_by_name($name) {
 function user_save($account, $edit = array(), $category = 'account') {
   $transaction = db_transaction();
   try {
-    $table = drupal_get_schema('users');
-
     if (!empty($edit['pass'])) {
       // Allow alternate password hashing schemes.
       require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
@@ -419,6 +417,9 @@ function user_save($account, $edit = array(), $category = 'account') {
       // Avoid overwriting an existing password with a blank password.
       unset($edit['pass']);
     }
+    if (isset($edit['mail'])) {
+      $edit['mail'] = trim($edit['mail']);
+    }
 
     // Load the stored entity, if any.
     if (!empty($account->uid) && !isset($account->original)) {
@@ -441,27 +442,18 @@ function user_save($account, $edit = array(), $category = 'account') {
     user_module_invoke('presave', $edit, $account, $category);
 
     // Invoke presave operations of Field Attach API and Entity API. Those APIs
-    // require a fully-fledged (and updated) entity object, so $edit is not
-    // necessarily sufficient, as it technically contains submitted form values
-    // only. Therefore, we need to clone $account into a new object and copy any
-    // new property values of $edit into it.
-    $account_updated = clone $account;
+    // require a fully-fledged and updated entity object. Therefore, we need to
+    // copy any new property values of $edit into it.
     foreach ($edit as $key => $value) {
-      $account_updated->$key = $value;
-    }
-    field_attach_presave('user', $account_updated);
-    module_invoke_all('entity_presave', $account_updated, 'user');
-    // Update $edit with any changes modules might have applied to the account.
-    foreach ($account_updated as $key => $value) {
-      if (!property_exists($account, $key) || $value !== $account->$key) {
-        $edit[$key] = $value;
-      }
+      $account->$key = $value;
     }
+    field_attach_presave('user', $account);
+    module_invoke_all('entity_presave', $account, 'user');
 
     if (is_object($account) && !$account->is_new) {
       // Process picture uploads.
-      if (!$delete_previous_picture = empty($edit['picture']->fid)) {
-        $picture = $edit['picture'];
+      if (!empty($account->picture->fid) && (!isset($account->original->picture->fid) || $account->picture->fid != $account->original->picture->fid)) {
+        $picture = $account->picture;
         // If the picture is a temporary file move it to its final location and
         // make it permanent.
         if (!$picture->status) {
@@ -474,26 +466,23 @@ function user_save($account, $edit = array(), $category = 'account') {
 
           // Move the temporary file into the final location.
           if ($picture = file_move($picture, $destination, FILE_EXISTS_RENAME)) {
-            $delete_previous_picture = TRUE;
             $picture->status = FILE_STATUS_PERMANENT;
-            $edit['picture'] = file_save($picture);
+            $account->picture = file_save($picture);
             file_usage_add($picture, 'user', 'user', $account->uid);
           }
         }
+        // Delete the previous picture if it was deleted or replaced.
+        if (!empty($account->original->picture->fid)) {
+          file_usage_delete($account->original->picture, 'user', 'user', $account->uid);
+          file_delete($account->original->picture);
+        }
       }
-
-      // Delete the previous picture if it was deleted or replaced.
-      if ($delete_previous_picture && !empty($account->picture->fid)) {
-        file_usage_delete($account->picture, 'user', 'user', $account->uid);
-        file_delete($account->picture);
-      }
-
-      $edit['picture'] = empty($edit['picture']->fid) ? 0 : $edit['picture']->fid;
+      $account->picture = empty($account->picture->fid) ? 0 : $account->picture->fid;
 
       // Do not allow 'uid' to be changed.
-      $edit['uid'] = $account->uid;
+      $account->uid = $account->original->uid;
       // Save changes to the user table.
-      $success = drupal_write_record('users', $edit, 'uid');
+      $success = drupal_write_record('users', $account, 'uid');
       if ($success === FALSE) {
         // The query failed - better to abort the save than risk further
         // data loss.
@@ -501,13 +490,13 @@ function user_save($account, $edit = array(), $category = 'account') {
       }
 
       // Reload user roles if provided.
-      if (isset($edit['roles']) && is_array($edit['roles'])) {
+      if ($account->roles != $account->original->roles) {
         db_delete('users_roles')
           ->condition('uid', $account->uid)
           ->execute();
 
         $query = db_insert('users_roles')->fields(array('uid', 'rid'));
-        foreach (array_keys($edit['roles']) as $rid) {
+        foreach (array_keys($account->roles) as $rid) {
           if (!in_array($rid, array(DRUPAL_ANONYMOUS_RID, DRUPAL_AUTHENTICATED_RID))) {
             $query->values(array(
               'uid' => $account->uid,
@@ -519,13 +508,13 @@ function user_save($account, $edit = array(), $category = 'account') {
       }
 
       // Delete a blocked user's sessions to kick them if they are online.
-      if (isset($edit['status']) && $edit['status'] == 0) {
+      if ($account->original->status != $account->status && $account->status == 0) {
         drupal_session_destroy_uid($account->uid);
       }
 
       // If the password changed, delete all open sessions and recreate
       // the current one.
-      if (!empty($edit['pass'])) {
+      if ($account->pass != $account->original->pass) {
         drupal_session_destroy_uid($account->uid);
         if ($account->uid == $GLOBALS['user']->uid) {
           drupal_session_regenerate();
@@ -533,61 +522,56 @@ function user_save($account, $edit = array(), $category = 'account') {
       }
 
       // Save Field data.
-      $entity = (object) $edit;
-      field_attach_update('user', $entity);
-
-      // Refresh user object.
-      $user = user_load($account->uid, TRUE);
-      // Make the original, unchanged user account available to update hooks.
-      if (isset($account->original)) {
-        $user->original = $account->original;
-      }
+      field_attach_update('user', $account);
 
       // Send emails after we have the new user object.
-      if (isset($edit['status']) && $edit['status'] != $account->status) {
+      if ($account->status != $account->original->status) {
         // The user's status is changing; conditionally send notification email.
-        $op = $edit['status'] == 1 ? 'status_activated' : 'status_blocked';
-        _user_mail_notify($op, $user);
+        $op = $account->status == 1 ? 'status_activated' : 'status_blocked';
+        _user_mail_notify($op, $account);
       }
 
-      user_module_invoke('update', $edit, $user, $category);
-      module_invoke_all('entity_update', $user, 'user');
-      unset($user->original);
+      // Update $edit with any interim changes to $account.
+      foreach ($account as $key => $value) {
+        if (!property_exists($account->original, $key) || $value !== $account->original->$key) {
+          $edit[$key] = $value;
+        }
+      }
+      user_module_invoke('update', $edit, $account, $category);
+      module_invoke_all('entity_update', $account, 'user');
     }
     else {
       // Allow 'uid' to be set by the caller. There is no danger of writing an
       // existing user as drupal_write_record will do an INSERT.
-      if (empty($edit['uid'])) {
-        $edit['uid'] = db_next_id(db_query('SELECT MAX(uid) FROM {users}')->fetchField());
+      if (empty($account->uid)) {
+        $account->uid = db_next_id(db_query('SELECT MAX(uid) FROM {users}')->fetchField());
       }
       // Allow 'created' to be set by the caller.
-      if (!isset($edit['created'])) {
-        $edit['created'] = REQUEST_TIME;
+      if (!isset($account->created)) {
+        $account->created = REQUEST_TIME;
       }
-      $edit['mail'] = trim($edit['mail']);
-      $success = drupal_write_record('users', $edit);
+      $success = drupal_write_record('users', $account);
       if ($success === FALSE) {
         // On a failed INSERT some other existing user's uid may be returned.
         // We must abort to avoid overwriting their account.
         return FALSE;
       }
 
-      // Build a stub user object.
-      $user = (object) $edit;
-      $user->roles[DRUPAL_AUTHENTICATED_RID] = 'authenticated user';
+      // Make sure $account is properly initialized.
+      $account->roles[DRUPAL_AUTHENTICATED_RID] = 'authenticated user';
 
-      field_attach_insert('user', $user);
-
-      user_module_invoke('insert', $edit, $user, $category);
-      module_invoke_all('entity_insert', $user, 'user');
+      field_attach_insert('user', $account);
+      $edit = (array) $account;
+      user_module_invoke('insert', $edit, $account, $category);
+      module_invoke_all('entity_insert', $account, 'user');
 
       // Save user roles.
-      if (isset($edit['roles']) && is_array($edit['roles'])) {
+      if (count($account->roles) > 1) {
         $query = db_insert('users_roles')->fields(array('uid', 'rid'));
-        foreach (array_keys($edit['roles']) as $rid) {
+        foreach (array_keys($account->roles) as $rid) {
           if (!in_array($rid, array(DRUPAL_ANONYMOUS_RID, DRUPAL_AUTHENTICATED_RID))) {
             $query->values(array(
-              'uid' => $edit['uid'],
+              'uid' => $account->uid,
               'rid' => $rid,
             ));
           }
@@ -595,8 +579,13 @@ function user_save($account, $edit = array(), $category = 'account') {
         $query->execute();
       }
     }
+    // Clear internal properties.
+    unset($account->is_new);
+    unset($account->original);
+    // Clear the static loading cache.
+    entity_get_controller('user')->resetCache(array($account->uid));
 
-    return $user;
+    return $account;
   }
   catch (Exception $e) {
     $transaction->rollback();
@@ -655,7 +644,6 @@ function user_validate_name($name) {
  *   If the address is valid, nothing is returned.
  */
 function user_validate_mail($mail) {
-  $mail = trim($mail);
   if (!$mail) {
     return t('You must enter an e-mail address.');
   }
@@ -1203,6 +1191,11 @@ function user_account_form_validate($form, &$form_state) {
       }
     }
 
+    // Trim whitespace from mail, to prevent confusing 'e-mail not valid'
+    // warnings often caused by cutting and pasting.
+    $mail = trim($form_state['values']['mail']);
+    form_set_value($form['account']['mail'], $mail, $form_state);
+
     // Validate the e-mail address, and check if it is taken by an existing user.
     if ($error = user_validate_mail($form_state['values']['mail'])) {
       form_set_error('mail', $error);
@@ -1480,6 +1473,7 @@ function template_preprocess_user_picture(&$variables) {
 function theme_user_list($variables) {
   $users = $variables['users'];
   $title = $variables['title'];
+  $items = array();
 
   if (!empty($users)) {
     foreach ($users as $user) {
@@ -2518,8 +2512,8 @@ function user_build_content($account, $view_mode = 'full', $langcode = NULL) {
   $account->content = array();
 
   // Build fields content.
-  field_attach_prepare_view('user', array($account->uid => $account), $view_mode);
-  entity_prepare_view('user', array($account->uid => $account));
+  field_attach_prepare_view('user', array($account->uid => $account), $view_mode, $langcode);
+  entity_prepare_view('user', array($account->uid => $account), $langcode);
   $account->content += field_attach_view('user', $account, $view_mode, $langcode);
 
   // Populate $account->content with a render() array.
@@ -2823,6 +2817,10 @@ function user_role_save($role) {
     $query->addExpression('MAX(weight)');
     $role->weight = $query->execute()->fetchField() + 1;
   }
+
+  // Let modules modify the user role before it is saved to the database.
+  module_invoke_all('user_role_presave', $role);
+
   if (!empty($role->rid) && $role->name) {
     $status = drupal_write_record('role', $role, 'rid');
     module_invoke_all('user_role_update', $role);
diff --git a/modules/user/user.pages.inc b/modules/user/user.pages.inc
index 284b433..697a82d 100644
--- a/modules/user/user.pages.inc
+++ b/modules/user/user.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/user/user.permissions.js b/modules/user/user.permissions.js
index c3b5190..4ef576c 100644
--- a/modules/user/user.permissions.js
+++ b/modules/user/user.permissions.js
@@ -1,4 +1,3 @@
-// $Id$
 (function ($) {
 
 /**
diff --git a/modules/user/user.test b/modules/user/user.test
index d999c85..6ecbfac 100644
--- a/modules/user/user.test
+++ b/modules/user/user.test
@@ -1,5 +1,9 @@
 <?php
-// $Id$
+
+/**
+ * @file
+ * Tests for user.module.
+ */
 
 class UserRegistrationTestCase extends DrupalWebTestCase {
   public static function getInfo() {
@@ -104,6 +108,31 @@ class UserRegistrationTestCase extends DrupalWebTestCase {
     $this->assertText(t('Member for'), t('User can log in after administrator approval.'));
   }
 
+  function testRegistrationEmailDuplicates() {
+    // Don't require e-mail verification.
+    variable_set('user_email_verification', FALSE);
+
+    // Allow registration by site visitors without administrator approval.
+    variable_set('user_register', USER_REGISTER_VISITORS);
+
+    // Set up a user to check for duplicates.
+    $duplicate_user = $this->drupalCreateUser();
+
+    $edit = array();
+    $edit['name'] = $this->randomName();
+    $edit['mail'] = $duplicate_user->mail;
+
+    // Attempt to create a new account using an existing e-mail address.
+    $this->drupalPost('user/register', $edit, t('Create new account'));
+    $this->assertText(t('The e-mail address @email is already registered.', array('@email' => $duplicate_user->mail)), t('Supplying an exact duplicate email address displays an error message'));
+
+    // Attempt to bypass duplicate email registration validation by adding spaces.
+    $edit['mail'] = '   ' . $duplicate_user->mail . '   ';
+
+    $this->drupalPost('user/register', $edit, t('Create new account'));
+    $this->assertText(t('The e-mail address @email is already registered.', array('@email' => $duplicate_user->mail)), t('Supplying a duplicate email address with added whitespace displays an error message'));
+  }
+
   function testRegistrationDefaultValues() {
     // Allow registration by site visitors without administrator approval.
     variable_set('user_register', USER_REGISTER_VISITORS);
@@ -406,6 +435,7 @@ class UserLoginTestCase extends DrupalWebTestCase {
       'pass' => $account->pass_raw,
     );
     $this->drupalPost('user', $edit, t('Log in'));
+    $this->assertNoFieldByXPath("//input[@name='pass' and @value!='']", NULL, t('Password value attribute is blank.'));
     if (isset($flood_trigger)) {
       if ($flood_trigger == 'user') {
         $this->assertRaw(format_plural(variable_get('user_failed_login_user_limit', 5), 'Sorry, there has been more than one failed login attempt for this account. It is temporarily blocked. Try again later or <a href="@url">request a new password</a>.', 'Sorry, there have been more than @count failed login attempts for this account. It is temporarily blocked. Try again later or <a href="@url">request a new password</a>.', array('@url' => url('user/password'))));
@@ -1899,7 +1929,7 @@ class UserTokenReplaceTestCase extends DrupalWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('user' => $account), array('language' => $language));
-      $this->assertFalse(strcmp($output, $expected), t('Sanitized user token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Sanitized user token %token replaced.', array('%token' => $input)));
     }
 
     // Generate and test unsanitized tokens.
@@ -1909,7 +1939,7 @@ class UserTokenReplaceTestCase extends DrupalWebTestCase {
 
     foreach ($tests as $input => $expected) {
       $output = token_replace($input, array('user' => $account), array('language' => $language, 'sanitize' => FALSE));
-      $this->assertFalse(strcmp($output, $expected), t('Unsanitized user token %token replaced.', array('%token' => $input)));
+      $this->assertEqual($output, $expected, t('Unsanitized user token %token replaced.', array('%token' => $input)));
     }
   }
 }
diff --git a/modules/user/user.tokens.inc b/modules/user/user.tokens.inc
index 6c6862c..8dcea4b 100644
--- a/modules/user/user.tokens.inc
+++ b/modules/user/user.tokens.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/profiles/minimal/minimal.info b/profiles/minimal/minimal.info
index f4794df..9b0f250 100644
--- a/profiles/minimal/minimal.info
+++ b/profiles/minimal/minimal.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Minimal
 description = Start with only a few modules enabled.
 version = VERSION
diff --git a/profiles/minimal/minimal.install b/profiles/minimal/minimal.install
index d7caa03..059f038 100644
--- a/profiles/minimal/minimal.install
+++ b/profiles/minimal/minimal.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_install().
diff --git a/profiles/minimal/minimal.profile b/profiles/minimal/minimal.profile
index 7f0bf8a..ff8f281 100644
--- a/profiles/minimal/minimal.profile
+++ b/profiles/minimal/minimal.profile
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_form_FORM_ID_alter().
diff --git a/profiles/minimal/translations/README.txt b/profiles/minimal/translations/README.txt
index 72d1e60..a0afa51 100644
--- a/profiles/minimal/translations/README.txt
+++ b/profiles/minimal/translations/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory should be used to place downloaded translations
 for installing Drupal core.
diff --git a/profiles/standard/standard.info b/profiles/standard/standard.info
index d49b3d1..73d5d9b 100644
--- a/profiles/standard/standard.info
+++ b/profiles/standard/standard.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Standard
 description = Install with commonly used features pre-configured.
 version = VERSION
diff --git a/profiles/standard/standard.install b/profiles/standard/standard.install
index c8dbb7e..7082906 100644
--- a/profiles/standard/standard.install
+++ b/profiles/standard/standard.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_install().
@@ -272,7 +271,7 @@ function standard_install() {
   $description = st('Use tags to group articles on similar topics into categories.');
   $help = st('Enter a comma-separated list of words to describe your content.');
   $vocabulary = (object) array(
-    'name' => 'Tags',
+    'name' => st('Tags'),
     'description' => $description,
     'machine_name' => 'tags',
     'help' => $help,
@@ -299,7 +298,7 @@ function standard_install() {
   $instance = array(
     'field_name' => 'field_' . $vocabulary->machine_name,
     'entity_type' => 'node',
-    'label' => $vocabulary->name,
+    'label' => 'Tags',
     'bundle' => 'article',
     'description' => $vocabulary->help,
     'widget' => array(
diff --git a/profiles/standard/standard.profile b/profiles/standard/standard.profile
index 9180e95..7671c12 100644
--- a/profiles/standard/standard.profile
+++ b/profiles/standard/standard.profile
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_form_FORM_ID_alter().
diff --git a/profiles/standard/translations/README.txt b/profiles/standard/translations/README.txt
index 72d1e60..a0afa51 100644
--- a/profiles/standard/translations/README.txt
+++ b/profiles/standard/translations/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory should be used to place downloaded translations
 for installing Drupal core.
diff --git a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index d367ad9..085c335 100644
--- a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Drupal system listing compatible test"
 description = "Support module for testing the drupal_system_listing function."
 package = Testing
diff --git a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module
index 13bb990..b3d9bbc 100644
--- a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module
+++ b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index f518e5d..c067987 100644
--- a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -1,4 +1,3 @@
-; $Id$
 name = "Drupal system listing incompatible test"
 description = "Support module for testing the drupal_system_listing function."
 package = Testing
diff --git a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module
index 13bb990..b3d9bbc 100644
--- a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module
+++ b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.module
@@ -1,2 +1 @@
 <?php
-// $Id$
diff --git a/profiles/testing/testing.info b/profiles/testing/testing.info
index 87c1464..8217201 100644
--- a/profiles/testing/testing.info
+++ b/profiles/testing/testing.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Testing
 description = Minimal profile for running tests. Includes absolutely required modules only.
 version = VERSION
diff --git a/profiles/testing/testing.install b/profiles/testing/testing.install
index 28b2627..192704d 100644
--- a/profiles/testing/testing.install
+++ b/profiles/testing/testing.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implements hook_install().
diff --git a/profiles/testing/testing.profile b/profiles/testing/testing.profile
index b02b32d..a4abe2d 100644
--- a/profiles/testing/testing.profile
+++ b/profiles/testing/testing.profile
@@ -1,3 +1,2 @@
 <?php
-// $Id$
 
diff --git a/robots.txt b/robots.txt
index a54a129..490fa59 100644
--- a/robots.txt
+++ b/robots.txt
@@ -1,4 +1,3 @@
-# $Id$
 #
 # robots.txt
 #
diff --git a/scripts/code-clean.sh b/scripts/code-clean.sh
index 19a15ad..3338b6a 100644
--- a/scripts/code-clean.sh
+++ b/scripts/code-clean.sh
@@ -1,5 +1,4 @@
 #!/bin/sh
-# $Id$
 
 find . -name "*~" -type f | xargs rm -f
 find . -name ".#*" -type f | xargs rm -f
diff --git a/scripts/cron-curl.sh b/scripts/cron-curl.sh
index 633b3d8..9b168ab 100644
--- a/scripts/cron-curl.sh
+++ b/scripts/cron-curl.sh
@@ -1,4 +1,3 @@
 #!/bin/sh
-# $Id$
 
 curl --silent --compressed http://example.com/cron.php
diff --git a/scripts/cron-lynx.sh b/scripts/cron-lynx.sh
index 04317be..904667a 100644
--- a/scripts/cron-lynx.sh
+++ b/scripts/cron-lynx.sh
@@ -1,4 +1,3 @@
 #!/bin/sh
-# $Id$
 
 /usr/bin/lynx -source http://example.com/cron.php > /dev/null 2>&1
diff --git a/scripts/drupal.sh b/scripts/drupal.sh
index 9e743cf..5d064f5 100755
--- a/scripts/drupal.sh
+++ b/scripts/drupal.sh
@@ -1,6 +1,5 @@
 #!/usr/bin/env php
 <?php
-// $Id$
 
 /**
  * Drupal shell execution script
diff --git a/scripts/dump-database-d6.sh b/scripts/dump-database-d6.sh
index 3eb5d48..41146b0 100644
--- a/scripts/dump-database-d6.sh
+++ b/scripts/dump-database-d6.sh
@@ -1,6 +1,5 @@
 #!/usr/bin/env php
 <?php
-// $Id$
 
 /**
  * Dump a Drupal 6 database into a Drupal 7 PHP script to test the upgrade
@@ -34,7 +33,6 @@ include_once dirname(__FILE__) . '/../includes/utility.inc';
 // Output the PHP header.
 $output = <<<ENDOFHEADER
 <?php
-// \$Id\$
 
 /**
  * @file
diff --git a/scripts/generate-d6-content.sh b/scripts/generate-d6-content.sh
index c4dc952..bba61ca 100644
--- a/scripts/generate-d6-content.sh
+++ b/scripts/generate-d6-content.sh
@@ -1,6 +1,5 @@
 #!/usr/bin/env php
 <?php
-// $Id$
 
 /**
  * Generate content for a Drupal 6 database to test the upgrade process.
diff --git a/scripts/password-hash.sh b/scripts/password-hash.sh
index c5e26c1..004421a 100755
--- a/scripts/password-hash.sh
+++ b/scripts/password-hash.sh
@@ -1,6 +1,5 @@
 #!/usr/bin/php
 <?php
-// $Id$
 
 /**
  * Drupal hash script - to generate a hash from a plaintext password
diff --git a/scripts/run-tests.sh b/scripts/run-tests.sh
index 70c0a96..2cfbcac 100755
--- a/scripts/run-tests.sh
+++ b/scripts/run-tests.sh
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 /**
  * @file
  * This script runs Drupal tests from command line.
diff --git a/sites/all/README.txt b/sites/all/README.txt
index 6655686..c897088 100644
--- a/sites/all/README.txt
+++ b/sites/all/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory should be used to place downloaded and custom modules
 and themes which are common to all sites. Keeping contributed and
diff --git a/sites/all/modules/README.txt b/sites/all/modules/README.txt
index e2cb25e..f4e35b5 100644
--- a/sites/all/modules/README.txt
+++ b/sites/all/modules/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory should be used to place downloaded and custom modules
 which are common to all sites. This will allow you to more easily
diff --git a/sites/all/themes/README.txt b/sites/all/themes/README.txt
index 99ced75..e942521 100644
--- a/sites/all/themes/README.txt
+++ b/sites/all/themes/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory should be used to place downloaded and custom themes
 which are common to all sites. This will allow you to more easily
diff --git a/sites/default/default.settings.php b/sites/default/default.settings.php
index 6ecc030..0472f02 100644
--- a/sites/default/default.settings.php
+++ b/sites/default/default.settings.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -282,11 +281,11 @@ ini_set('session.cookie_lifetime', 2000000);
 
 /**
  * Drupal automatically generates a unique session cookie name for each site
- * based on on its full domain name. If you have multiple domains pointing at
- * the same Drupal site, you can either redirect them all to a single domain
- * (see comment in .htaccess), or uncomment the line below and specify their
- * shared base domain. Doing so assures that users remain logged in as they
- * cross between your various domains.
+ * based on its full domain name. If you have multiple domains pointing at the
+ * same Drupal site, you can either redirect them all to a single domain (see
+ * comment in .htaccess), or uncomment the line below and specify their shared
+ * base domain. Doing so assures that users remain logged in as they cross
+ * between your various domains.
  */
 # $cookie_domain = 'example.com';
 
@@ -369,8 +368,7 @@ ini_set('session.cookie_lifetime', 2000000);
  * the cache. If the site has mostly anonymous users except a few known
  * editors/administrators, the Vary header can be omitted. This allows for
  * better caching in HTTP proxies (including reverse proxies), i.e. even if
- * clients send different cookies, they still get content served from the cache
- * if aggressive caching is enabled and the minimum cache time is non-zero.
+ * clients send different cookies, they still get content served from the cache.
  * However, authenticated users should access the site directly (i.e. not use an
  * HTTP proxy, and bypass the reverse proxy if one is used) in order to avoid
  * getting cached pages from the proxy.
diff --git a/sites/example.sites.php b/sites/example.sites.php
index 1010b27..08c1020 100644
--- a/sites/example.sites.php
+++ b/sites/example.sites.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/README.txt b/themes/README.txt
index 5e1f0b4..3fb27ed 100644
--- a/themes/README.txt
+++ b/themes/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory is reserved for core theme files. Custom or contributed themes
 should be placed in their own subdirectory of the sites/all/themes directory.
diff --git a/themes/bartik/bartik.info b/themes/bartik/bartik.info
index 447a2b6..ce7e13f 100644
--- a/themes/bartik/bartik.info
+++ b/themes/bartik/bartik.info
@@ -1,4 +1,3 @@
-; $Id$
 
 name = Bartik
 description = A flexible, recolorable theme with many regions.
diff --git a/themes/bartik/color/color.inc b/themes/bartik/color/color.inc
index 54872a2..fa323ed 100644
--- a/themes/bartik/color/color.inc
+++ b/themes/bartik/color/color.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 // Put the logo path into JavaScript for the live preview.
 drupal_add_js(array('color' => array('logo' => theme_get_setting('logo', 'bartik'))), 'setting');
diff --git a/themes/bartik/color/preview.css b/themes/bartik/color/preview.css
index 31fdd66..48a4a83 100644
--- a/themes/bartik/color/preview.css
+++ b/themes/bartik/color/preview.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* ---------- Color form ----------- */
 #color_scheme_form #palette .form-item {
diff --git a/themes/bartik/color/preview.js b/themes/bartik/color/preview.js
index 37d3b80..b40bcf7 100644
--- a/themes/bartik/color/preview.js
+++ b/themes/bartik/color/preview.js
@@ -1,4 +1,3 @@
-// $Id$
 
 (function ($) {
   Drupal.color = {
diff --git a/themes/bartik/css/colors.css b/themes/bartik/css/colors.css
index bcba691..fd83374 100644
--- a/themes/bartik/css/colors.css
+++ b/themes/bartik/css/colors.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* ---------- Color Module Styles ----------- */
 
@@ -24,8 +23,12 @@ body.overlay {
 }
 #header {
   background-color: #48a9e4;
-  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#0779bf), to(#48a9e4));
-  background-image: -moz-linear-gradient(-90deg, #0779bf, #48a9e4);
+  background-image: -moz-linear-gradient(top, #0779bf 0%, #48a9e4 100%);
+  background-image: -ms-linear-gradient(top, #0779bf 0%, #48a9e4 100%);
+  background-image: -o-linear-gradient(top, #0779bf 0%, #48a9e4 100%);
+  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, #0779bf), color-stop(1, #48a9e4));
+  background-image: -webkit-linear-gradient(top, #0779bf 0%, #48a9e4 100%);
+  background-image: linear-gradient(top, #0779bf 0%, #48a9e4 100%);
 }
 a {
   color: #0071B3;
diff --git a/themes/bartik/css/ie-rtl.css b/themes/bartik/css/ie-rtl.css
index 503a8f4..6358bf3 100644
--- a/themes/bartik/css/ie-rtl.css
+++ b/themes/bartik/css/ie-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 fieldset legend {
   left: 6px;
diff --git a/themes/bartik/css/ie.css b/themes/bartik/css/ie.css
index 59f38b5..7a65833 100644
--- a/themes/bartik/css/ie.css
+++ b/themes/bartik/css/ie.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .block {
   zoom: 1;
diff --git a/themes/bartik/css/ie6.css b/themes/bartik/css/ie6.css
index ab31b16..435fab0 100644
--- a/themes/bartik/css/ie6.css
+++ b/themes/bartik/css/ie6.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #content {
   overflow: hidden;
diff --git a/themes/bartik/css/layout-rtl.css b/themes/bartik/css/layout-rtl.css
index eca022a..fa81e4f 100644
--- a/themes/bartik/css/layout-rtl.css
+++ b/themes/bartik/css/layout-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* ---------- Basic Layout RTL Styles ----------- */
 
diff --git a/themes/bartik/css/layout.css b/themes/bartik/css/layout.css
index 02c9ccf..b561f4c 100644
--- a/themes/bartik/css/layout.css
+++ b/themes/bartik/css/layout.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* ---------- Basic Layout Styles ----------- */
 
diff --git a/themes/bartik/css/maintenance-page.css b/themes/bartik/css/maintenance-page.css
index d7e196b..c13c77b 100644
--- a/themes/bartik/css/maintenance-page.css
+++ b/themes/bartik/css/maintenance-page.css
@@ -1,13 +1,14 @@
-/* $Id$ */
 
 body.maintenance-page {
   background-color: #fff;
   color: #000;
 }
 .maintenance-page #page-wrapper {
+  background: #fff;
   margin-left: auto;
   margin-right: auto;
   min-width: 0;
+  min-height: 0;
   width: 800px;
   border: 1px solid #ddd;
   margin-top: 40px;
@@ -24,7 +25,6 @@ body.maintenance-page {
   width: auto;
 }
 .maintenance-page #header div.section,
-.maintenance-page #messages,
 .maintenance-page #main {
   width: 700px;
 }
@@ -58,6 +58,10 @@ body.maintenance-page {
   padding: 0;
   margin-top: 30px;
 }
+.maintenance-page #messages div.messages {
+  margin: 0;
+}
 .maintenance-page #messages div.section {
   padding: 0;
+  width: auto;
 }
diff --git a/themes/bartik/css/print.css b/themes/bartik/css/print.css
index db6791d..61ca3fa 100644
--- a/themes/bartik/css/print.css
+++ b/themes/bartik/css/print.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* ---------- General Layout ---------- */
 
diff --git a/themes/bartik/css/style-rtl.css b/themes/bartik/css/style-rtl.css
index d566e8d..d25006f 100644
--- a/themes/bartik/css/style-rtl.css
+++ b/themes/bartik/css/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* ------------------ Reset Styles ------------------ */
 
diff --git a/themes/bartik/css/style.css b/themes/bartik/css/style.css
index d7920b4..7c14277 100644
--- a/themes/bartik/css/style.css
+++ b/themes/bartik/css/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* ---------- Overall Specifications ---------- */
 
@@ -159,7 +158,7 @@ blockquote:after {
   line-height: 0.1em;
   vertical-align: -.45em;
 }
-blockquote :first-child {
+blockquote > p:first-child {
   display: inline;
 }
 a.feed-icon {
@@ -1067,25 +1066,26 @@ div.messages {
 
 /* -------------- Password Meter  ------------- */
 
+.confirm-parent,
+.password-parent {
+  width: 34em;
+}
 .password-parent,
 div.form-item div.password-suggestions {
   position: relative;
-  width: auto;
-}
-#password-strength {
-  float: none;
-  left: 16em;
-  position: absolute;
-  width: 11.5em;
 }
-#password-strength-text,
+.password-strength-text,
 .password-strength-title,
 div.password-confirm {
   font-size: 0.82em;
 }
-#password-strength-text {
+.password-strength-text {
   margin-top: 0.2em;
 }
+div.password-confirm {
+  margin-top: 2.2em;
+  width: 20.73em;
+}
 
 /* ---------------- Buttons    ---------------- */
 
@@ -1136,7 +1136,7 @@ fieldset {
 .fieldset-wrapper {
   margin-top: 25px;
 }
-.node-form .fieldset-wrapper {
+.node-form .vertical-tabs .fieldset-wrapper {
   margin-top: 0;
 }
 .filter-wrapper {
@@ -1213,6 +1213,13 @@ fieldset legend a:active {
 fieldset .fieldset-wrapper {
   padding: 0 10px;
 }
+fieldset .fieldset-description {
+  margin-top: 5px;
+  margin-bottom: 1em;
+  line-height: 1.4;
+  color: #3c3c3c;
+  font-style: italic;
+}
 input {
   margin: 2px 0;
   padding: 4px;
@@ -1247,12 +1254,6 @@ input.form-submit:focus {
 .form-item label {
   font-size: 0.929em;
 }
-fieldset .description {
-  margin-top: 5px;
-  line-height: 1.4;
-  color: #3c3c3c;
-  font-style: italic;
-}
 .form-type-radio label,
 .form-type-checkbox label {
   margin-left: 4px;
diff --git a/themes/bartik/template.php b/themes/bartik/template.php
index 2867f6b..d523a0a 100644
--- a/themes/bartik/template.php
+++ b/themes/bartik/template.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Add body classes if certain regions have content.
@@ -106,7 +105,6 @@ function bartik_process_maintenance_page(&$variables) {
  * Override or insert variables into the node template.
  */
 function bartik_preprocess_node(&$variables) {
-  $variables['submitted'] = t('published by !username on !datetime', array('!username' => $variables['name'], '!datetime' => $variables['date']));
   if ($variables['view_mode'] == 'full' && node_is_page($variables['node'])) {
     $variables['classes_array'][] = 'node-full';
   }
diff --git a/themes/bartik/templates/comment-wrapper.tpl.php b/themes/bartik/templates/comment-wrapper.tpl.php
index 0608af6..864dc41 100644
--- a/themes/bartik/templates/comment-wrapper.tpl.php
+++ b/themes/bartik/templates/comment-wrapper.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/bartik/templates/comment.tpl.php b/themes/bartik/templates/comment.tpl.php
index d83f178..d64487d 100644
--- a/themes/bartik/templates/comment.tpl.php
+++ b/themes/bartik/templates/comment.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/bartik/templates/maintenance-page.tpl.php b/themes/bartik/templates/maintenance-page.tpl.php
index 795cc02..6deef1e 100644
--- a/themes/bartik/templates/maintenance-page.tpl.php
+++ b/themes/bartik/templates/maintenance-page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/bartik/templates/node.tpl.php b/themes/bartik/templates/node.tpl.php
index 7b8377d..f215b47 100644
--- a/themes/bartik/templates/node.tpl.php
+++ b/themes/bartik/templates/node.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/bartik/templates/page.tpl.php b/themes/bartik/templates/page.tpl.php
index f426b8b..7b0f990 100644
--- a/themes/bartik/templates/page.tpl.php
+++ b/themes/bartik/templates/page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/engines/phptemplate/phptemplate.engine b/themes/engines/phptemplate/phptemplate.engine
index 78b54d5..d293b85 100644
--- a/themes/engines/phptemplate/phptemplate.engine
+++ b/themes/engines/phptemplate/phptemplate.engine
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/garland/color/color.inc b/themes/garland/color/color.inc
index c23d3f0..1633692 100644
--- a/themes/garland/color/color.inc
+++ b/themes/garland/color/color.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 $info = array(
 
diff --git a/themes/garland/color/preview.css b/themes/garland/color/preview.css
index ebe4f26..cf32438 100644
--- a/themes/garland/color/preview.css
+++ b/themes/garland/color/preview.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* Positioning */
 #preview {
diff --git a/themes/garland/comment.tpl.php b/themes/garland/comment.tpl.php
index a11f4fc..900afc1 100644
--- a/themes/garland/comment.tpl.php
+++ b/themes/garland/comment.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div class="<?php print $classes . ' ' . $zebra; ?>"<?php print $attributes; ?>>
 
diff --git a/themes/garland/fix-ie-rtl.css b/themes/garland/fix-ie-rtl.css
index c5f31c0..fb1901b 100644
--- a/themes/garland/fix-ie-rtl.css
+++ b/themes/garland/fix-ie-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   /* Center layout */
diff --git a/themes/garland/fix-ie.css b/themes/garland/fix-ie.css
index 04905fc..1a1c131 100644
--- a/themes/garland/fix-ie.css
+++ b/themes/garland/fix-ie.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   /* Center layout */
diff --git a/themes/garland/garland.info b/themes/garland/garland.info
index ed681cf..307f03a 100644
--- a/themes/garland/garland.info
+++ b/themes/garland/garland.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Garland
 description = A multi-column theme which can be configured to modify colors and switch between fixed and fluid width layouts.
 package = Core
diff --git a/themes/garland/maintenance-page.tpl.php b/themes/garland/maintenance-page.tpl.php
index 97120d5..75fb147 100644
--- a/themes/garland/maintenance-page.tpl.php
+++ b/themes/garland/maintenance-page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/garland/node.tpl.php b/themes/garland/node.tpl.php
index 0d15d8c..27808f4 100644
--- a/themes/garland/node.tpl.php
+++ b/themes/garland/node.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div id="node-<?php print $node->nid; ?>" class="<?php print $classes; ?>"<?php print $attributes; ?>>
 
diff --git a/themes/garland/page.tpl.php b/themes/garland/page.tpl.php
index 448d216..326255c 100644
--- a/themes/garland/page.tpl.php
+++ b/themes/garland/page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
   <?php print render($page['header']); ?>
 
diff --git a/themes/garland/print.css b/themes/garland/print.css
index aea5014..df4f0ae 100644
--- a/themes/garland/print.css
+++ b/themes/garland/print.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body,
 input,
diff --git a/themes/garland/style-rtl.css b/themes/garland/style-rtl.css
index 0093cf4..58aed57 100644
--- a/themes/garland/style-rtl.css
+++ b/themes/garland/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 html {
   direction: rtl;
diff --git a/themes/garland/style.css b/themes/garland/style.css
index 4b337ca..f36fa96 100644
--- a/themes/garland/style.css
+++ b/themes/garland/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Generic elements
diff --git a/themes/garland/template.php b/themes/garland/template.php
index b9234c9..1b144f1 100644
--- a/themes/garland/template.php
+++ b/themes/garland/template.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Return a themed breadcrumb trail.
diff --git a/themes/garland/theme-settings.php b/themes/garland/theme-settings.php
index 6d56de3..2454341 100644
--- a/themes/garland/theme-settings.php
+++ b/themes/garland/theme-settings.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/seven/ie.css b/themes/seven/ie.css
index 2b44b65..4b25695 100644
--- a/themes/seven/ie.css
+++ b/themes/seven/ie.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* IE7 renders legends in nested fieldsets without a width. */
 fieldset legend {
diff --git a/themes/seven/ie6.css b/themes/seven/ie6.css
index 149614d..7d1c320 100644
--- a/themes/seven/ie6.css
+++ b/themes/seven/ie6.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 ul.menu li,
 ul.menu li a,
diff --git a/themes/seven/images/fc-rtl.png b/themes/seven/images/fc-rtl.png
new file mode 100644
index 0000000000000000000000000000000000000000..e02cf9cd9e45465cd89d047353b5796bafaf4a9f
GIT binary patch
literal 76
zcmeAS@N?(olHy`uVBq!ia0vp^AAp#Vg9%9H|J+guq=Y?P978nDCtDOhJF`5{fUAw0
ZfuVqHg>TF{Z&si*gQu&X%Q~loCIEij64U?y

literal 0
HcmV?d00001

diff --git a/themes/seven/maintenance-page.tpl.php b/themes/seven/maintenance-page.tpl.php
index aaf1ff6..aeef310 100644
--- a/themes/seven/maintenance-page.tpl.php
+++ b/themes/seven/maintenance-page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="<?php print $language->language ?>" lang="<?php print $language->language ?>" dir="<?php print $language->dir ?>">
diff --git a/themes/seven/page.tpl.php b/themes/seven/page.tpl.php
index c8ff98a..85353a7 100644
--- a/themes/seven/page.tpl.php
+++ b/themes/seven/page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
   <div id="branding" class="clearfix">
     <?php print $breadcrumb; ?>
diff --git a/themes/seven/reset.css b/themes/seven/reset.css
index e9f850f..0bdc29a 100644
--- a/themes/seven/reset.css
+++ b/themes/seven/reset.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Reset CSS styles.
diff --git a/themes/seven/seven.info b/themes/seven/seven.info
index aee47e0..4293c07 100644
--- a/themes/seven/seven.info
+++ b/themes/seven/seven.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Seven
 description = A simple one-column, tableless, fluid width administration theme.
 package = Core
diff --git a/themes/seven/style-rtl.css b/themes/seven/style-rtl.css
index a7fc5fd..6328193 100644
--- a/themes/seven/style-rtl.css
+++ b/themes/seven/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Generic elements.
diff --git a/themes/seven/style.css b/themes/seven/style.css
index 168f2c4..66303c5 100644
--- a/themes/seven/style.css
+++ b/themes/seven/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Generic elements.
@@ -918,7 +917,7 @@ div.add-or-remove-shortcuts {
 #dashboard div.block h2 {
   margin: 0;
   font-size: 1em;
-  padding: 3px 9px 3px 19px;
+  padding: 3px 10px;
 }
 #dashboard div.block div.content {
   padding: 10px 5px 5px 5px;
diff --git a/themes/seven/template.php b/themes/seven/template.php
index 0b0afc1..4582749 100644
--- a/themes/seven/template.php
+++ b/themes/seven/template.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Override or insert variables into the maintenance page template.
@@ -89,10 +88,10 @@ function seven_tablesort_indicator($variables) {
   $style = $variables['style'];
   $theme_path = drupal_get_path('theme', 'seven');
   if ($style == 'asc') {
-    return theme('image', array('path' => $theme_path . '/images/arrow-asc.png', 'alt' => t('sort ascending'), 'title' => t('sort ascending')));
+    return theme('image', array('path' => $theme_path . '/images/arrow-asc.png', 'alt' => t('sort ascending'), 'width' => 13, 'height' => 13, 'title' => t('sort ascending')));
   }
   else {
-    return theme('image', array('path' => $theme_path . '/images/arrow-desc.png', 'alt' => t('sort descending'), 'title' => t('sort descending')));
+    return theme('image', array('path' => $theme_path . '/images/arrow-desc.png', 'alt' => t('sort descending'), 'width' => 13, 'height' => 13, 'title' => t('sort descending')));
   }
 }
 
@@ -104,6 +103,9 @@ function seven_css_alter(&$css) {
   if (isset($css['misc/vertical-tabs.css'])) {
     $css['misc/vertical-tabs.css']['data'] = drupal_get_path('theme', 'seven') . '/vertical-tabs.css';
   }
+  if (isset($css['misc/vertical-tabs-rtl.css'])) {
+    $css['misc/vertical-tabs-rtl.css']['data'] = drupal_get_path('theme', 'seven') . '/vertical-tabs-rtl.css';
+  }
   // Use Seven's jQuery UI theme style instead of the default one.
   if (isset($css['misc/ui/jquery.ui.theme.css'])) {
     $css['misc/ui/jquery.ui.theme.css']['data'] = drupal_get_path('theme', 'seven') . '/jquery.ui.theme.css';
diff --git a/themes/seven/vertical-tabs-rtl.css b/themes/seven/vertical-tabs-rtl.css
new file mode 100644
index 0000000..a9598c3
--- /dev/null
+++ b/themes/seven/vertical-tabs-rtl.css
@@ -0,0 +1,21 @@
+
+/**
+ * Override of misc/vertical-tabs-rtl.css.
+ */
+div.vertical-tabs {
+  background: #fff url(images/fc-rtl.png) repeat-y right 0;
+}
+div.vertical-tabs .vertical-tabs-list {
+  float: right;
+  margin: 0 0 -1px -100%;
+}
+div.vertical-tabs ul li.selected a,
+div.vertical-tabs ul li.selected a:hover,
+div.vertical-tabs ul li.selected a:focus,
+div.vertical-tabs ul li.selected a:active {
+  border-left-color: #fff;
+}
+div.vertical-tabs .vertical-tabs-panes {
+  margin: 0 265px 0 0;
+  padding: 10px 0 10px 15px;
+}
diff --git a/themes/seven/vertical-tabs.css b/themes/seven/vertical-tabs.css
index 03cf5e9..4f66222 100644
--- a/themes/seven/vertical-tabs.css
+++ b/themes/seven/vertical-tabs.css
@@ -1,10 +1,9 @@
-/* $Id$ */
 
 /**
  * Override of misc/vertical-tabs.css.
  */
 div.vertical-tabs {
-  background: #fff url(images/fc.png) repeat-y 0 0;
+  background: #fff url(images/fc.png) repeat-y 0 0; /* LTR */
   border: 1px solid #ccc;
   margin: 10px 0;
   position: relative;
@@ -16,10 +15,10 @@ div.vertical-tabs fieldset {
 }
 div.vertical-tabs .vertical-tabs-list {
   border-bottom: 1px solid #ccc;
-  float: left;
+  float: left; /* LTR */
   font-size: 1em;
   line-height: 1;
-  margin: 0 -100% -1px 0;
+  margin: 0 -100% -1px 0; /* LTR */
   padding: 0;
   width: 240px;
 }
@@ -56,7 +55,7 @@ div.vertical-tabs ul li.selected a:hover,
 div.vertical-tabs ul li.selected a:focus,
 div.vertical-tabs ul li.selected a:active {
   background: #fff;
-  border-right-color: #fff;
+  border-right-color: #fff; /* LTR */
   border-top: 1px solid #ccc;
 }
 div.vertical-tabs ul li.first.selected a,
@@ -67,8 +66,8 @@ div.vertical-tabs ul li.selected a:focus strong {
   text-decoration: underline;
 }
 div.vertical-tabs .vertical-tabs-panes {
-  margin: 0 0 0 265px;
-  padding: 10px 15px 10px 0;
+  margin: 0 0 0 265px; /* LTR */
+  padding: 10px 15px 10px 0; /* LTR */
 }
 div.vertical-tabs .vertical-tabs-panes legend {
   display: none;
@@ -76,3 +75,19 @@ div.vertical-tabs .vertical-tabs-panes legend {
 .vertical-tabs-pane .fieldset-wrapper > div:first-child {
   padding-top: 5px;
 }
+
+/**
+ * Prevent text inputs from overflowing when container is too narrow. "width" is
+ * applied to override hardcoded cols or size attributes and used in conjunction
+ * with "box-sizing" to prevent box model issues from occurring in most browsers.
+*/
+.vertical-tabs .form-type-textfield input {
+  width: 100%;
+  -moz-box-sizing: border-box;
+  -webkit-box-sizing: border-box;
+  box-sizing: border-box;
+}
+* html .vertical-tabs .form-type-textfield,
+* html .vertical-tabs .form-textarea-wrapper {
+  width: 95%; /* IE6 */
+}
diff --git a/themes/stark/README.txt b/themes/stark/README.txt
index 33257c9..e7af281 100644
--- a/themes/stark/README.txt
+++ b/themes/stark/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 ABOUT STARK
 -----------
diff --git a/themes/stark/layout.css b/themes/stark/layout.css
index 67f3117..43bb93f 100644
--- a/themes/stark/layout.css
+++ b/themes/stark/layout.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * @file
diff --git a/themes/stark/stark.info b/themes/stark/stark.info
index d95f536..f9b88df 100644
--- a/themes/stark/stark.info
+++ b/themes/stark/stark.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Stark
 description = This theme demonstrates Drupal's default HTML markup and CSS styles. To learn how to build your own theme and override Drupal's default code, see the <a href="http://drupal.org/theme-guide">Theming Guide</a>.
 package = Core
diff --git a/themes/tests/README.txt b/themes/tests/README.txt
index e64480f..5ddaa8c 100644
--- a/themes/tests/README.txt
+++ b/themes/tests/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 The themes in this subdirectory are all used by the Drupal core testing
 framework. They are not functioning themes that could be used on a real site
diff --git a/themes/tests/test_theme/template.php b/themes/tests/test_theme/template.php
index 3d8b656..ef8118a 100644
--- a/themes/tests/test_theme/template.php
+++ b/themes/tests/test_theme/template.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Tests a theme overriding a suggestion of a base theme hook.
diff --git a/themes/tests/test_theme/test_theme.info b/themes/tests/test_theme/test_theme.info
index 3a4b7c0..dd5584b 100644
--- a/themes/tests/test_theme/test_theme.info
+++ b/themes/tests/test_theme/test_theme.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Test theme
 description = Theme for testing the theme system
 core = 7.x
diff --git a/themes/tests/update_test_basetheme/update_test_basetheme.info b/themes/tests/update_test_basetheme/update_test_basetheme.info
index 11ff04a..9718784 100644
--- a/themes/tests/update_test_basetheme/update_test_basetheme.info
+++ b/themes/tests/update_test_basetheme/update_test_basetheme.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Update test base theme
 description = Test theme which acts as a base theme for other test subthemes.
 core = 7.x
diff --git a/themes/tests/update_test_subtheme/update_test_subtheme.info b/themes/tests/update_test_subtheme/update_test_subtheme.info
index b9a9f0e..6ca42f4 100644
--- a/themes/tests/update_test_subtheme/update_test_subtheme.info
+++ b/themes/tests/update_test_subtheme/update_test_subtheme.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Update test subtheme
 description = Test theme which uses update_test_basetheme as the base theme.
 core = 7.x
diff --git a/update.php b/update.php
index 4c81955..eb8fe98 100644
--- a/update.php
+++ b/update.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Root directory of Drupal installation.
@@ -57,9 +56,10 @@ function update_script_selection_form($form, &$form_state) {
   foreach ($updates as $module => $update) {
     if (!isset($update['start'])) {
       $form['start'][$module] = array(
-        '#title' => $module,
-        '#item'  => $update['warning'],
-        '#prefix' => '<div class="warning">',
+        '#type' => 'item',
+        '#title' => $module . ' module',
+        '#markup'  => $update['warning'],
+        '#prefix' => '<div class="messages warning">',
         '#suffix' => '</div>',
       );
       $incompatible_updates_exist = TRUE;
@@ -349,9 +349,18 @@ require_once DRUPAL_ROOT . '/includes/entity.inc';
 require_once DRUPAL_ROOT . '/includes/unicode.inc';
 update_prepare_d7_bootstrap();
 
+// Temporarily disable configurable timezones so the upgrade process uses the
+// site-wide timezone. This prevents a PHP notice during session initlization
+// and before offsets have been converted in user_update_7002().
+$configurable_timezones = variable_get('configurable_timezones', 1);
+$conf['configurable_timezones'] = 0;
+
 // Determine if the current user has access to run update.php.
 drupal_bootstrap(DRUPAL_BOOTSTRAP_SESSION);
 
+// Reset configurable timezones.
+$conf['configurable_timezones'] = $configurable_timezones;
+
 // Only allow the requirements check to proceed if the current user has access
 // to run updates (since it may expose sensitive information about the site's
 // configuration).
@@ -376,6 +385,10 @@ if (empty($op) && update_access_allowed()) {
   // Set up theme system for the maintenance page.
   drupal_maintenance_theme();
 
+  // Rebuild the registry to ensure that removed hooks in modules do not result
+  // in undefined function errors and that newly defined hooks are called.
+  registry_rebuild();
+
   // Check the update requirements for Drupal.
   update_check_requirements();
 
diff --git a/xmlrpc.php b/xmlrpc.php
index 4b6b115..b202dc2 100644
--- a/xmlrpc.php
+++ b/xmlrpc.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
