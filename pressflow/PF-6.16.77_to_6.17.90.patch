diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 8120d85..7e896f0 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,4 +1,13 @@
-// $Id: CHANGELOG.txt,v 1.253.2.37 2010/03/04 00:15:28 goba Exp $
+// $Id: CHANGELOG.txt,v 1.253.2.39 2010/06/02 18:52:32 goba Exp $
+
+Drupal 6.17, 2010-06-02
+----------------------
+- Improved PostgreSQL compatibility
+- Better PHP 5.3 and PHP 4 compatibility
+- Better browser compatibility of CSS and JS aggregation
+- Improved logging for login failures
+- Fixed an incompatibility with some contributed modules and the locking system
+- Fixed a variety of other bugs.
 
 Drupal 6.16, 2010-03-03
 ----------------------
diff --git a/PRESSFLOW.txt b/PRESSFLOW.txt
index 78aecf6..67068f7 100644
--- a/PRESSFLOW.txt
+++ b/PRESSFLOW.txt
@@ -1 +1 @@
-6.16.77
+6.17.90
diff --git a/UPGRADE.txt b/UPGRADE.txt
index 7e1e687..e67b90e 100644
--- a/UPGRADE.txt
+++ b/UPGRADE.txt
@@ -1,4 +1,4 @@
-// $Id: UPGRADE.txt,v 1.12 2008/01/04 16:15:58 goba Exp $
+// $Id: UPGRADE.txt,v 1.12.2.1 2010/05/11 09:39:36 goba Exp $
 
 UPGRADING
 ---------
@@ -14,12 +14,10 @@ Prior to upgrading, you should ensure that:
 
 Let's begin!
 
-1.  Backup your database and Drupal directory - especially your "sites"
-    directory which contains your configuration file and added modules and
-    themes, any contributed or custom modules in your "modules" directory,
-    and your "files" directory which contains uploaded files. If other files
-    have modifications, such as .htaccess or robots.txt, those should be
-    backed up as well.
+1.  Back up your Drupal database and site root directory. Be especially sure 
+    to back up your "sites" directory which contains your configuration file, 
+    added modules and themes, and your site's uploaded files. If other files 
+    have modifications, such as .htaccess or robots.txt, back those up as well.
 
     Note: for a single site setup, the configuration file is the "settings.php"
     file located at sites/default/settings.php. The default.settings.php file
diff --git a/includes/actions.inc b/includes/actions.inc
index 3d13339..1b759d7 100644
--- a/includes/actions.inc
+++ b/includes/actions.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: actions.inc,v 1.8.2.10 2009/11/06 08:14:05 goba Exp $
+// $Id: actions.inc,v 1.8.2.12 2010/05/28 15:08:22 goba Exp $
 
 /**
  * @file
@@ -7,6 +7,44 @@
  */
 
 /**
+ * @defgroup actions Actions
+ * @{
+ * Functions that perform an action on a certain system object.
+ *
+ * All modules should declare their action functions to be in this group and
+ * each action function should reference its configuration form, validate, and
+ * submit functions using \@see. Conversely, form, validate, and submit
+ * functions should reference the action function using \@see. For examples of
+ * this see comment_unpublish_by_keyword_action(), which has the following in
+ * its doxygen documentation:
+ *
+ * \@ingroup actions
+ * \@see comment_unpublish_by_keyword_action_form().
+ * \@see comment_unpublish_by_keyword_action_submit().
+ *
+ * @} End of "defgroup actions".
+ */
+
+/**
+ * @defgroup actions Actions
+ * @{
+ * Functions that perform an action on a certain system object.
+ *
+ * All modules should declare their action functions to be in this group and
+ * each action function should reference its configuration form, validate, and
+ * submit functions using \@see. Conversely, form, validate, and submit
+ * functions should reference the action function using \@see. For examples of
+ * this see comment_unpublish_by_keyword_action(), which has the following in
+ * its doxygen documentation:
+ *
+ * \@ingroup actions
+ * \@see comment_unpublish_by_keyword_action_form().
+ * \@see comment_unpublish_by_keyword_action_submit().
+ *
+ * @} End of "defgroup actions".
+ */
+
+/**
  * Perform a given list of actions by executing their callback functions.
  *
  * Given the IDs of actions to perform, find out what the callbacks
@@ -81,8 +119,13 @@ function actions_do($action_ids, &$object, $context = NULL, $a1 = NULL, $a2 = NU
     foreach ($actions as $action_id => $params) {
       if (is_numeric($action_id)) { // Configurable actions need parameters.
         $function = $params['callback'];
-        $context = array_merge($context, $params);
-        $result[$action_id] = $function($object, $context, $a1, $a2);
+        if (function_exists($function)) {
+          $context = array_merge($context, $params);
+          $actions_result[$action_id] = $function($object, $context, $a1, $a2);
+        }
+        else {
+          $actions_result[$action_id] = FALSE;
+        }
       }
       // Singleton action; $action_id is the function name.
       else {
@@ -96,8 +139,13 @@ function actions_do($action_ids, &$object, $context = NULL, $a1 = NULL, $a2 = NU
     if (is_numeric($action_ids)) {
       $action = db_fetch_object(db_query("SELECT * FROM {actions} WHERE aid = '%s'", $action_ids));
       $function = $action->callback;
-      $context = array_merge($context, unserialize($action->parameters));
-      $result[$action_ids] = $function($object, $context, $a1, $a2);
+      if (function_exists($function)) {
+        $context = array_merge($context, unserialize($action->parameters));
+        $actions_result[$action_ids] = $function($object, $context, $a1, $a2);
+      }
+      else {
+        $actions_result[$action_ids] = FALSE;
+      }
     }
     // Singleton action; $action_ids is the function name.
     else {
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index 43f3f86..986a925 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: bootstrap.inc,v 1.206.2.14 2010/02/01 16:49:14 goba Exp $
+// $Id: bootstrap.inc,v 1.206.2.23 2010/06/02 13:07:45 goba Exp $
 
 /**
  * @file
@@ -43,19 +43,92 @@ define('CACHE_AGGRESSIVE', 2);
 define('CACHE_EXTERNAL', 3);
 
 /**
+ * Log message severity -- Emergency: system is unusable.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
+ *
+ * @see watchdog()
+ * @see watchdog_severity_levels()
+ */
+define('WATCHDOG_EMERG', 0);
+
+/**
+ * Log message severity -- Alert: action must be taken immediately.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
+ *
+ * @see watchdog()
+ * @see watchdog_severity_levels()
+ */
+define('WATCHDOG_ALERT', 1);
+
+/**
+ * Log message severity -- Critical: critical conditions.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
+ *
+ * @see watchdog()
+ * @see watchdog_severity_levels()
+ */
+define('WATCHDOG_CRITICAL', 2);
+
+/**
+ * Log message severity -- Error: error conditions.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
+ *
+ * @see watchdog()
+ * @see watchdog_severity_levels()
+ */
+define('WATCHDOG_ERROR', 3);
+
+/**
+ * Log message severity -- Warning: warning conditions.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
+ *
+ * @see watchdog()
+ * @see watchdog_severity_levels()
+ */
+define('WATCHDOG_WARNING', 4);
+
+/**
+ * Log message severity -- Notice: normal but significant condition.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
+ *
+ * @see watchdog()
+ * @see watchdog_severity_levels()
+ */
+define('WATCHDOG_NOTICE', 5);
+
+/**
+ * Log message severity -- Informational: informational messages.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
+ *
+ * @see watchdog()
+ * @see watchdog_severity_levels()
+ */
+define('WATCHDOG_INFO', 6);
+
+/**
+ * Log message severity -- Debug: debug-level messages.
+ *
+ * The WATCHDOG_* constant definitions correspond to the logging severity levels
+ * defined in RFC 3164, section 4.1.1: http://www.faqs.org/rfcs/rfc3164.html
  *
- * Severity levels, as defined in RFC 3164 http://www.faqs.org/rfcs/rfc3164.html
  * @see watchdog()
  * @see watchdog_severity_levels()
  */
-define('WATCHDOG_EMERG',    0); // Emergency: system is unusable
-define('WATCHDOG_ALERT',    1); // Alert: action must be taken immediately
-define('WATCHDOG_CRITICAL', 2); // Critical: critical conditions
-define('WATCHDOG_ERROR',    3); // Error: error conditions
-define('WATCHDOG_WARNING',  4); // Warning: warning conditions
-define('WATCHDOG_NOTICE',   5); // Notice: normal but significant condition
-define('WATCHDOG_INFO',     6); // Informational: informational messages
-define('WATCHDOG_DEBUG',    7); // Debug: debug-level messages
+define('WATCHDOG_DEBUG', 7);
 
 /**
  * First bootstrap phase: initialize configuration.
@@ -374,6 +447,13 @@ function conf_init() {
     // We escape the hostname because it can be modified by a visitor.
     if (!empty($_SERVER['HTTP_HOST'])) {
       $cookie_domain = check_plain($_SERVER['HTTP_HOST']);
+      // Strip leading periods, www., and port numbers from cookie domain.
+      $cookie_domain = ltrim($cookie_domain, '.');
+      if (strpos($cookie_domain, 'www.') === 0) {
+        $cookie_domain = substr($cookie_domain, 4);
+      }
+      $cookie_domain = explode(':', $cookie_domain);
+      $cookie_domain = '.'. $cookie_domain[0];
     }
   }
   // To prevent session cookies from being hijacked, a user can configure the
@@ -385,13 +465,6 @@ function conf_init() {
   if (ini_get('session.cookie_secure')) {
     $session_name .= 'SSL';
   }
-  // Strip leading periods, www., and port numbers from cookie domain.
-  $cookie_domain = ltrim($cookie_domain, '.');
-  if (strpos($cookie_domain, 'www.') === 0) {
-    $cookie_domain = substr($cookie_domain, 4);
-  }
-  $cookie_domain = explode(':', $cookie_domain);
-  $cookie_domain = '.'. $cookie_domain[0];
   // Per RFC 2109, cookie domains must contain at least one dot other than the
   // first. For hosts such as 'localhost' or IP Addresses we don't set a cookie domain.
   if (count(explode('.', $cookie_domain)) > 2 && !is_numeric(str_replace('.', '', $cookie_domain))) {
@@ -479,7 +552,7 @@ function drupal_get_filename($type, $name, $filename = NULL) {
  * with variable_set() as well as those explicitly specified in the configuration
  * file.
  */
-function variable_init($conf = array(), $regenerate = FALSE) {
+function variable_init($conf = array(), $regenerate = FALSE, $recursion_depth = 0) {
   // NOTE: caching the variables improves performance by 20% when serving cached pages.
   if (!$regenerate && $cached = cache_get('variables', 'cache')) {
     $variables = $cached->data;
@@ -499,8 +572,15 @@ function variable_init($conf = array(), $regenerate = FALSE) {
       // Wait for another request that is already doing this work.
       lock_wait('variable_cache_regenerate');
 
-      // Run the function again.
-      return variable_init($conf, $regenerate);
+      // Run the function again. Try a limited number of times to avoid 
+      // infinite recursion if the database connection is invalid for  
+      // some reason, e.g., mysqld restart, loss of network, etc.
+      $recursion_depth++;
+      if ($recursion_depth < 50) {
+        return variable_init($conf, $regenerate, $recursion_depth);
+      }
+
+      $variables = array();
     }
   }
 
@@ -541,7 +621,7 @@ function variable_get($name, $default) {
  * @see variable_del(), variable_get()
  */
 function variable_set($name, $value) {
-  global $conf;
+  global $conf, $db_prefix;
 
   $serialized_value = serialize($value);
   db_query("UPDATE {variable} SET value = '%s' WHERE name = '%s'", $serialized_value, $name);
@@ -551,6 +631,13 @@ function variable_set($name, $value) {
 
   $conf[$name] = $value;
 
+  // The write-through rebuild optimization isn't compatible with SimpleTest.
+  // Because array-based prefixes don't work with SimpleTest, we can assume
+  // that a non-string prefix indicates lack of SimpleTest operations.
+  if (is_string($db_prefix) && strpos($db_prefix, 'simpletest') === 0) {
+    cache_clear_all('variables', 'cache');
+  }
+  
   variable_cache_rebuild();
 }
 
@@ -563,12 +650,17 @@ function variable_set($name, $value) {
  * @see variable_get(), variable_set()
  */
 function variable_del($name) {
-  global $conf;
+  global $conf, $db_prefix;
 
   db_query("DELETE FROM {variable} WHERE name = '%s'", $name);
 
   unset($conf[$name]);
 
+  // The write-through rebuild optimization isn't compatible with SimpleTest.
+  if (strpos($db_prefix, 'simpletest') === 0) {
+    cache_clear_all('variables', 'cache');
+  }
+  
   variable_cache_rebuild();
 }
 
@@ -961,12 +1053,14 @@ function drupal_page_cache_header(stdClass $cache) {
     header('Vary: Accept-Encoding', FALSE);
     // If page_compression is enabled, the cache contains gzipped data.
     if ($return_compressed) {
+      ini_set('zlib.output_compression', '0');
       header('Content-Encoding: gzip');
     }
     else {
       // The client does not support compression, so unzip the data in the
       // cache. Strip the gzip header and run uncompress.
       $cache->data = gzinflate(substr(substr($cache->data, 10), 0, -8));
+      header('X-PF-Uncompressing: 1');
     }
   }
 
@@ -1011,11 +1105,35 @@ function referer_uri() {
 /**
  * Encode special characters in a plain-text string for display as HTML.
  *
- * Uses drupal_validate_utf8 to prevent cross site scripting attacks on
+ * Also validates strings as UTF-8 to prevent cross site scripting attacks on
  * Internet Explorer 6.
+ *
+ * @param $text
+ *   The text to be checked or processed.
+ * @return
+ *   An HTML safe version of $text, or an empty string if $text is not
+ *   valid UTF-8.
+ *
+ * @see drupal_validate_utf8().
  */
 function check_plain($text) {
-  return drupal_validate_utf8($text) ? htmlspecialchars($text, ENT_QUOTES) : '';
+  static $php525;
+
+  if (!isset($php525)) {
+    $php525 = version_compare(PHP_VERSION, '5.2.5', '>=');
+  }
+  // We duplicate the preg_match() to validate strings as UTF-8 from
+  // drupal_validate_utf8() here. This avoids the overhead of an additional
+  // function call, since check_plain() may be called hundreds of times during
+  // a request. For PHP 5.2.5+, this check for valid UTF-8 should be handled
+  // internally by PHP in htmlspecialchars().
+  // @see http://www.php.net/releases/5_2_5.php
+  // @todo remove this when support for either IE6 or PHP < 5.2.5 is dropped.
+
+  if ($php525) {
+    return htmlspecialchars($text, ENT_QUOTES, 'UTF-8');
+  }
+  return (preg_match('/^./us', $text) == 1) ? htmlspecialchars($text, ENT_QUOTES, 'UTF-8') : '';
 }
 
 /**
@@ -1051,6 +1169,7 @@ function drupal_validate_utf8($text) {
   if (strlen($text) == 0) {
     return TRUE;
   }
+  // For performance reasons this logic is duplicated in check_plain().
   return (preg_match('/^./us', $text) == 1);
 }
 
@@ -1262,13 +1381,27 @@ function drupal_anonymous_user($session = '') {
  *     DRUPAL_BOOTSTRAP_PATH: set $_GET['q'] to Drupal path of request.
  *     DRUPAL_BOOTSTRAP_FULL: Drupal is fully loaded, validate and fix input data.
  */
-function drupal_bootstrap($phase) {
+function drupal_bootstrap($phase = NULL) {
   static $phases = array(DRUPAL_BOOTSTRAP_CONFIGURATION, DRUPAL_BOOTSTRAP_EARLY_PAGE_CACHE, DRUPAL_BOOTSTRAP_DATABASE, DRUPAL_BOOTSTRAP_ACCESS, DRUPAL_BOOTSTRAP_SESSION, DRUPAL_BOOTSTRAP_LATE_PAGE_CACHE, DRUPAL_BOOTSTRAP_LANGUAGE, DRUPAL_BOOTSTRAP_PATH, DRUPAL_BOOTSTRAP_FULL), $phase_index = 0;
 
-  while ($phase >= $phase_index && isset($phases[$phase_index])) {
-    $current_phase = $phases[$phase_index];
-    unset($phases[$phase_index++]);
-    _drupal_bootstrap($current_phase);
+  if (isset($phase)) {
+    while ($phase >= $phase_index && isset($phases[$phase_index])) {
+      $current_phase = $phases[$phase_index];
+      unset($phases[$phase_index++]);
+      _drupal_bootstrap($current_phase);
+    }
+  }
+  
+  return $phase_index;
+}
+
+/**
+ * Redirect to the installer if an essential table is missing.
+ */
+function detect_installation_or_run_installer() {
+  if (variable_get('pressflow_smart_start', FALSE) && !db_table_exists('access')) {
+    include_once 'includes/install.inc';
+    install_goto('install.php');
   }
 }
 
@@ -1303,17 +1436,25 @@ function _drupal_bootstrap($phase) {
       // running tests. However, for security reasons, it is imperative that we
       // validate we ourselves made the request.
       $GLOBALS['simpletest_installed'] = TRUE;
-      if (isset($_SERVER['HTTP_USER_AGENT']) && (strpos($_SERVER['HTTP_USER_AGENT'], "simpletest") !== FALSE) && !drupal_valid_test_ua($_SERVER['HTTP_USER_AGENT'])) {
-        header($_SERVER['SERVER_PROTOCOL'] . ' 403 Forbidden');
-        exit;
-      }
       if (isset($_SERVER['HTTP_USER_AGENT']) && preg_match("/^(simpletest\d+);/", $_SERVER['HTTP_USER_AGENT'], $matches)) {
+        if (!drupal_valid_test_ua($_SERVER['HTTP_USER_AGENT'])) {
+          header($_SERVER['SERVER_PROTOCOL'] . ' 403 Forbidden');
+          exit;
+        }
         $db_prefix .= $matches[1];
       }
 
       // Initialize the default database.
       require_once './includes/database.inc';
       db_set_active();
+      // Allow specifying alternate lock implementations in settings.php, like
+      // those using APC or memcached.
+      require_once variable_get('lock_inc', './includes/lock.inc');
+      lock_init();
+      
+      // Detect if an installation is present.
+      detect_installation_or_run_installer();
+
       break;
 
     case DRUPAL_BOOTSTRAP_ACCESS:
@@ -1331,9 +1472,6 @@ function _drupal_bootstrap($phase) {
       break;
 
     case DRUPAL_BOOTSTRAP_LATE_PAGE_CACHE:
-      require_once variable_get('lock_inc', './includes/lock.inc');
-      lock_init();
-
       // Initialize configuration variables, using values from settings.php if available.
       $conf = variable_init(isset($conf) ? $conf : array());
 
@@ -1592,7 +1730,7 @@ function drupal_session_commit() {
   if (empty($user->uid) && empty($_SESSION)) {
     if (drupal_session_started() && drupal_save_session()) {
       // Destroy empty anonymous sessions.
-      session_destroy();
+      drupal_session_destroy();
     }
   }
   else if (drupal_save_session()) {
@@ -1671,11 +1809,23 @@ function drupal_save_session($status = NULL) {
   }
   return $save_session;
 }
+	
+/**
+ * Returns the current bootstrap phase for this Drupal process.
+ *
+ * The current phase is the one most recently completed by drupal_bootstrap().
+ *
+ * @see drupal_bootstrap()
+ */
+function drupal_get_bootstrap_phase() {
+  return drupal_bootstrap();
+}
 
 /**
  * Validate the HMAC and timestamp of a user agent header from simpletest.
  */
 function drupal_valid_test_ua($user_agent) {
+//  global $dbatabases;
   global $db_url;
 
   list($prefix, $time, $salt, $hmac) = explode(';', $user_agent);
@@ -1683,7 +1833,9 @@ function drupal_valid_test_ua($user_agent) {
   // We use the database credentials from settings.php to make the HMAC key, since
   // the database is not yet initialized and we can't access any Drupal variables.
   // The file properties add more entropy not easily accessible to others.
+//  $filepath = DRUPAL_ROOT . '/includes/bootstrap.inc';
   $filepath = './includes/bootstrap.inc';
+//  $key = sha1(serialize($databases) . filectime($filepath) . fileinode($filepath), TRUE);
   $key = sha1(serialize($db_url) . filectime($filepath) . fileinode($filepath), TRUE);
   // The HMAC must match.
   return $hmac == base64_encode(hash_hmac('sha1', $check_string, $key, TRUE));
@@ -1701,7 +1853,9 @@ function drupal_generate_test_ua($prefix) {
     // We use the database credentials to make the HMAC key, since we
     // check the HMAC before the database is initialized. filectime()
     // and fileinode() are not easily determined from remote.
-    $filepath = './includes/bootstrap.inc';
+//    $filepath = DRUPAL_ROOT . '/includes/bootstrap.inc';
+    $filepath = './includes/bootstrap.inc';                
+//    $key = sha1(serialize($databases) . filectime($filepath) . fileinode($filepath), TRUE);
     $key = sha1(serialize($db_url) . filectime($filepath) . fileinode($filepath), TRUE);
   }
    // Generate a moderately secure HMAC based on the database credentials.
@@ -1717,3 +1871,19 @@ function drupal_is_cli() {
   return ((!isset($_SERVER['SERVER_SOFTWARE']) || $_SERVER['SERVER_SOFTWARE'] == 'PHP CLI')
     && (php_sapi_name() == 'cli' || (is_numeric($_SERVER['argc']) && $_SERVER['argc'] > 0)));
 }
+
+/**
+ * Destroys all data registered to a session.
+ *
+ * Placed in bootstrap.inc instead of session.inc as session.inc may be
+ * overridden by other session persistance layers (eg., memcache).
+ *
+ * @ingroup php_wrappers
+ */
+function drupal_session_destroy() {
+  session_destroy();
+  
+  // Workaround PHP 5.2 fatal error "Failed to initialize storage module".
+  // @see http://bugs.php.net/bug.php?id=32330
+  session_set_save_handler('sess_open', 'sess_close', 'sess_read', 'sess_write', 'sess_destroy_sid', 'sess_gc');
+}
diff --git a/includes/common.inc b/includes/common.inc
index 5c9fad2..989f46b 100644
--- a/includes/common.inc
+++ b/includes/common.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: common.inc,v 1.756.2.79 2010/03/04 00:15:28 goba Exp $
+// $Id: common.inc,v 1.756.2.88 2010/06/02 18:52:32 goba Exp $
 
 /**
  * @file
@@ -430,8 +430,8 @@ function drupal_access_denied() {
  *   An integer representing how many times to retry the request in case of a
  *   redirect.
  * @return
- *   An object containing the HTTP request headers, response code, headers,
- *   data and redirect status.
+ *   An object containing the HTTP request headers, response code, protocol,
+ *   status message, headers, data and redirect status.
  */
 function drupal_http_request($url, $headers = array(), $method = 'GET', $data = NULL, $retry = 3) {
   global $db_prefix;
@@ -455,6 +455,7 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
 
   switch ($uri['scheme']) {
     case 'http':
+    case 'feed':
       $port = isset($uri['port']) ? $uri['port'] : 80;
       $host = $uri['host'] . ($port != 80 ? ':'. $port : '');
       $fp = @fsockopen($uri['host'], $port, $errno, $errstr, 15);
@@ -523,7 +524,7 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
   // same time won't interfere with each other as they would if the database
   // prefix were stored statically in a file or database variable.
   if (is_string($db_prefix) && preg_match("/^simpletest\d+$/", $db_prefix, $matches)) {
-    $defaults['User-Agent'] = 'User-Agent: ' . $matches[0];
+    $defaults['User-Agent'] = 'User-Agent: ' . drupal_generate_test_ua($matches[0]);
   }
 
   foreach ($headers as $header => $value) {
@@ -550,7 +551,10 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
   list($split, $result->data) = explode("\r\n\r\n", $response, 2);
   $split = preg_split("/\r\n|\n|\r/", $split);
 
-  list($protocol, $code, $text) = explode(' ', trim(array_shift($split)), 3);
+  list($protocol, $code, $status_message) = explode(' ', trim(array_shift($split)), 3);
+  $result->protocol = $protocol;
+  $result->status_message = $status_message;
+
   $result->headers = array();
 
   // Parse headers.
@@ -596,7 +600,7 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
 
       break;
     default:
-      $result->error = $text;
+      $result->error = $status_message;
   }
 
   $result->code = $code;
@@ -978,7 +982,7 @@ function valid_url($url, $absolute = FALSE) {
   if ($absolute) {
     return (bool)preg_match("
       /^                                                      # Start at the beginning of the text
-      (?:ftp|https?):\/\/                                     # Look for ftp, http, or https schemes
+      (?:ftp|https?|feed):\/\/                                # Look for ftp, http, https or feed schemes
       (?:                                                     # Userinfo (optional) which is typically
         (?:(?:[\w\.\-\+!$&'\(\)*\+,;=]|%[0-9a-f]{2})+:)*      # a username or a username and password
         (?:[\w\.\-\+%!$&'\(\)*\+,;=]|%[0-9a-f]{2})+@          # combination
@@ -1611,8 +1615,6 @@ function l($text, $path, $options = array()) {
  * react to the closing of the page by calling hook_exit().
  */
 function drupal_page_footer() {
-  global $user;
-
   // Write the session, and open one if needed.
   drupal_session_commit();
 
@@ -1880,15 +1882,15 @@ function drupal_get_css($css = NULL) {
             // If a CSS file is not to be preprocessed and it's a module CSS file, it needs to *always* appear at the *top*,
             // regardless of whether preprocessing is on or off.
             if (!$preprocess && $type == 'module') {
-              $no_module_preprocess .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. base_path() . $file . $query_string .'" />'."\n";
+              $no_module_preprocess .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. file_create_url($file) . $query_string .'" />'."\n";
             }
             // If a CSS file is not to be preprocessed and it's a theme CSS file, it needs to *always* appear at the *bottom*,
             // regardless of whether preprocessing is on or off.
             else if (!$preprocess && $type == 'theme') {
-              $no_theme_preprocess .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. base_path() . $file . $query_string .'" />'."\n";
+              $no_theme_preprocess .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. file_create_url($file) . $query_string .'" />'."\n";
             }
             else {
-              $output .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. base_path() . $file . $query_string .'" />'."\n";
+              $output .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. file_create_url($file) . $query_string .'" />'."\n";
             }
           }
         }
@@ -1900,7 +1902,7 @@ function drupal_get_css($css = NULL) {
       // starting with "ad*".
       $filename = 'css_'. md5(serialize($types) . $query_string) .'.css';
       $preprocess_file = drupal_build_css_cache($types, $filename);
-      $output .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. base_path() . $preprocess_file .'" />'."\n";
+      $output .= '<link type="text/css" rel="stylesheet" media="'. $media .'" href="'. file_create_url($preprocess_file) .'" />'."\n";
     }
   }
 
@@ -2040,8 +2042,16 @@ function _drupal_load_stylesheet($matches) {
   $filename = $matches[1];
   // Load the imported stylesheet and replace @import commands in there as well.
   $file = drupal_load_stylesheet($filename);
-  // Alter all url() paths, but not external.
-  return preg_replace('/url\(([\'"]?)(?![a-z]+:)([^\'")]+)[\'"]?\)?;/i', 'url(\1'. dirname($filename) .'/', $file);
+  // Determine the file's directory.
+  $directory = dirname($filename);
+  // If the file is in the current directory, make sure '.' doesn't appear in
+  // the url() path.
+  $directory = $directory == '.' ? '' : $directory .'/';
+
+  // Alter all internal url() paths. Leave external paths alone. We don't need
+  // to normalize absolute paths here (i.e. remove folder/... segments) because
+  // that will be done later.
+  return preg_replace('/url\s*\(([\'"]?)(?![a-z]+:|\/+)/i', 'url(\1'. $directory, $file);
 }
 
 /**
@@ -2234,7 +2244,7 @@ function drupal_get_js($scope = 'header', $javascript = NULL) {
         // Additionally, go through any remaining scripts if JS preprocessing is on and output the non-cached ones.
         foreach ($data as $path => $info) {
           if (!$info['preprocess'] || !$is_writable || !$preprocess_js) {
-            $no_preprocess[$type] .= '<script type="text/javascript"'. ($info['defer'] ? ' defer="defer"' : '') .' src="'. base_path() . $path . ($info['cache'] ? $query_string : '?'. time()) ."\"></script>\n";
+            $no_preprocess[$type] .= '<script type="text/javascript"'. ($info['defer'] ? ' defer="defer"' : '') .' src="'. file_create_url($path) . ($info['cache'] ? $query_string : '?'. time()) ."\"></script>\n";
           }
           else {
             $files[$path] = $info;
@@ -2249,7 +2259,7 @@ function drupal_get_js($scope = 'header', $javascript = NULL) {
     // starting with "ad*".
     $filename = 'js_'. md5(serialize($files) . $query_string) .'.js';
     $preprocess_file = drupal_build_js_cache($files, $filename);
-    $preprocessed .= '<script type="text/javascript" src="'. base_path() . $preprocess_file .'"></script>'."\n";
+    $preprocessed .= '<script type="text/javascript" src="'. file_create_url($preprocess_file) .'"></script>'."\n";
   }
 
   // Keep the order of JS files consistent as some are preprocessed and others are not.
@@ -2408,8 +2418,8 @@ function drupal_build_js_cache($files, $filename) {
     // Build aggregate JS file.
     foreach ($files as $path => $info) {
       if ($info['preprocess']) {
-        // Append a ';' after each JS file to prevent them from running together.
-        $contents .= file_get_contents($path) .';';
+        // Append a ';' and a newline after each JS file to prevent them from running together.
+        $contents .= file_get_contents($path) .";\n";
       }
     }
 
@@ -2435,7 +2445,7 @@ function drupal_clear_js_cache() {
  */
 function drupal_to_js($var) {
   // json_encode() does not escape <, > and &, so we do it with str_replace()
-  return str_replace(array("<", ">", "&"), array('\x3c', '\x3e', '\x26'), json_encode($var));
+  return str_replace(array("<", ">", "&"), array('\u003c', '\u003e', '\u0026'), json_encode($var));
 }
 
 /**
@@ -2577,7 +2587,8 @@ function _drupal_bootstrap_full() {
   require_once './includes/mail.inc';
   require_once './includes/actions.inc';
   // Set the Drupal custom error handler.
-  set_error_handler('drupal_error_handler');
+  set_error_handler('_drupal_error_handler');
+  set_exception_handler('_drupal_exception_handler');
   // Emit the correct charset HTTP header.
   drupal_set_header('Content-Type: text/html; charset=utf-8');
   // Detect string handling method
@@ -2605,53 +2616,46 @@ function _drupal_bootstrap_full() {
 /**
  * Store the current page in the cache.
  *
- * We try to store a gzipped version of the cache. This requires the
- * PHP zlib extension (http://php.net/manual/en/ref.zlib.php).
- * Presence of the extension is checked by testing for the function
- * gzencode. There are two compression algorithms: gzip and deflate.
- * The majority of all modern browsers support gzip or both of them.
- * We thus only deal with the gzip variant and unzip the cache in case
- * the browser does not accept gzip encoding.
+ * If page_compression is enabled, a gzipped version of the page is stored in
+ * the cache to avoid compressing the output on each request. The cache entry
+ * is unzipped in the relatively rare event that the page is requested by a
+ * client without gzip support.
+ *
+ * Page compression requires the PHP zlib extension
+ * (http://php.net/manual/en/ref.zlib.php).
  *
  * @see drupal_page_header
  */
 function page_set_cache() {
-  global $user, $base_root;
+  global $base_root;
 
   if (drupal_page_is_cacheable()) {
-    $cache_page = TRUE;
+    // This will fail in some cases, see page_get_cache() for the explanation.
+    if ($data = ob_get_contents()) {
+      ob_end_clean();
+      $cache_lifetime = variable_get('page_cache_lifetime', 0);
 
-    $cache_lifetime = variable_get('page_cache_lifetime', 0);
-
-    $cache = (object) array(
-      'cid' => $base_root . request_uri(),
-      'data' => ob_get_clean(),
-      'expire' => $cache_lifetime > 0 ? $cache_lifetime : CACHE_TEMPORARY,
-      'created' => $_SERVER['REQUEST_TIME'],
-      'headers' => array(),
-    );
-    // Restore preferred header names based on the lower-case names returned
-    // by drupal_get_header().
-    $header_names = _drupal_set_preferred_header_name();
-    foreach (drupal_get_header() as $name_lower => $value) {
-      $cache->headers[$header_names[$name_lower]] = $value;
-    }
-    if (variable_get('page_compression', TRUE) && function_exists('gzencode')) {
-      // We do not store the data in case the zlib mode is deflate. This should
-      // be rarely happening.
-      if (zlib_get_coding_type() == 'deflate') {
-        $cache_page = FALSE;
+      if (variable_get('page_compression', TRUE) && extension_loaded('zlib')) {
+        $data = gzencode($data, 9, FORCE_GZIP);
       }
-      elseif (zlib_get_coding_type() == FALSE) {
-        $cache->data = gzencode($cache->data, 9, FORCE_GZIP);
+
+      $cache = (object) array(
+        'cid' => $base_root . request_uri(),
+        'data' => $data,
+        'expire' => $cache_lifetime > 0 ? $cache_lifetime : CACHE_TEMPORARY,
+        'created' => $_SERVER['REQUEST_TIME'],
+        'headers' => array(),
+      );
+    
+      // Restore preferred header names based on the lower-case names returned
+      // by drupal_get_header().
+      $header_names = _drupal_set_preferred_header_name();
+      foreach (drupal_get_header() as $name_lower => $value) {
+        $cache->headers[$header_names[$name_lower]] = $value;
       }
-      // The remaining case is 'gzip' which means the data is already
-      // compressed and nothing left to do but to store it.
-    }
-    if ($cache_page && $cache->data) {
       cache_set($cache->cid, $cache->data, 'cache_page', $cache->expire, serialize($cache->headers));
+      drupal_page_cache_header($cache);
     }
-    drupal_page_cache_header($cache);
   }
 }
 
diff --git a/includes/database.pgsql.inc b/includes/database.pgsql.inc
index 0b6c8b5..d533802 100644
--- a/includes/database.pgsql.inc
+++ b/includes/database.pgsql.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: database.pgsql.inc,v 1.68.2.8 2010/02/01 16:32:10 goba Exp $
+// $Id: database.pgsql.inc,v 1.68.2.9 2010/05/28 15:02:16 goba Exp $
 
 /**
  * @file
@@ -637,14 +637,6 @@ function _db_create_field_sql($name, $spec) {
   if ($spec['type'] == 'serial') {
     unset($spec['not null']);
   }
-  if (!empty($spec['unsigned'])) {
-    if ($spec['type'] == 'serial') {
-      $sql .= " CHECK ($name >= 0)";
-    }
-    else {
-      $sql .= '_unsigned';
-    }
-  }
 
   if (in_array($spec['type'], array('varchar', 'char', 'text')) && isset($spec['length'])) {
     $sql .= '('. $spec['length'] .')';
@@ -653,6 +645,10 @@ function _db_create_field_sql($name, $spec) {
     $sql .= '('. $spec['precision'] .', '. $spec['scale'] .')';
   }
 
+  if (!empty($spec['unsigned'])) {
+    $sql .= " CHECK ($name >= 0)";
+  }
+
   if (isset($spec['not null']) && $spec['not null']) {
     $sql .= ' NOT NULL';
   }
diff --git a/includes/file.inc b/includes/file.inc
index 12fea1d..4f24c59 100644
--- a/includes/file.inc
+++ b/includes/file.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: file.inc,v 1.121.2.11 2010/03/01 09:51:16 goba Exp $
+// $Id: file.inc,v 1.121.2.12 2010/05/11 09:49:58 goba Exp $
 
 /**
  * @file
@@ -35,19 +35,57 @@ define('FILE_STATUS_PERMANENT', 1);
 /**
  * Create the download path to a file.
  *
- * @param $path A string containing the path of the file to generate URL for.
- * @return A string containing a URL that can be used to download the file.
+ * There are two kinds of local files:
+ * - "created files", i.e. those in the files directory (which is stored in
+ *   the file_directory_path variable and can be retrieved using
+ *   file_directory_path()). These are files that have either been uploaded by
+ *   users or were generated automatically (for example through CSS
+ *   aggregation).
+ * - "shipped files", i.e. those outside of the files directory, which ship as
+ *   part of Drupal core or contributed modules or themes.
+ *
+ * @param $path
+ *   A string containing the Drupal path (i.e. path relative to the Drupal
+ *   root directory) of the file to generate the URL for.
+ * @return
+ *   A string containing a URL that can be used to download the file.
  */
 function file_create_url($path) {
-  // Strip file_directory_path from $path. We only include relative paths in urls.
-  if (strpos($path, file_directory_path() .'/') === 0) {
-    $path = trim(substr($path, strlen(file_directory_path())), '\\/');
+  // Clean up Windows paths.
+  $old_path = $path = str_replace('\\', '/', $path);
+
+  drupal_alter('file_url', $path);
+
+  // If any module has altered the path, then return the alteration.
+  if ($path != $old_path) {
+    return $path;
   }
-  switch (variable_get('file_downloads', FILE_DOWNLOADS_PUBLIC)) {
-    case FILE_DOWNLOADS_PUBLIC:
-      return $GLOBALS['base_url'] .'/'. file_directory_path() .'/'. str_replace('\\', '/', $path);
-    case FILE_DOWNLOADS_PRIVATE:
-      return url('system/files/'. $path, array('absolute' => TRUE));
+
+  // Otherwise serve the file from Drupal's web server. This point will only
+  // be reached when either no custom_file_url_rewrite() function has been
+  // defined, or when that function returned FALSE, thereby indicating that it
+  // cannot (or doesn't wish to) rewrite the URL. This is typically because
+  // the file doesn't match some conditions to be served from a CDN or static
+  // file server, or because the file has not yet been synced to the CDN or
+  // static file server.
+
+  // Shipped files.
+  if (strpos($path, file_directory_path() . '/') !== 0) {
+    return base_path() . $path;
+  }
+  // Created files.
+  else {
+    switch (variable_get('file_downloads', FILE_DOWNLOADS_PUBLIC)) {
+      case FILE_DOWNLOADS_PUBLIC:
+        return $GLOBALS['base_url'] . '/' . $path;
+      case FILE_DOWNLOADS_PRIVATE:
+        // Strip file_directory_path from $path. Private downloads' URLs are
+        // rewritten to be served relatively to system/files (which is a menu
+        // callback that streams the file) instead of relatively to the file
+        // directory path.
+        $path = file_directory_strip($path);
+        return url('system/files/' . $path, array('absolute' => TRUE));
+    }
   }
 }
 
@@ -195,23 +233,31 @@ function file_check_location($source, $directory = '') {
 }
 
 /**
- * Copies a file to a new location. This is a powerful function that in many ways
- * performs like an advanced version of copy().
+ * Copies a file to a new location.
+ *
+ * This is a powerful function that in many ways performs like an advanced
+ * version of copy().
  * - Checks if $source and $dest are valid and readable/writable.
  * - Performs a file copy if $source is not equal to $dest.
  * - If file already exists in $dest either the call will error out, replace the
  *   file or rename the file based on the $replace parameter.
  *
- * @param $source A string specifying the file location of the original file.
- *   This parameter will contain the resulting destination filename in case of
+ * @param $source
+ *   Either a string specifying the file location of the original file or an
+ *   object containing a 'filepath' property. This parameter is passed by
+ *   reference and will contain the resulting destination filename in case of
  *   success.
- * @param $dest A string containing the directory $source should be copied to.
- *   If this value is omitted, Drupal's 'files' directory will be used.
- * @param $replace Replace behavior when the destination file already exists.
- *   - FILE_EXISTS_REPLACE - Replace the existing file
- *   - FILE_EXISTS_RENAME - Append _{incrementing number} until the filename is unique
- *   - FILE_EXISTS_ERROR - Do nothing and return FALSE.
- * @return True for success, FALSE for failure.
+ * @param $dest
+ *   A string containing the directory $source should be copied to. If this
+ *   value is omitted, Drupal's 'files' directory will be used.
+ * @param $replace
+ *   Replace behavior when the destination file already exists.
+ *   - FILE_EXISTS_REPLACE: Replace the existing file.
+ *   - FILE_EXISTS_RENAME: Append _{incrementing number} until the filename is
+ *     unique.
+ *   - FILE_EXISTS_ERROR: Do nothing and return FALSE.
+ * @return
+ *   TRUE for success, FALSE for failure.
  */
 function file_copy(&$source, $dest = 0, $replace = FILE_EXISTS_RENAME) {
   $dest = file_create_path($dest);
@@ -311,21 +357,28 @@ function file_destination($destination, $replace) {
 
 /**
  * Moves a file to a new location.
+ *
  * - Checks if $source and $dest are valid and readable/writable.
  * - Performs a file move if $source is not equal to $dest.
  * - If file already exists in $dest either the call will error out, replace the
  *   file or rename the file based on the $replace parameter.
  *
- * @param $source A string specifying the file location of the original file.
- *   This parameter will contain the resulting destination filename in case of
+ * @param $source
+ *   Either a string specifying the file location of the original file or an
+ *   object containing a 'filepath' property. This parameter is passed by
+ *   reference and will contain the resulting destination filename in case of
  *   success.
- * @param $dest A string containing the directory $source should be copied to.
- *   If this value is omitted, Drupal's 'files' directory will be used.
- * @param $replace Replace behavior when the destination file already exists.
- *   - FILE_EXISTS_REPLACE - Replace the existing file
- *   - FILE_EXISTS_RENAME - Append _{incrementing number} until the filename is unique
- *   - FILE_EXISTS_ERROR - Do nothing and return FALSE.
- * @return True for success, FALSE for failure.
+ * @param $dest
+ *   A string containing the directory $source should be copied to. If this
+ *   value is omitted, Drupal's 'files' directory will be used.
+ * @param $replace
+ *   Replace behavior when the destination file already exists.
+ *   - FILE_EXISTS_REPLACE: Replace the existing file.
+ *   - FILE_EXISTS_RENAME: Append _{incrementing number} until the filename is
+ *     unique.
+ *   - FILE_EXISTS_ERROR: Do nothing and return FALSE.
+ * @return
+ *   TRUE for success, FALSE for failure.
  */
 function file_move(&$source, $dest = 0, $replace = FILE_EXISTS_RENAME) {
   $path_original = is_object($source) ? $source->filepath : $source;
@@ -558,7 +611,7 @@ function file_save_upload($source, $validators = array(), $dest = FALSE, $replac
     }
 
     // Rename potentially executable files, to help prevent exploits.
-    if (preg_match('/\.(php|pl|py|cgi|asp|js)$/i', $file->filename) && (substr($file->filename, -4) != '.txt')) {      
+    if (preg_match('/\.(php|pl|py|cgi|asp|js)$/i', $file->filename) && (substr($file->filename, -4) != '.txt')) {
       $file->filemime = 'text/plain';
       $file->filepath .= '.txt';
       $file->filename .= '.txt';
@@ -981,6 +1034,23 @@ function file_directory_path() {
 }
 
 /**
+ * Remove a possible leading file directory path from the given path.
+ *
+ * @param $path
+ *   Path to a file that may be in Drupal's files directory.
+ * @return
+ *   String with Drupal's files directory removed from it.
+ */
+function file_directory_strip($path) {
+  // Strip file_directory_path from $path. We only include relative paths in
+  // URLs.
+  if (strpos($path, file_directory_path() . '/') === 0) {
+    $path = trim(substr($path, strlen(file_directory_path())), '\\/');
+  }
+  return $path;
+}
+
+/**
  * Determine the maximum file upload size by querying the PHP settings.
  *
  * @return
diff --git a/includes/form.inc b/includes/form.inc
index 65109d2..f4b06ce 100644
--- a/includes/form.inc
+++ b/includes/form.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: form.inc,v 1.265.2.32 2010/03/01 09:24:22 goba Exp $
+// $Id: form.inc,v 1.265.2.33 2010/05/19 15:02:32 goba Exp $
 
 /**
  * @defgroup forms Form builder functions
@@ -100,7 +100,7 @@ function drupal_get_form($form_id) {
       array_unshift($args_temp, $form_id);
 
       $form = call_user_func_array('drupal_retrieve_form', $args_temp);
-      $form_build_id = 'form-'. md5(uniqid(mt_rand(), true));
+      $form_build_id = 'form-'. md5(uniqid(mt_rand(), TRUE));
       $form['#build_id'] = $form_build_id;
       drupal_prepare_form($form_id, $form, $form_state);
       // Store a copy of the unprocessed form for caching and indicate that it
@@ -195,7 +195,7 @@ function drupal_rebuild_form($form_id, &$form_state, $args, $form_build_id = NUL
 
   if (!isset($form_build_id)) {
     // We need a new build_id for the new version of the form.
-    $form_build_id = 'form-'. md5(mt_rand());
+    $form_build_id = 'form-'. md5(uniqid(mt_rand(), TRUE));
   }
   $form['#build_id'] = $form_build_id;
   drupal_prepare_form($form_id, $form, $form_state);
@@ -1987,7 +1987,7 @@ function theme_image_button($element) {
     (!empty($element['#value']) ? ('value="'. check_plain($element['#value']) .'" ') : '') .
     'id="'. $element['#id'] .'" '.
     drupal_attributes($element['#attributes']) .
-    ' src="'. base_path() . $element['#src'] .'" '.
+    ' src="'. file_create_url($element['#src']) .'" '.
     (!empty($element['#title']) ? 'alt="'. check_plain($element['#title']) .'" title="'. check_plain($element['#title']) .'" ' : '' ) .
     "/>\n";
 }
diff --git a/includes/language.inc b/includes/language.inc
index 77ecb22..abbc1cb 100644
--- a/includes/language.inc
+++ b/includes/language.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: language.inc,v 1.14.2.1 2009/01/02 23:37:48 dries Exp $
+// $Id: language.inc,v 1.14.2.2 2010/03/22 12:18:04 goba Exp $
 
 /**
  * @file
@@ -106,7 +106,7 @@ function language_url_rewrite(&$path, &$options) {
   global $language;
 
   // Only modify relative (insite) URLs.
-  if (!$options['external']) {
+  if (empty($options['external'])) {
 
     // Language can be passed as an option, or we go for current language.
     if (!isset($options['language'])) {
diff --git a/includes/locale.inc b/includes/locale.inc
index 8db2820..03c6a36 100644
--- a/includes/locale.inc
+++ b/includes/locale.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: locale.inc,v 1.174.2.12 2010/03/04 00:15:28 goba Exp $
+// $Id: locale.inc,v 1.174.2.13 2010/05/28 13:07:27 goba Exp $
 
 /**
  * @file
@@ -1287,15 +1287,21 @@ function _locale_import_one_string($op, $value = NULL, $mode = NULL, $lang = NUL
     case 'db-store':
       // We got header information.
       if ($value['msgid'] == '') {
-        $header = _locale_import_parse_header($value['msgstr']);
-
-        // Get the plural formula and update in database.
-        if (isset($header["Plural-Forms"]) && $p = _locale_import_parse_plural_forms($header["Plural-Forms"], $file->filename)) {
-          list($nplurals, $plural) = $p;
-          db_query("UPDATE {languages} SET plurals = %d, formula = '%s' WHERE language = '%s'", $nplurals, $plural, $lang);
-        }
-        else {
-          db_query("UPDATE {languages} SET plurals = %d, formula = '%s' WHERE language = '%s'", 0, '', $lang);
+        $languages = language_list();
+        if (($mode != LOCALE_IMPORT_KEEP) || empty($languages[$lang]->plurals)) {
+          // Since we only need to parse the header if we ought to update the
+          // plural formula, only run this if we don't need to keep existing 
+          // data untouched or if we don't have an existing plural formula.
+          $header = _locale_import_parse_header($value['msgstr']);
+
+          // Get the plural formula and update in database.
+          if (isset($header["Plural-Forms"]) && $p = _locale_import_parse_plural_forms($header["Plural-Forms"], $file->filename)) {
+            list($nplurals, $plural) = $p;
+            db_query("UPDATE {languages} SET plurals = %d, formula = '%s' WHERE language = '%s'", $nplurals, $plural, $lang);
+          }
+          else {
+            db_query("UPDATE {languages} SET plurals = %d, formula = '%s' WHERE language = '%s'", 0, '', $lang);
+          }
         }
         $headerdone = TRUE;
       }
diff --git a/includes/lock.inc b/includes/lock.inc
index 9395cda..e10629d 100644
--- a/includes/lock.inc
+++ b/includes/lock.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: lock.inc,v 1.1.2.2 2010/02/01 16:49:14 goba Exp $
+// $Id: lock.inc,v 1.1.2.4 2010/05/11 09:30:20 goba Exp $
 
 /**
  * @file
@@ -18,7 +18,7 @@
  *
  * This is a cooperative, advisory lock system. Any long-running operation
  * that could potentially be attempted in parallel by multiple requests should
- * try to acquire a lock before proceeding. By obtaiing a lock, one request
+ * try to acquire a lock before proceeding. By obtaining a lock, one request
  * notifies any other requests that a specific opertation is in progress which
  * must not be executed in parallel.
  *
@@ -53,11 +53,6 @@
  * lock_acquire() and lock_wait() will automatically break (delete) a lock
  * whose duration has exceeded the timeout specified when it was acquired.
  *
- * A function that has acquired a lock may attempt to renew a lock (extend the
- * duration of the lock) by calling lock_acquire() again during the operation.
- * Failure to renew a lock is indicative that another request has acquired
- * the lock, and that the current operation may need to be aborted.
- *
  * Alternative implementations of this API (such as APC) may be substituted
  * by setting the 'lock_inc' variable to an alternate include filepath.  Since
  * this is an API intended to support alternative implementations, code using
diff --git a/includes/mail.inc b/includes/mail.inc
index 7549927..ce13469 100644
--- a/includes/mail.inc
+++ b/includes/mail.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: mail.inc,v 1.8.2.7 2009/06/18 12:15:44 goba Exp $
+// $Id: mail.inc,v 1.8.2.8 2010/06/02 12:07:24 goba Exp $
 
 /**
  * Compose and optionally send an e-mail message.
@@ -475,7 +475,7 @@ function _drupal_html_to_text_pad($text, $pad, $prefix = '') {
   if (($p = strrpos($text, "\n")) === FALSE) {
     $p = -1;
   }
-  $n = max(0, 79 - (strlen($text) - $p));
+  $n = max(0, 79 - (strlen($text) - $p) - strlen($prefix));
   // Add prefix and padding, and restore linebreak.
-  return $text . $prefix . str_repeat($pad, $n - strlen($prefix)) ."\n";
+  return $text . $prefix . str_repeat($pad, $n) ."\n";
 }
diff --git a/includes/menu.inc b/includes/menu.inc
index 10743b7..26c8052 100644
--- a/includes/menu.inc
+++ b/includes/menu.inc
@@ -2278,7 +2278,14 @@ function _menu_router_build($callbacks) {
   // First pass: separate callbacks from paths, making paths ready for
   // matching. Calculate fitness, and fill some default values.
   $menu = array();
+  $unique_paths = array();
   foreach ($callbacks as $path => $item) {
+    // If this is a duplicate path (case insensitive) then ignore this
+    // callback item.
+    if (in_array(strtolower($path), $unique_paths)) {
+      continue;
+    }
+    $unique_paths[] = strtolower($path);
     $load_functions = array();
     $to_arg_functions = array();
     $fit = 0;
diff --git a/includes/path.inc b/includes/path.inc
index e016cec..499f47d 100644
--- a/includes/path.inc
+++ b/includes/path.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: path.inc,v 1.19.2.3 2010/03/01 09:19:15 goba Exp $
+// $Id: path.inc,v 1.19.2.4 2010/05/28 15:12:04 goba Exp $
 
 /**
  * @file
@@ -262,9 +262,15 @@ function drupal_set_title($title = NULL) {
  *   Boolean value: TRUE if the current page is the front page; FALSE if otherwise.
  */
 function drupal_is_front_page() {
-  // As drupal_init_path updates $_GET['q'] with the 'site_frontpage' path,
-  // we can check it against the 'site_frontpage' variable.
-  return $_GET['q'] == drupal_get_normal_path(variable_get('site_frontpage', 'node'));
+  static $is_front_page;
+
+  if (!isset($is_front_page)) {
+    // As drupal_init_path updates $_GET['q'] with the 'site_frontpage' path,
+    // we can check it against the 'site_frontpage' variable.
+    $is_front_page = ($_GET['q'] == drupal_get_normal_path(variable_get('site_frontpage', 'node')));
+  }
+
+  return $is_front_page;
 }
 
 /**
diff --git a/includes/theme.inc b/includes/theme.inc
index bbc93cf..5b20747 100644
--- a/includes/theme.inc
+++ b/includes/theme.inc
@@ -1020,24 +1020,24 @@ function theme_get_setting($setting_name, $refresh = FALSE) {
 
     if ($settings['toggle_logo']) {
       if ($settings['default_logo']) {
-        $settings['logo'] = base_path() . dirname($theme_object->filename) .'/logo.png';
+        $settings['logo'] = file_create_url(dirname($theme_object->filename) .'/logo.png');
       }
       elseif ($settings['logo_path']) {
-        $settings['logo'] = base_path() . $settings['logo_path'];
+        $settings['logo'] = file_create_url($settings['logo_path']);
       }
     }
 
     if ($settings['toggle_favicon']) {
       if ($settings['default_favicon']) {
         if (file_exists($favicon = dirname($theme_object->filename) .'/favicon.ico')) {
-          $settings['favicon'] = base_path() . $favicon;
+          $settings['favicon'] = file_create_url($favicon);
         }
         else {
-          $settings['favicon'] = base_path() .'misc/favicon.ico';
+          $settings['favicon'] = file_create_url('misc/favicon.ico');
         }
       }
       elseif ($settings['favicon_path']) {
-        $settings['favicon'] = base_path() . $settings['favicon_path'];
+        $settings['favicon'] = file_create_url($settings['favicon_path']);
       }
       else {
         $settings['toggle_favicon'] = FALSE;
@@ -1258,7 +1258,7 @@ function theme_links($links, $attributes = array('class' => 'links')) {
 function theme_image($path, $alt = '', $title = '', $attributes = NULL, $getsize = TRUE) {
   if (!$getsize || (is_file($path) && (list($width, $height, $type, $image_attributes) = @getimagesize($path)))) {
     $attributes = drupal_attributes($attributes);
-    $url = (url($path) == $path) ? $path : (base_path() . $path);
+    $url = (url($path) == $path) ? $path : file_create_url($path);
     return '<img src="'. check_url($url) .'" alt="'. check_plain($alt) .'" title="'. check_plain($title) .'" '. (isset($image_attributes) ? $image_attributes : '') . $attributes .' />';
   }
 }
diff --git a/includes/xmlrpc.inc b/includes/xmlrpc.inc
index 65153ae..46b3ca5 100644
--- a/includes/xmlrpc.inc
+++ b/includes/xmlrpc.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: xmlrpc.inc,v 1.47.2.5 2009/01/14 21:36:16 goba Exp $
+// $Id: xmlrpc.inc,v 1.47.2.6 2010/06/02 12:22:02 goba Exp $
 
 /**
  * @file
@@ -157,11 +157,6 @@ function xmlrpc_message($message) {
  *   TRUE if parsing succeeded; FALSE otherwise
  */
 function xmlrpc_message_parse(&$xmlrpc_message) {
-  // First remove the XML declaration
-  $xmlrpc_message->message = preg_replace('/<\?xml(.*)?\?'.'>/', '', $xmlrpc_message->message);
-  if (trim($xmlrpc_message->message) == '') {
-    return FALSE;
-  }
   $xmlrpc_message->_parser = xml_parser_create();
   // Set XML parser to take the case of tags into account.
   xml_parser_set_option($xmlrpc_message->_parser, XML_OPTION_CASE_FOLDING, FALSE);
@@ -175,7 +170,10 @@ function xmlrpc_message_parse(&$xmlrpc_message) {
   xml_parser_free($xmlrpc_message->_parser);
   // Grab the error messages, if any
   $xmlrpc_message = xmlrpc_message_get();
-  if ($xmlrpc_message->messagetype == 'fault') {
+  if (!isset($xmlrpc_message->messagetype)) {
+    return FALSE;
+  }
+  elseif ($xmlrpc_message->messagetype == 'fault') {
     $xmlrpc_message->fault_code = $xmlrpc_message->params[0]['faultCode'];
     $xmlrpc_message->fault_string = $xmlrpc_message->params[0]['faultString'];
   }
diff --git a/includes/xmlrpcs.inc b/includes/xmlrpcs.inc
index 38b60b5..45304f6 100644
--- a/includes/xmlrpcs.inc
+++ b/includes/xmlrpcs.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: xmlrpcs.inc,v 1.24.2.3 2009/12/07 11:36:28 goba Exp $
+// $Id: xmlrpcs.inc,v 1.24.2.4 2010/06/02 12:52:07 goba Exp $
 
 /**
  * The main entry point for XML-RPC requests.
@@ -230,7 +230,7 @@ function xmlrpc_server_multicall($methodcalls) {
     elseif ($ok) {
       $result = xmlrpc_server_call($xmlrpc_server, $method, $params);
     }
-    if ($result->is_error) {
+    if (is_object($result) && !empty($result->is_error)) {
       $return[] = array(
         'faultCode' => $result->code,
         'faultString' => $result->message
diff --git a/install.php b/install.php
index f6f333d..5570fab 100644
--- a/install.php
+++ b/install.php
@@ -1,5 +1,5 @@
 <?php
-// $Id: install.php,v 1.113.2.10 2010/03/01 09:36:01 goba Exp $
+// $Id: install.php,v 1.113.2.12 2010/05/09 14:13:31 dries Exp $
 
 require_once './includes/install.inc';
 
diff --git a/modules/aggregator/aggregator.info b/modules/aggregator/aggregator.info
index 48baedb..6ce205e 100644
--- a/modules/aggregator/aggregator.info
+++ b/modules/aggregator/aggregator.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/aggregator/aggregator.module b/modules/aggregator/aggregator.module
index 858fd13..9ca46d4 100644
--- a/modules/aggregator/aggregator.module
+++ b/modules/aggregator/aggregator.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: aggregator.module,v 1.374.2.5 2009/03/30 12:15:53 goba Exp $
+// $Id: aggregator.module,v 1.374.2.6 2010/05/28 16:06:59 goba Exp $
 
 /**
  * @file
@@ -640,10 +640,8 @@ function aggregator_refresh($feed) {
 
         watchdog('aggregator', 'There is new syndicated content from %site.', array('%site' => $feed['title']));
         drupal_set_message(t('There is new syndicated content from %site.', array('%site' => $feed['title'])));
-        break;
       }
-      $result->error = t('feed not parseable');
-      // Deliberate no break.
+      break;
     default:
       watchdog('aggregator', 'The feed from %site seems to be broken, due to "%error".', array('%site' => $feed['title'], '%error' => $result->code .' '. $result->error), WATCHDOG_WARNING);
       drupal_set_message(t('The feed from %site seems to be broken, because of error "%error".', array('%site' => $feed['title'], '%error' => $result->code .' '. $result->error)));
diff --git a/modules/block/block.info b/modules/block/block.info
index 8b05a22..c484f81 100644
--- a/modules/block/block.info
+++ b/modules/block/block.info
@@ -5,8 +5,8 @@ package = Core - required
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/blog/blog.info b/modules/blog/blog.info
index 828bd1b..7ecc994 100644
--- a/modules/blog/blog.info
+++ b/modules/blog/blog.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/blogapi/blogapi.info b/modules/blogapi/blogapi.info
index 14edb3d..f95423f 100644
--- a/modules/blogapi/blogapi.info
+++ b/modules/blogapi/blogapi.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/book/book.info b/modules/book/book.info
index ac64127..fcd301e 100644
--- a/modules/book/book.info
+++ b/modules/book/book.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/color/color.info b/modules/color/color.info
index bf1f3fb..fd33d13 100644
--- a/modules/color/color.info
+++ b/modules/color/color.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/comment/comment.info b/modules/comment/comment.info
index deb9a6a..29cb796 100644
--- a/modules/comment/comment.info
+++ b/modules/comment/comment.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/comment/comment.module b/modules/comment/comment.module
index 6c8451b..26e2484 100644
--- a/modules/comment/comment.module
+++ b/modules/comment/comment.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: comment.module,v 1.617.2.14 2010/03/01 09:44:31 goba Exp $
+// $Id: comment.module,v 1.617.2.16 2010/05/28 16:23:15 goba Exp $
 
 /**
  * @file
@@ -949,7 +949,7 @@ function comment_render($node, $cid = 0) {
       if ($comment = db_fetch_object($result)) {
         $comment->name = $comment->uid ? $comment->registered_name : $comment->name;
         $links = module_invoke_all('link', 'comment', $comment, 1);
-        drupal_alter('link', $links, $node);
+        drupal_alter('link', $links, $node, $comment);
 
         $output .= theme('comment_view', $comment, $node, $links);
       }
@@ -1744,7 +1744,7 @@ function theme_comment_flat_collapsed($comment, $node) {
  */
 function theme_comment_flat_expanded($comment, $node) {
   $links = module_invoke_all('link', 'comment', $comment, 0);
-  drupal_alter('link', $links, $node);
+  drupal_alter('link', $links, $node, $comment);
   return theme('comment_view', $comment, $node, $links);
 }
 
@@ -1772,7 +1772,7 @@ function theme_comment_thread_collapsed($comment, $node) {
  */
 function theme_comment_thread_expanded($comment, $node) {
   $links = module_invoke_all('link', 'comment', $comment, 0);
-  drupal_alter('link', $links, $node);
+  drupal_alter('link', $links, $node, $comment);
   return theme('comment_view', $comment, $node, $links);
 }
 
@@ -2033,6 +2033,14 @@ function comment_hook_info() {
  */
 function comment_action_info() {
   return array(
+    'comment_publish_action' => array(
+      'description' => t('Publish comment'),
+      'type' => 'comment',
+      'configurable' => FALSE,
+      'hooks' => array(
+        'comment' => array('insert', 'update'),
+      ),
+    ),
     'comment_unpublish_action' => array(
       'description' => t('Unpublish comment'),
       'type' => 'comment',
@@ -2053,12 +2061,37 @@ function comment_action_info() {
 }
 
 /**
- * Drupal action to unpublish a comment.
+ * Action to publish a comment.
  *
+ * @param $comment
+ *   An optional comment object.
  * @param $context
  *   Keyed array. Must contain the id of the comment if $comment is not passed.
+ *
+ * @ingroup actions
+ */
+function comment_publish_action($comment, $context = array()) {
+  if (isset($comment->cid)) {
+    $cid = $comment->cid;
+    $subject = $comment->subject;
+  }
+  else {
+    $cid = $context['cid'];
+    $subject = db_result(db_query("SELECT subject FROM {comments} WHERE cid = %d", $cid));
+  }
+  db_query('UPDATE {comments} SET status = %d WHERE cid = %d', COMMENT_PUBLISHED, $cid);
+  watchdog('action', 'Published comment %subject.', array('%subject' => $subject));
+}
+
+/**
+ * Action to unpublish a comment.
+ *
  * @param $comment
  *   An optional comment object.
+ * @param $context
+ *   Keyed array. Must contain the id of the comment if $comment is not passed.
+ *
+ * @ingroup actions
  */
 function comment_unpublish_action($comment, $context = array()) {
   if (isset($comment->cid)) {
@@ -2074,9 +2107,35 @@ function comment_unpublish_action($comment, $context = array()) {
 }
 
 /**
+ * Action to unpublish a comment if it contains a certain string.
+ *
+ * @param $comment
+ *   A comment object.
+ * @param $context
+ *   An array providing more information about the context of the call to this action.
+ *   Unused here, since this action currently only supports the insert and update ops of
+ *   the comment hook, both of which provide a complete $comment object.
+ *
+ * @ingroup actions
+ * @see comment_unpublish_by_keyword_action_form()
+ * @see comment_unpublish_by_keyword_action_submit()
+ */
+function comment_unpublish_by_keyword_action($comment, $context) {
+  foreach ($context['keywords'] as $keyword) {
+    if (strpos($comment->comment, $keyword) !== FALSE || strpos($comment->subject, $keyword) !== FALSE) {
+      db_query('UPDATE {comments} SET status = %d WHERE cid = %d', COMMENT_NOT_PUBLISHED, $comment->cid);
+      watchdog('action', 'Unpublished comment %subject.', array('%subject' => $comment->subject));
+      break;
+    }
+  }
+}
+
+/**
  * Form builder; Prepare a form for blacklisted keywords.
  *
  * @ingroup forms
+ * @see comment_unpublish_by_keyword_action()
+ * @see comment_unpublish_by_keyword_action_submit()
  */
 function comment_unpublish_by_keyword_action_form($context) {
   $form['keywords'] = array(
@@ -2090,28 +2149,9 @@ function comment_unpublish_by_keyword_action_form($context) {
 
 /**
  * Process comment_unpublish_by_keyword_action_form form submissions.
+ *
+ * @see comment_unpublish_by_keyword_action()
  */
 function comment_unpublish_by_keyword_action_submit($form, $form_state) {
   return array('keywords' => drupal_explode_tags($form_state['values']['keywords']));
 }
-
-/**
- * Implementation of a configurable Drupal action.
- * Unpublish a comment if it contains a certain string.
- *
- * @param $context
- *   An array providing more information about the context of the call to this action.
- *   Unused here since this action currently only supports the insert and update ops of
- *   the comment hook, both of which provide a complete $comment object.
- * @param $comment
- *   A comment object.
- */
-function comment_unpublish_by_keyword_action($comment, $context) {
-  foreach ($context['keywords'] as $keyword) {
-    if (strstr($comment->comment, $keyword) || strstr($comment->subject, $keyword)) {
-      db_query('UPDATE {comments} SET status = %d WHERE cid = %d', COMMENT_NOT_PUBLISHED, $comment->cid);
-      watchdog('action', 'Unpublished comment %subject.', array('%subject' => $comment->subject));
-      break;
-    }
-  }
-}
diff --git a/modules/contact/contact.info b/modules/contact/contact.info
index e20d8ba..a09e9b4 100644
--- a/modules/contact/contact.info
+++ b/modules/contact/contact.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/cookie_cache_bypass/cookie_cache_bypass.module b/modules/cookie_cache_bypass/cookie_cache_bypass.module
index 1c54e32..36d9bda 100644
--- a/modules/cookie_cache_bypass/cookie_cache_bypass.module
+++ b/modules/cookie_cache_bypass/cookie_cache_bypass.module
@@ -5,6 +5,7 @@ function cookie_cache_bypass_form_alter(&$form, $form_state, $form_id) {
 }
 
 function cookie_cache_bypass_submit() {
+  global $cookie_domain;
   $lifetime = variable_get('cache_lifetime', 300);
-  setcookie('NO_CACHE', 'Y', $_SERVER['REQUEST_TIME'] + ($lifetime + 300), '/');
+  setcookie('NO_CACHE', 'Y', $_SERVER['REQUEST_TIME'] + ($lifetime + 300), '/', $cookie_domain);
 }
diff --git a/modules/dblog/dblog.info b/modules/dblog/dblog.info
index 9f86392..a66dc51 100644
--- a/modules/dblog/dblog.info
+++ b/modules/dblog/dblog.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/filter/filter.info b/modules/filter/filter.info
index 072260a..7d2305d 100644
--- a/modules/filter/filter.info
+++ b/modules/filter/filter.info
@@ -5,8 +5,8 @@ package = Core - required
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/filter/filter.module b/modules/filter/filter.module
index f0b1610..b2c605b 100644
--- a/modules/filter/filter.module
+++ b/modules/filter/filter.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: filter.module,v 1.204.2.10 2010/03/01 10:54:29 goba Exp $
+// $Id: filter.module,v 1.204.2.15 2010/05/28 14:40:02 goba Exp $
 
 /**
  * @file
@@ -470,18 +470,22 @@ function check_markup($text, $format = FILTER_FORMAT_DEFAULT, $check = TRUE) {
 }
 
 /**
- * Generate a selector for choosing a format in a form.
+ * Generates a selector for choosing a format in a form.
  *
- * @ingroup forms
- * @see filter_form_validate()
  * @param $value
- *   The ID of the format that is currently selected.
+ *   The ID of the format that is currently selected; uses the default format
+ *   if not provided.
  * @param $weight
- *   The weight of the input format.
+ *   The weight of the form element within the form.
  * @param $parents
- *   Required when defining multiple input formats on a single node or having a different parent than 'format'.
+ *   The parents array of the element. Required when defining multiple text
+ *   formats on a single form or having a different parent than 'format'.
+ *
  * @return
- *   HTML for the form element.
+ *   Form API array for the form element.
+ *
+ * @see filter_form_validate()
+ * @ingroup forms
  */
 function filter_form($value = FILTER_FORMAT_DEFAULT, $weight = NULL, $parents = array('format')) {
   $value = filter_resolve_format($value);
@@ -528,6 +532,11 @@ function filter_form($value = FILTER_FORMAT_DEFAULT, $weight = NULL, $parents =
   return $form;
 }
 
+/**
+ * Validation callback for filter elements in a form.
+ *
+ * @see filter_form().
+ */
 function filter_form_validate($form) {
   foreach (element_children($form) as $key) {
     if ($form[$key]['#value'] == $form[$key]['#return_value']) {
@@ -774,10 +783,10 @@ function _filter_htmlcorrector($text) {
   }
 
   // Properly entify angles.
-  $text = preg_replace('!<([^a-zA-Z/])!', '&lt;\1', $text);
+  $text = preg_replace('@<(?=[^a-zA-Z!/]|$)@', '&lt;', $text);
 
   // Split tags from text.
-  $split = preg_split('/<([^>]+?)>/', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
+  $split = preg_split('/<(!--.*?--|[^>]+?)>/s', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
   // Note: PHP ensures the array consists of alternating delimiters and literals
   // and begins and ends with a literal (inserting $null as required).
 
@@ -787,37 +796,43 @@ function _filter_htmlcorrector($text) {
   foreach ($split as $value) {
     // Process HTML tags.
     if ($tag) {
-      list($tagname) = explode(' ', strtolower($value), 2);
-      // Closing tag
-      if ($tagname{0} == '/') {
-        $tagname = substr($tagname, 1);
-        // Discard XHTML closing tags for single use tags.
-        if (!isset($single_use[$tagname])) {
-          // See if we possibly have a matching opening tag on the stack.
-          if (in_array($tagname, $stack)) {
-            // Close other tags lingering first.
-            do {
-              $output .= '</'. $stack[0] .'>';
-            } while (array_shift($stack) != $tagname);
-          }
-          // Otherwise, discard it.
-        }
+      // Passthrough comments.
+      if (substr($value, 0, 3) == '!--') {
+        $output .= '<'. $value .'>';
       }
-      // Opening tag
       else {
-        // See if we have an identical 'no nesting' tag already open and close it if found.
-        if (count($stack) && ($stack[0] == $tagname) && isset($no_nesting[$stack[0]])) {
-          $output .= '</'. array_shift($stack) .'>';
-        }
-        // Push non-single-use tags onto the stack
-        if (!isset($single_use[$tagname])) {
-          array_unshift($stack, $tagname);
+        list($tagname) = preg_split('/\s/', strtolower($value), 2);
+        // Closing tag
+        if ($tagname{0} == '/') {
+          $tagname = substr($tagname, 1);
+          // Discard XHTML closing tags for single use tags.
+          if (!isset($single_use[$tagname])) {
+            // See if we possibly have a matching opening tag on the stack.
+            if (in_array($tagname, $stack)) {
+              // Close other tags lingering first.
+              do {
+                $output .= '</'. $stack[0] .'>';
+              } while (array_shift($stack) != $tagname);
+            }
+            // Otherwise, discard it.
+          }
         }
-        // Add trailing slash to single-use tags as per X(HT)ML.
+        // Opening tag
         else {
-          $value = rtrim($value, ' /') .' /';
+          // See if we have an identical 'no nesting' tag already open and close it if found.
+          if (count($stack) && ($stack[0] == $tagname) && isset($no_nesting[$stack[0]])) {
+            $output .= '</'. array_shift($stack) .'>';
+          }
+          // Push non-single-use tags onto the stack
+          if (!isset($single_use[$tagname])) {
+            array_unshift($stack, $tagname);
+          }
+          // Add trailing slash to single-use tags as per X(HT)ML.
+          else {
+            $value = rtrim($value, ' /') .' /';
+          }
+          $output .= '<'. $value .'>';
         }
-        $output .= '<'. $value .'>';
       }
     }
     else {
@@ -882,7 +897,7 @@ function _filter_autop($text) {
   // We don't apply any processing to the contents of these tags to avoid messing
   // up code. We look for matched pairs and allow basic nesting. For example:
   // "processed <pre> ignored <script> ignored </script> ignored </pre> processed"
-  $chunks = preg_split('@(</?(?:pre|script|style|object)[^>]*>)@i', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
+  $chunks = preg_split('@(<(?:!--.*?--|/?(?:pre|script|style|object)[^>]*)>)@si', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
   // Note: PHP ensures the array consists of alternating delimiters and literals
   // and begins and ends with a literal (inserting NULL as required).
   $ignore = FALSE;
@@ -890,19 +905,25 @@ function _filter_autop($text) {
   $output = '';
   foreach ($chunks as $i => $chunk) {
     if ($i % 2) {
-      // Opening or closing tag?
-      $open = ($chunk[1] != '/');
-      list($tag) = split('[ >]', substr($chunk, 2 - $open), 2);
-      if (!$ignore) {
-        if ($open) {
-          $ignore = TRUE;
-          $ignoretag = $tag;
-        }
+      // Passthrough comments.
+      if (substr($chunk, 1, 3) == '!--') {
+        $output .= $chunk;
       }
-      // Only allow a matching tag to close it.
-      else if (!$open && $ignoretag == $tag) {
-        $ignore = FALSE;
-        $ignoretag = '';
+      else {
+        // Opening or closing tag?
+        $open = ($chunk[1] != '/');
+        list($tag) = split('[ >]', substr($chunk, 2 - $open), 2);
+        if (!$ignore) {
+          if ($open) {
+            $ignore = TRUE;
+            $ignoretag = $tag;
+          }
+        }
+        // Only allow a matching tag to close it.
+        else if (!$open && $ignoretag == $tag) {
+          $ignore = FALSE;
+          $ignoretag = '';
+        }
       }
     }
     else if (!$ignore) {
@@ -911,7 +932,8 @@ function _filter_autop($text) {
       $chunk = preg_replace('!(<'. $block .'[^>]*>)!', "\n$1", $chunk); // Space things out a little
       $chunk = preg_replace('!(</'. $block .'>)!', "$1\n\n", $chunk); // Space things out a little
       $chunk = preg_replace("/\n\n+/", "\n\n", $chunk); // take care of duplicates
-      $chunk = preg_replace('/\n?(.+?)(?:\n\s*\n|\z)/s', "<p>$1</p>\n", $chunk); // make paragraphs, including one at the end
+      $chunk = preg_replace('/^\n|\n\s*\n$/', '', $chunk);
+      $chunk = '<p>'. preg_replace('/\n\s*\n\n?(.)/', "</p>\n<p>$1", $chunk) ."</p>\n"; // make paragraphs, including one at the end
       $chunk = preg_replace("|<p>(<li.+?)</p>|", "$1", $chunk); // problem with nested lists
       $chunk = preg_replace('|<p><blockquote([^>]*)>|i', "<blockquote$1><p>", $chunk);
       $chunk = str_replace('</blockquote></p>', '</p></blockquote>', $chunk);
@@ -988,6 +1010,8 @@ function filter_xss($string, $allowed_tags = array('a', 'em', 'strong', 'cite',
     (
     <(?=[^a-zA-Z!/])  # a lone <
     |                 # or
+    <!--.*?-->        # a comment
+    |                 # or
     <[^>]*(>|$)       # a string that starts with a <, up until the > or the end of the string
     |                 # or
     >                 # just a >
@@ -1026,7 +1050,7 @@ function _filter_xss_split($m, $store = FALSE) {
     return '&lt;';
   }
 
-  if (!preg_match('%^<\s*(/\s*)?([a-zA-Z0-9]+)([^>]*)>?$%', $string, $matches)) {
+  if (!preg_match('%^(?:<\s*(/\s*)?([a-zA-Z0-9]+)([^>]*)>?|(<!--.*?-->))$%', $string, $matches)) {
     // Seriously malformed
     return '';
   }
@@ -1034,12 +1058,21 @@ function _filter_xss_split($m, $store = FALSE) {
   $slash = trim($matches[1]);
   $elem = &$matches[2];
   $attrlist = &$matches[3];
+  $comment = &$matches[4];
+
+  if ($comment) {
+    $elem = '!--';
+  }
 
   if (!isset($allowed_html[strtolower($elem)])) {
     // Disallowed HTML element
     return '';
   }
 
+  if ($comment) {
+    return $comment;
+  }
+
   if ($slash != '') {
     return "</$elem>";
   }
diff --git a/modules/forum/forum.info b/modules/forum/forum.info
index 7ddb3e9..6708ec4 100644
--- a/modules/forum/forum.info
+++ b/modules/forum/forum.info
@@ -7,8 +7,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/help/help.info b/modules/help/help.info
index 6cb7d6a..defb428 100644
--- a/modules/help/help.info
+++ b/modules/help/help.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/locale/locale.info b/modules/locale/locale.info
index 8ecd20f..2d65e4f 100644
--- a/modules/locale/locale.info
+++ b/modules/locale/locale.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/menu/menu.admin.inc b/modules/menu/menu.admin.inc
index 14eafa8..f39a677 100644
--- a/modules/menu/menu.admin.inc
+++ b/modules/menu/menu.admin.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: menu.admin.inc,v 1.26.2.6 2009/12/16 20:47:10 goba Exp $
+// $Id: menu.admin.inc,v 1.26.2.7 2010/06/02 12:56:20 goba Exp $
 
 /**
  * @file
@@ -344,9 +344,17 @@ function menu_edit_item_validate($form, &$form_state) {
     if (isset($parsed_link['query'])) {
       $item['options']['query'] = $parsed_link['query'];
     }
+    else {
+      // Use unset() rather than setting to empty string
+      // to avoid redundant serialized data being stored.
+      unset($item['options']['query']);
+    }
     if (isset($parsed_link['fragment'])) {
       $item['options']['fragment'] = $parsed_link['fragment'];
     }
+    else {
+      unset($item['options']['fragment']);
+    }
     if ($item['link_path'] != $parsed_link['path']) {
       $item['link_path'] = $parsed_link['path'];
     }
diff --git a/modules/menu/menu.info b/modules/menu/menu.info
index b3b5123..6efbea2 100644
--- a/modules/menu/menu.info
+++ b/modules/menu/menu.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/node/node.info b/modules/node/node.info
index 6584d61..3f82a83 100644
--- a/modules/node/node.info
+++ b/modules/node/node.info
@@ -5,8 +5,8 @@ package = Core - required
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/node/node.module b/modules/node/node.module
index a9eff94..076342a 100644
--- a/modules/node/node.module
+++ b/modules/node/node.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: node.module,v 1.947.2.22 2010/03/03 21:36:37 goba Exp $
+// $Id: node.module,v 1.947.2.24 2010/06/02 12:11:07 goba Exp $
 
 /**
  * @file
@@ -1285,9 +1285,13 @@ function node_search($op = 'search', $keys = NULL) {
         $node->body = drupal_render($node->content);
 
         // Fetch comments for snippet.
-        $node->body .= module_invoke('comment', 'nodeapi', $node, 'update index');
+        if (module_exists('comment')) {
+          $node->body .= comment_nodeapi($node, 'update index');
+        }
         // Fetch terms for snippet.
-        $node->body .= module_invoke('taxonomy', 'nodeapi', $node, 'update index');
+        if (module_exists('taxonomy')) {
+          $node->body .= taxonomy_nodeapi($node, 'update index');
+        }
 
         $extra = node_invoke_nodeapi($node, 'search result');
         $results[] = array(
@@ -2376,7 +2380,7 @@ function _node_access_rebuild_batch_operation(&$context) {
       node_access_acquire_grants($loaded_node);
     }
     $context['sandbox']['progress']++;
-    $context['sandbox']['current_node'] = $loaded_node->nid;
+    $context['sandbox']['current_node'] = $row['nid'];
   }
 
   // Multistep processing : report progress.
diff --git a/modules/openid/openid.info b/modules/openid/openid.info
index 001d5c3..a99860d 100644
--- a/modules/openid/openid.info
+++ b/modules/openid/openid.info
@@ -5,8 +5,8 @@ version = VERSION
 package = Core - optional
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/openid/openid.module b/modules/openid/openid.module
index b27f201..1591056 100644
--- a/modules/openid/openid.module
+++ b/modules/openid/openid.module
@@ -168,6 +168,8 @@ function openid_begin($claimed_id, $return_to = '', $form_values = array()) {
     return;
   }
 
+  drupal_session_start();
+
   // Store discovered information in the users' session so we don't have to rediscover.
   $_SESSION['openid']['service'] = $services[0];
   // Store the claimed id
diff --git a/modules/path/path.info b/modules/path/path.info
index f2796da..2ac8e3b 100644
--- a/modules/path/path.info
+++ b/modules/path/path.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/path_alias_cache/path_alias_cache.module b/modules/path_alias_cache/path_alias_cache.module
index 787d2cd..75abbfd 100644
--- a/modules/path_alias_cache/path_alias_cache.module
+++ b/modules/path_alias_cache/path_alias_cache.module
@@ -50,7 +50,13 @@ function path_alias_cache_lookup_path($action, $path = '', $path_language = '')
           // We order by ASC and overwrite array keys to ensure the correct
           // alias is used when there are multiple aliases per path.
           $placeholders = db_placeholders($cache['system_paths'], 'varchar');
-          $result = db_query("SELECT src, dst FROM {url_alias} WHERE src IN($placeholders) AND (language = '%s' OR language = '') ORDER BY language ASC", $cache['system_paths'], $path_language);
+
+          // If the second argument to db_query() is an array, all following arguments get ignored.
+          // Prepare required query values into a single array.
+          $args = $cache['system_paths'];
+          $args[] = $path_language;
+          $result = db_query("SELECT src, dst FROM {url_alias} WHERE src IN($placeholders) AND (language = '%s' OR language = '') ORDER BY language ASC", $args);
+
           while ($record = db_fetch_object($result)) {
             if (!isset($cache['map'][$path_language][$record->src])) {
               $cache['map'][$path_language][$record->src] = $record->dst;
@@ -122,12 +128,12 @@ function path_alias_cache_cache_system_paths() {
   // Check if the system paths for this page were loaded from cache in this
   // request to avoid writing to cache on every request.
   $cache = &path_alias_cache_static('path_alias_cache_lookup_path', array());
-  if (!$cache['system_paths']) {
+  if (!array_key_exists('system_paths', $cache)) {
     // Generate a cache ID (cid) specifically for this page.
-    $cid = $_GET['q'];
+    $cid = array_key_exists('q', $_GET) ? $_GET['q'] : '';
     // The static $map array used by drupal_lookup_path() includes all
     // system paths for the page request.
-    if (is_array($cache['map']) && $paths = current($cache['map'])) {
+    if (array_key_exists('map', $cache) && is_array($cache['map']) && $paths = current($cache['map'])) {
       $data = array_keys($paths);
       $expire = $_SERVER['REQUEST_TIME'] + variable_get('cache_lifetime', 0);
       cache_set($cid, $data, 'cache_path', $expire);
diff --git a/modules/php/php.info b/modules/php/php.info
index 4099c53..cf43839 100644
--- a/modules/php/php.info
+++ b/modules/php/php.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/ping/ping.info b/modules/ping/ping.info
index e9b334a..a6dd33d 100644
--- a/modules/ping/ping.info
+++ b/modules/ping/ping.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/poll/poll.info b/modules/poll/poll.info
index 64b4391..a022cb9 100644
--- a/modules/poll/poll.info
+++ b/modules/poll/poll.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/poll/poll.module b/modules/poll/poll.module
index b7da85f..c1266ab 100644
--- a/modules/poll/poll.module
+++ b/modules/poll/poll.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: poll.module,v 1.263.2.4 2009/09/14 10:16:54 goba Exp $
+// $Id: poll.module,v 1.263.2.5 2010/05/11 12:40:43 goba Exp $
 
 /**
  * @file
@@ -294,8 +294,6 @@ function poll_more_choices_submit($form, &$form_state) {
 }
 
 function _poll_choice_form($delta, $value = '', $votes = 0) {
-  $admin = user_access('administer nodes');
-
   $form = array(
     '#tree' => TRUE,
   );
@@ -308,17 +306,15 @@ function _poll_choice_form($delta, $value = '', $votes = 0) {
     '#default_value' => $value,
     '#parents' => array('choice', $delta, 'chtext'),
   );
-
-  if ($admin) {
-    $form['chvotes'] = array(
-      '#type' => 'textfield',
-      '#title' => t('Votes for choice @n', array('@n' => ($delta + 1))),
-      '#default_value' => $votes,
-      '#size' => 5,
-      '#maxlength' => 7,
-      '#parents' => array('choice', $delta, 'chvotes'),
-    );
-  }
+  $form['chvotes'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Votes for choice @n', array('@n' => ($delta + 1))),
+    '#default_value' => $votes,
+    '#size' => 5,
+    '#maxlength' => 7,
+    '#parents' => array('choice', $delta, 'chvotes'),
+    '#access' => user_access('administer nodes'),
+  );
 
   return $form;
 }
diff --git a/modules/profile/profile.info b/modules/profile/profile.info
index 7e1f51d..f5a6045 100644
--- a/modules/profile/profile.info
+++ b/modules/profile/profile.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/search/search.info b/modules/search/search.info
index b5e9dce..258a1e4 100644
--- a/modules/search/search.info
+++ b/modules/search/search.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/search/search.module b/modules/search/search.module
index db54e5f..a23b7ae 100644
--- a/modules/search/search.module
+++ b/modules/search/search.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: search.module,v 1.250.2.8 2009/12/07 15:44:33 goba Exp $
+// $Id: search.module,v 1.250.2.10 2010/05/28 15:20:35 goba Exp $
 
 /**
  * @file
@@ -42,11 +42,11 @@ define('PREG_CLASS_SEARCH_EXCLUDE',
 '\x{2108}\x{2109}\x{2114}\x{2116}-\x{2118}\x{211e}-\x{2123}\x{2125}\x{2127}'.
 '\x{2129}\x{212e}\x{2132}\x{213a}\x{213b}\x{2140}-\x{2144}\x{214a}-\x{2b13}'.
 '\x{2ce5}-\x{2cff}\x{2d6f}\x{2e00}-\x{3005}\x{3007}-\x{303b}\x{303d}-\x{303f}'.
-'\x{3099}-\x{309e}\x{30a0}\x{30fb}-\x{30fe}\x{3190}-\x{319f}\x{31c0}-\x{31cf}'.
-'\x{3200}-\x{33ff}\x{4dc0}-\x{4dff}\x{a015}\x{a490}-\x{a716}\x{a802}\x{a806}'.
-'\x{a80b}\x{a823}-\x{a82b}\x{d800}-\x{f8ff}\x{fb1e}\x{fb29}\x{fd3e}\x{fd3f}'.
-'\x{fdfc}-\x{fe6b}\x{feff}-\x{ff0f}\x{ff1a}-\x{ff20}\x{ff3b}-\x{ff40}\x{ff5b}-'.
-'\x{ff65}\x{ff70}\x{ff9e}\x{ff9f}\x{ffe0}-\x{fffd}');
+'\x{3099}-\x{309e}\x{30a0}\x{30fb}\x{30fd}\x{30fe}\x{3190}-\x{319f}\x{31c0}-'.
+'\x{31cf}\x{3200}-\x{33ff}\x{4dc0}-\x{4dff}\x{a015}\x{a490}-\x{a716}\x{a802}'.
+'\x{a806}\x{a80b}\x{a823}-\x{a82b}\x{d800}-\x{f8ff}\x{fb1e}\x{fb29}\x{fd3e}'.
+'\x{fd3f}\x{fdfc}-\x{fe6b}\x{feff}-\x{ff0f}\x{ff1a}-\x{ff20}\x{ff3b}-\x{ff40}'.
+'\x{ff5b}-\x{ff65}\x{ff70}\x{ff9e}\x{ff9f}\x{ffe0}-\x{fffd}');
 
 /**
  * Matches all 'N' Unicode character classes (numbers)
@@ -287,7 +287,7 @@ function search_update_totals() {
     $total = log10(1 + 1/(max(1, $total)));
     db_query("UPDATE {search_total} SET count = %f WHERE word = '%s'", $total, $word);
     if (!db_affected_rows()) {
-      db_query("INSERT INTO {search_total} (word, count) VALUES ('%s', %f)", $word, $total);
+      @db_query("INSERT INTO {search_total} (word, count) VALUES ('%s', %f)", $word, $total);
     }
   }
   // Find words that were deleted from search_index, but are still in
diff --git a/modules/simpletest/CHANGELOG.txt b/modules/simpletest/CHANGELOG.txt
index 9aac06a..9c0ef3f 100644
--- a/modules/simpletest/CHANGELOG.txt
+++ b/modules/simpletest/CHANGELOG.txt
@@ -1,4 +1,22 @@
-// $Id: CHANGELOG.txt,v 1.1.2.97 2009/09/14 23:22:56 boombatower Exp $
+// $Id: CHANGELOG.txt,v 1.1.2.110 2009/12/30 22:37:21 boombatower Exp $
+
+SimpleTest 6.x-2.10, 2009-12-30
+-------------------------------
+- Bugs
+   * Correct INSTALL.txt link URL in requirement check.
+   * #587304: Call to undefined function drupal_realpath().
+   * #587988: drupal_http_request() does not use drupal_generate_test_ua().
+   * Manual fix of --file argument for run-tests.sh.
+   * #596440 by grendzy: assertMail doesn't work on real modules - Class 'DrupalWebTestCase' not found.
+   * #603410: Missing backported error handler in _drupal_bootstrap_full().
+   * #640076: Link to file INSTALL.txt should use url().
+   * #654534 by sun: SimpleTest deletes *all* files.
+   * #649344 by joachim: Link in admin help message to INSTALL file is broken.
+- Changes:
+   * #580406: DrupalUnitTestCase requires Database class.
+   * #667546: INSTALL.txt text correction.
+- Backports:
+   * #653860 by yhahn: Ensure simpletest JS handlers are attached only once.
 
 SimpleTest 6.x-2.9, 2009-09-14
 ------------------------------
diff --git a/modules/simpletest/INSTALL.txt b/modules/simpletest/INSTALL.txt
index b7dadd3..8a09d97 100644
--- a/modules/simpletest/INSTALL.txt
+++ b/modules/simpletest/INSTALL.txt
@@ -1,4 +1,4 @@
-$Id: INSTALL.txt,v 1.6.4.16 2009/09/05 13:34:10 boombatower Exp $
+$Id: INSTALL.txt,v 1.6.4.17 2009/12/30 22:28:50 boombatower Exp $
 
 AUTHOR
 ------
@@ -13,7 +13,7 @@ INSTALLATION
 1. Apply the D6-core-simpletest.patch file to the Drupal 6 core.
 
 2. (Optional)
-   Apply the "Show fatal errors in tests" batch to misc/drupal.js if you want
+   Apply the "Show fatal errors in tests" patch to misc/drupal.js if you want
    the reason for test failure to be displayed on the batch API screen. The
    patch can be found at:
    http://drupal.org/files/issues/simpletest_drupal.js_.patch.
diff --git a/modules/simpletest/drupal_web_test_case.php b/modules/simpletest/drupal_web_test_case.php
index 8b4b1a9..6789a8d 100644
--- a/modules/simpletest/drupal_web_test_case.php
+++ b/modules/simpletest/drupal_web_test_case.php
@@ -1,5 +1,5 @@
 <?php
-// $Id: drupal_web_test_case.php,v 1.2.2.3.2.43 2009/09/14 23:22:56 boombatower Exp $
+// $Id: drupal_web_test_case.php,v 1.2.2.3.2.46 2009/11/06 21:23:32 boombatower Exp $
 // Core: Id: drupal_web_test_case.php,v 1.146 2009/08/31 18:30:26 webchick Exp $
 
 /**
@@ -557,8 +557,10 @@ class DrupalUnitTestCase extends DrupalTestCase {
     $this->originalFileDirectory = file_directory_path();
 
     // Generate temporary prefixed database to ensure that tests have a clean starting point.
-    $db_prefix = Database::getConnection()->prefixTables('{simpletest' . mt_rand(1000, 1000000) . '}');
-    $conf['file_public_path'] = $this->originalFileDirectory . '/' . $db_prefix;
+//    $db_prefix = Database::getConnection()->prefixTables('{simpletest' . mt_rand(1000, 1000000) . '}');
+    $db_prefix = $db_prefix . 'simpletest' . mt_rand(1000, 1000000);
+//    $conf['file_public_path'] = $this->originalFileDirectory . '/' . $db_prefix;
+    $conf['file_directory_path'] = $this->originalFileDirectory . '/simpletest/' . substr($db_prefix, 10);
 
     // If locale is enabled then t() will try to access the database and
     // subsequently will fail as the database is not accessible.
@@ -573,7 +575,8 @@ class DrupalUnitTestCase extends DrupalTestCase {
   function tearDown() {
     global $db_prefix, $conf;
     if (preg_match('/simpletest\d+/', $db_prefix)) {
-      $conf['file_public_path'] = $this->originalFileDirectory;
+//      $conf['file_public_path'] = $this->originalFileDirectory;
+      $conf['file_directory_path'] = $this->originalFileDirectory;
       // Return the database prefix to the original.
       $db_prefix = $this->originalPrefix;
       // Restore modules if necessary.
@@ -711,9 +714,11 @@ class DrupalWebTestCase extends DrupalTestCase {
   protected function drupalCreateNode($settings = array()) {
     // Populate defaults array.
     $settings += array(
+//      'body'      => array(FIELD_LANGUAGE_NONE => array(array())),
       'body'      => $this->randomName(32),
       'title'     => $this->randomName(8),
       'comment'   => 2,
+//      'changed'   => REQUEST_TIME,
       'changed'   => time(),
       'format'    => FILTER_FORMAT_DEFAULT,
       'moderate'  => 0,
@@ -1158,23 +1163,48 @@ class DrupalWebTestCase extends DrupalTestCase {
 
     // Restore necessary variables.
     variable_set('install_profile', 'default');
+//    variable_set('install_task', 'done');
     variable_set('install_task', 'profile-finished');
     variable_set('clean_url', $clean_url_original);
     variable_set('site_mail', 'simpletest@example.com');
-    variable_set('smtp_library', drupal_get_path('module', 'simpletest') . '/simpletest.test');
+//    // Set up English language.
+//    unset($GLOBALS['conf']['language_default']);
+//    $language = language_default();
+
+    // Use the test mail class instead of the default mail handler class.
+//    variable_set('mail_sending_system', array('default-system' => 'TestingMailSystem'));
+    variable_set('smtp_library', drupal_get_path('module', 'simpletest') . '/simpletest.mail.inc');
 
     // Use temporary files directory with the same prefix as the database.
+//    $public_files_directory  = $this->originalFileDirectory . '/' . $db_prefix;
+//    $private_files_directory = $public_files_directory . '/private';
     $directory = $this->originalFileDirectory . '/' . $db_prefix;
 
     // Set path variables
+//    variable_set('file_public_path', $public_files_directory);
+//    variable_set('file_private_path', $private_files_directory);
     variable_set('file_directory_path', $directory);
 
     // Create the directories
+//    $directory = file_directory_path('public');
+//    file_prepare_directory($directory, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
+//    file_prepare_directory($private_files_directory, FILE_CREATE_DIRECTORY);
     file_check_directory($directory, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
 
+//    drupal_set_time_limit($this->timeLimit);
     set_time_limit($this->timeLimit);
   }
 
+//  /**
+//   * This method is called by DrupalWebTestCase::setUp, and preloads the
+//   * registry from the testing site to cut down on the time it takes to
+//   * setup a clean environment for the current test run.
+//   */
+//  protected function preloadRegistry() {
+//    db_query('INSERT INTO {registry} SELECT * FROM ' . $this->originalPrefix . 'registry');
+//    db_query('INSERT INTO {registry_file} SELECT * FROM ' . $this->originalPrefix . 'registry_file');
+//  }
+
   /**
    * Refresh the in-memory set of variables. Useful after a page request is made
    * that changes a variable in a different thread.
@@ -1190,6 +1220,7 @@ class DrupalWebTestCase extends DrupalTestCase {
   protected function refreshVariables() {
     global $conf;
     cache_clear_all('variables', 'cache');
+//    $conf = variable_initialize();
     $conf = variable_init();
   }
 
@@ -1215,6 +1246,7 @@ class DrupalWebTestCase extends DrupalTestCase {
 
     if (preg_match('/simpletest\d+/', $db_prefix)) {
       // Delete temporary files directory.
+//      file_unmanaged_delete_recursive(file_directory_path());
       simpletest_clean_temporary_directory(file_directory_path());
 
       // Remove all prefixed tables (all the tables in the schema).
@@ -1229,6 +1261,7 @@ class DrupalWebTestCase extends DrupalTestCase {
 
       // Return the user to the original one.
       $user = $this->originalUser;
+//      drupal_save_session(TRUE);
       session_save_session(TRUE);
 
       // Bring back default language. (Drupal 6)
@@ -1244,11 +1277,21 @@ class DrupalWebTestCase extends DrupalTestCase {
       // Reload module list and implementations to ensure that test module hooks
       // aren't called after tests.
       module_list(TRUE);
+//      module_implements('', FALSE, TRUE);
       module_implements('', '', TRUE);
 
+      // Reset the Field API.
+//      field_cache_clear();
+
       // Rebuild caches.
       $this->refreshVariables();
 
+//      // Reset language.
+//      $language = $this->originalLanguage;
+//      if ($this->originalLanguageDefault) {
+//        $GLOBALS['conf']['language_default'] = $this->originalLanguageDefault;
+//      }
+
       // Close the CURL handler.
       $this->curlClose();
     }
@@ -1492,6 +1535,7 @@ class DrupalWebTestCase extends DrupalTestCase {
             // is broken. This is a less than elegant workaround. Alternatives
             // are being explored at #253506.
             foreach ($upload as $key => $file) {
+//              $file = drupal_realpath($file);
               $file = realpath($file);
               if ($file && is_file($file)) {
                 $post[$key] = '@' . $file;
@@ -1962,6 +2006,7 @@ class DrupalWebTestCase extends DrupalTestCase {
 
     foreach ($captured_emails as $message) {
       foreach ($filter as $key => $value) {
+//        if (!isset($message[$key]) || $message[$key] != $value) {
         if (!isset($message['params'][$key]) || $message['params'][$key] != $value) {
           continue 2;
         }
@@ -2516,7 +2561,12 @@ class DrupalWebTestCase extends DrupalTestCase {
   protected function assertMail($name, $value = '', $message = '') {
     $captured_emails = variable_get('drupal_test_email_collector', array());
     $email = end($captured_emails);
-    return $this->assertTrue($email && isset($email['params'][$name]) && $email['params'][$name] == $value, $message, t('E-mail'));
+//    return $this->assertTrue($email && isset($email[$name]) && $email[$name] == $value, $message, t('E-mail'));
+    return $this->assertTrue(
+      ($email && isset($email[$name]) && $email[$name] == $value) ||
+      ($email && isset($email['params'][$name]) && $email['params'][$name] == $value),
+      $message,
+      t('E-mail'));
   }
 
   /**
@@ -2557,6 +2607,7 @@ class DrupalWebTestCase extends DrupalTestCase {
  */
 function simpletest_verbose($message, $original_file_directory = NULL, $test_class = NULL) {
   static $file_directory = NULL, $class = NULL, $id = 1;
+//  $verbose = &drupal_static(__FUNCTION__);
   static $verbose;
 
   // Will pass first time during setup phase, and when verbose is TRUE.
@@ -2575,6 +2626,7 @@ function simpletest_verbose($message, $original_file_directory = NULL, $test_cla
     $class = $test_class;
     $verbose = variable_get('simpletest_verbose', FALSE);
     $directory = $file_directory . '/simpletest/verbose';
+//    return file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
     return file_check_directory($directory, FILE_CREATE_DIRECTORY);
   }
   return FALSE;
diff --git a/modules/simpletest/run-tests.sh b/modules/simpletest/run-tests.sh
index 65e350e..ba3efd1 100755
--- a/modules/simpletest/run-tests.sh
+++ b/modules/simpletest/run-tests.sh
@@ -1,5 +1,5 @@
 <?php
-// $Id: run-tests.sh,v 1.1.2.5 2009/09/05 13:34:10 boombatower Exp $
+// $Id: run-tests.sh,v 1.1.2.7 2009/10/19 01:49:41 boombatower Exp $
 // Core: Id: run-tests.sh,v 1.35 2009/08/17 19:14:41 webchick Exp
 
 /**
@@ -152,7 +152,7 @@ All arguments are long options.
   <test1>[,<test2>[,<test3> ...]]
 
               One or more tests to be run. By default, these are interpreted
-              as the names of test groups as shown at 
+              as the names of test groups as shown at
               ?q=admin/build/testing.
               These group names typically correspond to module names like "User"
               or "Profile" or "System", but there is also a group "XML-RPC".
@@ -366,7 +366,7 @@ function simpletest_script_run_one_test($test_id, $test_class) {
   require_once drupal_get_path('module', 'simpletest') . '/drupal_web_test_case.php';
   $classes = simpletest_test_get_all_classes();
   require_once $classes[$test_class]['file'];
-  
+
   $test = new $test_class($test_id);
   $test->run();
   $info = $test->getInfo();
@@ -415,18 +415,21 @@ function simpletest_script_get_test_list() {
       }
     }
     elseif ($args['file']) {
+      require_once drupal_get_path('module', 'simpletest') . '/drupal_web_test_case.php';
       $files = array();
       foreach ($args['test_names'] as $file) {
 //        $files[drupal_realpath($file)] = 1;
         $files[realpath($file)] = 1;
+        require_once realpath($file);
       }
 
       // Check for valid class names.
       foreach ($all_tests as $class_name) {
-        $refclass = new ReflectionClass($class_name);
-        $file = $refclass->getFileName();
-        if (isset($files[$file])) {
-          $test_list[] = $class_name;
+        if (class_exists($class_name, FALSE)) {
+          $refclass = new ReflectionClass($class_name);
+          if (isset($files[$refclass->getFileName()])) {
+            $test_list[] = $class_name;
+          }
         }
       }
     }
diff --git a/modules/simpletest/simpletest.info b/modules/simpletest/simpletest.info
index 6b31a68..fe66b6a 100644
--- a/modules/simpletest/simpletest.info
+++ b/modules/simpletest/simpletest.info
@@ -42,9 +42,9 @@ files[] = tests/block.test
 ; files[] = tests/unicode.test
 ; files[] = tests/xmlrpc.test
 
-; Information added by drupal.org packaging script on 2009-09-14
-version = "6.x-2.9"
+; Information added by drupal.org packaging script on 2009-12-30
+version = "6.x-2.10"
 core = "6.x"
 project = "simpletest"
-datestamp = "1252971974"
+datestamp = "1262212859"
 
diff --git a/modules/simpletest/simpletest.install b/modules/simpletest/simpletest.install
index c922985..20d638b 100644
--- a/modules/simpletest/simpletest.install
+++ b/modules/simpletest/simpletest.install
@@ -1,5 +1,5 @@
 <?php
-// $Id: simpletest.install,v 1.4.2.3.2.19 2009/09/14 22:32:11 boombatower Exp $
+// $Id: simpletest.install,v 1.4.2.3.2.22 2009/12/14 23:36:34 boombatower Exp $
 // Core: Id: simpletest.install,v 1.26 2009/08/17 19:14:41 webchick Exp
 
 /**
@@ -15,6 +15,8 @@
 function simpletest_install() {
   drupal_install_schema('simpletest');
   // Check for files directory.
+//  $path = 'public://simpletest';
+//  if (file_prepare_directory($path, FILE_CREATE_DIRECTORY)) {
   $path = file_directory_path() . '/simpletest';
   if (file_check_directory($path, FILE_CREATE_DIRECTORY)) {
     // Generate binary and text test files.
@@ -37,6 +39,7 @@ function simpletest_install() {
 
     // Copy other test files for consistency.
     $original = drupal_get_path('module', 'simpletest') . '/files';
+//    $files = file_scan_directory($original, '/(html|image|javascript|php|sql)-.*/');
     $files = file_scan_directory($original, '(html|image|javascript|php|sql)-.*');
 
     // If there are more files in SimpleTest's files directory than the site's
@@ -44,8 +47,10 @@ function simpletest_install() {
     // an errant test deletes one or more files from the site's files
     // directory. It serves a convenience to developers so that they can get
     // the test files back easily.
+//    if (count($files) > count(file_scan_directory($path, '/(html|image|javascript|php|sql)-.*/'))) {
     if (count($files) > count(file_scan_directory($path, '(html|image|javascript|php|sql)-.*'))) {
       foreach ($files as $file) {
+//        file_unmanaged_copy($file->uri, $path, FILE_EXISTS_REPLACE);
         copy($file->filename, $path . '/' . $file->basename);
       }
       $generated = TRUE;
@@ -118,8 +123,10 @@ function simpletest_uninstall() {
 
   // Remove generated files.
   $path = file_directory_path() . '/simpletest';
+//  $files = file_scan_directory($path, '/.*/');
   $files = file_scan_directory($path, '.*');
   foreach ($files as $file) {
+//    file_unmanaged_delete($file->uri);
     unlink($file->filename);
   }
   rmdir($path);
@@ -179,7 +186,7 @@ function simpletest_requirements($phase) {
       'description' => $t('SimpleTest could not be installed. Must apply core patch, please see
                            <a href="@install">INSTALL.txt</a>.',
                            array('%settings' => realpath(conf_path() . '/settings.php'),
-                                 '@install' => drupal_get_path('module', 'simpletest') . '/INSTALL.txt')),
+                                 '@install' => base_path() . drupal_get_path('module', 'simpletest') . '/INSTALL.txt')),
     );
   }
 
diff --git a/modules/simpletest/simpletest.js b/modules/simpletest/simpletest.js
index 29e2f2f..16e9869 100644
--- a/modules/simpletest/simpletest.js
+++ b/modules/simpletest/simpletest.js
@@ -1,4 +1,4 @@
-// $Id: simpletest.js,v 1.2.4.5 2009/09/05 13:34:10 boombatower Exp $
+// $Id: simpletest.js,v 1.2.4.6 2009/12/14 23:29:36 boombatower Exp $
 // Core: Id: simpletest.js,v 1.11 2009/04/27 20:19:37 webchick Exp
 //(function ($) {
 
@@ -10,7 +10,7 @@
 Drupal.behaviors.simpleTestMenuCollapse = function() {
     var timeout = null;
     // Adds expand-collapse functionality.
-    $('div.simpletest-image').each(function () {
+    $('div.simpletest-image:not(.simpletest-image-processed)').addClass('simpletest-image-processed').each(function () {
 //      direction = settings.simpleTest[$(this).attr('id')].imageDirection;
 //      $(this).html(settings.simpleTest.images[direction]);
       direction = Drupal.settings.simpleTest[$(this).attr('id')].imageDirection;
@@ -18,7 +18,7 @@ Drupal.behaviors.simpleTestMenuCollapse = function() {
     });
 
     // Adds group toggling functionality to arrow images.
-    $('div.simpletest-image').click(function () {
+    $('div.simpletest-image:not(.simpletest-click-processed)').addClass('simpletest-click-processed').click(function () {
 //      var trs = $(this).parents('tbody').children('.' + settings.simpleTest[this.id].testClass);
 //      var direction = settings.simpleTest[this.id].imageDirection;
       var trs = $(this).parents('tbody').children('.' + Drupal.settings.simpleTest[this.id].testClass);
@@ -70,7 +70,7 @@ Drupal.behaviors.simpleTestMenuCollapse = function() {
 //Drupal.behaviors.simpleTestSelectAll = {
 //  attach: function (context, settings) {
 Drupal.behaviors.simpleTestSelectAll = function() {
-    $('td.simpletest-select-all').each(function () {
+    $('td.simpletest-select-all:not(.simpletest-select-processed)').addClass('simpletest-select-processed').each(function () {
 //      var testCheckboxes = settings.simpleTest['simpletest-test-group-' + $(this).attr('id')].testNames;
       var testCheckboxes = Drupal.settings.simpleTest['simpletest-test-group-' + $(this).attr('id')].testNames;
       var groupCheckbox = $('<input type="checkbox" class="form-checkbox" id="' + $(this).attr('id') + '-select-all" />');
diff --git a/modules/simpletest/simpletest.mail.inc b/modules/simpletest/simpletest.mail.inc
new file mode 100644
index 0000000..5f0b4c9
--- /dev/null
+++ b/modules/simpletest/simpletest.mail.inc
@@ -0,0 +1,23 @@
+<?php
+
+/**
+ * @file
+ * smtp_library implementation for simpletest.
+ */
+
+/**
+ * Capture e-mail message during testing.
+ *
+ * Code copied from TestingMailSystem in mail.sending.inc (Drupal 7). Placed in
+ * this file to ensure not loaded until in testing mode, to ensure no conflicts
+ * with other implementations like devel.
+ *
+ * @param $message
+ *   An e-mail message.
+ */
+function drupal_mail_wrapper(array $message) {
+  $captured_emails = variable_get('drupal_test_email_collector', array());
+  $captured_emails[] = $message;
+  variable_set('drupal_test_email_collector', $captured_emails);
+  return TRUE;
+}
diff --git a/modules/simpletest/simpletest.module b/modules/simpletest/simpletest.module
index b0082bd..6a91e11 100644
--- a/modules/simpletest/simpletest.module
+++ b/modules/simpletest/simpletest.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: simpletest.module,v 1.33.2.4.2.20 2009/09/14 20:34:30 boombatower Exp $
+// $Id: simpletest.module,v 1.33.2.4.2.21 2009/12/14 23:27:11 boombatower Exp $
 // Core: Id: simpletest.module,v 1.71 2009/08/24 00:14:21 webchick Exp
 
 /**
@@ -16,6 +16,7 @@ function simpletest_help($path, $arg) {
   switch ($path) {
     case 'admin/help#simpletest':
       $output  = '<p>' . t('The SimpleTest module is a framework for running automated unit tests in Drupal. It can be used to verify a working state of Drupal before and after any code changes, or as a means for developers to write and execute tests for their modules.') . '</p>';
+//      $output .= '<p>' . t('Visit <a href="@admin-simpletest">Administer >> Structure >> SimpleTest</a> to display a list of available tests. For comprehensive testing, select <em>all</em> tests, or individually select tests for more targeted testing. Note that it might take several minutes for all tests to complete.)', array('@admin-simpletest' => url('admin/config/development/testing'))) . '</p>';
       $output .= '<p>' . t('Visit <a href="@admin-simpletest">Administer >> Structure >> SimpleTest</a> to display a list of available tests. For comprehensive testing, select <em>all</em> tests, or individually select tests for more targeted testing. Note that it might take several minutes for all tests to complete.)', array('@admin-simpletest' => url('admin/build/testing'))) . '</p>';
       $output .= '<p>' . t('After the tests have run, a message will be displayed next to each test group indicating whether tests within it passed, failed, or had exceptions. A pass means that a test returned the expected results, while fail means that it did not. An exception normally indicates an error outside of the test, such as a PHP warning or notice. If there were fails or exceptions, the results are expanded, and the tests that had issues will be indicated in red or pink rows. Use these results to refine your code and tests until all tests return a pass.') . '</p>';
       $output .= '<p>' . t('For more information on creating and modifying your own tests, see the <a href="@simpletest-api">SimpleTest API Documentation</a> in the Drupal handbook.', array('@simpletest-api' => 'http://drupal.org/simpletest')) . '</p>';
@@ -28,6 +29,7 @@ function simpletest_help($path, $arg) {
  * Implementation of hook_menu().
  */
 function simpletest_menu() {
+//  $items['admin/config/development/testing'] = array(
   $items['admin/build/testing'] = array(
     'title' => 'Testing',
     'page callback' => 'drupal_get_form',
@@ -36,10 +38,12 @@ function simpletest_menu() {
     'access arguments' => array('administer unit tests'),
     'file' => 'simpletest.pages.inc',
   );
+//  $items['admin/config/development/testing/list'] = array(
   $items['admin/build/testing/list'] = array(
     'title' => 'List',
     'type' => MENU_DEFAULT_LOCAL_TASK,
   );
+//  $items['admin/config/development/testing/settings'] = array(
   $items['admin/build/testing/settings'] = array(
     'title' => 'Settings',
     'page callback' => 'drupal_get_form',
@@ -48,9 +52,11 @@ function simpletest_menu() {
     'type' => MENU_LOCAL_TASK,
     'file' => 'simpletest.pages.inc',
   );
+//  $items['admin/config/development/testing/results/%'] = array(
   $items['admin/build/testing/results/%'] = array(
     'title' => 'Test result',
     'page callback' => 'drupal_get_form',
+//    'page arguments' => array('simpletest_result_form', 5),
     'page arguments' => array('simpletest_result_form', 4),
     'description' => 'View result of tests.',
     'access arguments' => array('administer unit tests'),
@@ -64,6 +70,12 @@ function simpletest_menu() {
  * Implementation of hook_perm().
  */
 function simpletest_perm() {
+//  return array(
+//    'administer unit tests' => array(
+//      'title' => t('Administer unit tests'),
+//      'description' => t('Manage and run automated testing. %warning', array('%warning' => t('Warning: Give to trusted roles only; this permission has security implications.'))),
+//    ),
+//  );
   return array('administer unit tests');
 }
 
@@ -83,6 +95,31 @@ function simpletest_theme() {
   );
 }
 
+///**
+// * Implementation of hook_stream_wrappers().
+// */
+//function simpletest_test_stream_wrappers() {
+//  return array(
+//    'simpletest' => array(
+//      'name' => t('Simpletest files'),
+//      'class' => 'DrupalSimpleTestStreamWrapper',
+//      'description' => t('Stream Wrapper for Simpletest files.'),
+//    ),
+//  );
+//}
+
+///**
+// * Implement hook_js_alter().
+// */
+//function simpletest_js_alter(&$javascript) {
+//  // Since SimpleTest is a special use case for the table select, stick the
+//  // SimpleTest JavaScript above the table select.
+//  $simpletest = drupal_get_path('module', 'simpletest') . '/simpletest.js';
+//  if (array_key_exists($simpletest, $javascript) && array_key_exists('misc/tableselect.js', $javascript)) {
+//    $javascript[$simpletest]['weight'] = $javascript['misc/tableselect.js']['weight'] - 1;
+//  }
+//}
+
 function _simpletest_format_summary_line($summary) {
   $args = array(
     '@pass' => format_plural(isset($summary['#pass']) ? $summary['#pass'] : 0, '1 pass', '@count passes'),
@@ -107,10 +144,14 @@ function _simpletest_format_summary_line($summary) {
  */
 function simpletest_run_tests($test_list, $reporter = 'drupal') {
   cache_clear_all();
+//  $test_id = db_insert('simpletest_test_id')
+//    ->useDefaults(array('test_id'))
+//    ->execute();
   db_query('INSERT INTO {simpletest_test_id} (test_id) VALUES (default)');
   $test_id = db_last_insert_id('simpletest_test_id', 'test_id');
 
   // Clear out the previous verbose files.
+//  file_unmanaged_delete_recursive(file_directory_path() . '/simpletest/verbose');
   simpletest_clean_temporary_directory(file_directory_path() . '/simpletest/verbose');
 
   // Get the info for the first test being run.
@@ -139,6 +180,7 @@ function simpletest_run_tests($test_list, $reporter = 'drupal') {
   // By calling batch_process() directly, we skip that behavior and ensure
   // that we don't exceed the size of data that can be sent to the database
   // (max_allowed_packet on MySQL).
+//  batch_process('admin/config/development/testing/results/' . $test_id);
   batch_process('admin/build/testing/results/' . $test_id);
 }
 
@@ -202,6 +244,7 @@ function _simpletest_batch_operation($test_list_init, $test_id, &$context) {
 //function _simpletest_batch_finished($success, $results, $operations, $elapsed) {
 function _simpletest_batch_finished($success, $results, $operations) {
   if ($success) {
+//    drupal_set_message(t('The test run finished in @elapsed.', array('@elapsed' => $elapsed)));
     drupal_set_message(t('The test run finished.'));
   }
   else {
@@ -257,6 +300,7 @@ function simpletest_last_test_get($test_id) {
  */
 function simpletest_log_read($test_id, $prefix, $test_class, $during_test = FALSE) {
   require_once drupal_get_path('module', 'simpletest') . '/drupal_web_test_case.php';
+//  $log = 'public://' . ($during_test ? '' : '/simpletest/' . substr($prefix, 10)) . '/error.log';
   $log = file_directory_path() . ($during_test ? '' : '/simpletest/' . substr($prefix, 10)) . '/error.log';
   $found = FALSE;
   if (file_exists($log)) {
@@ -305,6 +349,7 @@ function simpletest_log_read($test_id, $prefix, $test_class, $during_test = FALS
  * @see simpletest_registry_files_alter()
  */
 function simpletest_test_get_all() {
+//  $groups = &drupal_static(__FUNCTION__);
   static $groups;
 
   if (!$groups) {
@@ -315,6 +360,11 @@ function simpletest_test_get_all() {
     }
     else {
       // Select all clases in files ending with .test.
+//      $classes = db_select('registry')
+//        ->fields('registry', array('name'))
+//        ->condition('type', 'class')
+//        ->condition('filename', '%.test', 'LIKE')
+//        ->execute();
       $classes = simpletest_test_get_all_classes();
 
       $groups = array();
@@ -322,6 +372,7 @@ function simpletest_test_get_all() {
       // Check that each class has a getInfo() method and store the information
       // in an array keyed with the group specified in the test information.
       foreach ($classes as $class) {
+//        $class = $class->name;
         $class = $class['class'];
 
         if (class_exists($class) && method_exists($class, 'getInfo')) {
@@ -356,7 +407,7 @@ function simpletest_test_get_all_classes() {
   $files = module_rebuild_cache();
   foreach ($files as $file) {
     $directory = dirname($file->filename);
-    $test_files = file_scan_directory($directory, '\.test$', array('.', '..', 'CVS', '.svn'), FALSE, FALSE);
+    $test_files = file_scan_directory($directory, '\.test$', array('.', '..', 'CVS'), FALSE, FALSE);
     $test_files += file_scan_directory($directory . '/tests', '\.test$');
 
     foreach ($test_files as $test_file) {
@@ -374,6 +425,28 @@ function simpletest_test_get_all_classes() {
   return $classes;
 }
 
+///**
+// * Implementation of hook_registry_files_alter().
+// *
+// * Add the test files for disabled modules so that we get a list containing
+// * all the avialable tests.
+// */
+//function simpletest_registry_files_alter(&$files, $modules) {
+//  foreach ($modules as $module) {
+//    // Only add test files for disabled modules, as enabled modules should
+//    // already include any test files they provide.
+//    if (!$module->status) {
+//      $dir = $module->dir;
+//      if (!empty($module->info['files'])) {
+//        foreach ($module->info['files'] as $file) {
+//          if (substr($file, -5) == '.test') {
+//            $files["$dir/$file"] = array('module' => $module->name, 'weight' => $module->weight);
+//          }
+//        }
+//      }
+//    }
+//  }
+//}
 
 /**
  * Remove all temporary database tables and directories.
@@ -394,6 +467,7 @@ function simpletest_clean_environment() {
  * Removed prefixed tables from the database that are left over from crashed tests.
  */
 function simpletest_clean_database() {
+//  $tables = db_find_tables(Database::getConnection()->prefixTables('{simpletest}') . '%');
   $tables = simpletest_get_like_tables();
   $schema = drupal_get_schema_unprocessed('simpletest');
   $ret = array();
@@ -440,11 +514,14 @@ function simpletest_get_like_tables($base_table = 'simpletest', $count = FALSE)
  * Find all leftover temporary directories and remove them.
  */
 function simpletest_clean_temporary_directories() {
+//  $files = scandir('public://');
   $files = scandir(file_directory_path());
   $count = 0;
   foreach ($files as $file) {
-    $path = file_directory_path() . $file;
+//    $path = 'public://' . $file;
+    $path = file_directory_path() . '/' . $file;
     if (is_dir($path) && preg_match('/^simpletest\d+/', $file)) {
+//      file_unmanaged_delete_recursive($path);
       simpletest_clean_temporary_directory($path);
       $count++;
     }
@@ -496,14 +573,25 @@ function simpletest_clean_temporary_directory($path) {
 function simpletest_clean_results_table($test_id = NULL) {
   if (variable_get('simpletest_clear_results', TRUE)) {
     if ($test_id) {
+//      $count = db_query('SELECT COUNT(test_id) FROM {simpletest_test_id} WHERE test_id = :test_id', array(':test_id' => $test_id))->fetchField();
       $count = db_result(db_query('SELECT COUNT(test_id) FROM {simpletest_test_id} WHERE test_id = %d', $test_id));
 
+//      db_delete('simpletest')
+//        ->condition('test_id', $test_id)
+//        ->execute();
+//      db_delete('simpletest_test_id')
+//        ->condition('test_id', $test_id)
+//        ->execute();
       db_query("DELETE FROM {simpletest} WHERE test_id = %d", $test_id);
       db_query("DELETE FROM {simpletest_test_id} WHERE test_id = %d", $test_id);
     }
     else {
+//      $count = db_query('SELECT COUNT(test_id) FROM {simpletest_test_id}')->fetchField();
       $count = db_result(db_query('SELECT COUNT(test_id) FROM {simpletest_test_id}'));
 
+      // Clear test results.
+//      db_delete('simpletest')->execute();
+//      db_delete('simpletest_test_id')->execute();
       db_query('DELETE FROM {simpletest}');
       db_query('DELETE FROM {simpletest_test_id}');
     }
diff --git a/modules/simpletest/simpletest.pages.inc b/modules/simpletest/simpletest.pages.inc
index f4221f4..70f6c49 100644
--- a/modules/simpletest/simpletest.pages.inc
+++ b/modules/simpletest/simpletest.pages.inc
@@ -72,7 +72,9 @@ function theme_simpletest_test_table($table) {
   // Create header for test selection table.
   $header = array(
     theme('table_select_header_cell'),
+//     array('data' => t('Test'), 'class' => array('simpletest_test')),
     array('data' => t('Test'), 'class' => 'simpletest_test'),
+//     array('data' => t('Description'), 'class' => array('simpletest_description')),
     array('data' => t('Description'), 'class' => 'simpletest_description'),
   );
 
@@ -100,6 +102,7 @@ function theme_simpletest_test_table($table) {
     $image_index = $collapsed ? 0 : 1;
 
     // Place-holder for checkboxes to select group of tests.
+//     $row[] = array('id' => $test_class, 'class' => array('simpletest-select-all'));
     $row[] = array('id' => $test_class, 'class' => 'simpletest-select-all');
 
     // Expand/collapse image and group title.
@@ -111,6 +114,7 @@ function theme_simpletest_test_table($table) {
 
     $row[] = '&nbsp;';
 
+//    $rows[] = array('data' => $row, 'class' => array('simpletest-group'));
     $rows[] = array('data' => $row, 'class' => 'simpletest-group');
 
     // Add individual tests to group.
@@ -145,6 +149,7 @@ function theme_simpletest_test_table($table) {
       $row[] = theme('indentation', 1) . '<label for="edit-' . $test_name . '">' . $title . '</label>';
       $row[] = '<div class="description">' . $description . '</div>';
 
+//      $rows[] = array('data' => $row, 'class' => array($test_class . '-test', ($collapsed ? 'js-hide' : '')));
       $rows[] = array('data' => $row, 'class' => $test_class . '-test ' . ($collapsed ? 'js-hide' : ''));
     }
     $js['simpletest-test-group-' . $test_class] = $current_js;
@@ -209,6 +214,7 @@ function simpletest_result_form(&$form_state, $test_id) {
   $results = array();
   if (is_numeric($test_id) && !$results = simpletest_result_get($test_id)) {
     drupal_set_message(t('No test results to display.'), 'error');
+//    drupal_goto('admin/config/development/testing');
     drupal_goto('admin/build/testing');
     return $form;
   }
@@ -236,6 +242,7 @@ function simpletest_result_form(&$form_state, $test_id) {
   );
 
   // Cycle through each test group.
+//  $header = array(t('Message'), t('Group'), t('Filename'), t('Line'), t('Function'), array('colspan' => 2, 'data' => t('Status')));
   $header = array(t('Message'), t('Group'), t('Filename'), t('Line'), t('Function'), t('Status'));
   $form['result']['results'] = array();
   $classes = simpletest_test_get_all_classes(); // Drupal 6.
@@ -268,11 +275,17 @@ function simpletest_result_form(&$form_state, $test_id) {
       if ($assertion->message_group == 'Debug') {
         $class = 'simpletest-debug';
       }
+//      $rows[] = array('data' => $row, 'class' => array($class));
       $rows[] = array('data' => $row, 'class' => $class);
 
       $group_summary['#' . $assertion->status]++;
       $form['result']['summary']['#' . $assertion->status]++;
     }
+//    $form['result']['results'][$group]['table'] = array(
+//      '#theme' => 'table',
+//      '#header' => $header,
+//      '#rows' => $rows,
+//    );
     $form['result']['results'][$group]['table'] = array(
       '#type' => 'markup',
       '#value' => theme('table', $header, $rows),
@@ -290,10 +303,12 @@ function simpletest_result_form(&$form_state, $test_id) {
   $form['result']['summary']['#ok'] = $form['result']['summary']['#fail'] + $form['result']['summary']['#exception'] == 0;
 
   // Actions.
+//  $form['#action'] = url('admin/config/development/testing/results/re-run');
   $form['#action'] = url('admin/build/testing/results/re-run');
   $form['action'] = array(
     '#type' => 'fieldset',
     '#title' => t('Actions'),
+//    '#attributes' => array('class' => array('container-inline')),
     '#attributes' => array('class' => 'container-inline'),
     '#weight' => -11,
   );
@@ -325,6 +340,7 @@ function simpletest_result_form(&$form_state, $test_id) {
   );
 
   $form['action']['return'] = array(
+//    '#markup' => l(t('Return to list'), 'admin/config/development/testing'),
     '#type' => 'markup',
     '#value' => l(t('Return to list'), 'admin/build/testing'),
   );
@@ -382,12 +398,19 @@ function theme_simpletest_result_summary($form) {
  * @return Array of results grouped by test_class.
  */
 function simpletest_result_get($test_id) {
+//  $results = db_select('simpletest')
+//    ->fields('simpletest')
+//    ->condition('test_id', $test_id)
+//    ->orderBy('test_class')
+//    ->orderBy('message_id')
+//    ->execute();
   $results = db_query('SELECT *
                        FROM {simpletest}
                        WHERE test_id = %d
                        ORDER BY test_class, message_id', $test_id);
 
   $test_results = array();
+//  foreach ($results as $result) {
   while ($result = db_fetch_object($results)) {
     if (!isset($test_results[$result->test_class])) {
       $test_results[$result->test_class] = array();
diff --git a/modules/simpletest/simpletest.test b/modules/simpletest/simpletest.test
index 8091351..b40c3c6 100644
--- a/modules/simpletest/simpletest.test
+++ b/modules/simpletest/simpletest.test
@@ -1,5 +1,5 @@
 <?php
-// $Id: simpletest.test,v 1.1.2.16 2009/09/14 23:22:56 boombatower Exp $
+// $Id: simpletest.test,v 1.1.2.17 2009/11/06 21:23:32 boombatower Exp $
 // Core: Id: simpletest.test,v 1.31 2009/09/01 17:40:27 webchick Exp
 
 /**
@@ -53,6 +53,7 @@ class SimpleTestFunctionalTest extends DrupalWebTestCase {
     if (!$this->inCURL()) {
       $this->drupalGet('node');
       $this->assertTrue($this->drupalGetHeader('Date'), t('An HTTP header was received.'));
+//      $this->assertTitle(t('Welcome to @site-name | @site-name', array('@site-name' => variable_get('site_name', 'Drupal'))), t('Site title matches.'));
       $this->assertTitle(variable_get('site_name', 'Pressflow'), t('Site title matches.'));
       $this->assertNoTitle('Foo', t('Site title does not match.'));
       // Make sure that we are locked out of the installer when prefixing
@@ -92,6 +93,7 @@ class SimpleTestFunctionalTest extends DrupalWebTestCase {
       // Run twice so test_ids can be accumulated.
       for ($i = 0; $i < 2; $i++) {
         // Run this test from web interface.
+//        $this->drupalGet('admin/config/development/testing');
         $this->drupalGet('admin/build/testing');
 
         $edit = array();
@@ -163,6 +165,7 @@ class SimpleTestFunctionalTest extends DrupalWebTestCase {
 
     $this->assertAssertion("Debug: 'Foo'", 'Debug', 'Fail', 'simpletest.test', 'SimpleTestFunctionalTest->stubTest()');
 
+//    $this->assertEqual('6 passes, 2 fails, 2 exceptions, and 1 debug message', $this->childTestResults['summary'], 'Stub test summary is correct');
     $this->assertEqual('8 passes, 2 fails, 2 exceptions, and 1 debug message', $this->childTestResults['summary'], 'Stub test summary is correct');
 
     $this->test_ids[] = $test_id = $this->getTestIdFromResults();
@@ -228,6 +231,7 @@ class SimpleTestFunctionalTest extends DrupalWebTestCase {
           $assertion['file'] = $this->asText($row->td[2]);
           $assertion['line'] = $this->asText($row->td[3]);
           $assertion['function'] = $this->asText($row->td[4]);
+//          $ok_url = file_create_url('misc/watchdog-ok.png');
           $ok_url = '/misc/watchdog-ok.png';
           $assertion['status'] = ($row->td[5]->img['src'] == $ok_url) ? 'Pass' : 'Fail';
           $results['assertions'][] = $assertion;
@@ -310,6 +314,7 @@ class SimpleTestMailCaptureTestCase extends DrupalWebTestCase {
     $this->assertEqual(count($captured_emails), 0, t('The captured e-mails queue is empty.'), t('E-mail'));
 
     // Send the e-mail.
+//    $response = drupal_mail_sending_system('simpletest', 'drupal_mail_test')->mail($message);
     $response = drupal_mail('simpletest', 'drupal_mail_test', $message['to'], language_default(), $message, NULL, TRUE);
 
     // Ensure that there is one e-mail in the captured e-mails array.
@@ -331,6 +336,7 @@ class SimpleTestMailCaptureTestCase extends DrupalWebTestCase {
         'to' => $this->randomName(32) . '@example.com',
         'body' => $this->randomString(512),
       );
+//      drupal_mail_sending_system('drupal_mail_test', $index)->mail($message);
       $response = drupal_mail('simpletest', 'drupal_mail_test', $message['to'], language_default(), $message, NULL, TRUE);
     }
 
@@ -348,25 +354,10 @@ class SimpleTestMailCaptureTestCase extends DrupalWebTestCase {
 
     // Send the last e-mail again, so we can confirm that the drupalGetMails-filter
     // correctly returns all e-mails with a given property/value.
+//    drupal_mail_sending_system('drupal_mail_test', $index)->mail($message);
     $response = drupal_mail('simpletest', $index, $message['to'], language_default(), $message, NULL, TRUE);
     $captured_emails = $this->drupalGetMails(array('id' => 'drupal_mail_test_4'));
     $this->assertEqual(count($captured_emails), 2, t('All e-mails with the same id are returned when filtering by id.'), t('E-mail'));
   }
 }
 
-/**
- * Capture e-mail message during testing.
- *
- * Code copied from TestingMailSystem in mail.sending.inc (Drupal 7). Placed in
- * this file to ensure no loaded until in testing mode, to ensure no conflicts
- * with other implementations like devel.
- *
- * @param $message
- *   An e-mail message.
- */
-function drupal_mail_wrapper(array $message) {
-  $captured_emails = variable_get('drupal_test_email_collector', array());
-  $captured_emails[] = $message;
-  variable_set('drupal_test_email_collector', $captured_emails);
-  return TRUE;
-}
diff --git a/modules/statistics/statistics.admin.inc b/modules/statistics/statistics.admin.inc
index 80eb249..bfe9b3c 100644
--- a/modules/statistics/statistics.admin.inc
+++ b/modules/statistics/statistics.admin.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: statistics.admin.inc,v 1.6 2008/01/08 10:35:42 goba Exp $
+// $Id: statistics.admin.inc,v 1.6.2.2 2010/06/02 12:14:48 goba Exp $
 
 /**
  * @file
@@ -83,7 +83,7 @@ function statistics_top_visitors() {
   );
 
   $sql = "SELECT COUNT(a.uid) AS hits, a.uid, u.name, a.hostname, SUM(a.timer) AS total, ac.aid FROM {accesslog} a LEFT JOIN {access} ac ON ac.type = 'host' AND a.hostname LIKE (ac.mask) LEFT JOIN {users} u ON a.uid = u.uid GROUP BY a.hostname, a.uid, u.name, ac.aid". tablesort_sql($header);
-  $sql_cnt = "SELECT COUNT(DISTINCT(CONCAT(uid, hostname))) FROM {accesslog}";
+  $sql_cnt = "SELECT COUNT(*) FROM (SELECT DISTINCT uid, hostname FROM {accesslog}) AS unique_visits";
   $result = pager_query($sql, 30, 0, $sql_cnt);
 
   $rows = array();
@@ -192,7 +192,7 @@ function statistics_access_logging_settings() {
     '#default_value' => variable_get('statistics_enable_access_log', 0),
     '#options' => $options,
     '#description' => t('Log each page access. Required for referrer statistics.'));
-  $period = drupal_map_assoc(array(3600, 10800, 21600, 32400, 43200, 86400, 172800, 259200, 604800, 1209600, 2419200, 4838400, 9676800), 'format_interval');
+  $period = array('0' => t('Never')) + drupal_map_assoc(array(3600, 10800, 21600, 32400, 43200, 86400, 172800, 259200, 604800, 1209600, 2419200, 4838400, 9676800), 'format_interval');
   $form['access']['statistics_flush_accesslog_timer'] = array(
     '#type' => 'select',
     '#title' => t('Discard access logs older than'),
diff --git a/modules/statistics/statistics.info b/modules/statistics/statistics.info
index 4d60d6f..83c76c7 100644
--- a/modules/statistics/statistics.info
+++ b/modules/statistics/statistics.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/statistics/statistics.module b/modules/statistics/statistics.module
index fa5fce1..30561b2 100644
--- a/modules/statistics/statistics.module
+++ b/modules/statistics/statistics.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: statistics.module,v 1.272.2.1 2009/04/27 12:25:24 goba Exp $
+// $Id: statistics.module,v 1.272.2.2 2010/06/02 12:14:48 goba Exp $
 
 /**
  * @file
@@ -186,7 +186,9 @@ function statistics_cron() {
   }
 
   // Clean up expired access logs.
-  db_query('DELETE FROM {accesslog} WHERE timestamp < %d', time() - variable_get('statistics_flush_accesslog_timer', 259200));
+  if (variable_get('statistics_flush_accesslog_timer', 259200) > 0) {
+    db_query('DELETE FROM {accesslog} WHERE timestamp < %d', time() - variable_get('statistics_flush_accesslog_timer', 259200));
+  }
 }
 
 /**
diff --git a/modules/syslog/syslog.info b/modules/syslog/syslog.info
index 8fea2f1..cfff51a 100644
--- a/modules/syslog/syslog.info
+++ b/modules/syslog/syslog.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/system/system.info b/modules/system/system.info
index e750de2..4020e79 100644
--- a/modules/system/system.info
+++ b/modules/system/system.info
@@ -5,8 +5,8 @@ package = Core - required
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/system/system.install b/modules/system/system.install
index fa2ef8b..316f876 100644
--- a/modules/system/system.install
+++ b/modules/system/system.install
@@ -1,5 +1,5 @@
 <?php
-// $Id: system.install,v 1.238.2.22 2010/03/01 16:53:57 goba Exp $
+// $Id: system.install,v 1.238.2.23 2010/05/28 11:51:20 goba Exp $
 
 /**
  * Test and report Drupal installation requirements.
@@ -146,14 +146,24 @@ function system_requirements($phase) {
     if (time() - $cron_last > $threshold_error) {
       $severity = REQUIREMENT_ERROR;
     }
-    else if ($never_run || (time() - $cron_last > $threshold_warning)) {
+    else if ($never_run) {
+      // In "smart start" mode, suppress a warning if we're
+      // within the normal cron threshold from installation.
+      if (variable_get('pressflow_smart_start', FALSE)) {
+        $severity = REQUIREMENT_OK;
+      }
+      else {
+        $severity = REQUIREMENT_WARNING;
+      }
+    }
+    else if (time() - $cron_last > $threshold_warning) {
       $severity = REQUIREMENT_WARNING;
     }
 
     // If cron hasn't been run, and the user is viewing the main
     // administration page, instead of an error, we display a helpful reminder
     // to configure cron jobs.
-    if ($never_run && $severity != REQUIREMENT_ERROR && $_GET['q'] == 'admin' && user_access('administer site configuration')) {
+    if ($never_run && $severity != REQUIREMENT_ERROR && $_GET['q'] == 'admin' && user_access('administer site configuration') && !variable_get('pressflow_smart_start', FALSE)) {
       drupal_set_message($t('Cron has not run. Please visit the <a href="@status">status report</a> for more information.', array('@status' => url('admin/reports/status'))));
     }
 
@@ -371,24 +381,42 @@ function system_install() {
   // anonymous user. uid is 1 here for now, but very soon it will be changed
   // to 0.
   db_query("INSERT INTO {users} (uid, name, mail) VALUES(%d, '%s', '%s')", 1, '', '');
+
   // We need some placeholders here as name and mail are uniques and data is
   // presumed to be a serialized array. Install will change uid 1 immediately
   // anyways. So we insert the superuser here, the uid is 2 here for now, but
   // very soon it will be changed to 1.
   db_query("INSERT INTO {users} (uid, name, mail, created, data) VALUES(%d, '%s', '%s', %d, '%s')", 2, 'placeholder-for-uid-1', 'placeholder-for-uid-1', time(), serialize(array()));
+
   // This sets the above two users uid 0 (anonymous). We avoid an explicit 0
   // otherwise MySQL might insert the next auto_increment value.
   db_query("UPDATE {users} SET uid = uid - uid WHERE name = '%s'", '');
+
   // This sets uid 1 (superuser). We skip uid 2 but that's not a big problem.
   db_query("UPDATE {users} SET uid = 1 WHERE name = '%s'", 'placeholder-for-uid-1');
 
-  db_query("INSERT INTO {role} (rid,name) VALUES (" . DRUPAL_ANONYMOUS_RID . ",'anonymous user')");
-  db_query("INSERT INTO {role} (rid,name) VALUES (" . DRUPAL_AUTHENTICATED_RID . ",'authenticated user')");
+  db_query("INSERT INTO {role} (name) VALUES ('%s')", 'anonymous user');
+  $rid_anonymous = db_last_insert_id('role', 'rid');
+
+  db_query("INSERT INTO {role} (name) VALUES ('%s')", 'authenticated user');
+  $rid_authenticated = db_last_insert_id('role', 'rid');
+
+  // Sanity check to ensure the anonymous and authenticated role IDs are the 
+  // same as the drupal defined constants. In certain situations, this will 
+  // not be true
+  if ($rid_anonymous != DRUPAL_ANONYMOUS_RID) {
+    db_query("UPDATE {role} SET rid = %d WHERE rid = %d", DRUPAL_ANONYMOUS_RID, $rid_anonymous);
+  }
+
+  if ($rid_authenticated != DRUPAL_AUTHENTICATED_RID) {
+    db_query("UPDATE {role} SET rid = %d WHERE rid = %d", DRUPAL_AUTHENTICATED_RID, $rid_authenticated);
+  }
 
   db_query("INSERT INTO {permission} (rid, perm, tid) VALUES (%d, '%s', %d)", DRUPAL_ANONYMOUS_RID, 'access content', 0);
   db_query("INSERT INTO {permission} (rid, perm, tid) VALUES (%d, '%s', %d)", DRUPAL_AUTHENTICATED_RID, 'access comments, access content, post comments, post comments without approval', 0);
 
   db_query("INSERT INTO {variable} (name, value) VALUES ('%s', '%s')", 'theme_default', 's:7:"garland";');
+
   db_query("UPDATE {system} SET status = %d WHERE type = '%s' AND name = '%s'", 1, 'theme', 'garland');
   db_query("INSERT INTO {blocks} (module, delta, theme, status, weight, region, pages, cache) VALUES ('%s', '%s', '%s', %d, %d, '%s', '%s', %d)", 'user', '0', 'garland', 1, 0, 'left', '', -1);
   db_query("INSERT INTO {blocks} (module, delta, theme, status, weight, region, pages, cache) VALUES ('%s', '%s', '%s', %d, %d, '%s', '%s', %d)", 'user', '1', 'garland', 1, 0, 'left', '', -1);
@@ -397,31 +425,32 @@ function system_install() {
   db_query("INSERT INTO {node_access} (nid, gid, realm, grant_view, grant_update, grant_delete) VALUES (%d, %d, '%s', %d, %d, %d)", 0, 0, 'all', 1, 0, 0);
 
   // Add input formats.
-  db_query("INSERT INTO {filter_formats} (format, name, roles, cache) VALUES (%d, '%s', '%s', %d)", 1, 'Filtered HTML', ',1,2,', 1);
-  db_query("INSERT INTO {filter_formats} (format, name, roles, cache) VALUES (%d, '%s', '%s', %d)", 2, 'Full HTML', '', 1);
+  db_query("INSERT INTO {filter_formats} (name, roles, cache) VALUES ('%s', '%s', %d)", 'Filtered HTML', ',' . DRUPAL_ANONYMOUS_RID . ',' . DRUPAL_AUTHENTICATED_RID . ',', 1);
+  $filtered_html_format = db_last_insert_id('filter_formats', 'format');
+  db_query("INSERT INTO {filter_formats} (name, roles, cache) VALUES ('%s', '%s', %d)", 'Full HTML', '', 1);
+  $full_html_format = db_last_insert_id('filter_formats', 'format');
 
   // Enable filters for each input format.
 
   // Filtered HTML:
   // URL filter.
-  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES (%d, %d, '%s', %d, %d)", 1,  1, 'filter', 2, 0);
+  db_query("INSERT INTO {filters} (format, module, delta, weight) VALUES (%d, '%s', %d, %d)", $filtered_html_format, 'filter', 2, 0);
   // HTML filter.
-  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES (%d, %d, '%s', %d, %d)", 2, 1, 'filter', 0, 1);
+  db_query("INSERT INTO {filters} (format, module, delta, weight) VALUES (%d, '%s', %d, %d)", $filtered_html_format, 'filter', 0, 1);
   // Line break filter.
-  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES (%d, %d, '%s', %d, %d)", 3, 1, 'filter', 1, 2);
+  db_query("INSERT INTO {filters} (format, module, delta, weight) VALUES (%d, '%s', %d, %d)", $filtered_html_format, 'filter', 1, 2);
   // HTML corrector filter.
-  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES (%d, %d, '%s', %d, %d)", 4, 1, 'filter', 3, 10);
+  db_query("INSERT INTO {filters} (format, module, delta, weight) VALUES (%d, '%s', %d, %d)", $filtered_html_format, 'filter', 3, 10);
 
   // Full HTML:
   // URL filter.
-  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES (%d, %d, '%s', %d, %d)", 5, 2, 'filter', 2, 0);
+  db_query("INSERT INTO {filters} (format, module, delta, weight) VALUES (%d, '%s', %d, %d)", $full_html_format, 'filter', 2, 0);
   // Line break filter.
-  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES (%d, %d, '%s', %d, %d)", 6, 2, 'filter', 1, 1);
+  db_query("INSERT INTO {filters} (format, module, delta, weight) VALUES (%d, '%s', %d, %d)", $full_html_format, 'filter', 1, 1);
   // HTML corrector filter.
-  db_query("INSERT INTO {filters} (fid, format, module, delta, weight) VALUES (%d, %d, '%s', %d, %d)", 7, 2, 'filter', 3, 10);
+  db_query("INSERT INTO {filters} (format, module, delta, weight) VALUES (%d, '%s', %d, %d)", $full_html_format, 'filter', 3, 10);
 
   db_query("INSERT INTO {variable} (name, value) VALUES ('%s','%s')", 'filter_html_1', 'i:1;');
-
   db_query("INSERT INTO {variable} (name, value) VALUES ('%s', '%s')", 'node_options_forum', 'a:1:{i:0;s:6:"status";}');
 }
 
diff --git a/modules/system/system.module b/modules/system/system.module
index d56e732..0819d31 100644
--- a/modules/system/system.module
+++ b/modules/system/system.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: system.module,v 1.585.2.49 2010/03/04 00:15:28 goba Exp $
+// $Id: system.module,v 1.585.2.52 2010/06/02 18:52:32 goba Exp $
 
 /**
  * @file
@@ -9,7 +9,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '6.16');
+define('VERSION', '6.17');
 
 /**
  * Core API compatibility.
@@ -1148,36 +1148,46 @@ function system_node_type($op, $info) {
 }
 
 /**
- * Output a confirmation form
+ * Generates a form array for a confirmation form.
  *
- * This function returns a complete form for confirming an action. A link is
- * offered to go back to the item that is being changed in case the user changes
- * his/her mind.
+ * This function returns a complete form array for confirming an action. The
+ * form contains a confirm button as well as a cancellation link that allows a
+ * user to abort the action.
  *
- * If the submit handler for this form is invoked, the user successfully
- * confirmed the action. You should never directly inspect $_POST to see if an
- * action was confirmed.
+ * If the submit handler for a form that implements confirm_form() is invoked,
+ * the user successfully confirmed the action. You should never directly
+ * inspect $_POST to see if an action was confirmed.
+ *
+ * Note - if the parameters $question, $description, $yes, or $no could contain
+ * any user input (such as node titles or taxonomy terms), it is the
+ * responsibility of the code calling confirm_form() to sanitize them first with
+ * a function like check_plain() or filter_xss().
  *
- * @ingroup forms
  * @param $form
- *   Additional elements to inject into the form, for example hidden elements.
+ *   Additional elements to add to the form; for example, hidden elements.
  * @param $question
  *   The question to ask the user (e.g. "Are you sure you want to delete the
- *   block <em>foo</em>?").
+ *   block <em>foo</em>?"). The page title will be set to this value.
  * @param $path
- *   The page to go to if the user denies the action.
- *   Can be either a drupal path, or an array with the keys 'path', 'query', 'fragment'.
+ *   The page to go to if the user cancels the action. This can be either:
+ *   - A string containing a Drupal path.
+ *   - An associative array with a 'path' key. Additional array values are
+ *     passed as the $options parameter to l().
+ *   If the 'destination' query parameter is set in the URL when viewing a
+ *   confirmation form, that value will be used instead of $path.
  * @param $description
- *   Additional text to display (defaults to "This action cannot be undone.").
+ *   Additional text to display. Defaults to t('This action cannot be undone.').
  * @param $yes
- *   A caption for the button which confirms the action (e.g. "Delete",
- *   "Replace", ...).
+ *   A caption for the button that confirms the action (e.g. "Delete",
+ *   "Replace", ...). Defaults to t('Confirm').
  * @param $no
- *   A caption for the link which denies the action (e.g. "Cancel").
+ *   A caption for the link which cancels the action (e.g. "Cancel"). Defaults
+ *   to t('Cancel').
  * @param $name
  *   The internal name used to refer to the confirmation item.
+ *
  * @return
- *   The form.
+ *   The form array.
  */
 function confirm_form($form, $question, $path, $description = NULL, $yes = NULL, $no = NULL, $name = 'confirm') {
   $description = isset($description) ? $description : t('This action cannot be undone.');
diff --git a/modules/system/tests/database.test b/modules/system/tests/database.test
deleted file mode 100644
index 124ff38..0000000
--- a/modules/system/tests/database.test
+++ /dev/null
@@ -1,83 +0,0 @@
-<?php
-// $Id$
-
-/**
- * @file
- * Tests for testing the database abstraction layer in Drupal 6.
- */
-
-class DatabaseTestCase extends DrupalWebTestCase {
-  /**
-   * Implementation of getInfo().
-   */
-  public static function getInfo() {
-    return array(
-      'name' => t('Database functionality'),
-      'description' => t('Exercise the database helper functions, this not not test the database but the functions that abstract the database.'),
-      'group' => t('Database'),
-    );
-  }
-
-
-  /**
-   * Test the db_distinct_field() function.
-   *
-   * See http://drupal.org/node/284392 for more information
-   */
-  function testBox() {
-
-    // These assertions are taken from:
-    // http://drupal.org/node/284392
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT table.field FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field) FROM table',
-    );
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT table.field AS table_field FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field) AS table_field FROM table',
-    );
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT DISTINCT(table.field) FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field) FROM table',
-    );
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT DISTINCT(table.field) AS table_field FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field) AS table_field FROM table',
-    );
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT table.field,table.field2 FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field),table.field2 FROM table',
-    );
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT table.field AS table_field, table.field2 AS table_field2 FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field) AS table_field, table.field2 AS table_field2 FROM table',
-    );
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT DISTINCT(table.field),table.field2 FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field),table.field2 FROM table',
-    );
-
-    $assertions[] = array(
-      'input' => array("table", "field", "SELECT DISTINCT(table.field) AS table_field, table.field2 AS table_field2 FROM table"),
-      'expected' => 'SELECT DISTINCT(table.field) AS table_field, table.field2 AS table_field2 FROM table',
-    );
-
-    foreach ($assertions as $assert) {
-      $distinct_added = call_user_func_array('db_distinct_field', $assert['input']);
-      if (!$this->assertEqual(
-        $distinct_added,
-        $assert['expected'],
-        t('Add DISTINCT to %query', array('%query' => $assert['input'][2]))
-      )) {
-        $this->pass(t('Query was rewritten to: %query, expected query: %expected_query', array('%query' => $distinct_added, '%expected_query' => $assert['expected'])));
-      }
-    }
-  }
-}
diff --git a/modules/taxonomy/taxonomy.admin.inc b/modules/taxonomy/taxonomy.admin.inc
index fa688f8..2fa542b 100644
--- a/modules/taxonomy/taxonomy.admin.inc
+++ b/modules/taxonomy/taxonomy.admin.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: taxonomy.admin.inc,v 1.22.2.3 2009/02/25 12:53:24 goba Exp $
+// $Id: taxonomy.admin.inc,v 1.22.2.4 2010/05/28 16:16:45 goba Exp $
 
 /**
  * @file
@@ -919,7 +919,7 @@ function taxonomy_vocabulary_confirm_reset_alphabetical(&$form_state, $vid) {
  * @see taxonomy_vocabulary_confirm_reset_alphabetical()
  */
 function taxonomy_vocabulary_confirm_reset_alphabetical_submit($form, &$form_state) {
-  db_query('UPDATE {term_data} t SET weight = 0 WHERE vid = %d', $form_state['values']['vid']);
+  db_query('UPDATE {term_data} SET weight = 0 WHERE vid = %d', $form_state['values']['vid']);
   drupal_set_message(t('Reset vocabulary %name to alphabetical order.', array('%name' => $form_state['values']['name'])));
   watchdog('taxonomy', 'Reset vocabulary %name to alphabetical order.', array('%name' => $form_state['values']['name']), WATCHDOG_NOTICE);
   $form_state['redirect'] = 'admin/content/taxonomy/'. $form_state['values']['vid'];
diff --git a/modules/taxonomy/taxonomy.info b/modules/taxonomy/taxonomy.info
index e32d534..1926d86 100644
--- a/modules/taxonomy/taxonomy.info
+++ b/modules/taxonomy/taxonomy.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/taxonomy/taxonomy.module b/modules/taxonomy/taxonomy.module
index 70f4c3b..6a03894 100644
--- a/modules/taxonomy/taxonomy.module
+++ b/modules/taxonomy/taxonomy.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: taxonomy.module,v 1.414.2.13 2010/03/01 10:08:21 goba Exp $
+// $Id: taxonomy.module,v 1.414.2.14 2010/05/11 10:19:04 goba Exp $
 
 /**
  * @file
@@ -14,7 +14,7 @@ function taxonomy_perm() {
 }
 
 /**
- * Implementation of hook_theme()
+ * Implementation of hook_theme().
  */
 function taxonomy_theme() {
   return array(
@@ -412,6 +412,21 @@ function taxonomy_del_term($tid) {
 
 /**
  * Generate a form element for selecting terms from a vocabulary.
+ *
+ * @param $vid
+ *   The vocabulary ID to generate a form element for.
+ * @param $value
+ *   The existing value of the term(s) in this vocabulary to use by default.
+ * @param $help
+ *   Optional help text to use for the form element. If specified, this value
+ *   MUST be properly sanitized and filtered (e.g. with filter_xss_admin() or
+ *   check_plain() if it is user-supplied) to prevent XSS vulnerabilities. If
+ *   omitted, the help text stored with the vocaulary (if any) will be used.
+ * @return
+ *   An array describing a form element to select terms for a vocabulary.
+ *
+ * @see _taxonomy_term_select()
+ * @see filter_xss_admin()
  */
 function taxonomy_form($vid, $value = 0, $help = NULL, $name = 'taxonomy') {
   $vocabulary = taxonomy_vocabulary_load($vid);
diff --git a/modules/throttle/throttle.info b/modules/throttle/throttle.info
index 72dd4b8..23018be 100644
--- a/modules/throttle/throttle.info
+++ b/modules/throttle/throttle.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/tracker/tracker.info b/modules/tracker/tracker.info
index 73b0df9..6bb73e0 100644
--- a/modules/tracker/tracker.info
+++ b/modules/tracker/tracker.info
@@ -6,8 +6,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/translation/translation.info b/modules/translation/translation.info
index debb27c..f460c3f 100644
--- a/modules/translation/translation.info
+++ b/modules/translation/translation.info
@@ -6,8 +6,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/trigger/trigger.info b/modules/trigger/trigger.info
index e04c6dd..6e14032 100644
--- a/modules/trigger/trigger.info
+++ b/modules/trigger/trigger.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/update/update.compare.inc b/modules/update/update.compare.inc
index 1437bce..9a20b29 100644
--- a/modules/update/update.compare.inc
+++ b/modules/update/update.compare.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: update.compare.inc,v 1.8.2.8 2010/03/01 09:40:45 goba Exp $
+// $Id: update.compare.inc,v 1.8.2.9 2010/03/05 09:10:49 goba Exp $
 
 /**
  * @file
@@ -690,7 +690,13 @@ function update_filter_project_info($info) {
     'package',
     'project',
     'project status url',
-    'version', 
+    'version',
   );
-  return array_intersect_key($info, drupal_map_assoc($whitelist));
+  $whitelist = array_flip($whitelist);
+  foreach ($info as $key => $value) {
+    if (!isset($whitelist[$key])) {
+      unset($info[$key]);
+    }
+  }
+  return $info;
 }
diff --git a/modules/update/update.info b/modules/update/update.info
index cec15af..9d13744 100644
--- a/modules/update/update.info
+++ b/modules/update/update.info
@@ -5,8 +5,8 @@ version = VERSION
 package = Core - optional
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/update/update.install b/modules/update/update.install
index c19d416..734fcbb 100644
--- a/modules/update/update.install
+++ b/modules/update/update.install
@@ -1,5 +1,5 @@
 <?php
-// $Id: update.install,v 1.4.2.2 2009/01/06 15:46:38 goba Exp $
+// $Id: update.install,v 1.4.2.3 2010/05/19 15:03:58 goba Exp $
 
 /**
  * Implementation of hook_install().
@@ -28,7 +28,6 @@ function update_uninstall() {
   foreach ($variables as $variable) {
     variable_del($variable);
   }
-  menu_rebuild();
 }
 
 /**
diff --git a/modules/upload/upload.info b/modules/upload/upload.info
index 96c68cc..114723e 100644
--- a/modules/upload/upload.info
+++ b/modules/upload/upload.info
@@ -5,8 +5,8 @@ package = Core - optional
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/upload/upload.module b/modules/upload/upload.module
index 3f9d92f..15380e2 100644
--- a/modules/upload/upload.module
+++ b/modules/upload/upload.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: upload.module,v 1.197.2.5 2009/09/16 17:54:19 goba Exp $
+// $Id: upload.module,v 1.197.2.6 2010/05/19 14:43:56 goba Exp $
 
 /**
  * @file
@@ -189,6 +189,9 @@ function upload_node_form_submit(&$form, &$form_state) {
 
   if (isset($form_state['values']['files'])) {
     foreach ($form_state['values']['files'] as $fid => $file) {
+      // If the node was previewed prior to saving, $form['#node']->files[$fid]
+      // is an array instead of an object. Convert file to object for compatibility. 
+      $form['#node']->files[$fid] = (object) $form['#node']->files[$fid];
       $form_state['values']['files'][$fid]['new'] = !empty($form['#node']->files[$fid]->new);
     }
   }
diff --git a/modules/user/user.info b/modules/user/user.info
index 79f85fa..7b69703 100644
--- a/modules/user/user.info
+++ b/modules/user/user.info
@@ -5,8 +5,8 @@ package = Core - required
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/modules/user/user.module b/modules/user/user.module
index d3d55a7..11fc9a3 100644
--- a/modules/user/user.module
+++ b/modules/user/user.module
@@ -1,5 +1,5 @@
 <?php
-// $Id: user.module,v 1.892.2.20 2010/03/01 11:42:50 goba Exp $
+// $Id: user.module,v 1.892.2.25 2010/06/02 12:47:58 goba Exp $
 
 /**
  * @file
@@ -378,11 +378,21 @@ function user_save($account, $array = array(), $category = 'account') {
  * Verify the syntax of the given name.
  */
 function user_validate_name($name) {
-  if (!strlen($name)) return t('You must enter a username.');
-  if (substr($name, 0, 1) == ' ') return t('The username cannot begin with a space.');
-  if (substr($name, -1) == ' ') return t('The username cannot end with a space.');
-  if (strpos($name, '  ') !== FALSE) return t('The username cannot contain multiple spaces in a row.');
-  if (ereg("[^\x80-\xF7 [:alnum:]@_.-]", $name)) return t('The username contains an illegal character.');
+  if (!strlen($name)) {
+    return t('You must enter a username.');
+  }
+  if (substr($name, 0, 1) == ' ') {
+    return t('The username cannot begin with a space.');
+  }
+  if (substr($name, -1) == ' ') {
+    return t('The username cannot end with a space.');
+  }
+  if (strpos($name, '  ') !== FALSE) {
+    return t('The username cannot contain multiple spaces in a row.');
+  }
+  if (preg_match('/[^\x{80}-\x{F7} a-z0-9@_.\'-]/i', $name)) {
+    return t('The username contains an illegal character.');
+  }
   if (preg_match('/[\x{80}-\x{A0}'.          // Non-printable ISO-8859-1 + NBSP
                    '\x{AD}'.                 // Soft-hyphen
                    '\x{2000}-\x{200F}'.      // Various space characters
@@ -391,12 +401,13 @@ function user_validate_name($name) {
                    '\x{FEFF}'.               // Byte order mark
                    '\x{FF01}-\x{FF60}'.      // Full-width latin
                    '\x{FFF9}-\x{FFFD}'.      // Replacement characters
-                   '\x{0}]/u',               // NULL byte
+                   '\x{0}-\x{1F}]/u',        // NULL byte and control characters
                    $name)) {
     return t('The username contains an illegal character.');
   }
-  if (strpos($name, '@') !== FALSE && !eregi('@([0-9a-z](-?[0-9a-z])*.)+[a-z]{2}([zmuvtg]|fo|me)?$', $name)) return t('The username is not a valid authentication ID.');
-  if (strlen($name) > USERNAME_MAX_LENGTH) return t('The username %name is too long: it must be %max characters or less.', array('%name' => $name, '%max' => USERNAME_MAX_LENGTH));
+  if (drupal_strlen($name) > USERNAME_MAX_LENGTH) {
+    return t('The username %name is too long: it must be %max characters or less.', array('%name' => $name, '%max' => USERNAME_MAX_LENGTH));
+  }
 }
 
 function user_validate_mail($mail) {
@@ -1154,7 +1165,7 @@ function user_category_load($uid, &$map, $index) {
     $accounts[$uid] = user_load($uid);
   }
   $valid = TRUE;
-  if ($account = $accounts[$uid]) {
+  if (($account = $accounts[$uid]) && isset($map[$index + 1]) && $map[$index + 1] == 'edit') {
     // Since the path is like user/%/edit/category_name, the category name will
     // be at a position 2 beyond the index corresponding to the % wildcard.
     $category_index = $index + 2;
@@ -1239,7 +1250,7 @@ function user_set_authmaps($account, $authmaps) {
     if ($value) {
       db_query("UPDATE {authmap} SET authname = '%s' WHERE uid = %d AND module = '%s'", $value, $account->uid, $module[1]);
       if (!db_affected_rows()) {
-        db_query("INSERT INTO {authmap} (authname, uid, module) VALUES ('%s', %d, '%s')", $value, $account->uid, $module[1]);
+        @db_query("INSERT INTO {authmap} (authname, uid, module) VALUES ('%s', %d, '%s')", $value, $account->uid, $module[1]);
       }
     }
     else {
@@ -1335,7 +1346,6 @@ function user_login_final_validate($form, &$form_state) {
   global $user;
   if (!$user->uid) {
     form_set_error('name', t('Sorry, unrecognized username or password. <a href="@password">Have you forgotten your password?</a>', array('@password' => url('user/password'))));
-    watchdog('user', 'Login attempt failed for %user.', array('%user' => $form_state['values']['name']));
   }
 }
 
@@ -1368,6 +1378,9 @@ function user_authenticate($form_values = array()) {
     user_authenticate_finalize($form_values);
     return $user;
   }
+  else {
+    watchdog('user', 'Login attempt failed for %user.', array('%user' => $form_values['name']));
+  }
 }
 
 /**
@@ -1441,6 +1454,16 @@ function user_external_login_register($name, $module) {
   }
 }
 
+/**
+ * Generates a unique URL for a user to login and reset their password.
+ *
+ * @param object $account
+ *   An object containing the user account.
+ *
+ * @return
+ *   A unique URL that provides a one-time log in for the user, from which
+ *   they can change their password.
+ */
 function user_pass_reset_url($account) {
   $timestamp = time();
   return url("user/reset/$account->uid/$timestamp/". user_pass_rehash($account->pass, $timestamp, $account->login), array('absolute' => TRUE));
diff --git a/modules/user/user.pages.inc b/modules/user/user.pages.inc
index 361b9cd..38538b8 100644
--- a/modules/user/user.pages.inc
+++ b/modules/user/user.pages.inc
@@ -1,5 +1,5 @@
 <?php
-// $Id: user.pages.inc,v 1.11.2.2 2009/09/16 17:54:20 goba Exp $
+// $Id: user.pages.inc,v 1.11.2.3 2010/06/02 12:03:07 goba Exp $
 
 /**
  * @file
@@ -44,11 +44,6 @@ function user_pass() {
 function user_pass_validate($form, &$form_state) {
   $name = trim($form_state['values']['name']);
   
-  // Blocked accounts cannot request a new password,
-  // check provided username and email against access rules.
-  if (drupal_is_denied('user', $name) || drupal_is_denied('mail', $name)) {
-    form_set_error('name', t('%name is not allowed to request a new password.', array('%name' => $name)));
-  }
 
   // Try to load by email.
   $account = user_load(array('mail' => $name, 'status' => 1));
@@ -56,6 +51,13 @@ function user_pass_validate($form, &$form_state) {
     // No success, try to load by name.
     $account = user_load(array('name' => $name, 'status' => 1));
   }
+  if ($account) {
+    // Blocked accounts cannot request a new password,
+    // check provided username and email against access rules.
+    if (drupal_is_denied('user', $account->name) || drupal_is_denied('mail', $account->mail)) {
+      form_set_error('name', t('%name is not allowed to request a new password.', array('%name' => $name)));
+    }
+  }
   if (isset($account->uid)) {
     form_set_value(array('#parents' => array('account')), $account, $form_state);
   }
@@ -151,7 +153,7 @@ function user_logout() {
   user_module_invoke('logout', $null, $user);
 
   // Destroy the current session, and reset $user to the anonymous user.
-  session_destroy();
+  drupal_session_destroy();
 
   // Load the anonymous user
   $user = drupal_anonymous_user();
diff --git a/sites/default/default.settings.php b/sites/default/default.settings.php
index 91e3119..123ebf8 100644
--- a/sites/default/default.settings.php
+++ b/sites/default/default.settings.php
@@ -238,6 +238,19 @@ ini_set('url_rewriter.tags',        '');
 #   '@count min' => '@count minutes',
 # );
 
+/**
+ * Smart start:
+ *
+ * If you would prefer to be redirected to the installation system when a
+ * valid settings.php file is present but no tables are installed, remove
+ * the leading hash sign below.
+ *
+ * "Smart start" mode also assumes the site already has cron properly
+ * configured. So, it suppresses the cron notice until the normal warning
+ * threshold has elapsed since installation.
+ */
+# $conf['pressflow_smart_start'] = TRUE;
+
 $GLOBALS['simpletest_installed'] = TRUE;
 if (preg_match("/^simpletest\d+$/", $_SERVER['HTTP_USER_AGENT'])) {
   $db_prefix = $_SERVER['HTTP_USER_AGENT'];
diff --git a/themes/bluemarine/bluemarine.info b/themes/bluemarine/bluemarine.info
index 5f56aa8..81e2fa2 100644
--- a/themes/bluemarine/bluemarine.info
+++ b/themes/bluemarine/bluemarine.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 6.x
 engine = phptemplate
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/themes/chameleon/chameleon.info b/themes/chameleon/chameleon.info
index 120dca2..d1b92b1 100644
--- a/themes/chameleon/chameleon.info
+++ b/themes/chameleon/chameleon.info
@@ -12,8 +12,8 @@ stylesheets[all][] = common.css
 version = VERSION
 core = 6.x
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/themes/chameleon/marvin/marvin.info b/themes/chameleon/marvin/marvin.info
index 92ae53d..73e814b 100644
--- a/themes/chameleon/marvin/marvin.info
+++ b/themes/chameleon/marvin/marvin.info
@@ -7,8 +7,8 @@ version = VERSION
 core = 6.x
 base theme = chameleon
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/themes/engines/phptemplate/phptemplate.engine b/themes/engines/phptemplate/phptemplate.engine
index 51613e5..c40666f 100644
--- a/themes/engines/phptemplate/phptemplate.engine
+++ b/themes/engines/phptemplate/phptemplate.engine
@@ -1,11 +1,14 @@
 <?php
-// $Id: phptemplate.engine,v 1.69 2007/10/02 16:19:23 dries Exp $
+// $Id: phptemplate.engine,v 1.69.2.1 2010/05/11 09:48:03 goba Exp $
 
 /**
  * @file
- * Handles integration of templates written in pure php with the Drupal theme system.
+ * Handles integration of PHP templates with the Drupal theme system.
  */
 
+/**
+ * Implementation of hook_init().
+ */
 function phptemplate_init($template) {
   $file = dirname($template->filename) .'/template.php';
   if (file_exists($file)) {
@@ -14,14 +17,10 @@ function phptemplate_init($template) {
 }
 
 /**
- * Implementation of hook_theme to tell Drupal what templates the engine
- * and the current theme use. The $existing argument will contain hooks
- * pre-defined by Drupal so that we can use that information if
- * we need to.
+ * Implementation of hook_theme().
  */
 function phptemplate_theme($existing, $type, $theme, $path) {
   $templates = drupal_find_theme_functions($existing, array('phptemplate', $theme));
   $templates += drupal_find_theme_templates($existing, '.tpl.php', $path);
   return $templates;
 }
-
diff --git a/themes/garland/garland.info b/themes/garland/garland.info
index 661e211..4725665 100644
--- a/themes/garland/garland.info
+++ b/themes/garland/garland.info
@@ -7,8 +7,8 @@ engine = phptemplate
 stylesheets[all][] = style.css
 stylesheets[print][] = print.css
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/themes/garland/minnelli/minnelli.info b/themes/garland/minnelli/minnelli.info
index a451eda..5cf1f0f 100644
--- a/themes/garland/minnelli/minnelli.info
+++ b/themes/garland/minnelli/minnelli.info
@@ -6,8 +6,8 @@ core = 6.x
 base theme = garland
 stylesheets[all][] = minnelli.css
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
diff --git a/themes/garland/template.php b/themes/garland/template.php
index b108ce1..b488ce5 100644
--- a/themes/garland/template.php
+++ b/themes/garland/template.php
@@ -1,5 +1,5 @@
 <?php
-// $Id: template.php,v 1.16.2.2 2009/08/10 11:32:54 goba Exp $
+// $Id: template.php,v 1.16.2.3 2010/05/11 09:41:22 goba Exp $
 
 /**
  * Sets the body-tag class attribute.
@@ -68,6 +68,9 @@ function phptemplate_menu_local_tasks() {
   return menu_primary_local_tasks();
 }
 
+/**
+ * Returns the themed submitted-by string for the comment.
+ */
 function phptemplate_comment_submitted($comment) {
   return t('!datetime — !username',
     array(
@@ -76,6 +79,9 @@ function phptemplate_comment_submitted($comment) {
     ));
 }
 
+/**
+ * Returns the themed submitted-by string for the node.
+ */
 function phptemplate_node_submitted($node) {
   return t('!datetime — !username',
     array(
@@ -90,9 +96,9 @@ function phptemplate_node_submitted($node) {
 function phptemplate_get_ie_styles() {
   global $language;
 
-  $iecss = '<link type="text/css" rel="stylesheet" media="all" href="'. base_path() . path_to_theme() .'/fix-ie.css" />';
+  $iecss = '<link type="text/css" rel="stylesheet" media="all" href="'. file_create_url(path_to_theme() .'/fix-ie.css') . ' />';
   if ($language->direction == LANGUAGE_RTL) {
-    $iecss .= '<style type="text/css" media="all">@import "'. base_path() . path_to_theme() .'/fix-ie-rtl.css";</style>';
+    $iecss .= '<style type="text/css" media="all">@import "'. file_create_url(path_to_theme() .'/fix-ie-rtl.css') . '";</style>';
   }
 
   return $iecss;
diff --git a/themes/pushbutton/pushbutton.info b/themes/pushbutton/pushbutton.info
index ed0196c..6ef9654 100644
--- a/themes/pushbutton/pushbutton.info
+++ b/themes/pushbutton/pushbutton.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 6.x
 engine = phptemplate
 
-; Information added by drupal.org packaging script on 2010-03-04
-version = "6.16"
+; Information added by drupal.org packaging script on 2010-06-02
+version = "6.17"
 project = "drupal"
-datestamp = "1267662008"
+datestamp = "1275505216"
 
